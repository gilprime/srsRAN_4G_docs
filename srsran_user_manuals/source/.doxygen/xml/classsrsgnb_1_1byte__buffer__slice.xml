<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1byte__buffer__slice" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::byte_buffer_slice</compoundname>
    <includes refid="byte__buffer_8h" local="no">byte_buffer.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1byte__buffer__slice_1a45ca66788bf54ee2c64b63ca5e9a1df1" prot="public" static="no">
        <type>byte_buffer_view::value_type</type>
        <definition>using srsgnb::byte_buffer_slice::value_type =  byte_buffer_view::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="725" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1byte__buffer__slice_1a9bd67fcd29fcd4323449ca116f90efaa" prot="public" static="no">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer_view::iterator</ref></type>
        <definition>using srsgnb::byte_buffer_slice::iterator =  byte_buffer_view::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="726" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1byte__buffer__slice_1a72c38ea2eb4a53882a0243ee0846aed8" prot="public" static="no">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer_view::const_iterator</ref></type>
        <definition>using srsgnb::byte_buffer_slice::const_iterator =  byte_buffer_view::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="727" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1byte__buffer__slice_1ad7c0a7a3d34b6bb10af27c77b24f1245" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref></type>
        <definition>byte_buffer_view srsgnb::byte_buffer_slice::sliced_view</definition>
        <argsstring></argsstring>
        <name>sliced_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="789" column="20" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1byte__buffer__slice_1aea516b3a9e92f234815e54371fec064a" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref></type>
        <definition>byte_buffer srsgnb::byte_buffer_slice::buf</definition>
        <argsstring></argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="790" column="20" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1af889c70e8728205a24f2c938a114081c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_slice::byte_buffer_slice</definition>
        <argsstring>()=default</argsstring>
        <name>byte_buffer_slice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="729" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a30f87800ce5e825d2a6715f2702fe2c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_slice::byte_buffer_slice</definition>
        <argsstring>(byte_buffer &amp;&amp;buf_)</argsstring>
        <name>byte_buffer_slice</name>
        <param>
          <type><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;&amp;</type>
          <declname>buf_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="730" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="730" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1adbdd000bc8d290dcd432cbde59fedea0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_slice::byte_buffer_slice</definition>
        <argsstring>(const byte_buffer &amp;buf_)</argsstring>
        <name>byte_buffer_slice</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>buf_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="731" column="12" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="731" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a734e7d1a33f0192c0c663233cac08511" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_slice::byte_buffer_slice</definition>
        <argsstring>(const byte_buffer &amp;buf_, size_t offset, size_t length)</argsstring>
        <name>byte_buffer_slice</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>buf_</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="732" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="732" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a9643ba1ac7eef17f2573c82cbd6c6565" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_slice::byte_buffer_slice</definition>
        <argsstring>(const byte_buffer &amp;buf_, byte_buffer_view view)</argsstring>
        <name>byte_buffer_slice</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>buf_</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref></type>
          <declname>view</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="736" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="736" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a2ff41a221778a2d220fb2b8e84b93a45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::byte_buffer_slice::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="742" column="8" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="742" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref></type>
        <definition>byte_buffer_view srsgnb::byte_buffer_slice::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <briefdescription>
<para>Converts to non-owning byte buffer view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="749" column="20" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="749" bodyend="749"/>
        <referencedby refid="classsrsgnb_1_1rlc__rx__um__entity_1aa36a54c5e07b384f952e9c2eecc779c0" compoundref="rlc__rx__um__entity_8cpp" startline="36" endline="102">srsgnb::rlc_rx_um_entity::handle_pdu</referencedby>
        <referencedby refid="classsrsgnb_1_1srs__cu__cp_1_1rrc__ue__entity_1a8e37f4f37dcea758e470199fbb091c19" compoundref="rrc__ue__message__handlers_8cpp" startline="20" endline="51">srsgnb::srs_cu_cp::rrc_ue_entity::handle_ul_ccch_pdu</referencedby>
        <referencedby refid="classsrsgnb_1_1srs__cu__cp_1_1rrc__ue__entity_1addd3acd4d1c3b21623efd4e473e69f16" compoundref="rrc__ue__message__handlers_8cpp" startline="99" endline="130">srsgnb::srs_cu_cp::rrc_ue_entity::handle_ul_dcch_pdu</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1aa56bf80b1b8625bb591d296e1031b216" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_slice::operator byte_buffer_view</definition>
        <argsstring>() const</argsstring>
        <name>operator byte_buffer_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="750" column="20" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="750" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1aaf4046087e8623465b0f957fd193b1e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref></type>
        <definition>byte_buffer_slice srsgnb::byte_buffer_slice::make_slice</definition>
        <argsstring>(size_t offset, size_t size)</argsstring>
        <name>make_slice</name>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Returns another owning sub-view with dimensions specified in arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="753" column="21" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="753" bodyend="757"/>
        <references refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" compoundref="byte__buffer_8h" startline="673" endline="677">srsgnb::byte_buffer_view::view</references>
        <referencedby refid="classsrsgnb_1_1rlc__rx__um__entity_1aa36a54c5e07b384f952e9c2eecc779c0" compoundref="rlc__rx__um__entity_8cpp" startline="36" endline="102">srsgnb::rlc_rx_um_entity::handle_pdu</referencedby>
        <referencedby refid="classsrsgnb_1_1rlc__tx__um__entity_1a8ef69b2957e7eaf48a7d9b160edf93c0" compoundref="rlc__tx__um__entity_8cpp" startline="49" endline="145">srsgnb::rlc_tx_um_entity::pull_pdu</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a2fa3ad90bd86d533a2bd6f8413781588" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref> &amp;</type>
        <definition>byte_buffer_slice&amp; srsgnb::byte_buffer_slice::advance</definition>
        <argsstring>(size_t offset)</argsstring>
        <name>advance</name>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Advances slice by provided offset. The length of the slice gets automatically reduced by the provided offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="760" column="21" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="760" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a069e0a600932a0e84eb98f41dcb57204" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::byte_buffer_slice::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="766" column="10" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="766" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a14292cb1599948a53a938f451be7efd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::byte_buffer_slice::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="767" column="10" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="767" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1aab124c554c02978fc84015c673f8ab3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const uint8_t &amp;</type>
        <definition>const uint8_t&amp; srsgnb::byte_buffer_slice::operator[]</definition>
        <argsstring>(size_t idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="769" column="17" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="769" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a688b1934dd660ee53681035f43ed55c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::byte_buffer_slice::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="771" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="771" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a8df02ed0ad4e7dfff73a371323764d1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::byte_buffer_slice::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="772" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="772" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1abfceada6982049e86948e457924a47ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::byte_buffer_slice::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="773" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="773" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a3c5252e460c27659187f396022945924" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::byte_buffer_slice::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="774" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="774" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1a90b696bfd372d4a41ae981042cdee783" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::byte_buffer_slice::operator==</definition>
        <argsstring>(const Range &amp;r) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const Range &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="777" column="8" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__slice_1ad8afba4e54d9868d9d77c7c64d9d46ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::byte_buffer_slice::operator!=</definition>
        <argsstring>(const Range &amp;r) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const Range &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="783" column="8" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="783" bodyend="786"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a sub-interval or make_slice of a potentially larger <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>. Like <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> and <ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>, the represented bytes by this class are not contiguous in memory. Contrarily to <ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>, this class retains shared ownership of the segments held by the <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> which it references. Due to the shared ownership model, the usage of this class may involve additional overhead associated with reference counting, which does not take place when using <ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>srsgnb::byte_buffer_segment</label>
        <link refid="classsrsgnb_1_1byte__buffer__segment"/>
        <childnode refid="5" relation="usage">
          <edgelabel>-metadata_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb::byte_buffer</label>
        <link refid="classsrsgnb_1_1byte__buffer"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-tail</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb::byte_buffer_segment::metadata_storage</label>
        <link refid="structsrsgnb_1_1byte__buffer__segment_1_1metadata__storage"/>
      </node>
      <node id="3">
        <label>srsgnb::byte_buffer::iterator_impl&lt; T &gt;</label>
        <link refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-current_segment</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::byte_buffer_slice</label>
        <link refid="classsrsgnb_1_1byte__buffer__slice"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-sliced_view</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-buf</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::byte_buffer_view</label>
        <link refid="classsrsgnb_1_1byte__buffer__view"/>
        <childnode refid="3" relation="usage">
          <edgelabel>#it_end</edgelabel>
          <edgelabel>#it</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/byte_buffer.h" line="723" column="1" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="722" bodyend="791"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a2fa3ad90bd86d533a2bd6f8413781588" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>advance</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a688b1934dd660ee53681035f43ed55c3" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a8df02ed0ad4e7dfff73a371323764d1c" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1aea516b3a9e92f234815e54371fec064a" prot="private" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>buf</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1af889c70e8728205a24f2c938a114081c" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>byte_buffer_slice</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a30f87800ce5e825d2a6715f2702fe2c1" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>byte_buffer_slice</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1adbdd000bc8d290dcd432cbde59fedea0" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>byte_buffer_slice</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a734e7d1a33f0192c0c663233cac08511" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>byte_buffer_slice</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a9643ba1ac7eef17f2573c82cbd6c6565" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>byte_buffer_slice</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a2ff41a221778a2d220fb2b8e84b93a45" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a72c38ea2eb4a53882a0243ee0846aed8" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a069e0a600932a0e84eb98f41dcb57204" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1abfceada6982049e86948e457924a47ed" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a3c5252e460c27659187f396022945924" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a9bd67fcd29fcd4323449ca116f90efaa" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a14292cb1599948a53a938f451be7efd8" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>length</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1aaf4046087e8623465b0f957fd193b1e8" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>make_slice</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1aa56bf80b1b8625bb591d296e1031b216" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>operator byte_buffer_view</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1ad8afba4e54d9868d9d77c7c64d9d46ac" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a90b696bfd372d4a41ae981042cdee783" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1aab124c554c02978fc84015c673f8ab3f" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1ad7c0a7a3d34b6bb10af27c77b24f1245" prot="private" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>sliced_view</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1a45ca66788bf54ee2c64b63ca5e9a1df1" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>value_type</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_slice</scope><name>view</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
