<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1slot__array" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::slot_array</compoundname>
    <basecompoundref refid="classsrsgnb_1_1detail_1_1base__slot__array" prot="private" virt="non-virtual">srsgnb::detail::base_slot_array&lt; std::array&lt; optional&lt; T &gt;, N &gt; &gt;</basecompoundref>
    <includes refid="slot__array_8h" local="no">slot_array.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1slot__array_1adfb1c35022d578c4f74224f4c3c3371c" prot="private" static="no">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array" kindref="compound">detail::base_slot_array</ref>&lt; std::array&lt; <ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref>&lt; T &gt;, N &gt; &gt;</type>
        <definition>using srsgnb::slot_array&lt; T, N &gt;::base_t =  detail::base_slot_array&lt;std::array&lt;optional&lt;T&gt;, N&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="207" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1slot__array_1a5f16aca706d459072c39e6f989bab646" prot="public" static="no">
        <type>typename base_t::value_type</type>
        <definition>using srsgnb::slot_array&lt; T, N &gt;::value_type =  typename base_t::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="210" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1slot__array_1a26575b9a7c922173df03654c14263b02" prot="public" static="no">
        <type>typename base_t::iterator</type>
        <definition>using srsgnb::slot_array&lt; T, N &gt;::iterator =  typename base_t::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="211" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1slot__array_1a5af5c6811a232f2c9cea3543220758c6" prot="public" static="no">
        <type>typename base_t::const_iterator</type>
        <definition>using srsgnb::slot_array&lt; T, N &gt;::const_iterator =  typename base_t::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="212" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Array of optional items. The iteration is in order of indexes and correctly skips absent elements. Pointer/References/Iterators remain valid throughout the object lifetime. NOTE: The sorted iteration and pointer validation guarantees may add some overhead if the array is very fragmented. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of objects </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>static size of max nof items </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::slot_array&lt; T, N &gt;</label>
        <link refid="classsrsgnb_1_1slot__array"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::detail::base_slot_array_view&lt; std::array&lt; optional&lt; T &gt;, N &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array__view"/>
      </node>
      <node id="2">
        <label>srsgnb::detail::base_slot_array&lt; std::array&lt; optional&lt; T &gt;, N &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::slot_array&lt; T, N &gt;</label>
        <link refid="classsrsgnb_1_1slot__array"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::detail::base_slot_array_view&lt; std::array&lt; optional&lt; T &gt;, N &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array__view"/>
      </node>
      <node id="2">
        <label>srsgnb::detail::base_slot_array&lt; std::array&lt; optional&lt; T &gt;, N &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/slot_array.h" line="206" column="1" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="205" bodyend="227"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a2c603ba781810146ec05b7a2abd02bff" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_slot_array</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a441e170ceb1d51c5931c0ff05bdda849" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_slot_array</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a75ad73e318bfdf9aa768c861ddfe314f" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_slot_array</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a511578084f3370e7febe6d82331d3322" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_slot_array_view</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a93cc7cce146969644359ea2fe86b180d" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_slot_array_view</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a2c3d2e22e68a3da226e2db73b1a5d437" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_slot_array_view</name></member>
      <member refid="classsrsgnb_1_1slot__array_1adfb1c35022d578c4f74224f4c3c3371c" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>base_t</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1acb33e9554bcdbc3a9a90184f2673180e" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a1e1e3bfbc9126e558864c3723c28b9a8" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1aa88d7bdf4e774213c4c993e353d96825" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1slot__array_1a5af5c6811a232f2c9cea3543220758c6" prot="public" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1af5e1274cae00781288e56c70f5f623af" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>contains</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a2cd598a1d41eb2e7870e5ea09702bca1" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>emplace</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a550965dcc189d70e2109f8980190ea31" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a2dcd6db4e502f0ab84eef5b8dd4f16b5" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1af012079116b025f3a4a56fe615153af3" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a8f1a14bba248207519a9b273fe61cb24" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>erase</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1aaf2e7481bcf1672ed29189a895c0a1c6" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>erase</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ada85131beaaee426e66af82f34f503b3" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>extract_iterator_index</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a027b9d3d77776885e46747e3b8b6441c" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>find_first_empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a2035e6f5320442b544cc5b6a117f3baa" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>insert</name></member>
      <member refid="classsrsgnb_1_1slot__array_1a26575b9a7c922173df03654c14263b02" prot="public" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ab31cf33b4b70697ba8597ee2297823c5" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>nof_elems</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a77e33dca924591df1d2433663184e405" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array_1a3064a53810baa45087599ac9d4c9ea49" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a3d6d62bddcd51b063e41fc58f8732d17" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ab8f2d706ab6a315ed7515a5a35b81fab" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1acd9616198c16d2e37675c808477d8805" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>size</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a8f2d62c62cb467c63b051187ca14a7a7" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>T</name></member>
      <member refid="classsrsgnb_1_1slot__array_1a5f16aca706d459072c39e6f989bab646" prot="public" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>value_type</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a806636ffd9c84c7473198425c3aa8419" prot="private" virt="non-virtual"><scope>srsgnb::slot_array</scope><name>vec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
