<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1pdsch__processor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>srsgnb::pdsch_processor</compoundname>
    <derivedcompoundref refid="classsrsgnb_1_1pdsch__processor__impl" prot="public" virt="non-virtual">srsgnb::pdsch_processor_impl</derivedcompoundref>
    <includes refid="pdsch__processor_8h" local="no">pdsch_processor.h</includes>
    <innerclass refid="structsrsgnb_1_1pdsch__processor_1_1codeword__description" prot="public">srsgnb::pdsch_processor::codeword_description</innerclass>
    <innerclass refid="structsrsgnb_1_1pdsch__processor_1_1pdu__t" prot="public">srsgnb::pdsch_processor::pdu_t</innerclass>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1pdsch__processor_1a255af40bb27ce879ea66ba905f6d1d45" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::pdsch_processor::MAX_NRE_PER_RB</definition>
        <argsstring></argsstring>
        <name>MAX_NRE_PER_RB</name>
        <initializer>= 156</initializer>
        <briefdescription>
<para>Maximum number of resource elements per resource block in a shared channel transmission. As per TS 38.214 section 5.1.3.2 Transport block size determination. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="30" column="29" bodyfile="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1pdsch__processor_1a8c4a7df76e6e76d9104b610b473e8489" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::pdsch_processor::MAX_NOF_TRANSPORT_BLOCKS</definition>
        <argsstring></argsstring>
        <name>MAX_NOF_TRANSPORT_BLOCKS</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Defines the maximum number of codewords that can be encoded in a PDSCH transmission. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="32" column="29" bodyfile="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1fapi__to__phy__translator_1a93eb39a0b5b3da625d4b9c98d19dbf7c" compoundref="fapi__to__phy__translator_8cpp" startline="145" endline="161">srsgnb::fapi_adaptor::fapi_to_phy_translator::tx_data_request</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1pdsch__processor_1a07ccf9f8e464156013f09a4009eb125f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::pdsch_processor::MAX_LAYER_PER_CODEWORD</definition>
        <argsstring></argsstring>
        <name>MAX_LAYER_PER_CODEWORD</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Defines the maximum number of layers per codeword. As per TS 38.211 table Table 7.3.1.3-1: Codeword-to-layer mapping for spatial multiplexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="35" column="29" bodyfile="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1pdsch__processor_1a804f2c495fd830d4c04cce70718625a0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::pdsch_processor::MAX_CODEWORD_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_CODEWORD_SIZE</name>
        <initializer>=
      <ref refid="namespacesrsgnb_1a093e25254bb1f64f3af8faafd11a9120" kindref="member">MAX_RB</ref> * <ref refid="classsrsgnb_1_1pdsch__processor_1a255af40bb27ce879ea66ba905f6d1d45" kindref="member">MAX_NRE_PER_RB</ref> * <ref refid="namespacesrsgnb_1a93482e6cc167b02024b5f422d40e112d" kindref="member">MODULATION_MAX_BITS_PER_SYMBOL</ref> * <ref refid="classsrsgnb_1_1pdsch__processor_1a07ccf9f8e464156013f09a4009eb125f" kindref="member">MAX_LAYER_PER_CODEWORD</ref></initializer>
        <briefdescription>
<para>Defines the maximum codeword size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="37" column="29" bodyfile="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1pdsch__processor_1aa0f9a0b116716f60c70b25da6c4ce52d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual srsgnb::pdsch_processor::~pdsch_processor</definition>
        <argsstring>()=default</argsstring>
        <name>~pdsch_processor</name>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="136" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1pdsch__processor_1a413ddf8e84abb610d9de1a9a944dd657" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::pdsch_processor::process</definition>
        <argsstring>(resource_grid_writer &amp;grid, static_vector&lt; span&lt; const uint8_t &gt;, MAX_NOF_TRANSPORT_BLOCKS &gt; data, const pdu_t &amp;pdu)=0</argsstring>
        <name>process</name>
        <reimplementedby refid="classsrsgnb_1_1pdsch__processor__impl_1a944f97851d3e931ae64809a1c31c1cdf">process</reimplementedby>
        <param>
          <type><ref refid="classsrsgnb_1_1resource__grid__writer" kindref="compound">resource_grid_writer</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref>&lt; <ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; const uint8_t &gt;, <ref refid="classsrsgnb_1_1pdsch__processor_1a8c4a7df76e6e76d9104b610b473e8489" kindref="member">MAX_NOF_TRANSPORT_BLOCKS</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1pdsch__processor_1_1pdu__t" kindref="compound">pdu_t</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
<para>Processes a PDSCH transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the destination resource grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the codewords to transmit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pdu</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the necessary parameters to process the PDSCH transmission. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>The number of transport blocks must be equal to the number of codewords in <computeroutput>pdu</computeroutput>. </para>
</simplesect>
<simplesect kind="remark"><para>The size of each transport block is determined by <computeroutput> data[TB index].size() </computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="144" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes the PDSCH processor interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srsgnb::pdsch_processor_impl</label>
        <link refid="classsrsgnb_1_1pdsch__processor__impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::pdsch_processor</label>
        <link refid="classsrsgnb_1_1pdsch__processor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::pdsch_processor</label>
        <link refid="classsrsgnb_1_1pdsch__processor"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" line="26" column="1" bodyfile="include/srsgnb/phy/upper/channel_processors/pdsch_processor.h" bodystart="25" bodyend="147"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1pdsch__processor_1a804f2c495fd830d4c04cce70718625a0" prot="public" virt="non-virtual"><scope>srsgnb::pdsch_processor</scope><name>MAX_CODEWORD_SIZE</name></member>
      <member refid="classsrsgnb_1_1pdsch__processor_1a07ccf9f8e464156013f09a4009eb125f" prot="public" virt="non-virtual"><scope>srsgnb::pdsch_processor</scope><name>MAX_LAYER_PER_CODEWORD</name></member>
      <member refid="classsrsgnb_1_1pdsch__processor_1a8c4a7df76e6e76d9104b610b473e8489" prot="public" virt="non-virtual"><scope>srsgnb::pdsch_processor</scope><name>MAX_NOF_TRANSPORT_BLOCKS</name></member>
      <member refid="classsrsgnb_1_1pdsch__processor_1a255af40bb27ce879ea66ba905f6d1d45" prot="public" virt="non-virtual"><scope>srsgnb::pdsch_processor</scope><name>MAX_NRE_PER_RB</name></member>
      <member refid="classsrsgnb_1_1pdsch__processor_1a413ddf8e84abb610d9de1a9a944dd657" prot="public" virt="pure-virtual"><scope>srsgnb::pdsch_processor</scope><name>process</name></member>
      <member refid="classsrsgnb_1_1pdsch__processor_1aa0f9a0b116716f60c70b25da6c4ce52d" prot="public" virt="virtual"><scope>srsgnb::pdsch_processor</scope><name>~pdsch_processor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
