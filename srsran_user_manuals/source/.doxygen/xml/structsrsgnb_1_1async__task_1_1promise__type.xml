<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsrsgnb_1_1async__task_1_1promise__type" kind="struct" language="C++" prot="public">
    <compoundname>srsgnb::async_task::promise_type</compoundname>
    <basecompoundref refid="structsrsgnb_1_1detail_1_1promise__data" prot="public" virt="non-virtual">srsgnb::detail::promise_data&lt; result_type, detail::task_promise_base &gt;</basecompoundref>
    <innerclass refid="structsrsgnb_1_1async__task_1_1promise__type_1_1final__awaiter" prot="public">srsgnb::async_task::promise_type::final_awaiter</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsrsgnb_1_1async__task_1_1promise__type_1a822f0dbbda54af1af7047208a83e4ccd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1suspend__always" kindref="compound">suspend_always</ref></type>
        <definition>suspend_always srsgnb::async_task&lt; R &gt;::promise_type::initial_suspend</definition>
        <argsstring>()</argsstring>
        <name>initial_suspend</name>
        <briefdescription>
<para>Initial suspension awaiter. Lazy_tasks always suspend at initial suspension point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="41" column="20" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1async__task_1_1promise__type_1a28fc8bd714d515f5831c10acca45692e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1async__task_1_1promise__type_1_1final__awaiter" kindref="compound">final_awaiter</ref></type>
        <definition>final_awaiter srsgnb::async_task&lt; R &gt;::promise_type::final_suspend</definition>
        <argsstring>()</argsstring>
        <name>final_suspend</name>
        <briefdescription>
<para>Final suspension awaiter. Tail-resumes continuation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="44" column="19" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1async__task_1_1promise__type_1ad6c318d4dc894b97f3524e789dc27275" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1async__task" kindref="compound">async_task</ref>&lt; R &gt;</type>
        <definition>async_task&lt;R&gt; srsgnb::async_task&lt; R &gt;::promise_type::get_return_object</definition>
        <argsstring>()</argsstring>
        <name>get_return_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="46" column="16" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="46" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srsgnb::detail::promise_data&lt; result_type, detail::task_promise_base &gt;</label>
        <link refid="structsrsgnb_1_1detail_1_1promise__data"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::detail::task_promise_base</label>
        <link refid="structsrsgnb_1_1detail_1_1task__promise__base"/>
      </node>
      <node id="1">
        <label>srsgnb::async_task&lt; R &gt;::promise_type</label>
        <link refid="structsrsgnb_1_1async__task_1_1promise__type"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srsgnb::detail::promise_data&lt; result_type, detail::task_promise_base &gt;</label>
        <link refid="structsrsgnb_1_1detail_1_1promise__data"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::coro_handle&lt; Promise &gt;</label>
        <link refid="structsrsgnb_1_1coro__handle"/>
      </node>
      <node id="3">
        <label>srsgnb::detail::task_promise_base</label>
        <link refid="structsrsgnb_1_1detail_1_1task__promise__base"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+continuation</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::async_task&lt; R &gt;::promise_type</label>
        <link refid="structsrsgnb_1_1async__task_1_1promise__type"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/async_task.h" line="25" column="51" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="25" bodyend="52"/>
    <listofallmembers>
      <member refid="structsrsgnb_1_1detail_1_1task__promise__base_1a4a7b617bf869109b6f7113e57c029b8b" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>continuation</name></member>
      <member refid="structsrsgnb_1_1async__task_1_1promise__type_1a28fc8bd714d515f5831c10acca45692e" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>final_suspend</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1a38dae1deca0e72a2d46b63bc6cbb3507" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>get</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1a2a285c514862a197373606da449f8a24" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>get</name></member>
      <member refid="structsrsgnb_1_1async__task_1_1promise__type_1ad6c318d4dc894b97f3524e789dc27275" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>get_return_object</name></member>
      <member refid="structsrsgnb_1_1detail_1_1task__promise__base_1aea0fce33b26e63908a8500cb7f162f27" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>has_value</name></member>
      <member refid="structsrsgnb_1_1async__task_1_1promise__type_1a822f0dbbda54af1af7047208a83e4ccd" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>initial_suspend</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1a09e08581e87d4dfbadff020f2d503c8b" prot="private" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>mem</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1af31a9252f4daffa3c2b3679235982d1b" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1a4757672d0eedffc67217bbf242327945" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1a6c9683bf33804a506c74fc10eaef79c8" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>promise_data</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1aadb1f1ad4ad4acd8aae2299089bbb8ad" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>promise_data</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1aadb1cac408c4a869726edfd708d48292" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>promise_data</name></member>
      <member refid="structsrsgnb_1_1detail_1_1task__promise__base_1a5de310fdf7be3b502802b1c35fec7f37" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>ready</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1a3c74b8d142b7a042ddbf24da7cde64af" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>return_value</name></member>
      <member refid="structsrsgnb_1_1detail_1_1promise__data_1abee3e2f7f93c19665645eef2d2c0b2ba" prot="public" virt="non-virtual"><scope>srsgnb::async_task::promise_type</scope><name>~promise_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
