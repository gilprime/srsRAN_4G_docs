<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1radio__session__uhd__impl" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::radio_session_uhd_impl</compoundname>
    <basecompoundref refid="classsrsgnb_1_1radio__session" prot="public" virt="non-virtual">srsgnb::radio_session</basecompoundref>
    <basecompoundref refid="classsrsgnb_1_1radio__management__plane" prot="private" virt="non-virtual">srsgnb::radio_management_plane</basecompoundref>
    <basecompoundref refid="classsrsgnb_1_1baseband__gateway" prot="private" virt="non-virtual">srsgnb::baseband_gateway</basecompoundref>
    <basecompoundref refid="classsrsgnb_1_1baseband__gateway__transmitter" prot="private" virt="non-virtual">srsgnb::baseband_gateway_transmitter</basecompoundref>
    <basecompoundref refid="classsrsgnb_1_1baseband__gateway__receiver" prot="private" virt="non-virtual">srsgnb::baseband_gateway_receiver</basecompoundref>
    <includes refid="radio__uhd__impl_8h" local="no">radio_uhd_impl.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classsrsgnb_1_1radio__session__uhd__impl_1a9eda08633372a977950ce690151e5bc0" prot="private" static="no" strong="yes">
        <type></type>
        <name>states</name>
        <enumvalue id="classsrsgnb_1_1radio__session__uhd__impl_1a9eda08633372a977950ce690151e5bc0add652546039b18970b8dcf2cff824268" prot="private">
          <name>UNINITIALIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__session__uhd__impl_1a9eda08633372a977950ce690151e5bc0ad05eb226c68291d94d08383dd3bc9d94" prot="private">
          <name>SUCCESSFUL_INIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__session__uhd__impl_1a9eda08633372a977950ce690151e5bc0a615a46af313786fc4e349f34118be111" prot="private">
          <name>STOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates possible UHD session states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="31" column="20" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1radio__session__uhd__impl_1aa6a7fe6e80a4a2fbef62a2c1d509c8ae" prot="private" static="no">
        <type>std::pair&lt; unsigned, unsigned &gt;</type>
        <definition>using srsgnb::radio_session_uhd_impl::port_to_stream_channel =  std::pair&lt;unsigned, unsigned&gt;</definition>
        <argsstring></argsstring>
        <name>port_to_stream_channel</name>
        <briefdescription>
<para>Maps ports to stream and channel indexes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="33" column="3" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a3e224920edffa110c7ea56f73a65c5a3" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double srsgnb::radio_session_uhd_impl::START_STREAM_DELAY_S</definition>
        <argsstring></argsstring>
        <name>START_STREAM_DELAY_S</name>
        <initializer>= 0.1</initializer>
        <briefdescription>
<para>Defines the start stream command delay in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="29" column="27" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" compoundref="radio__uhd__impl_8cpp" startline="235" endline="266">start_rx_stream</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a3c0645931e57998d8d0d5a0f8d998efb" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; <ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a9eda08633372a977950ce690151e5bc0" kindref="member">states</ref> &gt;</type>
        <definition>std::atomic&lt;states&gt; srsgnb::radio_session_uhd_impl::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
<para>Indicates the current state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="35" column="15" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" compoundref="radio__uhd__impl_8cpp" startline="550" endline="564">stop</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a2eab2ef35614626fec2c2f541c535250" compoundref="radio__uhd__impl_8h" startline="102" endline="102">is_successful</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a56e4fa1133b87b72ac05d559a2aefd16" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1radio__uhd__device__type" kindref="compound">radio_uhd_device_type</ref></type>
        <definition>radio_uhd_device_type srsgnb::radio_session_uhd_impl::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Indicates the device type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="37" column="25" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1radio__uhd__device" kindref="compound">radio_uhd_device</ref></type>
        <definition>radio_uhd_device srsgnb::radio_session_uhd_impl::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
<para>Wraps the UHD device functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="39" column="20" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ad1b4421603df85b6d38bd8c4b75d1a2f" compoundref="radio__uhd__impl_8cpp" startline="25" endline="56">set_time_to_gps_time</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a505517ac3fd2b667ff3ae2ce2f55d6c9" compoundref="radio__uhd__impl_8cpp" startline="58" endline="107">wait_sensor_locked</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" compoundref="radio__uhd__impl_8cpp" startline="109" endline="138">set_tx_gain_unprotected</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" compoundref="radio__uhd__impl_8cpp" startline="140" endline="170">set_rx_gain_unprotected</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" compoundref="radio__uhd__impl_8cpp" startline="172" endline="201">set_tx_freq</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" compoundref="radio__uhd__impl_8cpp" startline="203" endline="233">set_rx_freq</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" compoundref="radio__uhd__impl_8cpp" startline="235" endline="266">start_rx_stream</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref>&lt; <ref refid="classsrsgnb_1_1radio__session__uhd__impl_1aa6a7fe6e80a4a2fbef62a2c1d509c8ae" kindref="member">port_to_stream_channel</ref>, <ref refid="namespacesrsgnb_1a93f87cbda3eb933c20f1398faf1c1778" kindref="member">RADIO_MAX_NOF_PORTS</ref> &gt;</type>
        <definition>static_vector&lt;port_to_stream_channel, RADIO_MAX_NOF_PORTS&gt; srsgnb::radio_session_uhd_impl::tx_port_map</definition>
        <argsstring></argsstring>
        <name>tx_port_map</name>
        <briefdescription>
<para>Indexes the transmitter port indexes into stream and channel index as first and second. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="41" column="17" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" compoundref="radio__uhd__impl_8cpp" startline="109" endline="138">set_tx_gain_unprotected</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" compoundref="radio__uhd__impl_8cpp" startline="172" endline="201">set_tx_freq</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" compoundref="radio__uhd__impl_8cpp" startline="203" endline="233">set_rx_freq</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref>&lt; <ref refid="classsrsgnb_1_1radio__session__uhd__impl_1aa6a7fe6e80a4a2fbef62a2c1d509c8ae" kindref="member">port_to_stream_channel</ref>, <ref refid="namespacesrsgnb_1a93f87cbda3eb933c20f1398faf1c1778" kindref="member">RADIO_MAX_NOF_PORTS</ref> &gt;</type>
        <definition>static_vector&lt;port_to_stream_channel, RADIO_MAX_NOF_PORTS&gt; srsgnb::radio_session_uhd_impl::rx_port_map</definition>
        <argsstring></argsstring>
        <name>rx_port_map</name>
        <briefdescription>
<para>Indexes the receiver port indexes into stream and channel index as first and second. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="43" column="17" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" compoundref="radio__uhd__impl_8cpp" startline="140" endline="170">set_rx_gain_unprotected</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" compoundref="radio__uhd__impl_8cpp" startline="203" endline="233">set_rx_freq</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref>&lt; std::unique_ptr&lt; <ref refid="classsrsgnb_1_1radio__uhd__tx__stream" kindref="compound">radio_uhd_tx_stream</ref> &gt;, <ref refid="namespacesrsgnb_1a93f87cbda3eb933c20f1398faf1c1778" kindref="member">RADIO_MAX_NOF_PORTS</ref> &gt;</type>
        <definition>static_vector&lt;std::unique_ptr&lt;radio_uhd_tx_stream&gt;, RADIO_MAX_NOF_PORTS&gt; srsgnb::radio_session_uhd_impl::tx_streams</definition>
        <argsstring></argsstring>
        <name>tx_streams</name>
        <briefdescription>
<para>Vector or transmit streams. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="45" column="17" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" compoundref="radio__uhd__impl_8cpp" startline="550" endline="564">stop</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a43dd92b72a5124afdb7ec50eb9f54856" compoundref="radio__uhd__impl_8cpp" startline="566" endline="577">transmit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref>&lt; std::unique_ptr&lt; <ref refid="classsrsgnb_1_1radio__uhd__rx__stream" kindref="compound">radio_uhd_rx_stream</ref> &gt;, <ref refid="namespacesrsgnb_1a93f87cbda3eb933c20f1398faf1c1778" kindref="member">RADIO_MAX_NOF_PORTS</ref> &gt;</type>
        <definition>static_vector&lt;std::unique_ptr&lt;radio_uhd_rx_stream&gt;, RADIO_MAX_NOF_PORTS&gt; srsgnb::radio_session_uhd_impl::rx_streams</definition>
        <argsstring></argsstring>
        <name>rx_streams</name>
        <briefdescription>
<para>Vector or receive streams. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="47" column="17" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" compoundref="radio__uhd__impl_8cpp" startline="235" endline="266">start_rx_stream</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" compoundref="radio__uhd__impl_8cpp" startline="550" endline="564">stop</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a43dd92b72a5124afdb7ec50eb9f54856" compoundref="radio__uhd__impl_8cpp" startline="566" endline="577">transmit</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" compoundref="radio__uhd__impl_8cpp" startline="580" endline="602">receive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a60dbf79a0ff0a4dcff7615dd6cd66b3d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double srsgnb::radio_session_uhd_impl::sampling_rate_hz</definition>
        <argsstring></argsstring>
        <name>sampling_rate_hz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="48" column="76" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1ac3b4c1bef503ad8fb58046111232bf93" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex srsgnb::radio_session_uhd_impl::stream_start_mutex</definition>
        <argsstring></argsstring>
        <name>stream_start_mutex</name>
        <briefdescription>
<para>Protects the stream start. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="50" column="14" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" compoundref="radio__uhd__impl_8cpp" startline="235" endline="266">start_rx_stream</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__session__uhd__impl_1a254046c2463cce0a9773cf13769eb48e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool srsgnb::radio_session_uhd_impl::stream_start_required</definition>
        <argsstring></argsstring>
        <name>stream_start_required</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Indicates if the reception streams require start. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="52" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" compoundref="radio__uhd__impl_8cpp" startline="235" endline="266">start_rx_stream</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1ad1b4421603df85b6d38bd8c4b75d1a2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::set_time_to_gps_time</definition>
        <argsstring>()</argsstring>
        <name>set_time_to_gps_time</name>
        <briefdescription>
<para>Set the synchronization time to GPS mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="56" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="25" bodyend="56"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a505517ac3fd2b667ff3ae2ce2f55d6c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::wait_sensor_locked</definition>
        <argsstring>(bool &amp;is_locked, const std::string &amp;sensor_name, bool is_mboard, int timeout)</argsstring>
        <name>wait_sensor_locked</name>
        <param>
          <type>bool &amp;</type>
          <declname>is_locked</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>sensor_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_mboard</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Waits for a sensor to be locked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">is_locked</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates if the sensor is locked by the time the method returns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sensor_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the sensor name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates if the sensor is from the motherboard or daughterboard. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the amount of time to wait. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="64" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="58" bodyend="107"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::set_tx_gain_unprotected</definition>
        <argsstring>(unsigned port_idx, double gain_dB)</argsstring>
        <name>set_tx_gain_unprotected</name>
        <param>
          <type>unsigned</type>
          <declname>port_idx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gain_dB</declname>
        </param>
        <briefdescription>
<para>Set transmission gain from the class itself. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the port index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the gain value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the port index and gain value are valid, and no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="70" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="109" bodyend="138"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" compoundref="radio__uhd__impl_8h" startline="41">tx_port_map</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a3e0c7cadaa6c584c4f096699b4ef0f71" compoundref="radio__uhd__impl_8h" startline="128" endline="128">set_tx_gain</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::set_rx_gain_unprotected</definition>
        <argsstring>(unsigned port_idx, double gain_dB)</argsstring>
        <name>set_rx_gain_unprotected</name>
        <param>
          <type>unsigned</type>
          <declname>port_idx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gain_dB</declname>
        </param>
        <briefdescription>
<para>Set reception gain from the class itself. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the port index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the gain value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the port index and gain value are valid, and no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="76" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="140" bodyend="170"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" compoundref="radio__uhd__impl_8h" startline="43">rx_port_map</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1a3b4f17aa37e7b085f0fb039e40380cd6" compoundref="radio__uhd__impl_8h" startline="131" endline="131">set_rx_gain</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::set_tx_freq</definition>
        <argsstring>(unsigned port_idx, radio_configuration::lo_frequency frequency)</argsstring>
        <name>set_tx_freq</name>
        <param>
          <type>unsigned</type>
          <declname>port_idx</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency" kindref="compound">radio_configuration::lo_frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Set transmission frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the port index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the frequency tuning parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the port index and frequency value are valid, and no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="82" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="172" bodyend="201"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" compoundref="radio__uhd__impl_8h" startline="41">tx_port_map</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
        <references refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" compoundref="radio__configuration_8h" startline="46">srsgnb::radio_configuration::lo_frequency::center_frequency_hz</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::set_rx_freq</definition>
        <argsstring>(unsigned port_idx, radio_configuration::lo_frequency frequency)</argsstring>
        <name>set_rx_freq</name>
        <param>
          <type>unsigned</type>
          <declname>port_idx</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency" kindref="compound">radio_configuration::lo_frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Set reception frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the port index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the frequency tuning parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the port index and frequency value are valid, and no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="88" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="203" bodyend="233"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" compoundref="radio__uhd__impl_8h" startline="43">rx_port_map</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" compoundref="radio__uhd__impl_8h" startline="41">tx_port_map</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
        <references refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" compoundref="radio__configuration_8h" startline="46">srsgnb::radio_configuration::lo_frequency::center_frequency_hz</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool radio_session_uhd_impl::start_rx_stream</definition>
        <argsstring>()</argsstring>
        <name>start_rx_stream</name>
        <briefdescription>
<para>Start receive streams. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if no exception is caught. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="92" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="235" bodyend="266"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1ac3b4c1bef503ad8fb58046111232bf93" compoundref="radio__uhd__impl_8h" startline="50">stream_start_mutex</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a254046c2463cce0a9773cf13769eb48e" compoundref="radio__uhd__impl_8h" startline="52">stream_start_required</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" compoundref="radio__uhd__impl_8h" startline="39">device</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a3e224920edffa110c7ea56f73a65c5a3" compoundref="radio__uhd__impl_8h" startline="29">START_STREAM_DELAY_S</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" compoundref="radio__uhd__impl_8h" startline="47">rx_streams</references>
        <referencedby refid="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" compoundref="radio__uhd__impl_8cpp" startline="580" endline="602">receive</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a3250d926cc32e410d939cf36bde73d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>radio_session_uhd_impl::radio_session_uhd_impl</definition>
        <argsstring>(const radio_configuration::radio &amp;radio_config, task_executor &amp;async_executor, radio_notification_handler &amp;notifier_)</argsstring>
        <name>radio_session_uhd_impl</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1radio__configuration_1_1radio" kindref="compound">radio_configuration::radio</ref> &amp;</type>
          <declname>radio_config</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1task__executor" kindref="compound">task_executor</ref> &amp;</type>
          <declname>async_executor</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1radio__notification__handler" kindref="compound">radio_notification_handler</ref> &amp;</type>
          <declname>notifier_</declname>
        </param>
        <briefdescription>
<para>Constructs a radio session based on UHD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="96" column="3" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="268" bodyend="548"/>
        <references refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9c74308fe0db4c0202a9df90e7efaf0e" compoundref="radio__configuration_8h" startline="102">srsgnb::radio_configuration::radio::args</references>
        <references refid="structsrsgnb_1_1radio__configuration_1_1radio_1a71b1b800a85d704904bfce8299d7572b" compoundref="radio__configuration_8h" startline="104">srsgnb::radio_configuration::radio::log_level</references>
        <references refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" compoundref="radio__configuration_8h" startline="97">srsgnb::radio_configuration::radio::sampling_rate_hz</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a2eab2ef35614626fec2c2f541c535250" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::radio_session_uhd_impl::is_successful</definition>
        <argsstring>() const</argsstring>
        <name>is_successful</name>
        <briefdescription>
<para>Indicates that the radio session was initialized succesfully. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if no exception is caught during initialization. Otherwise false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="102" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="102" bodyend="102"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a3c0645931e57998d8d0d5a0f8d998efb" compoundref="radio__uhd__impl_8h" startline="35">state</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a4603e2fb1ac87ed61abf05d532b51964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrsgnb_1_1radio__management__plane" kindref="compound">radio_management_plane</ref> &amp;</type>
        <definition>radio_management_plane&amp; srsgnb::radio_session_uhd_impl::get_management_plane</definition>
        <argsstring>() override</argsstring>
        <name>get_management_plane</name>
        <reimplements refid="classsrsgnb_1_1radio__session_1a305b30fe5b539ba55505724b676dc818">get_management_plane</reimplements>
        <briefdescription>
<para>Gets the management plane. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the management plane for this radio session. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="105" column="26" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1aa9996b2ce221fb3c27351898f50dddf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrsgnb_1_1baseband__gateway" kindref="compound">baseband_gateway</ref> &amp;</type>
        <definition>baseband_gateway&amp; srsgnb::radio_session_uhd_impl::get_baseband_gateway</definition>
        <argsstring>() override</argsstring>
        <name>get_baseband_gateway</name>
        <reimplements refid="classsrsgnb_1_1radio__session_1a8bc38fc466aa146d15d1c40d272618d0">get_baseband_gateway</reimplements>
        <briefdescription>
<para>Gets the data plane. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The reference to the data plane for this radio session. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="108" column="20" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void radio_session_uhd_impl::stop</definition>
        <argsstring>() override</argsstring>
        <name>stop</name>
        <reimplements refid="classsrsgnb_1_1radio__session_1ae1e03a71412fc7f4df0991aef4ba74da">stop</reimplements>
        <briefdescription>
<para>Stops the radio session operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Any call to transmit or receive after calling <ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" kindref="member">stop()</ref> will return instantly without interacting with the physical radio. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="111" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="550" bodyend="564"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a3c0645931e57998d8d0d5a0f8d998efb" compoundref="radio__uhd__impl_8h" startline="35">state</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" compoundref="radio__uhd__impl_8h" startline="45">tx_streams</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" compoundref="radio__uhd__impl_8h" startline="47">rx_streams</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a077b36a3375cb87672d04e7aa5493427" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrsgnb_1_1baseband__gateway__transmitter" kindref="compound">baseband_gateway_transmitter</ref> &amp;</type>
        <definition>baseband_gateway_transmitter&amp; srsgnb::radio_session_uhd_impl::get_transmitter</definition>
        <argsstring>() override</argsstring>
        <name>get_transmitter</name>
        <reimplements refid="classsrsgnb_1_1baseband__gateway_1a41af0ab472e1b52ade5b2ba695c80e8c">get_transmitter</reimplements>
        <briefdescription>
<para>Get the transmitter gateway. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="114" column="32" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1aed9b5836040581996f69de339fb71616" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrsgnb_1_1baseband__gateway__receiver" kindref="compound">baseband_gateway_receiver</ref> &amp;</type>
        <definition>baseband_gateway_receiver&amp; srsgnb::radio_session_uhd_impl::get_receiver</definition>
        <argsstring>() override</argsstring>
        <name>get_receiver</name>
        <reimplements refid="classsrsgnb_1_1baseband__gateway_1a33e9530be5a5183bae3b6aac076c4b30">get_receiver</reimplements>
        <briefdescription>
<para>Get the receiver gateway. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="117" column="29" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a43dd92b72a5124afdb7ec50eb9f54856" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void radio_session_uhd_impl::transmit</definition>
        <argsstring>(unsigned stream_id, const baseband_gateway_transmitter::metadata &amp;metadata, baseband_gateway_buffer &amp;data) override</argsstring>
        <name>transmit</name>
        <reimplements refid="classsrsgnb_1_1baseband__gateway__transmitter_1a8573ac4a5d5cfe5cb01f19586fbbcf38">transmit</reimplements>
        <param>
          <type>unsigned</type>
          <declname>stream_id</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1baseband__gateway__transmitter_1_1metadata" kindref="compound">baseband_gateway_transmitter::metadata</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1baseband__gateway__buffer" kindref="compound">baseband_gateway_buffer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Transmits a given baseband buffer in a given time provided in the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Radio stream identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides additional parameters for transmission. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the baseband buffer to transmit. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The data buffers must the same number of channels than the stream. </para>
</simplesect>
<simplesect kind="note"><para>The application terminates if the stream identifier is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="120" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="566" bodyend="577"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" compoundref="radio__uhd__impl_8h" startline="45">tx_streams</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" compoundref="radio__uhd__impl_8h" startline="47">rx_streams</references>
        <references refid="structsrsgnb_1_1baseband__gateway__transmitter_1_1metadata_1ae8965e049c03393d7cd988216ea83437" compoundref="baseband__gateway_8h" startline="20">srsgnb::baseband_gateway_transmitter::metadata::ts</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structsrsgnb_1_1baseband__gateway__receiver_1_1metadata" kindref="compound">baseband_gateway_receiver::metadata</ref></type>
        <definition>baseband_gateway_receiver::metadata radio_session_uhd_impl::receive</definition>
        <argsstring>(baseband_gateway_buffer &amp;data, unsigned stream_id) override</argsstring>
        <name>receive</name>
        <reimplements refid="classsrsgnb_1_1baseband__gateway__receiver_1acaf2b07adeeea97c157fd84cd5f0c741">receive</reimplements>
        <param>
          <type><ref refid="classsrsgnb_1_1baseband__gateway__buffer" kindref="compound">baseband_gateway_buffer</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>stream_id</declname>
        </param>
        <briefdescription>
<para>Receives a given baseband buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the baseband buffer destination and the number of samples to receive. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stream_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Radio stream identifier. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Receive metadata. </para>
</simplesect>
<simplesect kind="note"><para>The data buffers must the same number of channels than the stream. </para>
</simplesect>
<simplesect kind="note"><para>The application terminates if the stream identifier is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="125" column="39" bodyfile="lib/radio/uhd/radio_uhd_impl.cpp" bodystart="580" bodyend="602"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" compoundref="radio__uhd__impl_8h" startline="47">rx_streams</references>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" compoundref="radio__uhd__impl_8cpp" startline="235" endline="266">start_rx_stream</references>
        <references refid="structsrsgnb_1_1baseband__gateway__receiver_1_1metadata_1ab34c89a3b8e5e61168db6228281e6231" compoundref="baseband__gateway_8h" startline="39">srsgnb::baseband_gateway_receiver::metadata::ts</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a3e0c7cadaa6c584c4f096699b4ef0f71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool srsgnb::radio_session_uhd_impl::set_tx_gain</definition>
        <argsstring>(unsigned port_idx, double gain_dB) override</argsstring>
        <name>set_tx_gain</name>
        <reimplements refid="classsrsgnb_1_1radio__management__plane_1aea9ce148eb2556ddade57d0a8d2ae21e">set_tx_gain</reimplements>
        <param>
          <type>unsigned</type>
          <declname>port_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gain_dB</declname>
        </param>
        <briefdescription>
<para>Set the transmission gain of a given port in runtime. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the port identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the new gain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation is successful. Otherwise, false. </para>
</simplesect>
<simplesect kind="note"><para>The port identifier is indexed from stream ascending order and then port. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="128" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="128" bodyend="128"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" compoundref="radio__uhd__impl_8cpp" startline="109" endline="138">set_tx_gain_unprotected</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__session__uhd__impl_1a3b4f17aa37e7b085f0fb039e40380cd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool srsgnb::radio_session_uhd_impl::set_rx_gain</definition>
        <argsstring>(unsigned port_idx, double gain_dB) override</argsstring>
        <name>set_rx_gain</name>
        <reimplements refid="classsrsgnb_1_1radio__management__plane_1a52e1e4cdd875dd410ea11033c87c837c">set_rx_gain</reimplements>
        <param>
          <type>unsigned</type>
          <declname>port_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gain_dB</declname>
        </param>
        <briefdescription>
<para>Set the reception gain of a given port in runtime. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the port identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the new gain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the operation is successful. Otherwise, false. </para>
</simplesect>
<simplesect kind="note"><para>The port identifier is indexed from stream ascending order and then port. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_impl.h" line="131" column="8" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="131" bodyend="131"/>
        <references refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" compoundref="radio__uhd__impl_8cpp" startline="140" endline="170">set_rx_gain_unprotected</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a radio session based on UHD that also implements the management and data plane functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>srsgnb::baseband_gateway_receiver</label>
        <link refid="classsrsgnb_1_1baseband__gateway__receiver"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>srsgnb::baseband_gateway_transmitter</label>
        <link refid="classsrsgnb_1_1baseband__gateway__transmitter"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::radio_base</label>
        <link refid="classsrsgnb_1_1radio__base"/>
      </node>
      <node id="6">
        <label>srsgnb::baseband_gateway_base</label>
        <link refid="classsrsgnb_1_1baseband__gateway__base"/>
      </node>
      <node id="1">
        <label>srsgnb::radio_session_uhd_impl</label>
        <link refid="classsrsgnb_1_1radio__session__uhd__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
        <childnode refid="5" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="private-inheritance">
        </childnode>
        <childnode refid="8" relation="private-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb::baseband_gateway</label>
        <link refid="classsrsgnb_1_1baseband__gateway"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::radio_session</label>
        <link refid="classsrsgnb_1_1radio__session"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::radio_management_plane</label>
        <link refid="classsrsgnb_1_1radio__management__plane"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="16">
        <label>srsgnb::task_executor</label>
        <link refid="classsrsgnb_1_1task__executor"/>
      </node>
      <node id="8">
        <label>srsgnb::baseband_gateway_receiver</label>
        <link refid="classsrsgnb_1_1baseband__gateway__receiver"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>srsgnb::static_vector&lt; std::unique_ptr&lt; srsgnb::radio_uhd_rx_stream &gt;, RADIO_MAX_NOF_PORTS &gt;</label>
        <link refid="classsrsgnb_1_1static__vector"/>
      </node>
      <node id="7">
        <label>srsgnb::baseband_gateway_transmitter</label>
        <link refid="classsrsgnb_1_1baseband__gateway__transmitter"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>srsgnb::radio_notification_handler</label>
        <link refid="classsrsgnb_1_1radio__notification__handler"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>srsgnb::radio_uhd_device</label>
        <link refid="classsrsgnb_1_1radio__uhd__device"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>-notifier</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-async_executor</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::radio_base</label>
        <link refid="classsrsgnb_1_1radio__base"/>
      </node>
      <node id="6">
        <label>srsgnb::baseband_gateway_base</label>
        <link refid="classsrsgnb_1_1baseband__gateway__base"/>
      </node>
      <node id="1">
        <label>srsgnb::radio_session_uhd_impl</label>
        <link refid="classsrsgnb_1_1radio__session__uhd__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
        <childnode refid="5" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="private-inheritance">
        </childnode>
        <childnode refid="8" relation="private-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-type</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-rx_port_map</edgelabel>
          <edgelabel>-tx_port_map</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-tx_streams</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-rx_streams</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>-device</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>srsgnb::radio_uhd_device_type</label>
        <link refid="classsrsgnb_1_1radio__uhd__device__type"/>
      </node>
      <node id="5">
        <label>srsgnb::baseband_gateway</label>
        <link refid="classsrsgnb_1_1baseband__gateway"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>srsgnb::uhd_exception_handler</label>
        <link refid="classsrsgnb_1_1uhd__exception__handler"/>
      </node>
      <node id="2">
        <label>srsgnb::radio_session</label>
        <link refid="classsrsgnb_1_1radio__session"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>srsgnb::static_vector&lt; std::unique_ptr&lt; srsgnb::radio_uhd_tx_stream &gt;, RADIO_MAX_NOF_PORTS &gt;</label>
        <link refid="classsrsgnb_1_1static__vector"/>
      </node>
      <node id="10">
        <label>srsgnb::static_vector&lt; port_to_stream_channel, RADIO_MAX_NOF_PORTS &gt;</label>
        <link refid="classsrsgnb_1_1static__vector"/>
      </node>
      <node id="4">
        <label>srsgnb::radio_management_plane</label>
        <link refid="classsrsgnb_1_1radio__management__plane"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/radio/uhd/radio_uhd_impl.h" line="26" column="1" bodyfile="lib/radio/uhd/radio_uhd_impl.h" bodystart="21" bodyend="132"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1ad7d655d5ab28c932e5b29068e27da211" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1accda6101fc317b1c9b358420deda12ad" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a9264aa761a7ef926f38d406a43d35bf8" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1ad7d655d5ab28c932e5b29068e27da211" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_transmitter::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1accda6101fc317b1c9b358420deda12ad" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_transmitter::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a9264aa761a7ef926f38d406a43d35bf8" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_transmitter::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1ad7d655d5ab28c932e5b29068e27da211" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_receiver::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1accda6101fc317b1c9b358420deda12ad" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_receiver::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a9264aa761a7ef926f38d406a43d35bf8" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_receiver::"><scope>srsgnb::radio_session_uhd_impl</scope><name>baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>device</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1aa9996b2ce221fb3c27351898f50dddf9" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>get_baseband_gateway</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a4603e2fb1ac87ed61abf05d532b51964" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>get_management_plane</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1aed9b5836040581996f69de339fb71616" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>get_receiver</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a077b36a3375cb87672d04e7aa5493427" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>get_transmitter</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a2eab2ef35614626fec2c2f541c535250" prot="public" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>is_successful</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a6047b6af462d6d66e17f14a8866baa2f" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a613d0276dd7140594f971ebcd34bdf7e" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a6047b6af462d6d66e17f14a8866baa2f" prot="private" virt="non-virtual" ambiguityscope="srsgnb::radio_management_plane::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a613d0276dd7140594f971ebcd34bdf7e" prot="private" virt="non-virtual" ambiguityscope="srsgnb::radio_management_plane::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a18d0594d50b64b7dd76fba06e8aecb68" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1ae1444318d5e6e60cada54c1b7d493975" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a18d0594d50b64b7dd76fba06e8aecb68" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_transmitter::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1ae1444318d5e6e60cada54c1b7d493975" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_transmitter::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a18d0594d50b64b7dd76fba06e8aecb68" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_receiver::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1ae1444318d5e6e60cada54c1b7d493975" prot="private" virt="non-virtual" ambiguityscope="srsgnb::baseband_gateway_receiver::"><scope>srsgnb::radio_session_uhd_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1aa6a7fe6e80a4a2fbef62a2c1d509c8ae" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>port_to_stream_channel</name></member>
      <member refid="classsrsgnb_1_1radio__base_1af9f80899d387af47e827bfecd21fa7b0" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_base</name></member>
      <member refid="classsrsgnb_1_1radio__base_1aeea2df1e0ec39aa2a831f24553ce546f" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_base</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a0c96363513155999b85983f2f22b56cb" prot="private" virt="non-virtual" ambiguityscope="srsgnb::"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_base</name></member>
      <member refid="classsrsgnb_1_1radio__base_1af9f80899d387af47e827bfecd21fa7b0" prot="private" virt="non-virtual" ambiguityscope="srsgnb::radio_management_plane::"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_base</name></member>
      <member refid="classsrsgnb_1_1radio__base_1aeea2df1e0ec39aa2a831f24553ce546f" prot="private" virt="non-virtual" ambiguityscope="srsgnb::radio_management_plane::"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_base</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a0c96363513155999b85983f2f22b56cb" prot="private" virt="non-virtual" ambiguityscope="srsgnb::radio_management_plane::"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_base</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a3250d926cc32e410d939cf36bde73d6a" prot="public" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>radio_session_uhd_impl</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>receive</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>rx_port_map</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>rx_streams</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a60dbf79a0ff0a4dcff7615dd6cd66b3d" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>sampling_rate_hz</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_rx_freq</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a3b4f17aa37e7b085f0fb039e40380cd6" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_rx_gain</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_rx_gain_unprotected</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1ad1b4421603df85b6d38bd8c4b75d1a2f" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_time_to_gps_time</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_tx_freq</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a3e0c7cadaa6c584c4f096699b4ef0f71" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_tx_gain</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>set_tx_gain_unprotected</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>start_rx_stream</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a3e224920edffa110c7ea56f73a65c5a3" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>START_STREAM_DELAY_S</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a3c0645931e57998d8d0d5a0f8d998efb" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>state</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a9eda08633372a977950ce690151e5bc0" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>states</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>stop</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1ac3b4c1bef503ad8fb58046111232bf93" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>stream_start_mutex</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a254046c2463cce0a9773cf13769eb48e" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>stream_start_required</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a43dd92b72a5124afdb7ec50eb9f54856" prot="public" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>transmit</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>tx_port_map</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>tx_streams</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a56e4fa1133b87b72ac05d559a2aefd16" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>type</name></member>
      <member refid="classsrsgnb_1_1radio__session__uhd__impl_1a505517ac3fd2b667ff3ae2ce2f55d6c9" prot="private" virt="non-virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>wait_sensor_locked</name></member>
      <member refid="classsrsgnb_1_1baseband__gateway__base_1a72eb5319b897038e168aecde0af9fcbf" prot="private" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>~baseband_gateway_base</name></member>
      <member refid="classsrsgnb_1_1radio__base_1a84b9fc81012bc2e40c2a9c04843ed8ab" prot="private" virt="virtual"><scope>srsgnb::radio_session_uhd_impl</scope><name>~radio_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
