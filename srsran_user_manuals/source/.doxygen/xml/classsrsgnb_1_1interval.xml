<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1interval" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::interval</compoundname>
    <includes refid="interval_8h" local="no">interval.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1interval_1ad8e1a4a8c04f257574e6a30451ea5982" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T srsgnb::interval&lt; T &gt;::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="117" column="5" bodyfile="include/srsgnb/adt/interval.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1interval_1af743a7dcc6d623d2f598c8d6f4f6c270" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T srsgnb::interval&lt; T &gt;::stop_</definition>
        <argsstring></argsstring>
        <name>stop_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="118" column="5" bodyfile="include/srsgnb/adt/interval.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1interval_1acbaad76f2cef31ccae0a20ec58470766" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::interval&lt; T &gt;::interval</definition>
        <argsstring>()</argsstring>
        <name>interval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="28" column="3" bodyfile="include/srsgnb/adt/interval.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1acd96120fd93bbce1343cd16c3ce49f48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>srsgnb::interval&lt; T &gt;::interval</definition>
        <argsstring>(U start_point, V stop_point)</argsstring>
        <name>interval</name>
        <param>
          <type>U</type>
          <declname>start_point</declname>
        </param>
        <param>
          <type>V</type>
          <declname>stop_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="31" column="3" bodyfile="include/srsgnb/adt/interval.h" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a3ff173546ecbdbb848abedb5ddc3d0e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T srsgnb::interval&lt; T &gt;::start</definition>
        <argsstring>() const</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="38" column="5" bodyfile="include/srsgnb/adt/interval.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a67fb131d040685c5a4c91b4f8d00e9b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T srsgnb::interval&lt; T &gt;::stop</definition>
        <argsstring>() const</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="40" column="5" bodyfile="include/srsgnb/adt/interval.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a5358af0da8100bbd4e855aa3448c2f00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::interval&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="42" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1afaa426e56c4e96208758552d97a7b43c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto srsgnb::interval&lt; T &gt;::length</definition>
        <argsstring>() const -&gt; decltype(std::declval&lt; T &gt;() - std::declval&lt; T &gt;())</argsstring>
        <name>length</name>
        <briefdescription>
<para>Interval length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="45" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="45" bodyend="45"/>
        <referencedby refid="classsrsgnb_1_1interval_1aa6dada7cdde739358256996d8dca54b6" compoundref="interval_8h" startline="57" endline="63">srsgnb::interval&lt; slot_point &gt;::extend</referencedby>
        <referencedby refid="classsrsgnb_1_1interval_1a67f2701276c3b7a20c1bba12110a8652" compoundref="interval_8h" startline="85" endline="89">srsgnb::interval&lt; slot_point &gt;::displace_to</referencedby>
        <referencedby refid="namespacesrsgnb_1afabee33f3d756f808b6730caa4c30db5" compoundref="prb__grant_8cpp" startline="16" endline="34">srsgnb::convert_rbgs_to_prbs</referencedby>
        <referencedby refid="namespacesrsgnb_1a3fd8bf9a94be3ee7dec8468f3226218e" compoundref="resource__block__group_8cpp" startline="30" endline="34">srsgnb::get_nof_rbgs</referencedby>
        <referencedby refid="classsrsgnb_1_1ra__scheduler_1aa3f2f6f48a91de48e48819b317045439" compoundref="ra__scheduler_8cpp" startline="227" endline="318">srsgnb::ra_scheduler::schedule_rar</referencedby>
        <referencedby refid="classsrsgnb_1_1ra__scheduler_1aa7f5ee78860e7768890012a950bb289c" compoundref="ra__scheduler_8cpp" startline="320" endline="410">srsgnb::ra_scheduler::fill_rar_grant</referencedby>
        <referencedby refid="classsrsgnb_1_1sib1__scheduler_1a32b9bcfcc6ae452c2d0516a8518d8d16" compoundref="sib__scheduler_8cpp" startline="155" endline="218">srsgnb::sib1_scheduler::allocate_sib1</referencedby>
        <referencedby refid="classsrsgnb_1_1sib1__scheduler_1a9273e6714497a71a3b4fc86660e88727" compoundref="sib__scheduler_8cpp" startline="220" endline="274">srsgnb::sib1_scheduler::fill_sib1_grant</referencedby>
        <referencedby refid="namespacesrsgnb_1a4521d0c47fbcc8346716c0a9ab2b68b5" compoundref="bwp__helpers_8h" startline="23" endline="27">srsgnb::prb_to_crb</referencedby>
        <referencedby refid="namespacesrsgnb_1a5f8601e7f87ff7ac0726c767b145ae1c" compoundref="config__helpers_8h" startline="30" endline="37">srsgnb::get_coreset_nof_prbs</referencedby>
        <referencedby refid="namespacesrsgnb_1a7c24c2d559727ab4fb6e0e4db881f0b4" compoundref="rb__find__algorithm_8h" startline="44" endline="62">srsgnb::find_empty_interval_of_length</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1ae1a578dbe057764fe0e0e676cb1ee1a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::interval&lt; T &gt;::set</definition>
        <argsstring>(T start_point, T stop_point)</argsstring>
        <name>set</name>
        <param>
          <type>T</type>
          <declname>start_point</declname>
        </param>
        <param>
          <type>T</type>
          <declname>stop_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="47" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1aa6dada7cdde739358256996d8dca54b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::interval&lt; T &gt;::extend</definition>
        <argsstring>(T length_increment)</argsstring>
        <name>extend</name>
        <param>
          <type>T</type>
          <declname>length_increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increase the interval length, maintaining the same starting point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length_increment</parametername>
</parameternamelist>
<parameterdescription>
<para>Length increment/decrement to apply to current interval size. In case length_increment &lt; 0, the condition -length_increment &lt;= <ref refid="classsrsgnb_1_1interval_1afaa426e56c4e96208758552d97a7b43c" kindref="member">length()</ref> must be met. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="57" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a04b106d6ce5ebfe0b68bc8abe6a2f5ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::interval&lt; T &gt;::resize</definition>
        <argsstring>(T new_length)</argsstring>
        <name>resize</name>
        <param>
          <type>T</type>
          <declname>new_length</declname>
        </param>
        <briefdescription>
<para>Set the interval length, maintaining the same starting point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="66" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="66" bodyend="70"/>
        <referencedby refid="classsrsgnb_1_1ra__scheduler_1aa3f2f6f48a91de48e48819b317045439" compoundref="ra__scheduler_8cpp" startline="227" endline="318">srsgnb::ra_scheduler::schedule_rar</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a2a8221a632c84c0a77b8e404b3a4bbd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::interval&lt; T &gt;::displace_by</definition>
        <argsstring>(int offset)</argsstring>
        <name>displace_by</name>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Move interval by an offset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="73" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="73" bodyend="82"/>
        <referencedby refid="classsrsgnb_1_1carrier__subslot__resource__grid_1a27ccc216d3099e49700aa3a0f1362ed9" compoundref="resource__grid_8cpp" startline="33" endline="43">srsgnb::carrier_subslot_resource_grid::fill</referencedby>
        <referencedby refid="classsrsgnb_1_1carrier__subslot__resource__grid_1a9240696310f6958a03f53bd94b1fa412" compoundref="resource__grid_8cpp" startline="45" endline="58">srsgnb::carrier_subslot_resource_grid::collides</referencedby>
        <referencedby refid="classsrsgnb_1_1carrier__subslot__resource__grid_1aed60a3357ae8744b9fb69c6629a1fd95" compoundref="resource__grid_8cpp" startline="70" endline="83">srsgnb::carrier_subslot_resource_grid::all_set</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a67f2701276c3b7a20c1bba12110a8652" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::interval&lt; T &gt;::displace_to</definition>
        <argsstring>(T start_point)</argsstring>
        <name>displace_to</name>
        <param>
          <type>T</type>
          <declname>start_point</declname>
        </param>
        <briefdescription>
<para>Move interval start to provided starting point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="85" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a4266e738523a7bdb5f95b146164d4875" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::interval&lt; T &gt;::overlaps</definition>
        <argsstring>(interval other) const</argsstring>
        <name>overlaps</name>
        <param>
          <type><ref refid="classsrsgnb_1_1interval" kindref="compound">interval</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>If this and other intervals overlap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="92" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="92" bodyend="96"/>
        <referencedby refid="classsrsgnb_1_1interval_1aec6e3967e4722d423a5383f5fff9b826" compoundref="interval_8h" startline="105" endline="114">srsgnb::interval&lt; slot_point &gt;::intersect</referencedby>
        <referencedby refid="namespacesrsgnb_1a70e7879d5473d422045c99b3c13d0606" compoundref="interval_8h" startline="143" endline="149">srsgnb::operator|</referencedby>
        <referencedby refid="namespacesrsgnb_1a3b12c1df2e134d44cba86ab00c232a25" compoundref="interval_8h" startline="153" endline="159">srsgnb::operator&amp;</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1ac280e002d3db0cc5815bf63dbc770955" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::interval&lt; T &gt;::contains</definition>
        <argsstring>(T point) const</argsstring>
        <name>contains</name>
        <param>
          <type>T</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>If interval contains provided point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="99" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="99" bodyend="99"/>
        <referencedby refid="classsrsgnb_1_1ra__scheduler_1a218ba7f4d2fe7d8d8f3f6b6e8eb82066" compoundref="ra__scheduler_8cpp" startline="139" endline="225">srsgnb::ra_scheduler::run_slot</referencedby>
        <referencedby refid="namespacesrsgnb_1adaef08fc34c2214394a362de4f1182bc" compoundref="bwp__helpers_8h" startline="44" endline="51">srsgnb::crb_to_prb</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1a81154d2924cae6c8adb2d08440052bc9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::interval&lt; T &gt;::contains</definition>
        <argsstring>(interval other) const</argsstring>
        <name>contains</name>
        <param>
          <type><ref refid="classsrsgnb_1_1interval" kindref="compound">interval</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>If interval contains provided interval. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="102" column="8" bodyfile="include/srsgnb/adt/interval.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1interval_1aec6e3967e4722d423a5383f5fff9b826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1interval" kindref="compound">interval</ref>&lt; T &gt; &amp;</type>
        <definition>interval&lt;T&gt;&amp; srsgnb::interval&lt; T &gt;::intersect</definition>
        <argsstring>(const interval&lt; T &gt; &amp;other)</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1interval" kindref="compound">interval</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assign to this interval the intersection between this and the provided interval. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/interval.h" line="105" column="12" bodyfile="include/srsgnb/adt/interval.h" bodystart="105" bodyend="114"/>
        <referencedby refid="structsrsgnb_1_1prb__grant_1ab98341ff4461bd86abc490843b8c64b9" compoundref="prb__grant_8h" startline="114" endline="122">srsgnb::prb_grant::operator&amp;=</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Representation of an interval between two numeric-types with the math representation [start, stop). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::interval&lt; T &gt;</label>
        <link refid="classsrsgnb_1_1interval"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/interval.h" line="24" column="1" bodyfile="include/srsgnb/adt/interval.h" bodystart="23" bodyend="119"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1interval_1ac280e002d3db0cc5815bf63dbc770955" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>contains</name></member>
      <member refid="classsrsgnb_1_1interval_1a81154d2924cae6c8adb2d08440052bc9" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>contains</name></member>
      <member refid="classsrsgnb_1_1interval_1a2a8221a632c84c0a77b8e404b3a4bbd8" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>displace_by</name></member>
      <member refid="classsrsgnb_1_1interval_1a67f2701276c3b7a20c1bba12110a8652" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>displace_to</name></member>
      <member refid="classsrsgnb_1_1interval_1a5358af0da8100bbd4e855aa3448c2f00" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1interval_1aa6dada7cdde739358256996d8dca54b6" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>extend</name></member>
      <member refid="classsrsgnb_1_1interval_1aec6e3967e4722d423a5383f5fff9b826" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>intersect</name></member>
      <member refid="classsrsgnb_1_1interval_1acbaad76f2cef31ccae0a20ec58470766" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>interval</name></member>
      <member refid="classsrsgnb_1_1interval_1acd96120fd93bbce1343cd16c3ce49f48" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>interval</name></member>
      <member refid="classsrsgnb_1_1interval_1afaa426e56c4e96208758552d97a7b43c" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>length</name></member>
      <member refid="classsrsgnb_1_1interval_1a4266e738523a7bdb5f95b146164d4875" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>overlaps</name></member>
      <member refid="classsrsgnb_1_1interval_1a04b106d6ce5ebfe0b68bc8abe6a2f5ec" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>resize</name></member>
      <member refid="classsrsgnb_1_1interval_1ae1a578dbe057764fe0e0e676cb1ee1a6" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>set</name></member>
      <member refid="classsrsgnb_1_1interval_1a3ff173546ecbdbb848abedb5ddc3d0e1" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>start</name></member>
      <member refid="classsrsgnb_1_1interval_1ad8e1a4a8c04f257574e6a30451ea5982" prot="private" virt="non-virtual"><scope>srsgnb::interval</scope><name>start_</name></member>
      <member refid="classsrsgnb_1_1interval_1a67fb131d040685c5a4c91b4f8d00e9b0" prot="public" virt="non-virtual"><scope>srsgnb::interval</scope><name>stop</name></member>
      <member refid="classsrsgnb_1_1interval_1af743a7dcc6d623d2f598c8d6f4f6c270" prot="private" virt="non-virtual"><scope>srsgnb::interval</scope><name>stop_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
