<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1detail_1_1base__slot__array__view" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::detail::base_slot_array_view</compoundname>
    <derivedcompoundref refid="classsrsgnb_1_1detail_1_1base__slot__array" prot="public" virt="non-virtual">srsgnb::detail::base_slot_array&lt; Vec &gt;</derivedcompoundref>
    <includes refid="slot__array_8h" local="no">slot_array.h</includes>
    <innerclass refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" prot="protected">srsgnb::detail::base_slot_array_view::iterator_impl</innerclass>
    <templateparamlist>
      <param>
        <type>typename Vec</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1aeb343357c25b49fa9296e98562630feb" prot="private" static="no">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view" kindref="compound">base_slot_array_view</ref>&lt; Vec &gt;</type>
        <definition>using srsgnb::detail::base_slot_array_view&lt; Vec &gt;::base_t =  base_slot_array_view&lt;Vec&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="23" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a8f2d62c62cb467c63b051187ca14a7a7" prot="private" static="no">
        <type>typename Vec::value_type::value_type</type>
        <definition>using srsgnb::detail::base_slot_array_view&lt; Vec &gt;::T =  typename Vec::value_type::value_type</definition>
        <argsstring></argsstring>
        <name>T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="24" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1ada5e447afbc1073831f3f95b3b9292e4" prot="public" static="no">
        <type>T</type>
        <definition>using srsgnb::detail::base_slot_array_view&lt; Vec &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="86" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a00b5885797250e6e1ce0d018a7706e2a" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; T &gt;</type>
        <definition>using srsgnb::detail::base_slot_array_view&lt; Vec &gt;::iterator =  iterator_impl&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="87" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1abd69148a2711224c316b045aa6b55995" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; const T &gt;</type>
        <definition>using srsgnb::detail::base_slot_array_view&lt; Vec &gt;::const_iterator =  iterator_impl&lt;const T&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="88" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1ab31cf33b4b70697ba8597ee2297823c5" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t srsgnb::detail::base_slot_array_view&lt; Vec &gt;::nof_elems</definition>
        <argsstring></argsstring>
        <name>nof_elems</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of present fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="82" column="10" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="82" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a027b9d3d77776885e46747e3b8b6441c" compoundref="slot__array_8h" startline="108" endline="119">srsgnb::detail::base_slot_array_view&lt; std::array&lt; optional&lt; srsgnb::mac_dl_ue_manager::ue_item &gt;, N &gt; &gt;::find_first_empty</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a806636ffd9c84c7473198425c3aa8419" prot="protected" static="no" mutable="no">
        <type>Vec</type>
        <definition>Vec srsgnb::detail::base_slot_array_view&lt; Vec &gt;::vec</definition>
        <argsstring></argsstring>
        <name>vec</name>
        <briefdescription>
<para>Container to store optional elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="83" column="10" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="83" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a027b9d3d77776885e46747e3b8b6441c" compoundref="slot__array_8h" startline="108" endline="119">srsgnb::detail::base_slot_array_view&lt; std::array&lt; optional&lt; srsgnb::mac_dl_ue_manager::ue_item &gt;, N &gt; &gt;::find_first_empty</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__vector_1a8f1a14bba248207519a9b273fe61cb24" compoundref="slot__array_8h" startline="159" endline="166">srsgnb::slot_vector&lt; srsgnb::mac_sdu_rx_notifier * &gt;::erase</referencedby>
        <referencedby refid="classsrsgnb_1_1detail_1_1base__slot__array_1a2035e6f5320442b544cc5b6a117f3baa" compoundref="slot__array_8h" startline="176" endline="182">srsgnb::detail::base_slot_array&lt; std::array&lt; optional&lt; srsgnb::mac_dl_ue_manager::ue_item &gt;, N &gt; &gt;::insert</referencedby>
        <referencedby refid="classsrsgnb_1_1detail_1_1base__slot__array_1a2cd598a1d41eb2e7870e5ea09702bca1" compoundref="slot__array_8h" startline="188" endline="194">srsgnb::detail::base_slot_array&lt; std::array&lt; optional&lt; srsgnb::mac_dl_ue_manager::ue_item &gt;, N &gt; &gt;::emplace</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1ada85131beaaee426e66af82f34f503b3" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>static size_t srsgnb::detail::base_slot_array_view&lt; Vec &gt;::extract_iterator_index</definition>
        <argsstring>(It it)</argsstring>
        <name>extract_iterator_index</name>
        <param>
          <type>It</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="77" column="17" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a511578084f3370e7febe6d82331d3322" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::detail::base_slot_array_view&lt; Vec &gt;::base_slot_array_view</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>base_slot_array_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="90" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a93cc7cce146969644359ea2fe86b180d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::detail::base_slot_array_view&lt; Vec &gt;::base_slot_array_view</definition>
        <argsstring>(Vec &amp;&amp;v, size_t nof_elems_)</argsstring>
        <name>base_slot_array_view</name>
        <param>
          <type>Vec &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nof_elems_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="91" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a2c3d2e22e68a3da226e2db73b1a5d437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::detail::base_slot_array_view&lt; Vec &gt;::base_slot_array_view</definition>
        <argsstring>(const Vec &amp;v, size_t nof_elems_)</argsstring>
        <name>base_slot_array_view</name>
        <param>
          <type>const Vec &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nof_elems_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="92" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1af5e1274cae00781288e56c70f5f623af" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::base_slot_array_view&lt; Vec &gt;::contains</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>contains</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="94" column="8" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a3d6d62bddcd51b063e41fc58f8732d17" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::detail::base_slot_array_view&lt; Vec &gt;::operator[]</definition>
        <argsstring>(size_t idx) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="96" column="11" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1ab8f2d706ab6a315ed7515a5a35b81fab" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::detail::base_slot_array_view&lt; Vec &gt;::operator[]</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="97" column="11" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a550965dcc189d70e2109f8980190ea31" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::detail::base_slot_array_view&lt; Vec &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="99" column="20" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1acd9616198c16d2e37675c808477d8805" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t srsgnb::detail::base_slot_array_view&lt; Vec &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="100" column="20" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1acb33e9554bcdbc3a9a90184f2673180e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::detail::base_slot_array_view&lt; Vec &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="102" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a2dcd6db4e502f0ab84eef5b8dd4f16b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::detail::base_slot_array_view&lt; Vec &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="103" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a1e1e3bfbc9126e558864c3723c28b9a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::detail::base_slot_array_view&lt; Vec &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="104" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1af012079116b025f3a4a56fe615153af3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::detail::base_slot_array_view&lt; Vec &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="105" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__slot__array__view_1a027b9d3d77776885e46747e3b8b6441c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::detail::base_slot_array_view&lt; Vec &gt;::find_first_empty</definition>
        <argsstring>(size_t start_guess=0)</argsstring>
        <name>find_first_empty</name>
        <param>
          <type>size_t</type>
          <declname>start_guess</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Find first position that is empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="108" column="10" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="108" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class used for the implementation of the common functionality in slot_array&lt;&gt;, slot_vector&lt;&gt; and slot_span&lt;&gt;. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Vec</parametername>
</parameternamelist>
<parameterdescription>
<para>type of container used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::detail::base_slot_array_view&lt; Vec &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array__view"/>
      </node>
      <node id="2">
        <label>srsgnb::detail::base_slot_array&lt; Vec &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::detail::base_slot_array_view&lt; Vec &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__slot__array__view"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/slot_array.h" line="22" column="1" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="21" bodyend="120"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a511578084f3370e7febe6d82331d3322" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>base_slot_array_view</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a93cc7cce146969644359ea2fe86b180d" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>base_slot_array_view</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a2c3d2e22e68a3da226e2db73b1a5d437" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>base_slot_array_view</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1aeb343357c25b49fa9296e98562630feb" prot="private" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>base_t</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1acb33e9554bcdbc3a9a90184f2673180e" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a1e1e3bfbc9126e558864c3723c28b9a8" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1abd69148a2711224c316b045aa6b55995" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1af5e1274cae00781288e56c70f5f623af" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>contains</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a550965dcc189d70e2109f8980190ea31" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a2dcd6db4e502f0ab84eef5b8dd4f16b5" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1af012079116b025f3a4a56fe615153af3" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ada85131beaaee426e66af82f34f503b3" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>extract_iterator_index</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a027b9d3d77776885e46747e3b8b6441c" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>find_first_empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a00b5885797250e6e1ce0d018a7706e2a" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ab31cf33b4b70697ba8597ee2297823c5" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>nof_elems</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a3d6d62bddcd51b063e41fc58f8732d17" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ab8f2d706ab6a315ed7515a5a35b81fab" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1acd9616198c16d2e37675c808477d8805" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>size</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a8f2d62c62cb467c63b051187ca14a7a7" prot="private" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>T</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1ada5e447afbc1073831f3f95b3b9292e4" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>value_type</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__slot__array__view_1a806636ffd9c84c7473198425c3aa8419" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_slot_array_view</scope><name>vec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
