<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="pseudo__random__generator__impl_8cpp" kind="file" language="C++">
    <compoundname>pseudo_random_generator_impl.cpp</compoundname>
    <includes refid="pseudo__random__generator__impl_8h" local="yes">pseudo_random_generator_impl.h</includes>
    <includes refid="math__utils_8h" local="yes">srsgnb/support/math_utils.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="44">
        <label>atomic</label>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="1">
        <label>lib/phy/upper/sequence_generators/pseudo_random_generator_impl.cpp</label>
        <link refid="pseudo__random__generator__impl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="49">
        <label>numeric</label>
      </node>
      <node id="40">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="24">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/phy/upper/sequence_generators/pseudo_random_generator.h</label>
        <link refid="pseudo__random__generator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>srsgnb/srsvec/detail/traits.h</label>
        <link refid="traits_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>pthread.h</label>
      </node>
      <node id="45">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cstdio</label>
      </node>
      <node id="43">
        <label>tuple</label>
      </node>
      <node id="28">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="34">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>array</label>
      </node>
      <node id="41">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cerrno</label>
      </node>
      <node id="5">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pseudo_random_generator_impl.h</label>
        <link refid="pseudo__random__generator__impl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>cstddef</label>
      </node>
      <node id="33">
        <label>chrono</label>
      </node>
      <node id="29">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>type_traits</label>
      </node>
      <node id="46">
        <label>complex</label>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>srsgnb/phy/upper/log_likelihood_ratio.h</label>
        <link refid="log__likelihood__ratio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pseudo__random__generator__impl_8cpp_1a55b8a817046c80d1317bf008859bf0db" prot="public" static="no">
        <name>FLOAT_U32_XOR</name>
        <param><defname>DST</defname></param>
        <param><defname>SRC</defname></param>
        <param><defname>U32_MASK</defname></param>
        <initializer>  do {                                                                                                                 \
    uint32_t temp_u32;                                                                                                 \
    memcpy(&amp;temp_u32, &amp;(SRC), 4);                                                                                      \
    temp_u32 ^= (U32_MASK);                                                                                            \
    memcpy(&amp;(DST), &amp;temp_u32, 4);                                                                                      \
  } while (false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/sequence_generators/pseudo_random_generator_impl.cpp" line="99" column="9" bodyfile="lib/phy/upper/sequence_generators/pseudo_random_generator_impl.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pseudo__random__generator__impl_8h" kindref="compound">pseudo_random_generator_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">srsgnb/support/math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;immintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>HAVE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s" kindref="compound">pseudo_random_generator_impl::x1_init_s</ref><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a86d43eeb7ddb8e395fe5cac403a14f89" kindref="member">pseudo_random_generator_impl::x1_init</ref><sp/>=</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s" kindref="compound">pseudo_random_generator_impl::x1_init_s</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s" kindref="compound">pseudo_random_generator_impl::x2_init_s</ref><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1af1252f33efe60f9fbe1de0cc283b2223" kindref="member">pseudo_random_generator_impl::x2_init</ref><sp/>=</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s" kindref="compound">pseudo_random_generator_impl::x2_init_s</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1a027ccdb643d61fce5157f05021f75c91" refkind="member"><highlight class="normal"><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1a027ccdb643d61fce5157f05021f75c91" kindref="member">pseudo_random_generator_impl::x1_init_s::x1_init_s</ref>()<sp/>:<sp/>x1(1)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>transition<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>!=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a2b2edcd19bead3f5b40a70b4c3878e2e" kindref="member">SEQUENCE_NC</ref>;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1af0ea378d14c6d9a58cddefa2711d2310" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ad0ba9a6a8da646f7e1e74ecbdf761878" kindref="member">step_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1af0ea378d14c6d9a58cddefa2711d2310" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1a89a409cfad52b4215372d39ac9e05e8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1a89a409cfad52b4215372d39ac9e05e8c" kindref="member">pseudo_random_generator_impl::x1_init_s::get</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="37"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1abe27500a26a64dbb8c101e9102c14180" refkind="member"><highlight class="normal"><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1abe27500a26a64dbb8c101e9102c14180" kindref="member">pseudo_random_generator_impl::x2_init_s::x2_init_s</ref>()<sp/>:<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>bit<sp/>of<sp/>the<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a19c2eedfb84b2b6e6777a1bfdf502a97" kindref="member">SEQUENCE_SEED_LEN</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>transition<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1ad8fa840f3d3938d4716f910b67693169" kindref="member">x2</ref>[i]<sp/>=<sp/>1U<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>!=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a2b2edcd19bead3f5b40a70b4c3878e2e" kindref="member">SEQUENCE_NC</ref>;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1ad8fa840f3d3938d4716f910b67693169" kindref="member">x2</ref>[i]<sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a57afb6927d4aab767f544ddee98e7bdc" kindref="member">step_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1ad8fa840f3d3938d4716f910b67693169" kindref="member">x2</ref>[i]);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1a952b6ad85049d4f2ddac91412af84203" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1a952b6ad85049d4f2ddac91412af84203" kindref="member">pseudo_random_generator_impl::x2_init_s::get</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c_init)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a19c2eedfb84b2b6e6777a1bfdf502a97" kindref="member">SEQUENCE_SEED_LEN</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c_init<sp/>&gt;&gt;<sp/>i)<sp/>&amp;<sp/>1UL)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>^=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>[i];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classsrsgnb_1_1pseudo__random__generator__impl_1a98de4e3f0fd3f38fc88e711b0bf5ce38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a98de4e3f0fd3f38fc88e711b0bf5ce38" kindref="member">pseudo_random_generator_impl::init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c_init)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a86d43eeb7ddb8e395fe5cac403a14f89" kindref="member">x1_init</ref>.<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x1__init__s_1a89a409cfad52b4215372d39ac9e05e8c" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1af1252f33efe60f9fbe1de0cc283b2223" kindref="member">x2_init</ref>.<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1_1x2__init__s_1a952b6ad85049d4f2ddac91412af84203" kindref="member">get</ref>(c_init);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8930064bb345d3d62ad215cbe67345be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a98de4e3f0fd3f38fc88e711b0bf5ce38" kindref="member">pseudo_random_generator_impl::init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1pseudo__random__generator_1_1state__s" kindref="compound">state_s</ref>&amp;<sp/>state)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/>state.<ref refid="structsrsgnb_1_1pseudo__random__generator_1_1state__s_1a3668324960bb1d3afcac19a653f2ea01" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/>state.<ref refid="structsrsgnb_1_1pseudo__random__generator_1_1state__s_1a56469ec2649a65fea2f2e6e161beb88a" kindref="member">x2</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classsrsgnb_1_1pseudo__random__generator__impl_1a18467fd029acc4f602c10f95f74ca1cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a18467fd029acc4f602c10f95f74ca1cb" kindref="member">pseudo_random_generator_impl::advance</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>in<sp/>parallel<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>count<sp/>-<sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>-<sp/>1);<sp/>i<sp/>+=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>in<sp/>single<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>!=<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ad0ba9a6a8da646f7e1e74ecbdf761878" kindref="member">step_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a57afb6927d4aab767f544ddee98e7bdc" kindref="member">step_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOAT_U32_XOR(DST,<sp/>SRC,<sp/>U32_MASK)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uint32_t<sp/>temp_u32;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>memcpy(&amp;temp_u32,<sp/>&amp;(SRC),<sp/>4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>temp_u32<sp/>^=<sp/>(U32_MASK);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>memcpy(&amp;(DST),<sp/>&amp;temp_u32,<sp/>4);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classsrsgnb_1_1pseudo__random__generator__impl_1ab342c0fa23bc900d75e7c49290df8818" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ab342c0fa23bc900d75e7c49290df8818" kindref="member">pseudo_random_generator_impl::generate</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;float&gt;</ref><sp/>out,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>uint32_t<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>out.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>length<sp/>-<sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>-<sp/>1);<sp/>i<sp/>+=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>-<sp/>3;<sp/>j<sp/>+=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preloads<sp/>bits<sp/>of<sp/>interest<sp/>in<sp/>the<sp/>4<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>mask<sp/>=<sp/>_mm_set1_epi32(c<sp/>&gt;&gt;<sp/>j);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Masks<sp/>each<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_and_si128(mask,<sp/>_mm_setr_epi32(1,<sp/>2,<sp/>4,<sp/>8));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>non<sp/>zero<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_cmpgt_epi32(mask,<sp/>_mm_set1_epi32(0));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>with<sp/>MSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_and_si128(mask,<sp/>(__m128i)_mm_set1_ps(-0.0F));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128<sp/>v<sp/>=<sp/>_mm_set1_ps(value);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loads<sp/>input<sp/>and<sp/>perform<sp/>sign<sp/>XOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>_mm_xor_ps((__m128)mask,<sp/>v);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storeu_ps(&amp;out[i<sp/>+<sp/>j],<sp/>v);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>the<sp/>parallel<sp/>bits<sp/>with<sp/>generic<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>!=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOAT_U32_XOR(out[i<sp/>+<sp/>j],<sp/>value,<sp/>(c<sp/>&lt;&lt;<sp/>(31U<sp/>-<sp/>j))<sp/>&amp;<sp/>0x80000000);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>!=<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>FLOAT_U32_XOR(out[i],<sp/>value,<sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>)<sp/>&lt;&lt;<sp/>31U);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ad0ba9a6a8da646f7e1e74ecbdf761878" kindref="member">step_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a57afb6927d4aab767f544ddee98e7bdc" kindref="member">step_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159" refid="classsrsgnb_1_1pseudo__random__generator__impl_1a6d343fa858f7d79f8df98e12611c8429" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a6d343fa858f7d79f8df98e12611c8429" kindref="member">pseudo_random_generator_impl::apply_xor_byte</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;uint8_t&gt;</ref><sp/>out,<sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/>in)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>assert(in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>()<sp/>==<sp/>out.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>()<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SEQUENCE_PAR_BITS<sp/>%<sp/>8<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>uint64_t<sp/>buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>uint32_t<sp/>count<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>length<sp/>/<sp/>8;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>sequence<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer<sp/>|<sp/>((<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa5ca60ba6250ca183c0ff77f4b3ebdc1" kindref="member">SEQUENCE_MASK</ref><sp/>&amp;<sp/>c)<sp/>&lt;&lt;<sp/>count);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>XOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i]<sp/>^<sp/>reverse_lut[buffer<sp/>&amp;<sp/>255UL];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>buffer<sp/>&gt;&gt;<sp/>8UL;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>spare<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rem8<sp/>=<sp/>length<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem8<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>sequence<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>rem8)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer<sp/>|<sp/>((<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa5ca60ba6250ca183c0ff77f4b3ebdc1" kindref="member">SEQUENCE_MASK</ref><sp/>&amp;<sp/>c)<sp/>&lt;&lt;<sp/>count);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i]<sp/>^<sp/>reverse_lut[buffer<sp/>&amp;<sp/>((1U<sp/>&lt;&lt;<sp/>rem8)<sp/>-<sp/>1U)<sp/>&amp;<sp/>255U];</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/>//<sp/>SEQUENCE_PAR_BITS<sp/>%<sp/>8<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>(length<sp/>/<sp/>8<sp/>-<sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>-<sp/>1)<sp/>/<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>j<sp/>=<sp/>0,<sp/>max_j<sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>/<sp/>8;<sp/>j<sp/>!=<sp/>max_j;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i]<sp/>^<sp/><ref refid="namespacesrsgnb_1a68609cb80f5f8f752b020809bdc050f0" kindref="member">reverse_byte</ref>(c<sp/>&amp;<sp/>255U);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>c<sp/>&gt;&gt;<sp/>8U;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>spare<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>length<sp/>/<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i]<sp/>^<sp/><ref refid="namespacesrsgnb_1a68609cb80f5f8f752b020809bdc050f0" kindref="member">reverse_byte</ref>(c<sp/>&amp;<sp/>255U);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>c<sp/>&gt;&gt;<sp/>8U;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>spare<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rem8<sp/>=<sp/>length<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rem8<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i]<sp/>^<sp/><ref refid="namespacesrsgnb_1a68609cb80f5f8f752b020809bdc050f0" kindref="member">reverse_byte</ref>(c<sp/>&amp;<sp/>((1U<sp/>&lt;&lt;<sp/>rem8)<sp/>-<sp/>1U)<sp/>&amp;<sp/>255U);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SEQUENCE_PAR_BITS<sp/>%<sp/>8<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa6dea6ec9aed8d04091c0827133b6cb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa6dea6ec9aed8d04091c0827133b6cb9" kindref="member">pseudo_random_generator_impl::apply_xor_bit</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;uint8_t&gt;</ref><sp/>out,<sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/>in)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>assert(in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>()<sp/>==<sp/>out.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>max_i<sp/>=<sp/>length<sp/>-<sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>-<sp/>1);<sp/>i<sp/>&lt;<sp/>max_i;<sp/>i<sp/>+=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>&gt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preloads<sp/>bits<sp/>of<sp/>interest<sp/>in<sp/>the<sp/>16<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>mask<sp/>=<sp/>_mm_set1_epi32(c);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_mm_shuffle_epi8(mask,<sp/>_mm_setr_epi8(0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Masks<sp/>each<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>=<sp/>_mm_and_si128(<sp/>mask,<sp/>_mm_set_epi64x(0x0102040810204080,<sp/>0x0102040810204080));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_and_si128(mask,<sp/>_mm_set_epi64x(0x8040201008040201,<sp/>0x8040201008040201));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>non<sp/>zero<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_cmpeq_epi8(mask,<sp/>_mm_set_epi64x(0x8040201008040201,<sp/>0x8040201008040201));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>to<sp/>1s<sp/>and<sp/>0s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_and_si128(mask,<sp/>_mm_set1_epi8(1));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>v<sp/>=<sp/>_mm_loadu_si128((__m128i*)(&amp;in[i<sp/>+<sp/>j]));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>XOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>_mm_xor_si128(mask,<sp/>v);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storeu_si128((__m128i*)(&amp;out[i<sp/>+<sp/>j]),<sp/>v);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>bit<sp/>counter<sp/>`j`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i<sp/>+<sp/>j]<sp/>=<sp/>in[i<sp/>+<sp/>j]<sp/>^<sp/>((c<sp/>&gt;&gt;<sp/>j)<sp/>&amp;<sp/>1U);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>!=<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i]<sp/>^<sp/>((<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>)<sp/>&amp;<sp/>1U);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ad0ba9a6a8da646f7e1e74ecbdf761878" kindref="member">step_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a57afb6927d4aab767f544ddee98e7bdc" kindref="member">step_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297" refid="classsrsgnb_1_1pseudo__random__generator__impl_1a9b86d8909b11e1f9415a59e362e79751" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a9b86d8909b11e1f9415a59e362e79751" kindref="member">pseudo_random_generator_impl::apply_xor</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;log_likelihood_ratio&gt;</ref><sp/>out,<sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const log_likelihood_ratio&gt;</ref><sp/>in)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>assert(in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>()<sp/>==<sp/>out.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>max_i<sp/>=<sp/>length<sp/>-<sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>-<sp/>1);<sp/>i<sp/>&lt;<sp/>max_i;<sp/>i<sp/>+=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref><sp/>&gt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preloads<sp/>bits<sp/>of<sp/>interest<sp/>in<sp/>the<sp/>16<sp/>LSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>mask<sp/>=<sp/>_mm_set1_epi32(c);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>_mm_shuffle_epi8(mask,<sp/>_mm_setr_epi8(0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Masks<sp/>each<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>=<sp/>_mm_and_si128(<sp/>mask,<sp/>_mm_set_epi64x(0x0102040810204080,<sp/>0x0102040810204080));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_and_si128(mask,<sp/>_mm_set_epi64x(0x8040201008040201,<sp/>0x8040201008040201));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>non<sp/>zero<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_cmpeq_epi8(mask,<sp/>_mm_set_epi64x(0x8040201008040201,<sp/>0x8040201008040201));</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__m128i<sp/>v<sp/>=<sp/>_mm_loadu_si128((__m128i*)(&amp;in[i<sp/>+<sp/>j]));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Negate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>_mm_xor_si128(mask,<sp/>v);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>_mm_and_si128(mask,<sp/>_mm_set1_epi8(1));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/><sp/><sp/><sp/>=<sp/>_mm_add_epi8(v,<sp/>mask);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_mm_storeu_si128((__m128i*)(&amp;out[i<sp/>+<sp/>j]),<sp/>v);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>bit<sp/>counter<sp/>`j`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>!=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a8bb7ca1a3381338375df6cf212f52980" kindref="member">SEQUENCE_PAR_BITS</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i<sp/>+<sp/>j]<sp/>=<sp/>in[i<sp/>+<sp/>j].to_value_type()<sp/>*<sp/>(((c<sp/>&gt;&gt;<sp/>j)<sp/>&amp;<sp/>1U)<sp/>?<sp/>-1<sp/>:<sp/>+1);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ae4d7adbd41b28412a27ba1f7f28822e3" kindref="member">step_par_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a1628c831f2352f4670edd441c37ca8c9" kindref="member">step_par_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>!=<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>in[i].to_value_type()<sp/>*<sp/>(((<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>^<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>)<sp/>&amp;<sp/>1U)<sp/>?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1ad0ba9a6a8da646f7e1e74ecbdf761878" kindref="member">step_x1</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a57afb6927d4aab767f544ddee98e7bdc" kindref="member">step_x2</ref>(<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356" refid="classsrsgnb_1_1pseudo__random__generator__impl_1a86c0f58194ea40a1da9a89b1fb09c420" refkind="member"><highlight class="normal"><ref refid="structsrsgnb_1_1pseudo__random__generator_1_1state__s" kindref="compound">pseudo_random_generator::state_s</ref><sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a86c0f58194ea40a1da9a89b1fb09c420" kindref="member">pseudo_random_generator_impl::get_state</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="357"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1a61f14ccfb370332e88d178dab31968a3" kindref="member">x1</ref>,<sp/><ref refid="classsrsgnb_1_1pseudo__random__generator__impl_1aa87a0796169fa27fb5f884bdb15d40eb" kindref="member">x2</ref>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/phy/upper/sequence_generators/pseudo_random_generator_impl.cpp"/>
  </compounddef>
</doxygen>
