<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdetail_1_1is__like__std__string" kind="class" language="C++" prot="public">
    <compoundname>detail::is_like_std_string</compoundname>
    <includes refid="ranges_8h" local="no">ranges.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdetail_1_1is__like__std__string_1a4e8243d6f7b67c33d47c1d53d7be229e" prot="public" static="yes" mutable="no">
        <type>const FMT_CONSTEXPR_DECL bool</type>
        <definition>const FMT_CONSTEXPR_DECL bool detail::is_like_std_string&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>=
      <ref refid="structdetail_1_1is__string" kindref="compound">is_string</ref>&lt;T&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> || !std::is_void&lt;decltype(check&lt;T&gt;(nullptr))&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="86" column="40" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classdetail_1_1is__like__std__string_1a990444a2e5dfe21ecc0a7ce33b648369" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto detail::is_like_std_string&lt; T &gt;::check</definition>
        <argsstring>(U *p) -&gt; decltype((void) p-&gt;find(&apos;a&apos;), p-&gt;length(),(void) p-&gt;data(), int())</argsstring>
        <name>check</name>
        <param>
          <type>U *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="81" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1is__like__std__string_1ab5400496e92a6d2d87d2930ea6dab77c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void detail::is_like_std_string&lt; T &gt;::check</definition>
        <argsstring>(...)</argsstring>
        <name>check</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="83" column="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Return true value if T has std::string interface, like std::string_view. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>detail::is_like_std_string&lt; T &gt;</label>
        <link refid="classdetail_1_1is__like__std__string"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="79" column="37" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="79" bodyend="88"/>
    <listofallmembers>
      <member refid="classdetail_1_1is__like__std__string_1a990444a2e5dfe21ecc0a7ce33b648369" prot="private" virt="non-virtual"><scope>detail::is_like_std_string</scope><name>check</name></member>
      <member refid="classdetail_1_1is__like__std__string_1ab5400496e92a6d2d87d2930ea6dab77c" prot="private" virt="non-virtual"><scope>detail::is_like_std_string</scope><name>check</name></member>
      <member refid="classdetail_1_1is__like__std__string_1a4e8243d6f7b67c33d47c1d53d7be229e" prot="public" virt="non-virtual"><scope>detail::is_like_std_string</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
