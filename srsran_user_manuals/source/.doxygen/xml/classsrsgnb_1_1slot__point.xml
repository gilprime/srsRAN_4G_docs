<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1slot__point" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::slot_point</compoundname>
    <includes refid="slot__point_8h" local="no">slot_point.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::NOF_NUMEROLOGIES</definition>
        <argsstring></argsstring>
        <name>NOF_NUMEROLOGIES</name>
        <initializer>= 5</initializer>
        <briefdescription>
<para>Number of possible numerologies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="37" column="29" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="37" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1slot__point_1a80a920ae01e59abba6c86ceb8ec3ce7b" compoundref="slot__point_8h" startline="47" endline="51">slot_point</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1ac6e35c03822d50f27a3f6439c388cf21" compoundref="slot__point_8h" startline="80" endline="80">clear</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1af9f81db7f0ecf822d8e53f6216b95b34" compoundref="slot__point_8h" startline="83" endline="83">valid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1slot__point_1a0f960d9b81fa720c2ea3110562a13907" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t srsgnb::slot_point::NOF_SFNS</definition>
        <argsstring></argsstring>
        <name>NOF_SFNS</name>
        <initializer>= 1024</initializer>
        <briefdescription>
<para>Number of possible SFNs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="40" column="29" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1slot__point_1a54e883bb86c4fa3f28e0bd5f69e1d37f" compoundref="slot__point_8h" startline="54" endline="63">slot_point</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::slot_point::numerology_val</definition>
        <argsstring></argsstring>
        <name>numerology_val</name>
        <bitfield> 3</bitfield>
        <briefdescription>
<para>Tag for numerology used: {0: 15 kHz, 1: 30 kHz, 2: 60 kHz, 3: 120 kHz, 4: 240 kHz}. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="205" column="12" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="205" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1slot__point_1ac6e35c03822d50f27a3f6439c388cf21" compoundref="slot__point_8h" startline="80" endline="80">clear</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1af9f81db7f0ecf822d8e53f6216b95b34" compoundref="slot__point_8h" startline="83" endline="83">valid</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" compoundref="slot__point_8h" startline="86" endline="86">numerology</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" compoundref="slot__point_8h" startline="99" endline="99">nof_slots_per_subframe</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a6847a9d3bdf9fb951b65799aecc6faa8" compoundref="slot__point_8h" startline="126" endline="129">operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::slot_point::count_val</definition>
        <argsstring></argsstring>
        <name>count_val</name>
        <bitfield> 29</bitfield>
        <briefdescription>
<para>Count value that encodes both SFN (0..1023) and slot index (0..9/19/39/79/159). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="208" column="12" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="208" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1slot__point_1a3c10067548735ef432b9c9186f127b8e" compoundref="slot__point_8h" startline="90" endline="90">slot_index</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a5c6f761ef9a78dbfdb9b057463ddca01" compoundref="slot__point_8h" startline="93" endline="93">sfn</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a67e682f9eef29c87118c480734b87cb1" compoundref="slot__point_8h" startline="108" endline="108">system_slot</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1ad91084c1f659a8e05fbd2a9fbf226d72" compoundref="slot__point_8h" startline="119" endline="119">hrf_slot_index</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a418ab7186ebd2026e89a0a131738c2d6" compoundref="slot__point_8h" startline="122" endline="122">subframe_slot_index</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a6847a9d3bdf9fb951b65799aecc6faa8" compoundref="slot__point_8h" startline="126" endline="129">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1aebda6f10282300bf4772658849f5d7c8" compoundref="slot__point_8h" startline="137" endline="145">operator&lt;</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a332a3d76e2a5b58c22a47f4b2a8388ac" compoundref="slot__point_8h" startline="154" endline="164">operator-</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a1c334590ab9a15e4d00d9c608057c90f" compoundref="slot__point_8h" startline="167" endline="174">operator++</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a174f33d60dc6888ef276114ec4b076d7" compoundref="slot__point_8h" startline="184" endline="188">operator+=</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a8564d551baa90a294378317006d924b6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::slot_point::slot_point</definition>
        <argsstring>()</argsstring>
        <name>slot_point</name>
        <briefdescription>
<para>Default constructor. Sets <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> in invalid state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="44" column="13" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a80a920ae01e59abba6c86ceb8ec3ce7b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::slot_point::slot_point</definition>
        <argsstring>(uint32_t numerology, uint32_t count)</argsstring>
        <name>slot_point</name>
        <param>
          <type>uint32_t</type>
          <declname>numerology</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Takes a numerology and total count value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="47" column="13" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="47" bodyend="51"/>
        <references refid="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" compoundref="slot__point_8h" startline="86" endline="86">numerology</references>
        <references refid="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" compoundref="slot__point_8h" startline="37">NOF_NUMEROLOGIES</references>
        <references refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a54e883bb86c4fa3f28e0bd5f69e1d37f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::slot_point::slot_point</definition>
        <argsstring>(uint32_t numerology, uint32_t sfn_val, uint32_t slot_radio_frame_idx_)</argsstring>
        <name>slot_point</name>
        <param>
          <type>uint32_t</type>
          <declname>numerology</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sfn_val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>slot_radio_frame_idx_</declname>
        </param>
        <briefdescription>
<para>Takes a numerology, SFN and slot index in radio frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="54" column="13" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="54" bodyend="63"/>
        <references refid="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" compoundref="slot__point_8h" startline="86" endline="86">numerology</references>
        <references refid="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" compoundref="slot__point_8h" startline="37">NOF_NUMEROLOGIES</references>
        <references refid="classsrsgnb_1_1slot__point_1a0f960d9b81fa720c2ea3110562a13907" compoundref="slot__point_8h" startline="40">NOF_SFNS</references>
        <references refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" compoundref="slot__point_8h" startline="102" endline="102">nof_slots_per_frame</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a6ce8d114bc09e094fc485c6d95620ff0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::slot_point::slot_point</definition>
        <argsstring>(uint32_t numerology, uint32_t sfn_val, uint32_t subframe_index_, uint32_t slot_subframe_index_)</argsstring>
        <name>slot_point</name>
        <param>
          <type>uint32_t</type>
          <declname>numerology</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sfn_val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>subframe_index_</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>slot_subframe_index_</declname>
        </param>
        <briefdescription>
<para>Takes a numerology, SFN, subframe index and slot index within subframe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="66" column="13" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="66" bodyend="77"/>
        <references refid="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" compoundref="slot__point_8h" startline="86" endline="86">numerology</references>
        <references refid="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" compoundref="slot__point_8h" startline="37">NOF_NUMEROLOGIES</references>
        <references refid="classsrsgnb_1_1slot__point_1a0f960d9b81fa720c2ea3110562a13907" compoundref="slot__point_8h" startline="40">NOF_SFNS</references>
        <references refid="namespacesrsgnb_1a5c4ba94fed0cbf9f0928dd5af3ce0b88" compoundref="slot__point_8h" startline="19">srsgnb::NOF_SUBFRAMES_PER_FRAME</references>
        <references refid="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" compoundref="slot__point_8h" startline="99" endline="99">nof_slots_per_subframe</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1ac6e35c03822d50f27a3f6439c388cf21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::slot_point::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Sets <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> to invalid state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="80" column="8" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="80" bodyend="80"/>
        <references refid="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" compoundref="slot__point_8h" startline="205">numerology_val</references>
        <references refid="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" compoundref="slot__point_8h" startline="37">NOF_NUMEROLOGIES</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1af9f81db7f0ecf822d8e53f6216b95b34" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
<para>Determines whether <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> was correctly initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="83" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="83" bodyend="83"/>
        <references refid="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" compoundref="slot__point_8h" startline="205">numerology_val</references>
        <references refid="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" compoundref="slot__point_8h" startline="37">NOF_NUMEROLOGIES</references>
        <referencedby refid="classsrsgnb_1_1downlink__processor__pool__impl_1af54c07f0e184835c10897ec6cab05d01" compoundref="downlink__processor__pool__impl_8cpp" startline="25" endline="31">srsgnb::downlink_processor_pool_impl::get_processor</referencedby>
        <referencedby refid="classsrsgnb_1_1uplink__processor__pool__impl_1ad4f2855c940aaaff048d6cc66c0965f9" compoundref="uplink__processor__pool__impl_8cpp" startline="25" endline="31">srsgnb::uplink_processor_pool_impl::get_processor</referencedby>
        <referencedby refid="structsrsgnb_1_1cell__resource__allocator_1aaabf70a4007c1e2983668e0351824d57" compoundref="resource__grid_8cpp" startline="220" endline="237">srsgnb::cell_resource_allocator::slot_indication</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::numerology</definition>
        <argsstring>() const</argsstring>
        <name>numerology</name>
        <briefdescription>
<para>Numerology index (0..4). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="86" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="86" bodyend="86"/>
        <references refid="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" compoundref="slot__point_8h" startline="205">numerology_val</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1a80a920ae01e59abba6c86ceb8ec3ce7b" compoundref="slot__point_8h" startline="47" endline="51">slot_point</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1aebda6f10282300bf4772658849f5d7c8" compoundref="slot__point_8h" startline="137" endline="145">operator&lt;</referencedby>
        <referencedby refid="namespacesrsgnb_1ac7af21fff7f536782c70d0eb0fd09b47" compoundref="slot__point_8h" startline="258" endline="268">srsgnb::set_slot_numerology</referencedby>
        <referencedby refid="classsrsgnb_1_1processor__pool__repository_1a4c5990aff2d60da9f733912128b700be" compoundref="processor__pool__helpers_8h" startline="38" endline="48">srsgnb::processor_pool_repository&lt; T &gt;::get_processor</referencedby>
        <referencedby refid="namespacesrsgnb_1a06984d7256480a44cd46842d6f5faedd" compoundref="cell__configuration_8cpp" startline="24" endline="46">srsgnb::slot_is_dl</referencedby>
        <referencedby refid="structsrsgnb_1_1cell__resource__allocator_1aaabf70a4007c1e2983668e0351824d57" compoundref="resource__grid_8cpp" startline="220" endline="237">srsgnb::cell_resource_allocator::slot_indication</referencedby>
        <referencedby refid="namespacesrsgnb_1a7b61af2239baf4702a09b33f3c499532" compoundref="ssb__scheduler_8cpp" startline="165" endline="209">srsgnb::schedule_ssb</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a3c10067548735ef432b9c9186f127b8e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::slot_index</definition>
        <argsstring>() const</argsstring>
        <name>slot_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slot index in radio frame. Value: SCS=15kHz: (0..9), SCS=30kHz: (0..19), SCS=60kHz: (0..39), SCS=120kHz: (0..79), SCS=240kHz: (0..159) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="90" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="90" bodyend="90"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" compoundref="slot__point_8h" startline="102" endline="102">nof_slots_per_frame</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1a91acc1c415ee87086fbba250f5ea5509" compoundref="slot__point_8h" startline="105" endline="105">subframe_index</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1mac__to__fapi__translator_1a80ba7a09b76c852ce89a1689107ef7c1" compoundref="mac__to__fapi__translator_8cpp" startline="120" endline="152">srsgnb::fapi_adaptor::mac_to_fapi_translator::on_new_downlink_scheduler_results</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1mac__to__fapi__translator_1a3c528fd905a14735515d278d292c7058" compoundref="mac__to__fapi__translator_8cpp" startline="154" endline="188">srsgnb::fapi_adaptor::mac_to_fapi_translator::on_new_downlink_data</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1mac__to__fapi__translator_1a402867ce9af3ed782271f03652767b0d" compoundref="mac__to__fapi__translator_8cpp" startline="190" endline="213">srsgnb::fapi_adaptor::mac_to_fapi_translator::on_new_uplink_scheduler_results</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1phy__to__fapi__results__event__translator_1aa91016ebe1746bce88cadb99d6d2af30" compoundref="phy__to__fapi__results__event__translator_8cpp" startline="41" endline="90">srsgnb::fapi_adaptor::phy_to_fapi_results_event_translator::on_new_prach_results</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1phy__to__fapi__time__event__translator_1aa39fe081968e4cc8d8d8b66c1d078c26" compoundref="phy__to__fapi__time__event__translator_8cpp" startline="40" endline="46">srsgnb::fapi_adaptor::phy_to_fapi_time_event_translator::on_tti_boundary</referencedby>
        <referencedby refid="classsrsgnb_1_1csi__rs__processor__impl_1affdb13875a9f5e03379ffa0987993681" compoundref="csi__rs__processor__impl_8cpp" startline="588" endline="616">srsgnb::csi_rs_processor_impl::generate_sequence</referencedby>
        <referencedby refid="classsrsgnb_1_1dmrs__pdcch__processor__impl_1a3258e494264fa593b34c4ddceab24ac5" compoundref="dmrs__pdcch__processor__impl_8cpp" startline="18" endline="24">srsgnb::dmrs_pdcch_processor_impl::c_init</referencedby>
        <referencedby refid="classsrsgnb_1_1dmrs__pdsch__processor__impl_1a1cc105e7a4d0123d7dc91a3b2d8997d7" compoundref="dmrs__pdsch__processor__impl_8cpp" startline="47" endline="69">srsgnb::dmrs_pdsch_processor_impl::sequence_generation</referencedby>
        <referencedby refid="classsrsgnb_1_1dmrs__pucch__processor__format2__impl_1a657ab3d994e577bf1a115d62ddf457e5" compoundref="dmrs__pucch__processor__format2__impl_8cpp" startline="17" endline="23">srsgnb::dmrs_pucch_processor_format2_impl::c_init</referencedby>
        <referencedby refid="classsrsgnb_1_1pucch__helper_1a5e2150ab9042afa57d513e3c31c54b71" compoundref="pucch__helper_8h" startline="66" endline="100">srsgnb::pucch_helper::get_alpha_index</referencedby>
        <referencedby refid="namespacesrsgnb_1a42a3cddf5672000e229f3c0cdc34f467" compoundref="ra__scheduler_8cpp" startline="37" endline="48">srsgnb::get_ra_rnti</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a5c6f761ef9a78dbfdb9b057463ddca01" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::sfn</definition>
        <argsstring>() const</argsstring>
        <name>sfn</name>
        <briefdescription>
<para>Radio Frame Number. Value: (0..1023). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="93" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="93" bodyend="93"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" compoundref="slot__point_8h" startline="102" endline="102">nof_slots_per_frame</references>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1mac__to__fapi__translator_1a80ba7a09b76c852ce89a1689107ef7c1" compoundref="mac__to__fapi__translator_8cpp" startline="120" endline="152">srsgnb::fapi_adaptor::mac_to_fapi_translator::on_new_downlink_scheduler_results</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1mac__to__fapi__translator_1a3c528fd905a14735515d278d292c7058" compoundref="mac__to__fapi__translator_8cpp" startline="154" endline="188">srsgnb::fapi_adaptor::mac_to_fapi_translator::on_new_downlink_data</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1mac__to__fapi__translator_1a402867ce9af3ed782271f03652767b0d" compoundref="mac__to__fapi__translator_8cpp" startline="190" endline="213">srsgnb::fapi_adaptor::mac_to_fapi_translator::on_new_uplink_scheduler_results</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1phy__to__fapi__results__event__translator_1aa91016ebe1746bce88cadb99d6d2af30" compoundref="phy__to__fapi__results__event__translator_8cpp" startline="41" endline="90">srsgnb::fapi_adaptor::phy_to_fapi_results_event_translator::on_new_prach_results</referencedby>
        <referencedby refid="classsrsgnb_1_1fapi__adaptor_1_1phy__to__fapi__time__event__translator_1aa39fe081968e4cc8d8d8b66c1d078c26" compoundref="phy__to__fapi__time__event__translator_8cpp" startline="40" endline="46">srsgnb::fapi_adaptor::phy_to_fapi_time_event_translator::on_tti_boundary</referencedby>
        <referencedby refid="classsrsgnb_1_1ssb__processor__impl_1a2c563b7416c71aeb7d08be55e0194726" compoundref="ssb__processor__impl_8cpp" startline="17" endline="95">srsgnb::ssb_processor_impl::process</referencedby>
        <referencedby refid="classsrsgnb_1_1prach__scheduler_1aada1f7c55c1c0f20a40cd9c64b08d2d0" compoundref="prach__scheduler_8cpp" startline="111" endline="135">srsgnb::prach_scheduler::run_slot</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::nof_slots_per_system_frame</definition>
        <argsstring>() const</argsstring>
        <name>nof_slots_per_system_frame</name>
        <briefdescription>
<para>Number of slots per system frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="96" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="96" bodyend="96"/>
        <references refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" compoundref="slot__point_8h" startline="102" endline="102">nof_slots_per_frame</references>
        <references refid="classsrsgnb_1_1slot__point_1a0f960d9b81fa720c2ea3110562a13907" compoundref="slot__point_8h" startline="40">NOF_SFNS</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1a80a920ae01e59abba6c86ceb8ec3ce7b" compoundref="slot__point_8h" startline="47" endline="51">slot_point</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1aebda6f10282300bf4772658849f5d7c8" compoundref="slot__point_8h" startline="137" endline="145">operator&lt;</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a332a3d76e2a5b58c22a47f4b2a8388ac" compoundref="slot__point_8h" startline="154" endline="164">operator-</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a1c334590ab9a15e4d00d9c608057c90f" compoundref="slot__point_8h" startline="167" endline="174">operator++</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a174f33d60dc6888ef276114ec4b076d7" compoundref="slot__point_8h" startline="184" endline="188">operator+=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::nof_slots_per_subframe</definition>
        <argsstring>() const</argsstring>
        <name>nof_slots_per_subframe</name>
        <briefdescription>
<para>Number of slots present in a subframe. Depends on numerology. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="99" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="99" bodyend="99"/>
        <references refid="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" compoundref="slot__point_8h" startline="205">numerology_val</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1a6ce8d114bc09e094fc485c6d95620ff0" compoundref="slot__point_8h" startline="66" endline="77">slot_point</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" compoundref="slot__point_8h" startline="102" endline="102">nof_slots_per_frame</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a91acc1c415ee87086fbba250f5ea5509" compoundref="slot__point_8h" startline="105" endline="105">subframe_index</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a418ab7186ebd2026e89a0a131738c2d6" compoundref="slot__point_8h" startline="122" endline="122">subframe_slot_index</referencedby>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1a454a1e0e99bd18d7bea1d709691952c9" compoundref="lower__phy__impl_8cpp" startline="238" endline="324">srsgnb::lower_phy_impl::lower_phy_impl</referencedby>
        <referencedby refid="classsrsgnb_1_1sib1__scheduler_1ab13df715de7b2f178fda642f3e1c74b8" compoundref="sib__scheduler_8cpp" startline="85" endline="123">srsgnb::sib1_scheduler::schedule_sib1</referencedby>
        <referencedby refid="namespacesrsgnb_1a7b61af2239baf4702a09b33f3c499532" compoundref="ssb__scheduler_8cpp" startline="165" endline="209">srsgnb::schedule_ssb</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::nof_slots_per_frame</definition>
        <argsstring>() const</argsstring>
        <name>nof_slots_per_frame</name>
        <briefdescription>
<para>Number of slots present in a frame. Depends on numerology. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="102" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="102" bodyend="102"/>
        <references refid="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" compoundref="slot__point_8h" startline="99" endline="99">nof_slots_per_subframe</references>
        <references refid="namespacesrsgnb_1a5c4ba94fed0cbf9f0928dd5af3ce0b88" compoundref="slot__point_8h" startline="19">srsgnb::NOF_SUBFRAMES_PER_FRAME</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1a54e883bb86c4fa3f28e0bd5f69e1d37f" compoundref="slot__point_8h" startline="54" endline="63">slot_point</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a3c10067548735ef432b9c9186f127b8e" compoundref="slot__point_8h" startline="90" endline="90">slot_index</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a5c6f761ef9a78dbfdb9b057463ddca01" compoundref="slot__point_8h" startline="93" endline="93">sfn</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</referencedby>
        <referencedby refid="classsrsgnb_1_1slot__point_1a5b63c3f4d9bcc873ea78874ec10b59e5" compoundref="slot__point_8h" startline="113" endline="113">nof_hrf_slots</referencedby>
        <referencedby refid="classsrsgnb_1_1pucch__helper_1a5e2150ab9042afa57d513e3c31c54b71" compoundref="pucch__helper_8h" startline="66" endline="100">srsgnb::pucch_helper::get_alpha_index</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a91acc1c415ee87086fbba250f5ea5509" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::subframe_index</definition>
        <argsstring>() const</argsstring>
        <name>subframe_index</name>
        <briefdescription>
<para>Subframe index in a radio frame. Value: (0..9). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="105" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="105" bodyend="105"/>
        <references refid="classsrsgnb_1_1slot__point_1a3c10067548735ef432b9c9186f127b8e" compoundref="slot__point_8h" startline="90" endline="90">slot_index</references>
        <references refid="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" compoundref="slot__point_8h" startline="99" endline="99">nof_slots_per_subframe</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1a85af7c5cfd24d2a8d4274b681014d400" compoundref="slot__point_8h" startline="116" endline="116">is_odd_hrf</referencedby>
        <referencedby refid="classsrsgnb_1_1prach__scheduler_1aada1f7c55c1c0f20a40cd9c64b08d2d0" compoundref="prach__scheduler_8cpp" startline="111" endline="135">srsgnb::prach_scheduler::run_slot</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a67e682f9eef29c87118c480734b87cb1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::system_slot</definition>
        <argsstring>() const</argsstring>
        <name>system_slot</name>
        <briefdescription>
<para>Conversion of <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> to system slot. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="108" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="108" bodyend="108"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <referencedby refid="classsrsgnb_1_1phy__error__adapter_1acb2a6c32707cf5ee9507f15286a4ff72" compoundref="phy__error__adapter_8h" startline="31" endline="38">srsgnb::phy_error_adapter::on_late_resource_grid</referencedby>
        <referencedby refid="classsrsgnb_1_1phy__error__adapter_1a64d44458b112eae5c0f874b2ea994755" compoundref="phy__error__adapter_8h" startline="41" endline="48">srsgnb::phy_error_adapter::on_prach_request_late</referencedby>
        <referencedby refid="classsrsgnb_1_1phy__error__adapter_1a75f7b4411e4103150d6c1ca237cceb69" compoundref="phy__error__adapter_8h" startline="51" endline="58">srsgnb::phy_error_adapter::on_prach_request_overflow</referencedby>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1a1d5d874aea09db976e4ef848247f233c" compoundref="lower__phy__impl_8cpp" startline="36" endline="98">srsgnb::lower_phy_impl::process_ul_symbol</referencedby>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1a69dd4e2ae333b13a69e085350c14b5f8" compoundref="lower__phy__impl_8cpp" startline="100" endline="155">srsgnb::lower_phy_impl::process_dl_symbol</referencedby>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1ae22e6ddb99e7a53d56c6d947e5380bdc" compoundref="lower__phy__impl_8cpp" startline="157" endline="212">srsgnb::lower_phy_impl::process_symbol</referencedby>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1aeca7e99b708a3979abde4b78e60ab1c8" compoundref="lower__phy__impl_8cpp" startline="230" endline="236">srsgnb::lower_phy_impl::handle_resource_grid</referencedby>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1a2cc6bae10dab8a700ce767d9b45d16bd" compoundref="lower__phy__impl_8cpp" startline="344" endline="348">srsgnb::lower_phy_impl::request_uplink_slot</referencedby>
        <referencedby refid="classsrsgnb_1_1resource__grid__pool__impl_1a9cbfee396785f6d1b4f774da6eccc263" compoundref="resource__grid__pool__impl_8cpp" startline="23" endline="32">srsgnb::resource_grid_pool_impl::get_resource_grid</referencedby>
        <referencedby refid="classsrsgnb_1_1processor__pool__repository_1a4c5990aff2d60da9f733912128b700be" compoundref="processor__pool__helpers_8h" startline="38" endline="48">srsgnb::processor_pool_repository&lt; T &gt;::get_processor</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a32a0dc503895789558060cb703682ed4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::to_uint</definition>
        <argsstring>() const</argsstring>
        <name>to_uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="109" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1aa83a9dfa7597935fb19a01b016dfce91" prot="public" static="no" constexpr="yes" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::slot_point::operator uint32_t</definition>
        <argsstring>() const</argsstring>
        <name>operator uint32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="110" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a5b63c3f4d9bcc873ea78874ec10b59e5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::nof_hrf_slots</definition>
        <argsstring>() const</argsstring>
        <name>nof_hrf_slots</name>
        <briefdescription>
<para>Get Half Radio Frame size in number of slots. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="113" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="113" bodyend="113"/>
        <references refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" compoundref="slot__point_8h" startline="102" endline="102">nof_slots_per_frame</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1ad91084c1f659a8e05fbd2a9fbf226d72" compoundref="slot__point_8h" startline="119" endline="119">hrf_slot_index</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a85af7c5cfd24d2a8d4274b681014d400" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::is_odd_hrf</definition>
        <argsstring>() const</argsstring>
        <name>is_odd_hrf</name>
        <briefdescription>
<para>Checks if slot is in second half of the radio frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="116" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="116" bodyend="116"/>
        <references refid="classsrsgnb_1_1slot__point_1a91acc1c415ee87086fbba250f5ea5509" compoundref="slot__point_8h" startline="105" endline="105">subframe_index</references>
        <references refid="namespacesrsgnb_1a5c4ba94fed0cbf9f0928dd5af3ce0b88" compoundref="slot__point_8h" startline="19">srsgnb::NOF_SUBFRAMES_PER_FRAME</references>
        <referencedby refid="classsrsgnb_1_1ssb__processor__impl_1a2c563b7416c71aeb7d08be55e0194726" compoundref="ssb__processor__impl_8cpp" startline="17" endline="95">srsgnb::ssb_processor_impl::process</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1ad91084c1f659a8e05fbd2a9fbf226d72" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::hrf_slot_index</definition>
        <argsstring>() const</argsstring>
        <name>hrf_slot_index</name>
        <briefdescription>
<para>Get MOD(slot index, Nof slots in Half Frame) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="119" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="119" bodyend="119"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1a5b63c3f4d9bcc873ea78874ec10b59e5" compoundref="slot__point_8h" startline="113" endline="113">nof_hrf_slots</references>
        <referencedby refid="classsrsgnb_1_1ssb__processor__impl_1a2c563b7416c71aeb7d08be55e0194726" compoundref="ssb__processor__impl_8cpp" startline="17" endline="95">srsgnb::ssb_processor_impl::process</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a418ab7186ebd2026e89a0a131738c2d6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::slot_point::subframe_slot_index</definition>
        <argsstring>() const</argsstring>
        <name>subframe_slot_index</name>
        <briefdescription>
<para>Get MOD(slot index, Nof slots in a subframe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="122" column="22" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="122" bodyend="122"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" compoundref="slot__point_8h" startline="99" endline="99">nof_slots_per_subframe</references>
        <referencedby refid="classsrsgnb_1_1lower__phy__impl_1ae22e6ddb99e7a53d56c6d947e5380bdc" compoundref="lower__phy__impl_8cpp" startline="157" endline="212">srsgnb::lower_phy_impl::process_symbol</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a6847a9d3bdf9fb951b65799aecc6faa8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::operator==</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Equality comparison of two <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> objects. Two slot points are equal if their numerology, SFN and slot index have the same value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="126" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="126" bodyend="129"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" compoundref="slot__point_8h" startline="205">numerology_val</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1acf751517a3df6c7715a4d06b00c21152" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::operator!=</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Inequality comparison of two <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="132" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1aebda6f10282300bf4772658849f5d7c8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::operator&lt;</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if &quot;lhs&quot; slot point is lower than &quot;rhs&quot;. It assumes that both &quot;lhs&quot; and &quot;rhs&quot; use the same numerology This comparison accounts for the wrap-around of both slot index and SFNs. The ambiguity range of the comparison is equal to half of the total number of slots in a hyperframe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="137" column="13" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="137" bodyend="145"/>
        <references refid="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" compoundref="slot__point_8h" startline="86" endline="86">numerology</references>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a33f79b2241ddb0b4d1f11a7cb11fc0b8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::operator&lt;=</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Other lower/higher comparisons that build on top of operator== and operator&lt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="148" column="13" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1afe40da2846c43549947399109adf2679" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::operator&gt;=</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="149" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a1a5add813725a3b1e76623893729de69" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::operator&gt;</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="150" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a332a3d76e2a5b58c22a47f4b2a8388ac" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespacesrsgnb_1aac2a9e8034b525270a087f4daf642e59" kindref="member">slot_difference</ref></type>
        <definition>constexpr slot_difference srsgnb::slot_point::operator-</definition>
        <argsstring>(const slot_point &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implements the subtraction of two slot points. <simplesect kind="return"><para>a signed integer that is positive if &quot;lhs&quot; is higher than &quot;rhs&quot;, zero if equal, and negative otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="154" column="29" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="154" bodyend="164"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a1c334590ab9a15e4d00d9c608057c90f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
        <definition>slot_point&amp; srsgnb::slot_point::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Increment <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref>. It accounts for slot index and SFN wrap-around. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="167" column="14" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="167" bodyend="174"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a50b5873eb177b7b868183176f8f22e39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
        <definition>slot_point srsgnb::slot_point::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="175" column="14" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="175" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a174f33d60dc6888ef276114ec4b076d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Unsigned</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_unsigned&lt; Unsigned &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
        <definition>slot_point&amp; srsgnb::slot_point::operator+=</definition>
        <argsstring>(Unsigned jump)</argsstring>
        <name>operator+=</name>
        <param>
          <type>Unsigned</type>
          <declname>jump</declname>
        </param>
        <briefdescription>
<para>Sum of <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> by an integer jump value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="184" column="14" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="184" bodyend="188"/>
        <references refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" compoundref="slot__point_8h" startline="208">count_val</references>
        <references refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" compoundref="slot__point_8h" startline="96" endline="96">nof_slots_per_system_frame</references>
        <referencedby refid="classsrsgnb_1_1slot__point_1afe02d3ca47407e024f673725dec56fbc" compoundref="slot__point_8h" startline="198" endline="198">operator-=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a1cb1adaac0ff566af2614e5b95a2e3ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
        <definition>slot_point&amp; srsgnb::slot_point::operator+=</definition>
        <argsstring>(int jump)</argsstring>
        <name>operator+=</name>
        <param>
          <type>int</type>
          <declname>jump</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="189" column="14" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="189" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1afe02d3ca47407e024f673725dec56fbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
        <definition>slot_point&amp; srsgnb::slot_point::operator-=</definition>
        <argsstring>(uint32_t jump)</argsstring>
        <name>operator-=</name>
        <param>
          <type>uint32_t</type>
          <declname>jump</declname>
        </param>
        <briefdescription>
<para>Subtraction of slot point by an integer jump value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="198" column="14" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="198" bodyend="198"/>
        <references refid="classsrsgnb_1_1slot__point_1a174f33d60dc6888ef276114ec4b076d7" compoundref="slot__point_8h" startline="184" endline="188">operator+=</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1ababb5426e8548455615606063f32be56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> &amp;</type>
        <definition>slot_point&amp; srsgnb::slot_point::operator-=</definition>
        <argsstring>(int jump)</argsstring>
        <name>operator-=</name>
        <param>
          <type>int</type>
          <declname>jump</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="199" column="14" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__point_1a1ca2d2b0cbea052c25dc063755207505" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::slot_point::is_in_interval</definition>
        <argsstring>(slot_point begin, slot_point end) const</argsstring>
        <name>is_in_interval</name>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Determines whether this <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> fits within provided slot point range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/ran/slot_point.h" line="202" column="18" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="202" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents the numerology, SFN and slot index of the current slot. It provides several functionalities compared to a simple integer type, namely:<itemizedlist>
<listitem><para>automatic wrap-around of SFN and slot_index on increment/decrement</para>
</listitem><listitem><para>comparison of slot_points accounts for wrap-around. For instance slot point with SFN=1023 and slot index=9 is lower than slot point with SFN=0 and slot index=0.</para>
</listitem><listitem><para>it provides several helper methods to convert slot point to SFN, slot_index and frame number</para>
</listitem><listitem><para>it can encode an invalid <ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref> state </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::slot_point</label>
        <link refid="classsrsgnb_1_1slot__point"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/ran/slot_point.h" line="35" column="1" bodyfile="include/srsgnb/ran/slot_point.h" bodystart="34" bodyend="209"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1slot__point_1ac6e35c03822d50f27a3f6439c388cf21" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a7fc9cdb77177caa1450a3e19d3284c86" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>count_val</name></member>
      <member refid="classsrsgnb_1_1slot__point_1ad91084c1f659a8e05fbd2a9fbf226d72" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>hrf_slot_index</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a1ca2d2b0cbea052c25dc063755207505" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>is_in_interval</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a85af7c5cfd24d2a8d4274b681014d400" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>is_odd_hrf</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a5b63c3f4d9bcc873ea78874ec10b59e5" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>nof_hrf_slots</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a6abbf76f9d713db25990ba66d27cb7e5" prot="private" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>NOF_NUMEROLOGIES</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a0f960d9b81fa720c2ea3110562a13907" prot="private" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>NOF_SFNS</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a774cfcee0b441d570bced7d62d526b46" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>nof_slots_per_frame</name></member>
      <member refid="classsrsgnb_1_1slot__point_1ad15b0688ae249ad97771acc2e199858e" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>nof_slots_per_subframe</name></member>
      <member refid="classsrsgnb_1_1slot__point_1ab6728a6263c3c1d6ee06944930805a57" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>nof_slots_per_system_frame</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a7a7cfffb183af6291f83ab1d12ac37d6" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>numerology</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a6f313a0127fbde1c03330bbdceda56a8" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>numerology_val</name></member>
      <member refid="classsrsgnb_1_1slot__point_1aa83a9dfa7597935fb19a01b016dfce91" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator uint32_t</name></member>
      <member refid="classsrsgnb_1_1slot__point_1acf751517a3df6c7715a4d06b00c21152" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a1c334590ab9a15e4d00d9c608057c90f" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator++</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a50b5873eb177b7b868183176f8f22e39" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator++</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a174f33d60dc6888ef276114ec4b076d7" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator+=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a1cb1adaac0ff566af2614e5b95a2e3ac" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator+=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a332a3d76e2a5b58c22a47f4b2a8388ac" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator-</name></member>
      <member refid="classsrsgnb_1_1slot__point_1afe02d3ca47407e024f673725dec56fbc" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator-=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1ababb5426e8548455615606063f32be56" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator-=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1aebda6f10282300bf4772658849f5d7c8" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator&lt;</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a33f79b2241ddb0b4d1f11a7cb11fc0b8" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator&lt;=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a6847a9d3bdf9fb951b65799aecc6faa8" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a1a5add813725a3b1e76623893729de69" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator&gt;</name></member>
      <member refid="classsrsgnb_1_1slot__point_1afe40da2846c43549947399109adf2679" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>operator&gt;=</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a5c6f761ef9a78dbfdb9b057463ddca01" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>sfn</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a3c10067548735ef432b9c9186f127b8e" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>slot_index</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a8564d551baa90a294378317006d924b6" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>slot_point</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a80a920ae01e59abba6c86ceb8ec3ce7b" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>slot_point</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a54e883bb86c4fa3f28e0bd5f69e1d37f" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>slot_point</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a6ce8d114bc09e094fc485c6d95620ff0" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>slot_point</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a91acc1c415ee87086fbba250f5ea5509" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>subframe_index</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a418ab7186ebd2026e89a0a131738c2d6" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>subframe_slot_index</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a67e682f9eef29c87118c480734b87cb1" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>system_slot</name></member>
      <member refid="classsrsgnb_1_1slot__point_1a32a0dc503895789558060cb703682ed4" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>to_uint</name></member>
      <member refid="classsrsgnb_1_1slot__point_1af9f81db7f0ecf822d8e53f6216b95b34" prot="public" virt="non-virtual"><scope>srsgnb::slot_point</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
