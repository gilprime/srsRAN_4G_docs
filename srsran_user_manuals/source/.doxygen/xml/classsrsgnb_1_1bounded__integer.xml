<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1bounded__integer" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::bounded_integer</compoundname>
    <includes refid="bounded__integer_8h" local="no">bounded_integer.h</includes>
    <templateparamlist>
      <param>
        <type>typename Integer</type>
      </param>
      <param>
        <type>Integer</type>
        <declname>MIN_VALUE</declname>
        <defname>MIN_VALUE</defname>
      </param>
      <param>
        <type>Integer</type>
        <declname>MAX_VALUE</declname>
        <defname>MAX_VALUE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1bounded__integer_1a5450f5fcacc89d63ef360de931a90b0a" prot="public" static="no">
        <type>Integer</type>
        <definition>using srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::value_type =  Integer</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="27" column="3" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1bounded__integer_1a2f6ea3b26bd654881c9c230fc223a592" prot="protected" static="no" mutable="no">
        <type>Integer</type>
        <definition>Integer srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="85" column="11" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a1f240cfb0af8a004e2c46edb92c8b361" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::bounded_integer</definition>
        <argsstring>()</argsstring>
        <name>bounded_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="29" column="13" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a4fb993ff5671c47baaf84755309b7633" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::bounded_integer</definition>
        <argsstring>(const bounded_integer &amp;) noexcept=default</argsstring>
        <name>bounded_integer</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="31" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a20490188ca026dcd8e48758cc6dfe51e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::bounded_integer</definition>
        <argsstring>(bounded_integer &amp;&amp;) noexcept=default</argsstring>
        <name>bounded_integer</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="33" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1ac1b4914efdc57e6c31d3fbaad288ee5b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_integral&lt; U &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::bounded_integer</definition>
        <argsstring>(U v)</argsstring>
        <name>bounded_integer</name>
        <param>
          <type>U</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="36" column="13" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1ac5702568d8f9aa736119f8bbc405873a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;</type>
        <definition>constexpr bounded_integer&amp; srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator=</definition>
        <argsstring>(const bounded_integer &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="41" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a05085eff4e1bb9ce7409bb95282e4dcd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;</type>
        <definition>constexpr bounded_integer&amp; srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator=</definition>
        <argsstring>(bounded_integer &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="43" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a645cc457bf442888cd6aabd86490bbf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_integral&lt; U &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref> &amp;</type>
        <definition>bounded_integer&amp; srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator=</definition>
        <argsstring>(U v)</argsstring>
        <name>operator=</name>
        <param>
          <type>U</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="46" column="19" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1ab792fb5e45a4d90b0e264b12759c5c4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
<para>Checks whether the value is within the defined boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="57" column="8" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="57" bodyend="57"/>
        <referencedby refid="namespacesrsgnb_1ae54949545c17d2fdbb763dbf097adffe" compoundref="ssb__mapping_8h" startline="103" endline="158">srsgnb::ssb_get_k_first</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a44e2cc329a951b92d02ef6afafc9c0c8" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator Integer</definition>
        <argsstring>() const</argsstring>
        <name>operator Integer</name>
        <briefdescription>
<para>Cast operator to primitive integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="60" column="12" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a4e1c6ee0cd7c7a8098738e4b845afda1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>Integer</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_unsigned&lt; U &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr Integer</type>
        <definition>constexpr Integer srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::to_uint</definition>
        <argsstring>() const</argsstring>
        <name>to_uint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="62" column="21" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a66441ccb07d792ad05d9c6adb9d68e16" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>Integer</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_signed&lt; U &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr Integer</type>
        <definition>constexpr Integer srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::to_int</definition>
        <argsstring>() const</argsstring>
        <name>to_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="67" column="21" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a54fb78763c947118611fc24a9b8a7875" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator==</definition>
        <argsstring>(bounded_integer other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="72" column="18" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a0cb0c9e4b13fd1590f004b0465b07559" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator!=</definition>
        <argsstring>(bounded_integer other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="73" column="18" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a54158ed2247a38b0af8490d57190623f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator&lt;</definition>
        <argsstring>(bounded_integer other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="74" column="13" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1aeea546e4feeccaeb23fbc9a384f6ec24" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator&lt;=</definition>
        <argsstring>(bounded_integer other) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="75" column="13" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1aa0a0042dae8fedd305ba8ec90d043e23" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator&gt;</definition>
        <argsstring>(bounded_integer other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="76" column="18" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1acd6ffb038c99016ad2b5f2517707703c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::operator&gt;=</definition>
        <argsstring>(bounded_integer other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1bounded__integer" kindref="compound">bounded_integer</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="77" column="18" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="77" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1abcd0500f76ae60cbfda05a4556aab6c9" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static Integer</type>
        <definition>constexpr static Integer srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::min</definition>
        <argsstring>()</argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="53" column="28" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1ab7bcbd372c7583cb7521b61f454d3c87" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr static Integer</type>
        <definition>constexpr static Integer srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::max</definition>
        <argsstring>()</argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="54" column="28" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="54" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsrsgnb_1_1bounded__integer_1a4c2d518e94baa44f2adf0f76d0a119f6" prot="protected" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;::assert_bounds</definition>
        <argsstring>(Integer v) const</argsstring>
        <name>assert_bounds</name>
        <param>
          <type>Integer</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/bounded_integer.h" line="80" column="18" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents an integer whose value is within the set of possible values: {MIN_VALUE, ..., MAX_VALUE}. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::bounded_integer&lt; Integer, MIN_VALUE, MAX_VALUE &gt;</label>
        <link refid="classsrsgnb_1_1bounded__integer"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/bounded_integer.h" line="22" column="1" bodyfile="include/srsgnb/adt/bounded_integer.h" bodystart="21" bodyend="86"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1bounded__integer_1a4c2d518e94baa44f2adf0f76d0a119f6" prot="protected" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>assert_bounds</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a1f240cfb0af8a004e2c46edb92c8b361" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>bounded_integer</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a4fb993ff5671c47baaf84755309b7633" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>bounded_integer</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a20490188ca026dcd8e48758cc6dfe51e" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>bounded_integer</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1ac1b4914efdc57e6c31d3fbaad288ee5b" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>bounded_integer</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1ab792fb5e45a4d90b0e264b12759c5c4c" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>is_valid</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1ab7bcbd372c7583cb7521b61f454d3c87" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>max</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1abcd0500f76ae60cbfda05a4556aab6c9" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>min</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a44e2cc329a951b92d02ef6afafc9c0c8" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator Integer</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a0cb0c9e4b13fd1590f004b0465b07559" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a54158ed2247a38b0af8490d57190623f" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator&lt;</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1aeea546e4feeccaeb23fbc9a384f6ec24" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator&lt;=</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1ac5702568d8f9aa736119f8bbc405873a" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a05085eff4e1bb9ce7409bb95282e4dcd" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a645cc457bf442888cd6aabd86490bbf6" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a54fb78763c947118611fc24a9b8a7875" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1aa0a0042dae8fedd305ba8ec90d043e23" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator&gt;</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1acd6ffb038c99016ad2b5f2517707703c" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>operator&gt;=</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a66441ccb07d792ad05d9c6adb9d68e16" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>to_int</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a4e1c6ee0cd7c7a8098738e4b845afda1" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>to_uint</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a2f6ea3b26bd654881c9c230fc223a592" prot="protected" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>val</name></member>
      <member refid="classsrsgnb_1_1bounded__integer_1a5450f5fcacc89d63ef360de931a90b0a" prot="public" virt="non-virtual"><scope>srsgnb::bounded_integer</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
