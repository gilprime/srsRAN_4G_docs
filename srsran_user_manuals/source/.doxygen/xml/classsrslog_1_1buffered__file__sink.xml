<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1buffered__file__sink" kind="class" language="C++" prot="public">
    <compoundname>srslog::buffered_file_sink</compoundname>
    <basecompoundref refid="classsrslog_1_1sink" prot="public" virt="non-virtual">srslog::sink</basecompoundref>
    <includes refid="buffered__file__sink_8h" local="no">buffered_file_sink.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrslog_1_1buffered__file__sink_1aaecef0da3732728c161954230acca9f4" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string srslog::buffered_file_sink::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="78" column="21" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1buffered__file__sink_1acb85a7ae4d27cc89b5e2f14daf6c31d5" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1file__utils_1_1file" kindref="compound">file_utils::file</ref></type>
        <definition>file_utils::file srslog::buffered_file_sink::handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="79" column="21" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1buffered__file__sink_1a6369b900c8bf8d28b1e3f316a0dad0b3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; srslog::buffered_file_sink::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="80" column="15" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1buffered__file__sink_1a654eab9cbef361688b945acc170e4c3b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool srslog::buffered_file_sink::is_file_created</definition>
        <argsstring></argsstring>
        <name>is_file_created</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="81" column="21" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1af18c3df745e774df167994bc5732d1d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::buffered_file_sink::buffered_file_sink</definition>
        <argsstring>(std::string filename, std::size_t capacity, std::unique_ptr&lt; log_formatter &gt; f)</argsstring>
        <name>buffered_file_sink</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">log_formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="23" column="3" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1a1b81df52a98e9aa6ede61d53b924d1ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::buffered_file_sink::~buffered_file_sink</definition>
        <argsstring>() override</argsstring>
        <name>~buffered_file_sink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="29" column="3" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1abb5d20cffabffe94a8f713ca3d665f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::buffered_file_sink::buffered_file_sink</definition>
        <argsstring>(const buffered_file_sink &amp;other)=delete</argsstring>
        <name>buffered_file_sink</name>
        <param>
          <type>const <ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1ad28816e636da263557def174e159f02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref> &amp;</type>
        <definition>buffered_file_sink&amp; srslog::buffered_file_sink::operator=</definition>
        <argsstring>(const buffered_file_sink &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="32" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::buffered_file_sink::write</definition>
        <argsstring>(detail::memory_buffer input_buffer) override</argsstring>
        <name>write</name>
        <reimplements refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">write</reimplements>
        <param>
          <type><ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">detail::memory_buffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Writes the provided memory buffer into the sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="34" column="24" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="34" bodyend="51"/>
        <references refid="classsrslog_1_1file__utils_1_1file_1ac104918e45f47b7372eab90820b17110" compoundref="file__utils_8h" startline="89" endline="99">srslog::file_utils::file::create</references>
        <references refid="classsrslog_1_1buffered__file__sink_1ace90386a063cfb7ea60543c9bfc6f0ca" compoundref="buffered__file__sink_8h" startline="64" endline="64">has_room_for</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" compoundref="memory__buffer_8h" startline="41" endline="41">srslog::detail::memory_buffer::size</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1af17a95879174621507450d90c61765e5" compoundref="memory__buffer_8h" startline="35" endline="35">srslog::detail::memory_buffer::begin</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a8e893e88152fa1d6044db630f8d368ea" compoundref="memory__buffer_8h" startline="38" endline="38">srslog::detail::memory_buffer::end</references>
        <references refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" compoundref="buffered__file__sink_8h" startline="67" endline="75">flush_buffer</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1adacf6406627e1915a4cc47a1d3958da4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::buffered_file_sink::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">flush</reimplements>
        <briefdescription>
<para>Flushes any buffered contents to the backing store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="53" column="24" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="53" bodyend="59"/>
        <references refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" compoundref="buffered__file__sink_8h" startline="67" endline="75">flush_buffer</references>
        <references refid="classsrslog_1_1file__utils_1_1file_1a7cde6bc69c56d58f1015345451ba415e" compoundref="file__utils_8h" startline="115" endline="124">srslog::file_utils::file::flush</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1ace90386a063cfb7ea60543c9bfc6f0ca" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srslog::buffered_file_sink::has_room_for</definition>
        <argsstring>(std::size_t s) const</argsstring>
        <name>has_room_for</name>
        <param>
          <type>std::size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the internal buffer has room for the specified input size, otherwise returns false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="64" column="8" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="64" bodyend="64"/>
        <referencedby refid="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" compoundref="buffered__file__sink_8h" startline="34" endline="51">write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::buffered_file_sink::flush_buffer</definition>
        <argsstring>()</argsstring>
        <name>flush_buffer</name>
        <briefdescription>
<para>Flushes the buffer contents into the file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/buffered_file_sink.h" line="67" column="24" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="67" bodyend="75"/>
        <references refid="classsrslog_1_1file__utils_1_1file_1ad07253657cab84fb7e9daf133eca55ad" compoundref="file__utils_8h" startline="103" endline="112">srslog::file_utils::file::write</references>
        <referencedby refid="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" compoundref="buffered__file__sink_8h" startline="34" endline="51">write</referencedby>
        <referencedby refid="classsrslog_1_1buffered__file__sink_1adacf6406627e1915a4cc47a1d3958da4" compoundref="buffered__file__sink_8h" startline="53" endline="59">flush</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is a wrapper of a file handle that buffers the input data into an internal buffer and writes its contents to the file once the buffer is full or in object destruction. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srslog::buffered_file_sink</label>
        <link refid="classsrslog_1_1buffered__file__sink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srslog::buffered_file_sink</label>
        <link refid="classsrslog_1_1buffered__file__sink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-handler</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srslog::file_utils::file</label>
        <link refid="classsrslog_1_1file__utils_1_1file"/>
      </node>
    </collaborationgraph>
    <location file="lib/srslog/sinks/buffered_file_sink.h" line="21" column="1" bodyfile="lib/srslog/sinks/buffered_file_sink.h" bodystart="20" bodyend="82"/>
    <listofallmembers>
      <member refid="classsrslog_1_1buffered__file__sink_1a6369b900c8bf8d28b1e3f316a0dad0b3" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>buffer</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1af18c3df745e774df167994bc5732d1d5" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>buffered_file_sink</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1abb5d20cffabffe94a8f713ca3d665f13" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>buffered_file_sink</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1aaecef0da3732728c161954230acca9f4" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>filename</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1adacf6406627e1915a4cc47a1d3958da4" prot="public" virt="virtual"><scope>srslog::buffered_file_sink</scope><name>flush</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>flush_buffer</name></member>
      <member refid="classsrslog_1_1sink_1a3fe50dcff14510123286afa7885701a1" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>formatter</name></member>
      <member refid="classsrslog_1_1sink_1afefc81cbae7348e62570771e3d0f9ead" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1sink_1a1d6a623fb8292a96234d98f71fff18f2" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1acb85a7ae4d27cc89b5e2f14daf6c31d5" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>handler</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1ace90386a063cfb7ea60543c9bfc6f0ca" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>has_room_for</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1a654eab9cbef361688b945acc170e4c3b" prot="private" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>is_file_created</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1ad28816e636da263557def174e159f02a" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>operator=</name></member>
      <member refid="classsrslog_1_1sink_1a67b8e754a3c8f4e1668b7d9305fdbb58" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>sink</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" prot="public" virt="virtual"><scope>srslog::buffered_file_sink</scope><name>write</name></member>
      <member refid="classsrslog_1_1buffered__file__sink_1a1b81df52a98e9aa6ede61d53b924d1ff" prot="public" virt="non-virtual"><scope>srslog::buffered_file_sink</scope><name>~buffered_file_sink</name></member>
      <member refid="classsrslog_1_1sink_1a148d2b74c00249a71fa3bbf581dd22e5" prot="public" virt="virtual"><scope>srslog::buffered_file_sink</scope><name>~sink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
