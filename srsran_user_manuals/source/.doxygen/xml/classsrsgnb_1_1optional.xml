<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1optional" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::optional</compoundname>
    <includes refid="optional_8h" local="no">optional.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1optional_1a14a7f7a47603d67d048a41769d33829c" prot="public" static="no">
        <type>T</type>
        <definition>using srsgnb::optional&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="25" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1optional_1a051e1bf13c0e68911f4ab13d6ae33ade" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool srsgnb::optional&lt; T &gt;::has_val_</definition>
        <argsstring></argsstring>
        <name>has_val_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="106" column="8" bodyfile="include/srsgnb/adt/optional.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1optional_1a52fa80c85e49acfacff62f2ec9938c70" prot="private" static="no" mutable="no">
        <type>union srsgnb::optional::@5</type>
        <definition>union srsgnb::optional::@5 srsgnb::optional&lt; T &gt;::@6</definition>
        <argsstring></argsstring>
        <name>@6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="110" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1optional_1a1cf52f4288cd56bb9152d8e4442d769a" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char srsgnb::optional&lt; T &gt;::empty</definition>
        <argsstring></argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="108" column="29" bodyfile="include/srsgnb/adt/optional.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1optional_1a30cd73ef150986b87fa58876680bd2d4" prot="public" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1detail_1_1type__storage" kindref="compound">detail::type_storage</ref>&lt; T &gt;</type>
        <definition>detail::type_storage&lt;T&gt; srsgnb::optional&lt; T &gt;::storage</definition>
        <argsstring></argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="109" column="26" bodyfile="include/srsgnb/adt/optional.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a73dc76515a7162de6a67ae16d1a57035" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::optional</definition>
        <argsstring>() noexcept</argsstring>
        <name>optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="27" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a1d73c66cd0236f14d9eb296be61883b8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::optional</definition>
        <argsstring>(const T &amp;t) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</argsstring>
        <name>optional</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="28" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a19da4d38618c30f02e743d879de74994" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::optional</definition>
        <argsstring>(T &amp;&amp;t) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</argsstring>
        <name>optional</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="29" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1af9b00e67c69c61a8b30b45c8aba0a951" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::optional</definition>
        <argsstring>(const optional&lt; T &gt; &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</argsstring>
        <name>optional</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="33" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1ae2126a656a2c757dfeef6345289cb4d3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::optional</definition>
        <argsstring>(optional&lt; T &gt; &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="40" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a2080615983d16d6e953bec6aca58c43d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; srsgnb::optional&lt; T &gt;::operator=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;other) noexcept(std::is_nothrow_copy_assignable&lt; T &gt;::value)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="46" column="12" bodyfile="include/srsgnb/adt/optional.h" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a02a355b4f9eb5bd43c59381e623397a6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; srsgnb::optional&lt; T &gt;::operator=</definition>
        <argsstring>(optional&lt; T &gt; &amp;&amp;other) noexcept(std::is_nothrow_move_assignable&lt; T &gt;::value)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="55" column="12" bodyfile="include/srsgnb/adt/optional.h" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a6f12eae03605a005f6d02e224980aa46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::~optional</definition>
        <argsstring>()</argsstring>
        <name>~optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="61" column="3" bodyfile="include/srsgnb/adt/optional.h" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1abb90b89125ae51d50e038cf418fb9063" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::optional&lt; T &gt;::has_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="68" column="12" bodyfile="include/srsgnb/adt/optional.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a459c62ec5eecfd0426cad856ce89f50e" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::optional&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="69" column="12" bodyfile="include/srsgnb/adt/optional.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a126e8f9bd1696520c3909281cf914ebf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* srsgnb::optional&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="71" column="11" bodyfile="include/srsgnb/adt/optional.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1af9b60fa8f0c40215221a59fd155c8dfd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* srsgnb::optional&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="72" column="11" bodyfile="include/srsgnb/adt/optional.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a95f98d18222ce6fc98d88bf62d9f71b0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::optional&lt; T &gt;::operator*</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="73" column="11" bodyfile="include/srsgnb/adt/optional.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a816cae1713f31d55e591baa0463f66ef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::optional&lt; T &gt;::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="74" column="11" bodyfile="include/srsgnb/adt/optional.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a382e78af2bede0cfadf34a5aabb2cc97" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::optional&lt; T &gt;::value</definition>
        <argsstring>() noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="75" column="11" bodyfile="include/srsgnb/adt/optional.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a16e5aa3ef224c4b0c8e1a0f2bd2986d5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::optional&lt; T &gt;::value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="80" column="11" bodyfile="include/srsgnb/adt/optional.h" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1a56b737c2a9c73b61fffb40374e613108" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void srsgnb::optional&lt; T &gt;::emplace</definition>
        <argsstring>(Args &amp;&amp;... args) noexcept(std::is_nothrow_constructible&lt; T, Args &amp;&amp;... &gt;::value)</argsstring>
        <name>emplace</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="87" column="8" bodyfile="include/srsgnb/adt/optional.h" bodystart="87" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1optional_1aa158361c2a58b3c2ff57909178dec5a8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::optional&lt; T &gt;::reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/optional.h" line="97" column="8" bodyfile="include/srsgnb/adt/optional.h" bodystart="97" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wrapper class that represents an optional field of type T. In case has_value()==true, the object of type T has been constructed in the embedded buffer. The class handles the object safe construction, destruction, move, copy <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of stored object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>srsgnb::detail::type_storage&lt; T &gt;</label>
        <link refid="structsrsgnb_1_1detail_1_1type__storage"/>
      </node>
      <node id="1">
        <label>srsgnb::optional&lt; T &gt;</label>
        <link refid="classsrsgnb_1_1optional"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+storage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/optional.h" line="23" column="1" bodyfile="include/srsgnb/adt/optional.h" bodystart="22" bodyend="111"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1optional_1a56b737c2a9c73b61fffb40374e613108" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>emplace</name></member>
      <member refid="classsrsgnb_1_1optional_1a1cf52f4288cd56bb9152d8e4442d769a" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1optional_1a051e1bf13c0e68911f4ab13d6ae33ade" prot="private" virt="non-virtual"><scope>srsgnb::optional</scope><name>has_val_</name></member>
      <member refid="classsrsgnb_1_1optional_1abb90b89125ae51d50e038cf418fb9063" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>has_value</name></member>
      <member refid="classsrsgnb_1_1optional_1a459c62ec5eecfd0426cad856ce89f50e" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator bool</name></member>
      <member refid="classsrsgnb_1_1optional_1a95f98d18222ce6fc98d88bf62d9f71b0" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator*</name></member>
      <member refid="classsrsgnb_1_1optional_1a816cae1713f31d55e591baa0463f66ef" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator*</name></member>
      <member refid="classsrsgnb_1_1optional_1a126e8f9bd1696520c3909281cf914ebf" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator-&gt;</name></member>
      <member refid="classsrsgnb_1_1optional_1af9b60fa8f0c40215221a59fd155c8dfd" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator-&gt;</name></member>
      <member refid="classsrsgnb_1_1optional_1a2080615983d16d6e953bec6aca58c43d" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1optional_1a02a355b4f9eb5bd43c59381e623397a6" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1optional_1a73dc76515a7162de6a67ae16d1a57035" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>optional</name></member>
      <member refid="classsrsgnb_1_1optional_1a1d73c66cd0236f14d9eb296be61883b8" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>optional</name></member>
      <member refid="classsrsgnb_1_1optional_1a19da4d38618c30f02e743d879de74994" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>optional</name></member>
      <member refid="classsrsgnb_1_1optional_1af9b00e67c69c61a8b30b45c8aba0a951" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>optional</name></member>
      <member refid="classsrsgnb_1_1optional_1ae2126a656a2c757dfeef6345289cb4d3" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>optional</name></member>
      <member refid="classsrsgnb_1_1optional_1aa158361c2a58b3c2ff57909178dec5a8" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>reset</name></member>
      <member refid="classsrsgnb_1_1optional_1a30cd73ef150986b87fa58876680bd2d4" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>storage</name></member>
      <member refid="classsrsgnb_1_1optional_1a382e78af2bede0cfadf34a5aabb2cc97" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>value</name></member>
      <member refid="classsrsgnb_1_1optional_1a16e5aa3ef224c4b0c8e1a0f2bd2986d5" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>value</name></member>
      <member refid="classsrsgnb_1_1optional_1a14a7f7a47603d67d048a41769d33829c" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>value_type</name></member>
      <member refid="classsrsgnb_1_1optional_1a6f12eae03605a005f6d02e224980aa46" prot="public" virt="non-virtual"><scope>srsgnb::optional</scope><name>~optional</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
