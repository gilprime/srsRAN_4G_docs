<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bounded__bitset_8h" kind="file" language="C++">
    <compoundname>bounded_bitset.h</compoundname>
    <includes refid="format_8h" local="yes">srsgnb/srslog/bundled/fmt/format.h</includes>
    <includes refid="math__utils_8h" local="yes">srsgnb/support/math_utils.h</includes>
    <includes refid="srsgnb__assert_8h" local="yes">srsgnb/support/srsgnb_assert.h</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">string</includes>
    <includedby refid="include_2srsgnb_2mac_2cell__configuration_8h" local="yes">include/srsgnb/mac/cell_configuration.h</includedby>
    <includedby refid="channel__estimation_8h" local="yes">include/srsgnb/phy/upper/channel_estimation.h</includedby>
    <includedby refid="pdcch__modulator_8h" local="yes">include/srsgnb/phy/upper/channel_processors/pdcch_modulator.h</includedby>
    <includedby refid="pdcch__processor_8h" local="yes">include/srsgnb/phy/upper/channel_processors/pdcch_processor.h</includedby>
    <includedby refid="port__channel__estimator_8h" local="yes">include/srsgnb/phy/upper/port_channel_estimator.h</includedby>
    <includedby refid="rb__allocation_8h" local="yes">include/srsgnb/phy/upper/rb_allocation.h</includedby>
    <includedby refid="re__pattern_8h" local="yes">include/srsgnb/phy/upper/re_pattern.h</includedby>
    <includedby refid="dmrs__pdcch__processor_8h" local="yes">include/srsgnb/phy/upper/signal_processors/dmrs_pdcch_processor.h</includedby>
    <includedby refid="cce__to__prb__mapping_8h" local="yes">include/srsgnb/ran/pdcch/cce_to_prb_mapping.h</includedby>
    <includedby refid="coreset_8h" local="yes">include/srsgnb/ran/pdcch/coreset.h</includedby>
    <includedby refid="dci__packing_8h" local="yes">include/srsgnb/ran/pdcch/dci_packing.h</includedby>
    <includedby refid="dmrs_8h" local="yes">include/srsgnb/scheduler/dmrs.h</includedby>
    <includedby refid="resource__block__group_8h" local="yes">include/srsgnb/scheduler/resource_block_group.h</includedby>
    <includedby refid="prb__grant_8h" local="yes">include/srsgnb/scheduler/prb_grant.h</includedby>
    <includedby refid="scheduler__feedback__handler_8h" local="yes">include/srsgnb/scheduler/scheduler_feedback_handler.h</includedby>
    <includedby refid="unique__thread_8h" local="yes">include/srsgnb/support/unique_thread.h</includedby>
    <includedby refid="resource__grid__helpers_8h" local="yes">lib/phy/upper/resource_grid_helpers.h</includedby>
    <includedby refid="dmrs__helper_8h" local="yes">lib/phy/upper/signal_processors/dmrs_helper.h</includedby>
    <includedby refid="scheduler__prb_8h" local="yes">lib/scheduler/cell/scheduler_prb.h</includedby>
    <incdepgraph>
      <node id="43">
        <label>atomic</label>
      </node>
      <node id="1">
        <label>include/srsgnb/adt/bounded_bitset.h</label>
        <link refid="bounded__bitset_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="7">
        <label>limits</label>
      </node>
      <node id="15">
        <label>iterator</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="42">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="22">
        <label>srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>pthread.h</label>
      </node>
      <node id="20">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstdio</label>
      </node>
      <node id="41">
        <label>tuple</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
      <node id="32">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>array</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cerrno</label>
      </node>
      <node id="40">
        <label>cstddef</label>
      </node>
      <node id="31">
        <label>chrono</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
      <node id="21">
        <label>complex</label>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
      <node id="44">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="91">
        <label>include/srsgnb/fapi_adaptor/phy/phy_fapi_adaptor_factory.h</label>
        <link refid="phy__fapi__adaptor__factory_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>lib/mac/mac_ctrl/srs_sched_config_adapter.h</label>
        <link refid="srs__sched__config__adapter_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>lib/phy/upper/signal_processors/dmrs_pdsch_processor_impl.h</label>
        <link refid="dmrs__pdsch__processor__impl_8h_source"/>
      </node>
      <node id="1">
        <label>include/srsgnb/adt/bounded_bitset.h</label>
        <link refid="bounded__bitset_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>include/srsgnb/scheduler/scheduler_factory.h</label>
        <link refid="scheduler__factory_8h_source"/>
      </node>
      <node id="97">
        <label>include/srsgnb/du/du_cell_config_validation.h</label>
        <link refid="du__cell__config__validation_8h_source"/>
      </node>
      <node id="57">
        <label>include/srsgnb/phy/upper/upper_phy_factories.h</label>
        <link refid="upper__phy__factories_8h_source"/>
      </node>
      <node id="45">
        <label>lib/phy/upper/signal_processors/dmrs_pusch_estimator_impl.h</label>
        <link refid="dmrs__pusch__estimator__impl_8h"/>
      </node>
      <node id="11">
        <label>lib/du_manager/procedures/ue_creation_procedure.h</label>
        <link refid="du__manager_2procedures_2ue__creation__procedure_8h_source"/>
      </node>
      <node id="8">
        <label>lib/du_high/du_high.h</label>
        <link refid="du__high_8h_source"/>
      </node>
      <node id="77">
        <label>include/srsgnb/ran/pdcch/cce_to_prb_mapping.h</label>
        <link refid="cce__to__prb__mapping_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>lib/phy/upper/signal_processors/dmrs_helper.h</label>
        <link refid="dmrs__helper_8h_source"/>
      </node>
      <node id="24">
        <label>lib/mac/mac_dl/mac_dl_processor.h</label>
        <link refid="mac__dl__processor_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>lib/scheduler/ue_scheduling/ue_scheduler_impl.h</label>
        <link refid="ue__scheduler__impl_8h_source"/>
      </node>
      <node id="39">
        <label>include/srsgnb/phy/upper/channel_processors/channel_processor_factories.h</label>
        <link refid="channel__processor__factories_8h_source"/>
      </node>
      <node id="149">
        <label>lib/phy/upper/resource_grid_helpers.h</label>
        <link refid="resource__grid__helpers_8h_source"/>
      </node>
      <node id="7">
        <label>lib/du_high/adapters.h</label>
        <link refid="adapters_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>include/srsgnb/du/du_cell_config_helpers.h</label>
        <link refid="du__cell__config__helpers_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>include/srsgnb/phy/upper/signal_processors/signal_processor_factories.h</label>
        <link refid="signal__processor__factories_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>lib/du_manager/du_manager_interfaces.h</label>
        <link refid="du__manager__interfaces_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>lib/scheduler/cell/scheduler_prb.h</label>
        <link refid="scheduler__prb_8h_source"/>
      </node>
      <node id="52">
        <label>lib/phy/upper/channel_processors/pdcch_modulator_impl.h</label>
        <link refid="pdcch__modulator__impl_8h_source"/>
      </node>
      <node id="112">
        <label>lib/scheduler/common_scheduling/sib_scheduler.h</label>
        <link refid="sib__scheduler_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>include/srsgnb/support/unique_thread.h</label>
        <link refid="unique__thread_8h_source"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>include/srsgnb/du_high/du_high_configuration.h</label>
        <link refid="du__high__configuration_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>include/srsgnb/du/du_cell_config.h</label>
        <link refid="du__cell__config_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>lib/scheduler/support/rb_find_algorithm.h</label>
        <link refid="rb__find__algorithm_8h_source"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>include/srsgnb/phy/upper/channel_estimation.h</label>
        <link refid="channel__estimation_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>lib/scheduler/support/pdsch/pdsch_default_time_allocation.h</label>
        <link refid="pdsch__default__time__allocation_8h_source"/>
      </node>
      <node id="127">
        <label>include/srsgnb/scheduler/scheduler_slot_handler.h</label>
        <link refid="scheduler__slot__handler_8h_source"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>include/srsgnb/fapi_adaptor/mac/messages/pdsch.h</label>
        <link refid="mac_2messages_2pdsch_8h_source"/>
      </node>
      <node id="87">
        <label>include/srsgnb/fapi/message_validators.h</label>
        <link refid="message__validators_8h_source"/>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>lib/fapi/validators/dl_pdcch_pdu.h</label>
        <link refid="dl__pdcch__pdu_8h_source"/>
      </node>
      <node id="28">
        <label>lib/mac/mac_config_interfaces.h</label>
        <link refid="mac__config__interfaces_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>include/srsgnb/scheduler/scheduler_configurator.h</label>
        <link refid="scheduler__configurator_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/srsgnb/mac/mac_configuration_helpers.h</label>
        <link refid="mac__configuration__helpers_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>lib/scheduler/cell/resource_grid.h</label>
        <link refid="lib_2scheduler_2cell_2resource__grid_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>include/srsgnb/scheduler/dmrs.h</label>
        <link refid="dmrs_8h_source"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>lib/fapi_adaptor/phy/phy_fapi_adaptor_impl.h</label>
        <link refid="phy__fapi__adaptor__impl_8h_source"/>
      </node>
      <node id="76">
        <label>lib/phy/upper/signal_processors/dmrs_pdcch_processor_impl.h</label>
        <link refid="dmrs__pdcch__processor__impl_8h_source"/>
      </node>
      <node id="128">
        <label>include/srsgnb/mac/mac_cell_result.h</label>
        <link refid="mac__cell__result_8h_source"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>lib/scheduler/pdcch_scheduling/pdcch_scheduler.h</label>
        <link refid="pdcch__scheduler_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>lib/du_manager/converters/ssb_coreset0_freq_pos_generator.h</label>
        <link refid="ssb__coreset0__freq__pos__generator_8h_source"/>
      </node>
      <node id="67">
        <label>lib/fapi_adaptor/phy/fapi_to_phy_translator.h</label>
        <link refid="fapi__to__phy__translator_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>lib/scheduler/ue_scheduling/harq_process.h</label>
        <link refid="harq__process_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>include/srsgnb/phy/upper/equalization/channel_equalizer.h</label>
        <link refid="channel__equalizer_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>include/srsgnb/phy/upper/rb_allocation.h</label>
        <link refid="rb__allocation_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>include/srsgnb/phy/upper/port_channel_estimator.h</label>
        <link refid="port__channel__estimator_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>include/srsgnb/fapi/message_builders.h</label>
        <link refid="message__builders_8h_source"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>lib/mac/mac_ul/ul_bsr.h</label>
        <link refid="ul__bsr_8h_source"/>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>lib/phy/upper/channel_processors/pusch_processor_impl.h</label>
        <link refid="pusch__processor__impl_8h_source"/>
      </node>
      <node id="123">
        <label>lib/scheduler/cell/cell_configuration.h</label>
        <link refid="lib_2scheduler_2cell_2cell__configuration_8h_source"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>include/srsgnb/phy/upper/channel_processors/pusch_processor.h</label>
        <link refid="pusch__processor_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pusch_estimator.h</label>
        <link refid="dmrs__pusch__estimator_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>lib/mac/mac_ul/mac_ul_ue_manager.h</label>
        <link refid="mac__ul__ue__manager_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>lib/phy/upper/channel_processors/pusch_demodulator_impl.h</label>
        <link refid="pusch__demodulator__impl_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>lib/fapi/validators/helpers.h</label>
        <link refid="helpers_8h_source"/>
      </node>
      <node id="140">
        <label>include/srsgnb/scheduler/prb_grant.h</label>
        <link refid="prb__grant_8h_source"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/srsgnb/mac/mac_factory.h</label>
        <link refid="mac__factory_8h_source"/>
      </node>
      <node id="63">
        <label>lib/phy/upper/channel_processors/pdsch_modulator_impl.h</label>
        <link refid="pdsch__modulator__impl_8h_source"/>
      </node>
      <node id="36">
        <label>lib/mac/mac_dl/ssb_assembler.h</label>
        <link refid="ssb__assembler_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>lib/mac/mac_ul/mac_ul_sch_pdu.h</label>
        <link refid="mac__ul__sch__pdu_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>include/srsgnb/ran/pdcch/coreset.h</label>
        <link refid="coreset_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>include/srsgnb/fapi_adaptor/phy/messages/pdsch.h</label>
        <link refid="phy_2messages_2pdsch_8h_source"/>
      </node>
      <node id="129">
        <label>lib/fapi_adaptor/mac/mac_to_fapi_translator.h</label>
        <link refid="mac__to__fapi__translator_8h_source"/>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>include/srsgnb/scheduler/mac_scheduler.h</label>
        <link refid="mac__scheduler_8h_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>include/srsgnb/fapi_adaptor/mac/messages/pdcch.h</label>
        <link refid="mac_2messages_2pdcch_8h_source"/>
      </node>
      <node id="32">
        <label>lib/mac/rach_handler.h</label>
        <link refid="rach__handler_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>lib/scheduler/common_scheduling/ssb_scheduler.h</label>
        <link refid="ssb__scheduler_8h_source"/>
      </node>
      <node id="42">
        <label>lib/phy/upper/channel_processors/pusch_demodulator_impl.cpp</label>
        <link refid="pusch__demodulator__impl_8cpp"/>
      </node>
      <node id="17">
        <label>lib/mac/mac_config.h</label>
        <link refid="mac__config_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>lib/mac/mac_ctrl/mac_scheduler_configurator.h</label>
        <link refid="mac__scheduler__configurator_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>include/srsgnb/ran/pdcch/dci_packing.h</label>
        <link refid="dci__packing_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lib/du_manager/du_manager_impl.h</label>
        <link refid="du__manager__impl_8h_source"/>
      </node>
      <node id="120">
        <label>lib/scheduler/ue_scheduling/ue.h</label>
        <link refid="ue_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>lib/mac/mac_dl/sib_pdu_assembler.h</label>
        <link refid="sib__pdu__assembler_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>lib/phy/upper/downlink_processor_single_executor_impl.h</label>
        <link refid="downlink__processor__single__executor__impl_8h_source"/>
      </node>
      <node id="122">
        <label>lib/scheduler/ue_scheduling/ue_event_manager.h</label>
        <link refid="ue__event__manager_8h_source"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>include/srsgnb/fapi/validator_report.h</label>
        <link refid="validator__report_8h_source"/>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>include/srsgnb/phy/upper/channel_processors/pusch_demodulator.h</label>
        <link refid="pusch__demodulator_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/srsgnb/du_manager/du_manager_factory.h</label>
        <link refid="du__manager__factory_8h_source"/>
      </node>
      <node id="12">
        <label>lib/du_manager/du_cell_manager.h</label>
        <link refid="du__cell__manager_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>lib/du_manager/procedures/ue_deletion_procedure.h</label>
        <link refid="ue__deletion__procedure_8h_source"/>
      </node>
      <node id="23">
        <label>lib/mac/mac_dl/mac_cell_processor.h</label>
        <link refid="mac__cell__processor_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>lib/mac/mac_dl/mac_dl_ue_manager.h</label>
        <link refid="mac__dl__ue__manager_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/du_manager/du_ue_manager.h</label>
        <link refid="du__ue__manager_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>lib/fapi_adaptor/phy/phy_fapi_adaptor_factory_impl.h</label>
        <link refid="phy__fapi__adaptor__factory__impl_8h_source"/>
      </node>
      <node id="75">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pdcch_processor.h</label>
        <link refid="dmrs__pdcch__processor_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>lib/scheduler/ue_scheduling/ue_configuration.h</label>
        <link refid="ue__configuration_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>include/srsgnb/scheduler/scheduler_feedback_handler.h</label>
        <link refid="scheduler__feedback__handler_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>lib/mac/mac_ul/mac_ul_processor.h</label>
        <link refid="mac__ul__processor_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>lib/mac/mac_ctrl/sched_config_helpers.h</label>
        <link refid="sched__config__helpers_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>lib/scheduler/ue_scheduling/ue_cell_grid_allocator.h</label>
        <link refid="ue__cell__grid__allocator_8h_source"/>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>lib/phy/upper/signal_processors/csi_rs_processor_impl.h</label>
        <link refid="csi__rs__processor__impl_8h_source"/>
      </node>
      <node id="19">
        <label>lib/mac/mac_impl.h</label>
        <link refid="mac__impl_8h_source"/>
      </node>
      <node id="71">
        <label>include/srsgnb/phy/upper/dmrs_mapping.h</label>
        <link refid="dmrs__mapping_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>include/srsgnb/fapi_adaptor/phy/messages/pdcch.h</label>
        <link refid="phy_2messages_2pdcch_8h_source"/>
      </node>
      <node id="70">
        <label>include/srsgnb/phy/upper/re_pattern.h</label>
        <link refid="re__pattern_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>lib/mac/mac_ctrl/mac_controller.h</label>
        <link refid="mac__controller_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>lib/scheduler/policy/ue_allocator.h</label>
        <link refid="ue__allocator_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>include/srsgnb/fapi_adaptor/mac/messages/ssb.h</label>
        <link refid="mac_2messages_2ssb_8h_source"/>
      </node>
      <node id="90">
        <label>include/srsgnb/fapi_adaptor/phy/messages/ssb.h</label>
        <link refid="phy_2messages_2ssb_8h_source"/>
      </node>
      <node id="21">
        <label>lib/mac/mac_ctrl/ue_delete_procedure.h</label>
        <link refid="ue__delete__procedure_8h_source"/>
      </node>
      <node id="116">
        <label>lib/scheduler/policy/scheduler_policy_factory.h</label>
        <link refid="scheduler__policy__factory_8h_source"/>
      </node>
      <node id="139">
        <label>include/srsgnb/scheduler/resource_block_group.h</label>
        <link refid="resource__block__group_8h_source"/>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>lib/scheduler/common_scheduling/ra_scheduler.h</label>
        <link refid="ra__scheduler_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>lib/du_manager/du_manager_config.h</label>
        <link refid="du__manager__config_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>include/srsgnb/phy/upper/downlink_processor.h</label>
        <link refid="downlink__processor_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>lib/phy/upper/channel_processors/pdcch_processor_impl.h</label>
        <link refid="pdcch__processor__impl_8h_source"/>
      </node>
      <node id="85">
        <label>include/srsgnb/fapi/messages.h</label>
        <link refid="messages_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>lib/scheduler/policy/scheduler_policy.h</label>
        <link refid="scheduler__policy_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>include/srsgnb/mac/mac_ue_configurator.h</label>
        <link refid="mac__ue__configurator_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>lib/scheduler/support/dmrs_helpers.h</label>
        <link refid="dmrs__helpers_8h_source"/>
      </node>
      <node id="121">
        <label>lib/scheduler/ue_scheduling/ue_scheduler.h</label>
        <link refid="ue__scheduler_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>include/srsgnb/scheduler/bwp_configuration.h</label>
        <link refid="bwp__configuration_8h_source"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>include/srsgnb/support/executors/task_worker.h</label>
        <link refid="task__worker_8h_source"/>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pdsch_processor.h</label>
        <link refid="dmrs__pdsch__processor_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>lib/phy/upper/channel_processors/pdsch_processor_impl.h</label>
        <link refid="pdsch__processor__impl_8h_source"/>
      </node>
      <node id="62">
        <label>include/srsgnb/phy/upper/channel_processors/pdsch_modulator.h</label>
        <link refid="pdsch__modulator_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/srsgnb/mac/mac.h</label>
        <link refid="mac_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>lib/phy/upper/downlink_processor_pool_impl.h</label>
        <link refid="downlink__processor__pool__impl_8h_source"/>
      </node>
      <node id="132">
        <label>lib/scheduler/support/config_helpers.h</label>
        <link refid="config__helpers_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>lib/du_manager/converters/f1c_configuration_helpers.h</label>
        <link refid="f1c__configuration__helpers_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pucch_processor.h</label>
        <link refid="dmrs__pucch__processor_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/srsgnb/mac/mac_cell_manager.h</label>
        <link refid="mac__cell__manager_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>lib/scheduler/support/pdsch/pdsch_dmrs_symbol_mask.h</label>
        <link refid="pdsch__dmrs__symbol__mask_8h_source"/>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/du_manager/converters/mac_cell_configuration_helpers.h</label>
        <link refid="mac__cell__configuration__helpers_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>lib/scheduler/cell/scheduler_cell_manager.h</label>
        <link refid="scheduler__cell__manager_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>include/srsgnb/phy/upper/channel_processors/pdsch_processor.h</label>
        <link refid="pdsch__processor_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>lib/mac/mac_dl/rar_pdu_assembler.h</label>
        <link refid="rar__pdu__assembler_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>include/srsgnb/phy/upper/channel_processors/pdcch_modulator.h</label>
        <link refid="pdcch__modulator_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>include/srsgnb/fapi_adaptor/mac/messages/prach.h</label>
        <link refid="mac_2messages_2prach_8h_source"/>
      </node>
      <node id="27">
        <label>lib/mac/mac_ul/pdu_rx_handler.h</label>
        <link refid="pdu__rx__handler_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>lib/mac/mac_ctrl/ue_creation_procedure.h</label>
        <link refid="mac_2mac__ctrl_2ue__creation__procedure_8h_source"/>
      </node>
      <node id="78">
        <label>lib/scheduler/pdcch_scheduling/pdcch_config_helpers.h</label>
        <link refid="pdcch__config__helpers_8h_source"/>
      </node>
      <node id="60">
        <label>lib/phy/upper/upper_phy_impl.h</label>
        <link refid="upper__phy__impl_8h_source"/>
      </node>
      <node id="148">
        <label>lib/cu_cp/cu_cp.h</label>
        <link refid="lib_2cu__cp_2cu__cp_8h_source"/>
      </node>
      <node id="130">
        <label>lib/fapi_adaptor/mac/mac_fapi_adaptor_impl.h</label>
        <link refid="mac__fapi__adaptor__impl_8h_source"/>
      </node>
      <node id="107">
        <label>lib/scheduler/common_scheduling/prach_scheduler.h</label>
        <link refid="prach__scheduler_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>lib/scheduler/scheduler_impl.h</label>
        <link refid="scheduler__impl_8h_source"/>
      </node>
      <node id="131">
        <label>lib/scheduler/support/bwp_helpers.h</label>
        <link refid="bwp__helpers_8h_source"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>lib/scheduler/policy/scheduler_time_rr.h</label>
        <link refid="scheduler__time__rr_8h_source"/>
      </node>
      <node id="113">
        <label>lib/scheduler/pdcch_scheduling/pdcch_scheduler_impl.h</label>
        <link refid="pdcch__scheduler__impl_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>lib/phy/upper/signal_processors/pucch/dmrs_pucch_processor_format1_impl.h</label>
        <link refid="dmrs__pucch__processor__format1__impl_8h_source"/>
      </node>
      <node id="22">
        <label>lib/mac/mac_ctrl/ue_reconfiguration_procedure.h</label>
        <link refid="ue__reconfiguration__procedure_8h_source"/>
      </node>
      <node id="135">
        <label>include/srsgnb/scheduler/scheduler_dci.h</label>
        <link refid="scheduler__dci_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>include/srsgnb/fapi_adaptor/phy/messages/prach.h</label>
        <link refid="phy_2messages_2prach_8h_source"/>
      </node>
      <node id="2">
        <label>include/srsgnb/mac/cell_configuration.h</label>
        <link refid="include_2srsgnb_2mac_2cell__configuration_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>include/srsgnb/phy/upper/channel_processors/pdcch_processor.h</label>
        <link refid="pdcch__processor_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>lib/phy/upper/signal_processors/pucch/dmrs_pucch_processor_format2_impl.h</label>
        <link refid="dmrs__pucch__processor__format2__impl_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper" prot="public">srsgnb::detail::bitset_builtin_helper</innerclass>
    <innerclass refid="classsrsgnb_1_1bounded__bitset" prot="public">srsgnb::bounded_bitset</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1bounded__bitset_3_01N_00_01reversed_01_4_01_4" prot="public">fmt::formatter&lt; srsgnb::bounded_bitset&lt; N, reversed &gt; &gt;</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacesrsgnb_1_1detail">srsgnb::detail</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/bundled/fmt/format.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">srsgnb/support/math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/support/srsgnb_assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="19" refid="namespacesrsgnb_1a502705b923eedd9f73d2960754bf20c4" refkind="member"><highlight class="normal">constexpr<sp/>Integer<sp/><ref refid="namespacesrsgnb_1a502705b923eedd9f73d2960754bf20c4" kindref="member">mask_msb_zeros</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>static_assert(std::is_unsigned&lt;Integer&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;T<sp/>must<sp/>be<sp/>unsigned<sp/>integer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(N<sp/>==<sp/>0)<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Integer</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-1)<sp/>:<sp/>(N<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Integer)<sp/>*<sp/>8U)<sp/>?<sp/>0<sp/>:<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Integer</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-1)<sp/>&gt;&gt;<sp/>(N));</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="31" refid="namespacesrsgnb_1a33184677e98ae9082cbfba34dfa13306" refkind="member"><highlight class="normal">constexpr<sp/>Integer<sp/><ref refid="namespacesrsgnb_1a33184677e98ae9082cbfba34dfa13306" kindref="member">mask_lsb_ones</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask_msb_zeros&lt;Integer&gt;(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Integer)<sp/>*<sp/>8U<sp/>-<sp/>N);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="42" refid="namespacesrsgnb_1a484323a751721921c5cdfa4be7fcd31b" refkind="member"><highlight class="normal">constexpr<sp/>Integer<sp/><ref refid="namespacesrsgnb_1a484323a751721921c5cdfa4be7fcd31b" kindref="member">mask_msb_ones</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>~mask_msb_zeros&lt;Integer&gt;(N);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="53" refid="namespacesrsgnb_1af60ec95500518b1e27aee40d5ed3c2c3" refkind="member"><highlight class="normal">Integer<sp/><ref refid="namespacesrsgnb_1af60ec95500518b1e27aee40d5ed3c2c3" kindref="member">mask_lsb_zeros</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>~mask_lsb_ones&lt;Integer&gt;(N);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="61" refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper" kindref="compound">bitset_builtin_helper</ref><sp/>{</highlight></codeline>
<codeline lineno="64" refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a9a23606cad3c852a4be72ec66dfc1960" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Integer<sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a9a23606cad3c852a4be72ec66dfc1960" kindref="member">zero_msb_count</ref>(Integer<sp/>value)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;Integer&gt;::digits;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>Integer<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Integer<sp/>shift<sp/>=<sp/>std::numeric_limits&lt;Integer&gt;::digits<sp/>&gt;&gt;<sp/>1;<sp/>shift<sp/>!=<sp/>0;<sp/>shift<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Integer<sp/>tmp<sp/>=<sp/>value<sp/>&gt;&gt;<sp/>shift;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/>shift;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82" refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a090cbd3ee0e484040c240e6cefe1335d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Integer<sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a090cbd3ee0e484040c240e6cefe1335d" kindref="member">zero_lsb_count</ref>(Integer<sp/>value)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;Integer&gt;::digits;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Integer<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Integer<sp/>shift<sp/>=<sp/>std::numeric_limits&lt;Integer&gt;::digits<sp/>&gt;&gt;<sp/>1,<sp/>mask<sp/>=<sp/>std::numeric_limits&lt;Integer&gt;::max()<sp/>&gt;&gt;<sp/>shift;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>&gt;&gt;=<sp/>1,<sp/>mask<sp/>&gt;&gt;=<sp/>shift)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value<sp/>&amp;<sp/>mask)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>&gt;&gt;=<sp/>shift;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/>shift;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1af0a364eb2cad59d5d08ee0c514a3c60e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1af0a364eb2cad59d5d08ee0c514a3c60e" kindref="member">count_ones</ref>(Integer<sp/>value)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>use<sp/>an<sp/>&quot;int&quot;<sp/>for<sp/>count<sp/>triggers<sp/>popcount<sp/>optimization<sp/>if<sp/>SSE<sp/>instructions<sp/>are<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Integer<sp/>w<sp/>=<sp/>value;<sp/>w<sp/>&gt;<sp/>0;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>w<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__<sp/>//<sp/>clang<sp/>and<sp/>gcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bitset_builtin_helper&lt;unsigned&gt;<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a9a23606cad3c852a4be72ec66dfc1960" kindref="member">zero_msb_count</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>__builtin_clz(value)<sp/>:<sp/>std::numeric_limits&lt;unsigned&gt;::digits;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a090cbd3ee0e484040c240e6cefe1335d" kindref="member">zero_lsb_count</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>__builtin_ctz(value)<sp/>:<sp/>std::numeric_limits&lt;unsigned&gt;::digits;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1af0a364eb2cad59d5d08ee0c514a3c60e" kindref="member">count_ones</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcount(value);<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bitset_builtin_helper&lt;unsigned<sp/>long&gt;<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a9a23606cad3c852a4be72ec66dfc1960" kindref="member">zero_msb_count</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>__builtin_clzl(value)<sp/>:<sp/>std::numeric_limits&lt;unsigned<sp/>long&gt;::digits;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a090cbd3ee0e484040c240e6cefe1335d" kindref="member">zero_lsb_count</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>__builtin_ctzl(value)<sp/>:<sp/>std::numeric_limits&lt;unsigned<sp/>long&gt;::digits;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1af0a364eb2cad59d5d08ee0c514a3c60e" kindref="member">count_ones</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcountl(value);<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bitset_builtin_helper&lt;unsigned<sp/>long<sp/>long&gt;<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a9a23606cad3c852a4be72ec66dfc1960" kindref="member">zero_msb_count</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>__builtin_clzll(value)<sp/>:<sp/>std::numeric_limits&lt;unsigned<sp/>long<sp/>long&gt;::digits;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a090cbd3ee0e484040c240e6cefe1335d" kindref="member">zero_lsb_count</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>__builtin_ctzll(value)<sp/>:<sp/>std::numeric_limits&lt;unsigned<sp/>long<sp/>long&gt;::digits;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1af0a364eb2cad59d5d08ee0c514a3c60e" kindref="member">count_ones</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcountll(value);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="163" refid="namespacesrsgnb_1a0ce3d069fa115fd8678f84382af87d5f" refkind="member"><highlight class="normal">Integer<sp/><ref refid="namespacesrsgnb_1a0ce3d069fa115fd8678f84382af87d5f" kindref="member">zero_msb_count</ref>(Integer<sp/>value)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(~value)<sp/>?<sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a9a23606cad3c852a4be72ec66dfc1960" kindref="member">detail::bitset_builtin_helper&lt;Integer&gt;::zero_msb_count</ref>(value)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="173" refid="namespacesrsgnb_1a1daa3d5eaa342f837d8e18e56d594280" refkind="member"><highlight class="normal">Integer<sp/><ref refid="namespacesrsgnb_1a1daa3d5eaa342f837d8e18e56d594280" kindref="member">find_first_msb_one</ref>(Integer<sp/>value)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value)<sp/>?<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Integer)<sp/>*<sp/>8U<sp/>-<sp/>1<sp/>-<sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper" kindref="compound">detail::bitset_builtin_helper&lt;Integer&gt;::zero_msb_count</ref>(value))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::numeric_limits&lt;Integer&gt;::digits;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="184" refid="namespacesrsgnb_1a06afb1454d06e33c0c6ee5800a5cc2ac" refkind="member"><highlight class="normal">Integer<sp/><ref refid="namespacesrsgnb_1a06afb1454d06e33c0c6ee5800a5cc2ac" kindref="member">find_first_lsb_one</ref>(Integer<sp/>value)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1a090cbd3ee0e484040c240e6cefe1335d" kindref="member">detail::bitset_builtin_helper&lt;Integer&gt;::zero_lsb_count</ref>(value);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_ones(Integer<sp/>value)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1detail_1_1bitset__builtin__helper_1af0a364eb2cad59d5d08ee0c514a3c60e" kindref="member">detail::bitset_builtin_helper&lt;Integer&gt;::count_ones</ref>(value);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="204" refid="classsrsgnb_1_1bounded__bitset" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset</ref></highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>word_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bits_per_word<sp/>=<sp/>8<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(word_t);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cur_size_)<sp/>:<sp/>cur_size(cur_size_)<sp/>{}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;std::is_convertible&lt;typename<sp/>std::iterator_traits&lt;Iterator&gt;::value_type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::value,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="226" refid="classsrsgnb_1_1bounded__bitset_1a7db4a016d2162a7aa02ebff1b6930e6e" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a7db4a016d2162a7aa02ebff1b6930e6e" kindref="member">bounded_bitset</ref>(Iterator<sp/>begin,<sp/>Iterator<sp/>end)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec43054ba69cc9b7c7a47079dc1f1283" kindref="member">resize</ref>(end<sp/>-<sp/>begin);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(begin,<sp/>end,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n<sp/>=<sp/>0](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>{<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" kindref="member">set</ref>(n++,<sp/>value);<sp/>});</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classsrsgnb_1_1bounded__bitset_1ae133ddc824fc5624c284384117f526c0" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae133ddc824fc5624c284384117f526c0" kindref="member">bounded_bitset</ref>(std::initializer_list&lt;const<sp/>bool&gt;<sp/>values)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec43054ba69cc9b7c7a47079dc1f1283" kindref="member">resize</ref>(values.size());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(values.begin(),<sp/>values.end(),<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n<sp/>=<sp/>0](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>{<sp/>set(n++,<sp/>value);<sp/>});</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bit_order()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reversed;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_size()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur_size;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classsrsgnb_1_1bounded__bitset_1aec43054ba69cc9b7c7a47079dc1f1283" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec43054ba69cc9b7c7a47079dc1f1283" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(new_size<sp/>&lt;=<sp/>max_size(),<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>new<sp/>size=&apos;{}&apos;<sp/>exceeds<sp/>bitset<sp/>capacity=&apos;{}&apos;&quot;</highlight><highlight class="normal">,<sp/>new_size,<sp/>max_size());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>==<sp/>cur_size)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_size<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>sanitize_();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>nof_words_();<sp/>i<sp/>&lt;<sp/>max_nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" kindref="member">set</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_within_bounds_(pos,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_(pos);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reset_(pos);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classsrsgnb_1_1bounded__bitset_1a5bbd852135056417380efef6f789ad98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5bbd852135056417380efef6f789ad98" kindref="member">set</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_within_bounds_(pos,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>set_(pos);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classsrsgnb_1_1bounded__bitset_1a7d779cc2893c04ebb8264356f1596ab2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a7d779cc2893c04ebb8264356f1596ab2" kindref="member">reset</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_within_bounds_(pos,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_(pos);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classsrsgnb_1_1bounded__bitset_1a6de56a1ffa93ed25a261db85e51334ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a6de56a1ffa93ed25a261db85e51334ab" kindref="member">reset</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="classsrsgnb_1_1bounded__bitset_1a28067d9a1c62435d18c5ac6cf0642c49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a28067d9a1c62435d18c5ac6cf0642c49" kindref="member">push_back</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bitpos<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec43054ba69cc9b7c7a47079dc1f1283" kindref="member">resize</ref>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" kindref="member">set</ref>(bitpos,<sp/>val);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="318" refid="classsrsgnb_1_1bounded__bitset_1a94bbefb1b17f89d5f73801aa70adf072" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a94bbefb1b17f89d5f73801aa70adf072" kindref="member">push_back</ref>(Integer<sp/>val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nof_bits)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_unsigned&lt;Integer&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;push_back<sp/>only<sp/>works<sp/>for<sp/>unsigned<sp/>integers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bitpos<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec43054ba69cc9b7c7a47079dc1f1283" kindref="member">resize</ref>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>+<sp/>nof_bits);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bit_index<sp/>=<sp/>0;<sp/>bit_index<sp/>!=<sp/>nof_bits;<sp/>++bit_index)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" kindref="member">set</ref>(bitpos<sp/>+<sp/>bit_index,<sp/>(val<sp/>&gt;&gt;<sp/>(nof_bits<sp/>-<sp/>1<sp/>-<sp/>bit_index))<sp/>&amp;<sp/>1U);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classsrsgnb_1_1bounded__bitset_1aec33b2aa0ad1fe21801ba05f9fcc61d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec33b2aa0ad1fe21801ba05f9fcc61d9" kindref="member">test</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="332"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_within_bounds_(pos,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_(pos);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classsrsgnb_1_1bounded__bitset_1ab7d6397fb374a0408e54c6d570900bb8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ab7d6397fb374a0408e54c6d570900bb8" kindref="member">flip</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>~buffer[i];</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>sanitize_();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classsrsgnb_1_1bounded__bitset_1a7e3a54e061a9173d147eb8b202867fc5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a7e3a54e061a9173d147eb8b202867fc5" kindref="member">fill</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(startpos,<sp/>endpos,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>value](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>word_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word_t&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[word_idx]<sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[word_idx]<sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N2<sp/>=<sp/>N&gt;</highlight></codeline>
<codeline lineno="372" refid="classsrsgnb_1_1bounded__bitset_1a303fd8436c800ab55b92a3de190200a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N2, reversed&gt;</ref><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a303fd8436c800ab55b92a3de190200a6" kindref="member">slice</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="373"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N2, reversed&gt;</ref><sp/>sliced(endpos<sp/>-<sp/>startpos);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reversed)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(startpos,<sp/>endpos);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startpos<sp/>=<sp/>get_bitidx_(startpos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endpos<sp/><sp/><sp/>=<sp/>get_bitidx_(endpos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>start_word<sp/>=<sp/>startpos<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>start_mod<sp/><sp/>=<sp/>startpos<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_mod<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>left_mask<sp/><sp/>=<sp/>mask_lsb_ones&lt;word_t&gt;(bits_per_word<sp/>-<sp/>start_mod);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>right_mask<sp/>=<sp/>mask_lsb_ones&lt;word_t&gt;(start_mod);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>sliced.nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliced.buffer[i]<sp/>=<sp/>(buffer[i<sp/>+<sp/>start_word]<sp/>&gt;&gt;<sp/>start_mod)<sp/>&amp;<sp/>left_mask;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>start_word<sp/>+<sp/>1<sp/>&lt;<sp/>nof_words_())<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliced.buffer[i]<sp/>|=<sp/>(buffer[i<sp/>+<sp/>start_word<sp/>+<sp/>1]<sp/>&amp;<sp/>right_mask)<sp/>&lt;&lt;<sp/>(bits_per_word<sp/>-<sp/>start_mod);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>sliced.nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliced.buffer[i]<sp/>=<sp/>buffer[i<sp/>+<sp/>start_word];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>sliced.sanitize_();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classsrsgnb_1_1bounded__bitset_1a8bb3b1a08877033b44f0c6ad6e076a16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a8bb3b1a08877033b44f0c6ad6e076a16" kindref="member">find_lowest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a8bb3b1a08877033b44f0c6ad6e076a16" kindref="member">find_lowest</ref>(0,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classsrsgnb_1_1bounded__bitset_1ac43a0bb2d5561ed97fef93382264c675" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ac43a0bb2d5561ed97fef93382264c675" kindref="member">find_lowest</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_range_bounds_(startpos,<sp/>endpos);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startpos<sp/>==<sp/>endpos)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>reversed)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_first_(startpos,<sp/>endpos,<sp/>value);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_first_reversed_(startpos,<sp/>endpos,<sp/>value);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>for_each(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_range_bounds_(startpos,<sp/>endpos);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1bounded__bitset_1ae9ecd17ccf96c1e7a343e75bac5689f5" kindref="member">all</ref>())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos<sp/>=<sp/>startpos;<sp/>bitpos<sp/>!=<sp/>endpos;<sp/>++bitpos)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(bitpos);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startword<sp/>=<sp/>startpos<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lastword<sp/><sp/>=<sp/>(endpos<sp/>+<sp/>bits_per_word<sp/>-<sp/>1)<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>startword;<sp/>i<sp/>!=<sp/>lastword;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>w<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>~w;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::numeric_limits&lt;word_t&gt;::max()))<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos<sp/>=<sp/>0;<sp/>bitpos<sp/>!=<sp/>bits_per_word;<sp/>++bitpos)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>*<sp/>bits_per_word<sp/>+<sp/>bitpos;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(j);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>startword)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>mask_msb_zeros&lt;word_t&gt;(startpos<sp/>%<sp/>bits_per_word);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>lastword)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>mask_lsb_zeros&lt;word_t&gt;(endpos<sp/>%<sp/>bits_per_word);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos<sp/>=<sp/>i<sp/>*<sp/>bits_per_word;<sp/>w<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);<sp/>++bitpos)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w<sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1))<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0))<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(bitpos);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>(w<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="classsrsgnb_1_1bounded__bitset_1ae9ecd17ccf96c1e7a343e75bac5689f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae9ecd17ccf96c1e7a343e75bac5689f5" kindref="member">all</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nw<sp/>=<sp/>nof_words_();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nw<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>word_t<sp/>allset<sp/>=<sp/>~static_cast&lt;word_t&gt;(0);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nw<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[i]<sp/>!=<sp/>allset)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer[nw<sp/>-<sp/>1]<sp/>==<sp/>(allset<sp/>&gt;&gt;<sp/>(nw<sp/>*<sp/>bits_per_word<sp/>-<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classsrsgnb_1_1bounded__bitset_1a7624f493781ea38d7ed7d75447bf8f65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a7624f493781ea38d7ed7d75447bf8f65" kindref="member">all</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>not_all_found<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(start,<sp/>stop,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>word_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word_t&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(buffer[word_idx]<sp/>|<sp/>~mask)<sp/>!=<sp/>~</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!not_all_found;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="classsrsgnb_1_1bounded__bitset_1a74545186bfbbbf9519ac15da5f6c692c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a74545186bfbbbf9519ac15da5f6c692c" kindref="member">find_highest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a74545186bfbbbf9519ac15da5f6c692c" kindref="member">find_highest</ref>(0,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),<sp/>value);<sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="classsrsgnb_1_1bounded__bitset_1a7158269bcdbef4b0f2591adde1c7cc0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a7158269bcdbef4b0f2591adde1c7cc0d" kindref="member">find_highest</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_range_bounds_(startpos,<sp/>endpos);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reversed)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>find_first_(startpos,<sp/>endpos,<sp/>value);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>1<sp/>-<sp/>ret;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_last_(startpos,<sp/>endpos,<sp/>value);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="classsrsgnb_1_1bounded__bitset_1a9213f1b2bdbdd6f211245e06ebe94099" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a9213f1b2bdbdd6f211245e06ebe94099" kindref="member">any</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[i]<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classsrsgnb_1_1bounded__bitset_1a632322b0e6ea304b6201a54110614348" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a632322b0e6ea304b6201a54110614348" kindref="member">any</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="539"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_found<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(start,<sp/>stop,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>word_idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word_t&amp;<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(buffer[word_idx]<sp/>&amp;<sp/>mask)<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any_found;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classsrsgnb_1_1bounded__bitset_1ae7bc41c97f416df162913385bdff69f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae7bc41c97f416df162913385bdff69f8" kindref="member">none</ref>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classsrsgnb_1_1bounded__bitset_1a9213f1b2bdbdd6f211245e06ebe94099" kindref="member">any</ref>();<sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="classsrsgnb_1_1bounded__bitset_1afa969406028f34c1dcb2f8b466df4321" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1afa969406028f34c1dcb2f8b466df4321" kindref="member">is_contiguous</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>lowest<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startpos<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a8bb3b1a08877033b44f0c6ad6e076a16" kindref="member">find_lowest</ref>(0,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),<sp/>value);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>1.<sp/>No<sp/>value<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startpos<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>highest<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpos<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a74545186bfbbbf9519ac15da5f6c692c" kindref="member">find_highest</ref>(startpos<sp/>+<sp/>1,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),<sp/>value);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>2.<sp/>There<sp/>is<sp/>only<sp/>one<sp/>bit<sp/>with<sp/>the<sp/>value<sp/>(in<sp/>startpos).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endpos<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>set<sp/>to<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>value_count<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ac144398b8b6c75c17e986b6027a7fea4" kindref="member">count</ref>();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_count<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>value_count;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Condition<sp/>3.<sp/>The<sp/>number<sp/>of<sp/>elements<sp/>must<sp/>match<sp/>with<sp/>the<sp/>star<sp/>to<sp/>end<sp/>number<sp/>of<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value_count<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((endpos<sp/>+<sp/>1)<sp/>-<sp/>startpos));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="classsrsgnb_1_1bounded__bitset_1ac144398b8b6c75c17e986b6027a7fea4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ac144398b8b6c75c17e986b6027a7fea4" kindref="member">count</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>count_ones(buffer[i]);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="classsrsgnb_1_1bounded__bitset_1a3f15613054464e6f85c25244643421f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a3f15613054464e6f85c25244643421f8" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>!=<sp/>other.size())<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[i]<sp/>!=<sp/>other.buffer[i])<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="classsrsgnb_1_1bounded__bitset_1ac7f21bf08442e9afc0727cf2b4411d80" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ac7f21bf08442e9afc0727cf2b4411d80" kindref="member">operator|=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(other.size()<sp/>==<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>operator|=<sp/>called<sp/>for<sp/>bitsets<sp/>of<sp/>different<sp/>sizes<sp/>(&apos;{}&apos;!=&apos;{}&apos;)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.size());</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>|=<sp/>other.buffer[i];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="classsrsgnb_1_1bounded__bitset_1aab6e6f675f949a0d5346ae9e3d55c383" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aab6e6f675f949a0d5346ae9e3d55c383" kindref="member">operator&amp;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(other.size()<sp/>==<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>operator&amp;=<sp/>called<sp/>for<sp/>bitsets<sp/>of<sp/>different<sp/>sizes<sp/>(&apos;{}&apos;!=&apos;{}&apos;)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.size());</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_words_();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>&amp;=<sp/>other.buffer[i];</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="classsrsgnb_1_1bounded__bitset_1a4e15c10cdb01c007b1430988eb83a15e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a4e15c10cdb01c007b1430988eb83a15e" kindref="member">operator~</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/>ret(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.<ref refid="classsrsgnb_1_1bounded__bitset_1ab7d6397fb374a0408e54c6d570900bb8" kindref="member">flip</ref>();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputIt&gt;</highlight></codeline>
<codeline lineno="661" refid="classsrsgnb_1_1bounded__bitset_1a06a43396dd6b863b9afa2da2a59bb56e" refkind="member"><highlight class="normal"><sp/><sp/>OutputIt<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a06a43396dd6b863b9afa2da2a59bb56e" kindref="member">to_string</ref>(OutputIt&amp;&amp;<sp/>mem_buffer)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="662"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem_buffer;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>s.assign(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>reversed)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>();<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(mem_buffer,<sp/></highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec33b2aa0ad1fe21801ba05f9fcc61d9" kindref="member">test</ref>(i<sp/>-<sp/>1)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(mem_buffer,<sp/></highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1aec33b2aa0ad1fe21801ba05f9fcc61d9" kindref="member">test</ref>(i)<sp/>?<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem_buffer;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="classsrsgnb_1_1bounded__bitset_1a6fee80b0e9a17208ca9de4a0869c535b" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a6fee80b0e9a17208ca9de4a0869c535b" kindref="member">to_uint64</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="685"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(nof_words_()<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>cannot<sp/>convert<sp/>bitset<sp/>of<sp/>size=&apos;{}&apos;<sp/>to<sp/>uint64_t&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_word_(0);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="classsrsgnb_1_1bounded__bitset_1a499bfbd9d35f85f3212aba9cc1a9d9ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a499bfbd9d35f85f3212aba9cc1a9d9ae" kindref="member">from_uint64</ref>(uint64_t<sp/>v)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(nof_words_()<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>cannot<sp/>convert<sp/>bitset<sp/>of<sp/>size=&apos;{}&apos;<sp/>to<sp/>uint64_t&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(v<sp/>&lt;<sp/>(1U<sp/>&lt;&lt;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()),<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Provided<sp/>mask=&apos;{}&apos;<sp/>does<sp/>not<sp/>fit<sp/>in<sp/>bitset<sp/>of<sp/>size=&apos;{}&apos;&quot;</highlight><highlight class="normal">,<sp/>v,<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputIt&gt;</highlight></codeline>
<codeline lineno="705" refid="classsrsgnb_1_1bounded__bitset_1a511e7e076b37354738405afddd275b71" refkind="member"><highlight class="normal"><sp/><sp/>OutputIt<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a511e7e076b37354738405afddd275b71" kindref="member">to_hex</ref>(OutputIt&amp;&amp;<sp/>mem_buffer)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem_buffer;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>word<sp/>may<sp/>not<sp/>print<sp/>16<sp/>hex<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>nof_words_()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rem_symbols<sp/>=<sp/><ref refid="namespacesrsgnb_1a6026a6056e7f39c043a2bba26daab476" kindref="member">divide_ceil</ref>((<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>/<sp/>bits_per_word)<sp/>*<sp/>bits_per_word),<sp/>4U);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt::format_to(mem_buffer,<sp/></highlight><highlight class="stringliteral">&quot;{:0&gt;{}x}&quot;</highlight><highlight class="normal">,<sp/>buffer[i],<sp/>rem_symbols);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>words<sp/>will<sp/>occupy<sp/>16<sp/>hex<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(--i;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(mem_buffer,<sp/></highlight><highlight class="stringliteral">&quot;{:0&gt;16x}&quot;</highlight><highlight class="normal">,<sp/>buffer[i]);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem_buffer;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed2&gt;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>std::array&lt;word_t,<sp/>(N<sp/>-<sp/>1)<sp/>/<sp/>bits_per_word<sp/>+<sp/>1&gt;<sp/>buffer<sp/><sp/><sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sanitize_()</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nwords<sp/>=<sp/>nof_words_();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>0<sp/>and<sp/>nwords<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[nwords<sp/>-<sp/>1]<sp/>&amp;=<sp/>~((~static_cast&lt;word_t&gt;(0))<sp/>&lt;&lt;<sp/>n);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_bitidx_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reversed<sp/>?<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>1<sp/>-<sp/>bitpos<sp/>:<sp/>bitpos;<sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>bitpos<sp/>=<sp/>get_bitidx_(bitpos);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((get_word_(bitpos)<sp/>&amp;<sp/>maskbit(bitpos))<sp/>!=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos)<sp/>noexcept</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>bitpos<sp/>=<sp/>get_bitidx_(bitpos);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>get_word_(bitpos)<sp/>|=<sp/>maskbit(bitpos);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitpos)<sp/>noexcept</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>bitpos<sp/>=<sp/>get_bitidx_(bitpos);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>get_word_(bitpos)<sp/>&amp;=<sp/>~(maskbit(bitpos));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_words_()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>&gt;<sp/>0<sp/>?<sp/>(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>1)<sp/>/<sp/>bits_per_word<sp/>+<sp/>1<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>word_t&amp;<sp/>get_word_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitidx)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer[bitidx<sp/>/<sp/>bits_per_word];<sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>word_t&amp;<sp/>get_word_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitidx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer[bitidx<sp/>/<sp/>bits_per_word];<sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>word_idx_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bitidx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bitidx<sp/>/<sp/>bits_per_word;<sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assert_within_bounds_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>strict)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(pos<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>or<sp/>(not<sp/>strict<sp/>and<sp/>pos<sp/>==<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()),</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>index=&apos;{}&apos;<sp/>is<sp/>out-of-bounds<sp/>for<sp/>bitset<sp/>of<sp/>size=&apos;{}&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assert_range_bounds_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(startpos<sp/>&lt;=<sp/>endpos<sp/>and<sp/>endpos<sp/>&lt;=<sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>range<sp/>[&apos;{}&apos;,<sp/>&apos;{}&apos;)<sp/>out-of-bounds<sp/>for<sp/>bitsize<sp/>of<sp/>size=&apos;{}&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startpos,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpos,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>word_t<sp/>maskbit(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">word_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1))<sp/>&lt;&lt;<sp/>(pos<sp/>%<sp/>bits_per_word);<sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_nof_words_()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(N<sp/>-<sp/>1)<sp/>/<sp/>bits_per_word<sp/>+<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find_last_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startword<sp/>=<sp/>startpos<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lastword<sp/><sp/>=<sp/>(endpos<sp/>-<sp/>1)<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lastword;<sp/>i<sp/>!=<sp/>startword<sp/>-<sp/>1;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>w<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>~w;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>startword)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>startpos<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>(reversed)<sp/>?<sp/>mask_msb_zeros&lt;word_t&gt;(offset)<sp/>:<sp/>mask_lsb_zeros&lt;word_t&gt;(offset);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>lastword)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>(endpos<sp/>-<sp/>1)<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>(reversed)<sp/>?<sp/>mask_msb_ones&lt;word_t&gt;(offset<sp/>+<sp/>1)<sp/>:<sp/>mask_lsb_ones&lt;word_t&gt;(offset<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>*<sp/>bits_per_word<sp/>+<sp/><ref refid="namespacesrsgnb_1a1daa3d5eaa342f837d8e18e56d594280" kindref="member">find_first_msb_one</ref>(w));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find_first_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startword<sp/>=<sp/>startpos<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lastword<sp/><sp/>=<sp/>(endpos<sp/>-<sp/>1)<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>startword;<sp/>i<sp/>&lt;=<sp/>lastword;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>w<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>~w;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>startword)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>startpos<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>mask_lsb_zeros&lt;word_t&gt;(offset);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>lastword)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>(endpos<sp/>-<sp/>1)<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>mask_lsb_ones&lt;word_t&gt;(offset<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>*<sp/>bits_per_word<sp/>+<sp/><ref refid="namespacesrsgnb_1a06afb1454d06e33c0c6ee5800a5cc2ac" kindref="member">find_first_lsb_one</ref>(w));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find_first_reversed_(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startpos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>endpos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startbitpos<sp/>=<sp/>get_bitidx_(startpos),<sp/>lastbitpos<sp/>=<sp/>get_bitidx_(endpos<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>startword<sp/>=<sp/>startbitpos<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lastword<sp/><sp/>=<sp/>lastbitpos<sp/>/<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>startword;<sp/>i<sp/>!=<sp/>lastword<sp/>-<sp/>1;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>w<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>~w;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>startword)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>startbitpos<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>mask_lsb_ones&lt;word_t&gt;(offset<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>lastword)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>lastbitpos<sp/>%<sp/>bits_per_word;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>&amp;=<sp/>mask_lsb_zeros&lt;word_t&gt;(offset);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>pos<sp/>=<sp/><ref refid="namespacesrsgnb_1a1daa3d5eaa342f837d8e18e56d594280" kindref="member">find_first_msb_one</ref>(w);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>1<sp/>-<sp/>(pos<sp/>+<sp/>i<sp/>*<sp/>bits_per_word));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="876" refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="877"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_range_bounds_(start,<sp/>stop);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(start,<sp/>stop,<sp/>c,<sp/>std::integral_constant&lt;bool,<sp/>reversed&gt;{});</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>c,<sp/>std::true_type<sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="884"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(start,<sp/>stop);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>get_bitidx_(start)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/><sp/>=<sp/>get_bitidx_(stop)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(start,<sp/>stop,<sp/>c,<sp/>std::false_type{});</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset_1ae2345af1523afeddead5e95ed8e2f7cf" kindref="member">find_first_word_</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>C&amp;<sp/>c,<sp/>std::false_type<sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="893"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start_word<sp/>=<sp/>word_idx_(start);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>end_word<sp/><sp/><sp/>=<sp/>word_idx_(stop)<sp/>+<sp/>(stop<sp/>%<sp/>bits_per_word<sp/>&gt;<sp/>0<sp/>?<sp/>1U<sp/>:<sp/>0U);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start_word;<sp/>i<sp/>!=<sp/>end_word;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_t<sp/>mask<sp/>=<sp/>~static_cast&lt;word_t&gt;(0);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>start_word)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>mask_lsb_zeros&lt;word_t&gt;(start<sp/>%<sp/>bits_per_word);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>end_word<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>&amp;=<sp/>mask_msb_zeros&lt;word_t&gt;(end_word<sp/>*<sp/>bits_per_word<sp/>-<sp/>stop);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c(i,<sp/>mask))<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal">};</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed&gt;</highlight></codeline>
<codeline lineno="915" refid="namespacesrsgnb_1a4e3261c94c82a67346608ea65680d5b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/><ref refid="namespacesrsgnb_1a4e3261c94c82a67346608ea65680d5b0" kindref="member">operator&amp;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/>res(lhs);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>res<sp/>&amp;=<sp/>rhs;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed&gt;</highlight></codeline>
<codeline lineno="926" refid="namespacesrsgnb_1a70f3d604bfdbd9f253b749579f042638" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/><ref refid="namespacesrsgnb_1a70f3d604bfdbd9f253b749579f042638" kindref="member">operator|</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/>res(lhs);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>res<sp/>|=<sp/>rhs;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed&gt;</highlight></codeline>
<codeline lineno="937" refid="namespacesrsgnb_1afc2d178f9bf858393460f3f5fe0f5736" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/><ref refid="namespacesrsgnb_1afc2d178f9bf858393460f3f5fe0f5736" kindref="member">fliplr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref><sp/>ret(other.size());</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ret.<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.test(i))<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret.<ref refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" kindref="member">set</ref>(ret.<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>()<sp/>-<sp/>1<sp/>-<sp/>i);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed&gt;</highlight></codeline>
<codeline lineno="967" refid="namespacesrsgnb_1abbb64987e52967a116958bcef24fc934" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N2, reversed&gt;</ref><sp/><ref refid="namespacesrsgnb_1abbb64987e52967a116958bcef24fc934" kindref="member">fold_and_accumulate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fold_length,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_offset,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_length)<sp/>noexcept</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>srsgnb_assert(</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.size()<sp/>%<sp/>fold_length<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>fold<sp/>length={}<sp/>for<sp/>bitset<sp/>of<sp/>size={}&quot;</highlight><highlight class="normal">,<sp/>fold_length,<sp/>other.size());</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N2, reversed&gt;</ref><sp/>ret(slice_length);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>other.size();<sp/>i<sp/>+=<sp/>fold_length)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>|=<sp/>other.template<sp/>slice&lt;N2&gt;(i<sp/>+<sp/>slice_offset,<sp/>i<sp/>+<sp/>slice_offset<sp/>+<sp/>slice_length);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed&gt;</highlight></codeline>
<codeline lineno="989" refid="namespacesrsgnb_1a79f78bc05f6d07e141dc55a4bc44689b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N2, reversed&gt;</ref><sp/><ref refid="namespacesrsgnb_1abbb64987e52967a116958bcef24fc934" kindref="member">fold_and_accumulate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>other,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fold_length)<sp/>noexcept</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fold_and_accumulate&lt;N2,<sp/>N,<sp/>reversed&gt;(other,<sp/>fold_length,<sp/>0,<sp/>fold_length);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed&gt;</highlight></codeline>
<codeline lineno="1001" refid="structfmt_1_1formatter_3_01srsgnb_1_1bounded__bitset_3_01N_00_01reversed_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::bounded_bitset&lt;N,<sp/>reversed&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>hexadecimal,<sp/>binary<sp/>}<sp/>mode<sp/>=<sp/>binary;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>ctx.begin();</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>ctx.end()<sp/>and<sp/>*it<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>hexadecimal;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">srsgnb::bounded_bitset&lt;N, reversed&gt;</ref>&amp;<sp/>s,<sp/>FormatContext&amp;<sp/>ctx)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>hexadecimal)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.template<sp/>to_hex(ctx.out());</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.template<sp/>to_string(ctx.out());</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/adt/bounded_bitset.h"/>
  </compounddef>
</doxygen>
