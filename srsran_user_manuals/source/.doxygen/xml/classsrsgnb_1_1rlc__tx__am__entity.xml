<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1rlc__tx__am__entity" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::rlc_tx_am_entity</compoundname>
    <basecompoundref refid="classsrsgnb_1_1rlc__tx__entity" prot="public" virt="non-virtual">srsgnb::rlc_tx_entity</basecompoundref>
    <basecompoundref refid="classsrsgnb_1_1rlc__tx__am__status__handler" prot="public" virt="non-virtual">srsgnb::rlc_tx_am_status_handler</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a8dbd3d7e8371839c527f4b1e621ec54b" prot="private" static="no" mutable="no">
        <type>const <ref refid="structsrsgnb_1_1rlc__tx__am__config" kindref="compound">rlc_tx_am_config</ref></type>
        <definition>const rlc_tx_am_config srsgnb::rlc_tx_am_entity::cfg</definition>
        <argsstring></argsstring>
        <name>cfg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="68" column="26" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a7e89a3003299c73037c5d8e888145b48" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1rlc__rx__am__status__provider" kindref="compound">rlc_rx_am_status_provider</ref> *</type>
        <definition>rlc_rx_am_status_provider* srsgnb::rlc_tx_am_entity::status_provider</definition>
        <argsstring></argsstring>
        <name>status_provider</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="71" column="29" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a0f9f6ac44adfa7dee36ada227d002073" prot="private" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1rlc__tx__am__state" kindref="compound">rlc_tx_am_state</ref></type>
        <definition>rlc_tx_am_state srsgnb::rlc_tx_am_entity::st</definition>
        <argsstring></argsstring>
        <name>st</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="74" column="19" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a2bee1796bcb55e9a733a409c1f8ddc4d" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1rlc__sdu__queue" kindref="compound">rlc_sdu_queue</ref></type>
        <definition>rlc_sdu_queue srsgnb::rlc_tx_am_entity::sdu_queue</definition>
        <argsstring></argsstring>
        <name>sdu_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="77" column="17" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a7e6a05c0dbb97c15a262a18ea3b184c9" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::rlc_tx_am_entity::sn_under_segmentation</definition>
        <argsstring></argsstring>
        <name>sn_under_segmentation</name>
        <initializer>= <ref refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" kindref="member">INVALID_RLC_SN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="78" column="17" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a2ea8c2b0be9666b90d6a1e863e0281c4" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1pdu__retx__queue__list" kindref="compound">pdu_retx_queue_list</ref>&lt; <ref refid="structsrsgnb_1_1rlc__tx__amd__retx" kindref="compound">rlc_tx_amd_retx</ref> &gt;</type>
        <definition>pdu_retx_queue_list&lt;rlc_tx_amd_retx&gt; srsgnb::rlc_tx_am_entity::retx_queue</definition>
        <argsstring></argsstring>
        <name>retx_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="81" column="23" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1aa84e4208ccaf23ccbd61dffdea2f19f5" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex srsgnb::rlc_tx_am_entity::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="84" column="14" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a39f9ed8e5334a9e25d4dcd6f624e8803" prot="private" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t srsgnb::rlc_tx_am_entity::mod</definition>
        <argsstring></argsstring>
        <name>mod</name>
        <briefdescription>
<para>Tx counter modulus. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="87" column="22" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1ae4522fc23d7117d34741ab7291222577" prot="private" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t srsgnb::rlc_tx_am_entity::tx_window_size</definition>
        <argsstring></argsstring>
        <name>tx_window_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="91" column="60" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1a61165be248710a0765c2bff1a4862bdd" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structsrsgnb_1_1rlc__pdu__window__base" kindref="compound">rlc_pdu_window_base</ref>&lt; <ref refid="structsrsgnb_1_1rlc__tx__amd__pdu__box" kindref="compound">rlc_tx_amd_pdu_box</ref> &gt; &gt;</type>
        <definition>std::unique_ptr&lt;rlc_pdu_window_base&lt;rlc_tx_amd_pdu_box&gt; &gt; srsgnb::rlc_tx_am_entity::tx_window</definition>
        <argsstring></argsstring>
        <name>tx_window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="92" column="19" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1ac65d3f86fbb83584c47d80886cd03ebf" prot="private" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t srsgnb::rlc_tx_am_entity::head_min_size</definition>
        <argsstring></argsstring>
        <name>head_min_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="95" column="18" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1ac86ef06db9641d1746d31f691d1d4bea" prot="private" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t srsgnb::rlc_tx_am_entity::head_max_size</definition>
        <argsstring></argsstring>
        <name>head_max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="96" column="18" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__tx__am__entity_1ac74e43272e640075fe9a5aa607fffa93" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref></type>
        <definition>unique_timer srsgnb::rlc_tx_am_entity::poll_retransmit_timer</definition>
        <argsstring></argsstring>
        <name>poll_retransmit_timer</name>
        <briefdescription>
<para>t-PollRetransmit This timer is used by the transmitting side of an AM RLC entity in order to retransmit a poll (see sub clause 5.3.3). Ref: TS 38.322 Sec. 7.3 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="102" column="16" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" compoundref="rlc__tx__am__entity_8cpp" startline="379" endline="452">get_polling_bit</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a3e9af8079691c62ee0682af0049fd6c0" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t srsgnb::rlc_tx_am_entity::tx_mod_base</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>tx_mod_base</name>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="88" column="22" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1af8fa36c12d7476fb613faa0ca8f447fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::build_new_pdu</definition>
        <argsstring>(uint32_t nof_bytes)</argsstring>
        <name>build_new_pdu</name>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
<para>Builds a new RLC PDU. This will be called after checking whether control, retransmission, or segment PDUs needed to be transmitted first. It will read an SDU from the SDU queue, build a new PDU, and add it to the tx_window. SDU segmentation is applied if necessary. </para>
        </briefdescription>
        <detaileddescription>
<para>An empty PDU is returned if nof_bytes is insufficient or the TX buffer is empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nof_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Limits the maximum size of the requested PDU. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One PDU </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="151" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="102" bodyend="165"/>
        <references refid="structsrsgnb_1_1rlc__tx__am__state_1af8b0fd72d1b866b8e8305251f46986e9" compoundref="rlc__tx__am__entity_8h" startline="46">srsgnb::rlc_tx_am_state::tx_next</references>
        <references refid="classsrsgnb_1_1rlc__tx__am__entity_1af71491ffa5dda713543171811ade22fb" compoundref="rlc__tx__am__entity_8cpp" startline="167" endline="226">build_new_sdu_segment</references>
        <references refid="structsrsgnb_1_1rlc__am__pdu__header_1a1e660013e830afa28cc362eb05251478" compoundref="rlc__am__pdu_8h" startline="58">srsgnb::rlc_am_pdu_header::dc</references>
        <references refid="structsrsgnb_1_1rlc__am__pdu__header_1a601db6dfe465de0f2f088d669bd2c5bc" compoundref="rlc__am__pdu_8h" startline="59">srsgnb::rlc_am_pdu_header::p</references>
        <references refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" compoundref="rlc__tx__am__entity_8cpp" startline="379" endline="452">get_polling_bit</references>
        <references refid="structsrsgnb_1_1rlc__am__pdu__header_1af26c05583708bb42e7647b5a76f895fc" compoundref="rlc__am__pdu_8h" startline="60">srsgnb::rlc_am_pdu_header::si</references>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1a722242b95fd712889bb30761bf9383c8" compoundref="rlc__tx__am__entity_8cpp" startline="60" endline="100">pull_pdu</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1af71491ffa5dda713543171811ade22fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::build_new_sdu_segment</definition>
        <argsstring>(rlc_tx_amd_pdu_box &amp;tx_pdu, uint32_t nof_bytes)</argsstring>
        <name>build_new_sdu_segment</name>
        <param>
          <type><ref refid="structsrsgnb_1_1rlc__tx__amd__pdu__box" kindref="compound">rlc_tx_amd_pdu_box</ref> &amp;</type>
          <declname>tx_pdu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
<para>Builds a new RLC PDU segment, from a RLC SDU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tx_pdu</parametername>
</parameternamelist>
<parameterdescription>
<para>the tx_pdu info contained in the tx_window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nof_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Limits the maximum size of the requested PDU. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One PDU segment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="157" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="167" bodyend="226"/>
        <references refid="structsrsgnb_1_1rlc__tx__am__state_1af8b0fd72d1b866b8e8305251f46986e9" compoundref="rlc__tx__am__entity_8h" startline="46">srsgnb::rlc_tx_am_state::tx_next</references>
        <references refid="structsrsgnb_1_1rlc__am__pdu__header_1a1e660013e830afa28cc362eb05251478" compoundref="rlc__am__pdu_8h" startline="58">srsgnb::rlc_am_pdu_header::dc</references>
        <references refid="structsrsgnb_1_1rlc__am__pdu__header_1a601db6dfe465de0f2f088d669bd2c5bc" compoundref="rlc__am__pdu_8h" startline="59">srsgnb::rlc_am_pdu_header::p</references>
        <references refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" compoundref="rlc__tx__am__entity_8cpp" startline="379" endline="452">get_polling_bit</references>
        <references refid="structsrsgnb_1_1rlc__am__pdu__header_1af26c05583708bb42e7647b5a76f895fc" compoundref="rlc__am__pdu_8h" startline="60">srsgnb::rlc_am_pdu_header::si</references>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1af8fa36c12d7476fb613faa0ca8f447fa" compoundref="rlc__tx__am__entity_8cpp" startline="102" endline="165">build_new_pdu</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a5a9ce149d827ef5575e40b89d3fd5648" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::build_continuation_sdu_segment</definition>
        <argsstring>(rlc_tx_amd_pdu_box &amp;tx_pdu, uint32_t nof_bytes)</argsstring>
        <name>build_continuation_sdu_segment</name>
        <param>
          <type><ref refid="structsrsgnb_1_1rlc__tx__amd__pdu__box" kindref="compound">rlc_tx_amd_pdu_box</ref> &amp;</type>
          <declname>tx_pdu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="159" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="228" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1adb59b90eb0cedb246b071fffd1ac24b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::build_retx_pdu</definition>
        <argsstring>(uint32_t nof_bytes)</argsstring>
        <name>build_retx_pdu</name>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="160" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="321" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a4e493ff6286b75dcbc71f509b3b59612" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::build_retx_pdu_without_segmentation</definition>
        <argsstring>(rlc_tx_amd_retx &amp;retx, uint32_t nof_bytes)</argsstring>
        <name>build_retx_pdu_without_segmentation</name>
        <param>
          <type><ref refid="structsrsgnb_1_1rlc__tx__amd__retx" kindref="compound">rlc_tx_amd_retx</ref> &amp;</type>
          <declname>retx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="161" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1ad7305faa2d9d13f8789ef099c2fcc598" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::build_retx_pdu_with_segmentation</definition>
        <argsstring>(rlc_tx_amd_retx &amp;retx, uint32_t nof_bytes)</argsstring>
        <name>build_retx_pdu_with_segmentation</name>
        <param>
          <type><ref refid="structsrsgnb_1_1rlc__tx__amd__retx" kindref="compound">rlc_tx_amd_retx</ref> &amp;</type>
          <declname>retx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="162" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a731ccd62cbf00ca2032822816af7cf9b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlc_tx_am_entity::handle_buffer_state_update</definition>
        <argsstring>()</argsstring>
        <name>handle_buffer_state_update</name>
        <briefdescription>
<para>Called when buffer state needs to be updated and forwarded to lower layers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="165" column="8" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="346" bodyend="351"/>
        <references refid="classsrsgnb_1_1rlc__tx__buffer__state__update__notifier_1a928e0d6dcbfb7a0a3320cae973e17932">srsgnb::rlc_tx_buffer_state_update_notifier::on_buffer_state_update</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a0eddbb9c921c1998f66432ade3f63eb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rlc_tx_am_entity::get_buffer_state_nolock</definition>
        <argsstring>()</argsstring>
        <name>get_buffer_state_nolock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="167" column="12" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="353" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a168f0b6c36ca1caa40be42eb9a6edada" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::rlc_tx_am_entity::log_state</definition>
        <argsstring>(srslog::basic_levels level)</argsstring>
        <name>log_state</name>
        <param>
          <type>srslog::basic_levels</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="174" column="8" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="174" bodyend="186"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a68087290b83ef93ac11e4af3852197cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlc_tx_am_entity::rlc_tx_am_entity</definition>
        <argsstring>(du_ue_index_t du_index, lcid_t lcid, const rlc_tx_am_config &amp;config, rlc_tx_upper_layer_control_notifier &amp;upper_cn, rlc_tx_buffer_state_update_notifier &amp;buffer_state_notif, timer_manager &amp;timers)</argsstring>
        <name>rlc_tx_am_entity</name>
        <param>
          <type><ref refid="namespacesrsgnb_1aa13f1b28a1a8fe4bb461b7eeee862c0c" kindref="member">du_ue_index_t</ref></type>
          <declname>du_index</declname>
        </param>
        <param>
          <type><ref refid="namespacesrsgnb_1a27826553cbb7866e22f1ed49d585339e" kindref="member">lcid_t</ref></type>
          <declname>lcid</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__tx__am__config" kindref="compound">rlc_tx_am_config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1rlc__tx__upper__layer__control__notifier" kindref="compound">rlc_tx_upper_layer_control_notifier</ref> &amp;</type>
          <declname>upper_cn</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1rlc__tx__buffer__state__update__notifier" kindref="compound">rlc_tx_buffer_state_update_notifier</ref> &amp;</type>
          <declname>buffer_state_notif</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1timer__manager" kindref="compound">timer_manager</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="105" column="3" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="15" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a5ba9ad2a00e2f8319d0011e1f4f22fac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::rlc_tx_am_entity::set_status_provider</definition>
        <argsstring>(rlc_rx_am_status_provider *status_provider_)</argsstring>
        <name>set_status_provider</name>
        <param>
          <type><ref refid="classsrsgnb_1_1rlc__rx__am__status__provider" kindref="compound">rlc_rx_am_status_provider</ref> *</type>
          <declname>status_provider_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="113" column="8" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1aefd48f6a90b1f4de6f701feea72d50b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rlc_tx_am_entity::handle_sdu</definition>
        <argsstring>(rlc_sdu sdu) override</argsstring>
        <name>handle_sdu</name>
        <reimplements refid="classsrsgnb_1_1rlc__tx__sdu__handler_1a8f0140b6c5710145a56405ec42fc1d4c">handle_sdu</reimplements>
        <param>
          <type><ref refid="structsrsgnb_1_1rlc__sdu" kindref="compound">rlc_sdu</ref></type>
          <declname>sdu</declname>
        </param>
        <briefdescription>
<para>Interface for higher layers to pass SDUs into RLC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sdu</parametername>
</parameternamelist>
<parameterdescription>
<para>SDU to be handled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="116" column="8" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="41" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a722242b95fd712889bb30761bf9383c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__slice__chain" kindref="compound">byte_buffer_slice_chain</ref></type>
        <definition>byte_buffer_slice_chain rlc_tx_am_entity::pull_pdu</definition>
        <argsstring>(uint32_t nof_bytes) override</argsstring>
        <name>pull_pdu</name>
        <reimplements refid="classsrsgnb_1_1rlc__tx__pdu__transmitter_1a1985838f9e457439b8de6a7152f46566">pull_pdu</reimplements>
        <param>
          <type>uint32_t</type>
          <declname>nof_bytes</declname>
        </param>
        <briefdescription>
<para>Pulls a PDU from the lower end of the RLC TX entity An empty PDU is returned if nof_bytes is insufficient or the TX buffer is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nof_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Limits the maximum size of the requested PDU. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>One PDU </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="119" column="27" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="60" bodyend="100"/>
        <references refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" compoundref="byte__buffer_8h" startline="512" endline="512">srsgnb::byte_buffer::length</references>
        <references refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" compoundref="rlc__am__pdu_8h" startline="17">srsgnb::INVALID_RLC_SN</references>
        <references refid="classsrsgnb_1_1rlc__tx__am__entity_1af8fa36c12d7476fb613faa0ca8f447fa" compoundref="rlc__tx__am__entity_8cpp" startline="102" endline="165">build_new_pdu</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1ac610ab8a5e2fd8da6bfcf7e5007988a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t rlc_tx_am_entity::get_buffer_state</definition>
        <argsstring>() override</argsstring>
        <name>get_buffer_state</name>
        <reimplements refid="classsrsgnb_1_1rlc__tx__pdu__transmitter_1a4788ef0e6787f3fdbaa1dc4c9f5ee6d0">get_buffer_state</reimplements>
        <briefdescription>
<para>Get the buffer status information This function provides the current buffer state of the RLC TX entity. This is the gross total size required to fully flush the TX entity (potentially by multiple calls to pull_pdu). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Provides the current buffer state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="121" column="12" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="340" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a8773fc7e74da7345a79ab73737cfe549" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void srsgnb::rlc_tx_am_entity::handle_status_pdu</definition>
        <argsstring>(rlc_am_status_pdu status_pdu) override</argsstring>
        <name>handle_status_pdu</name>
        <reimplements refid="classsrsgnb_1_1rlc__tx__am__status__handler_1aa1103e4fb7ba0c31fd5dfcc5a9647b83">handle_status_pdu</reimplements>
        <param>
          <type><ref refid="classsrsgnb_1_1rlc__am__status__pdu" kindref="compound">rlc_am_status_pdu</ref></type>
          <declname>status_pdu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="124" column="8" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t rlc_tx_am_entity::get_polling_bit</definition>
        <argsstring>(uint32_t sn, bool is_retx, uint32_t payload_size)</argsstring>
        <name>get_polling_bit</name>
        <param>
          <type>uint32_t</type>
          <declname>sn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_retx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>payload_size</declname>
        </param>
        <briefdescription>
<para>Determines whether the polling bit in a PDU header has to be set or not Ref: TS 38.322, Sec. 5.3.3.2. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sn</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence number of PDU to be transmitted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_retx</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags whether this PDU is a retransmission or not </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data field mapped to the AMD PDU </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the polling bit has to be set, otherwise 0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="135" column="11" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="379" bodyend="452"/>
        <references refid="structsrsgnb_1_1rlc__tx__am__state_1a5e87e66de39bba1da8cd8ca248a7050f" compoundref="rlc__tx__am__entity_8h" startline="51">srsgnb::rlc_tx_am_state::poll_sn</references>
        <references refid="structsrsgnb_1_1rlc__tx__am__state_1a5e34da4b2c7e833578f915e42049f8e4" compoundref="rlc__tx__am__entity_8h" startline="56">srsgnb::rlc_tx_am_state::pdu_without_poll</references>
        <references refid="structsrsgnb_1_1rlc__tx__am__state_1a4031913b049f7f519501c04410368083" compoundref="rlc__tx__am__entity_8h" startline="61">srsgnb::rlc_tx_am_state::byte_without_poll</references>
        <references refid="structsrsgnb_1_1rlc__tx__am__config_1ae6a78fba579e6344bd50c2df663bd999" compoundref="rlc__config_8h" startline="105">srsgnb::rlc_tx_am_config::poll_pdu</references>
        <references refid="structsrsgnb_1_1rlc__tx__am__config_1ae1e65c0214f5dc55d1d0cf8387d25085" compoundref="rlc__config_8h" startline="106">srsgnb::rlc_tx_am_config::poll_byte</references>
        <references refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" compoundref="rlc__am__pdu_8h" startline="17">srsgnb::INVALID_RLC_SN</references>
        <references refid="structsrsgnb_1_1rlc__tx__am__config_1a4b625f0ba778414cd0821c7df4308b2c" compoundref="rlc__config_8h" startline="101">srsgnb::rlc_tx_am_config::t_poll_retx</references>
        <references refid="classsrsgnb_1_1rlc__tx__am__entity_1ac74e43272e640075fe9a5aa607fffa93" compoundref="rlc__tx__am__entity_8h" startline="102">poll_retransmit_timer</references>
        <references refid="classsrsgnb_1_1unique__timer_1acfc060efe96ca206383e824697101d92" compoundref="timers_8h" startline="296" endline="296">srsgnb::unique_timer::is_running</references>
        <references refid="classsrsgnb_1_1unique__timer_1a4b169309f8b5fd965a0dec15544ae2bc" compoundref="timers_8h" startline="322" endline="326">srsgnb::unique_timer::run</references>
        <references refid="classsrsgnb_1_1unique__timer_1aaf7fbaf8c33be557b958f50f7ce09cf0" compoundref="timers_8h" startline="329" endline="334">srsgnb::unique_timer::stop</references>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1af8fa36c12d7476fb613faa0ca8f447fa" compoundref="rlc__tx__am__entity_8cpp" startline="102" endline="165">build_new_pdu</referencedby>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1af71491ffa5dda713543171811ade22fb" compoundref="rlc__tx__am__entity_8cpp" startline="167" endline="226">build_new_sdu_segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a4c07195b4b39b95b84bdac771cc11d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlc_tx_am_entity::timer_expired</definition>
        <argsstring>(uint32_t timeout_id)</argsstring>
        <name>timer_expired</name>
        <param>
          <type>uint32_t</type>
          <declname>timeout_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="138" column="8" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="454" bodyend="457"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1rlc__tx__am__entity_1a153aa2dbe17e0bd6bdf1230921fd40d6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="structsrsgnb_1_1rlc__pdu__window__base" kindref="compound">rlc_pdu_window_base</ref>&lt; <ref refid="structsrsgnb_1_1rlc__tx__amd__pdu__box" kindref="compound">rlc_tx_amd_pdu_box</ref> &gt; &gt;</type>
        <definition>std::unique_ptr&lt; rlc_pdu_window_base&lt; rlc_tx_amd_pdu_box &gt; &gt; rlc_tx_am_entity::create_tx_window</definition>
        <argsstring>(rlc_am_sn_size sn_size)</argsstring>
        <name>create_tx_window</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref></type>
          <declname>sn_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the tx_window according to sn_size <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sn_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the sequence number (SN) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unique pointer to tx_window instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_tx_am_entity.h" line="172" column="26" bodyfile="lib/rlc/rlc_tx_am_entity.cpp" bodystart="459" bodyend="475"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srsgnb::rlc_tx_entity</label>
        <link refid="classsrsgnb_1_1rlc__tx__entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb::rlc_bearer_tx_metrics</label>
        <link refid="classsrsgnb_1_1rlc__bearer__tx__metrics"/>
      </node>
      <node id="4">
        <label>srsgnb::rlc_tx_pdu_transmitter</label>
        <link refid="classsrsgnb_1_1rlc__tx__pdu__transmitter"/>
      </node>
      <node id="3">
        <label>srsgnb::rlc_tx_sdu_handler</label>
        <link refid="classsrsgnb_1_1rlc__tx__sdu__handler"/>
      </node>
      <node id="1">
        <label>srsgnb::rlc_tx_am_entity</label>
        <link refid="classsrsgnb_1_1rlc__tx__am__entity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb::rlc_tx_am_status_handler</label>
        <link refid="classsrsgnb_1_1rlc__tx__am__status__handler"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>srsgnb::timer_manager</label>
        <link refid="classsrsgnb_1_1timer__manager"/>
        <childnode refid="19" relation="usage">
          <edgelabel>-free_list</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>srsgnb::unique_timer</label>
        <link refid="classsrsgnb_1_1unique__timer"/>
        <childnode refid="15" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>srsgnb::dyn_blocking_queue&lt; srsgnb::rlc_sdu, srsgnb::rlc_sdu_queue::push_callback, srsgnb::rlc_sdu_queue::pop_callback &gt;</label>
        <link refid="classsrsgnb_1_1dyn__blocking__queue"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>T</label>
      </node>
      <node id="29">
        <label>srsgnb::rlc_sdu_queue::pop_callback</label>
        <link refid="structsrsgnb_1_1rlc__sdu__queue_1_1pop__callback"/>
      </node>
      <node id="28">
        <label>srsgnb::detail::base_blocking_queue&lt; dyn_circular_buffer&lt; srsgnb::rlc_sdu &gt;, srsgnb::rlc_sdu_queue::push_callback, srsgnb::rlc_sdu_queue::pop_callback &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__blocking__queue"/>
        <childnode refid="29" relation="usage">
          <edgelabel>+pop_func</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>#circ_buffer</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>+push_func</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>srslog::detail::logger_impl&lt; T, Enum &gt;</label>
        <link refid="classsrslog_1_1detail_1_1logger__impl"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::rlc_tx_entity</label>
        <link refid="classsrsgnb_1_1rlc__tx__entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#buffer_state_notifier</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#upper_cn</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#logger</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>srsgnb::unique_function&lt; void(timer_id_t)&gt;</label>
        <link refid="classsrsgnb_1_1unique__function"/>
      </node>
      <node id="5">
        <label>srsgnb::rlc_bearer_tx_metrics</label>
        <link refid="classsrsgnb_1_1rlc__bearer__tx__metrics"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-metrics</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>srsgnb::rlc_sdu_queue</label>
        <link refid="classsrsgnb_1_1rlc__sdu__queue"/>
        <childnode refid="27" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>srsgnb::intrusive_forward_list_element&lt; Tag &gt;</label>
        <link refid="structsrsgnb_1_1intrusive__forward__list__element"/>
      </node>
      <node id="16">
        <label>srsgnb::intrusive_double_linked_list_element&lt;&gt;</label>
        <link refid="structsrsgnb_1_1intrusive__double__linked__list__element"/>
      </node>
      <node id="22">
        <label>srsgnb::rlc_tx_am_config</label>
        <link refid="structsrsgnb_1_1rlc__tx__am__config"/>
      </node>
      <node id="7">
        <label>srsgnb::rlc_tx_buffer_state_update_notifier</label>
        <link refid="classsrsgnb_1_1rlc__tx__buffer__state__update__notifier"/>
      </node>
      <node id="17">
        <label>srsgnb::intrusive_forward_list_element&lt;&gt;</label>
        <link refid="structsrsgnb_1_1intrusive__forward__list__element"/>
      </node>
      <node id="4">
        <label>srsgnb::rlc_tx_pdu_transmitter</label>
        <link refid="classsrsgnb_1_1rlc__tx__pdu__transmitter"/>
      </node>
      <node id="19">
        <label>srsgnb::intrusive_forward_list&lt; srsgnb::timer_manager::timer_handle &gt;</label>
        <link refid="classsrsgnb_1_1intrusive__forward__list"/>
        <childnode refid="20" relation="usage">
          <edgelabel>-node</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::rlc_tx_sdu_handler</label>
        <link refid="classsrsgnb_1_1rlc__tx__sdu__handler"/>
      </node>
      <node id="25">
        <label>srsgnb::rlc_tx_am_state</label>
        <link refid="structsrsgnb_1_1rlc__tx__am__state"/>
      </node>
      <node id="24">
        <label>srsgnb::rlc_rx_am_status_provider</label>
        <link refid="classsrsgnb_1_1rlc__rx__am__status__provider"/>
      </node>
      <node id="23">
        <label>srsgnb::pdu_retx_queue_list&lt; srsgnb::rlc_tx_amd_retx &gt;</label>
        <link refid="classsrsgnb_1_1pdu__retx__queue__list"/>
      </node>
      <node id="32">
        <label>srsgnb::rlc_sdu_queue::push_callback</label>
        <link refid="structsrsgnb_1_1rlc__sdu__queue_1_1push__callback"/>
      </node>
      <node id="31">
        <label>srsgnb::detail::base_circular_buffer&lt; std::vector&lt; detail::type_storage&lt; srsgnb::rlc_sdu &gt; &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__circular__buffer"/>
      </node>
      <node id="1">
        <label>srsgnb::rlc_tx_am_entity</label>
        <link refid="classsrsgnb_1_1rlc__tx__am__entity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-poll_retransmit_timer</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>-cfg</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>-retx_queue</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>-status_provider</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>-st</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>-sdu_queue</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>srsgnb::rlc_tx_am_status_handler</label>
        <link refid="classsrsgnb_1_1rlc__tx__am__status__handler"/>
      </node>
      <node id="12">
        <label>srslog::detail::mutex</label>
        <link refid="classsrslog_1_1detail_1_1mutex"/>
      </node>
      <node id="8">
        <label>srsgnb::rlc_tx_upper_layer_control_notifier</label>
        <link refid="classsrsgnb_1_1rlc__tx__upper__layer__control__notifier"/>
      </node>
      <node id="6">
        <label>srsgnb::rlc_bearer_tx_metrics_container</label>
        <link refid="structsrsgnb_1_1rlc__bearer__tx__metrics__container"/>
      </node>
      <node id="30">
        <label>srsgnb::dyn_circular_buffer&lt; srsgnb::rlc_sdu &gt;</label>
        <link refid="classsrsgnb_1_1dyn__circular__buffer"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>srsgnb::bearer_logger</label>
        <link refid="classsrsgnb_1_1bearer__logger"/>
        <childnode refid="10" relation="usage">
          <edgelabel>-logger</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>srsgnb::timer_manager::timer_handle</label>
        <link refid="structsrsgnb_1_1timer__manager_1_1timer__handle"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+parent</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>+callback</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/rlc/rlc_tx_am_entity.h" line="65" column="1" bodyfile="lib/rlc/rlc_tx_am_entity.h" bodystart="64" bodyend="187"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1rlc__tx__entity_1adeaa6f950e5e93b62648a9eab780d66d" prot="protected" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>buffer_state_notifier</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a5a9ce149d827ef5575e40b89d3fd5648" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>build_continuation_sdu_segment</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1af8fa36c12d7476fb613faa0ca8f447fa" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>build_new_pdu</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1af71491ffa5dda713543171811ade22fb" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>build_new_sdu_segment</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1adb59b90eb0cedb246b071fffd1ac24b2" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>build_retx_pdu</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1ad7305faa2d9d13f8789ef099c2fcc598" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>build_retx_pdu_with_segmentation</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a4e493ff6286b75dcbc71f509b3b59612" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>build_retx_pdu_without_segmentation</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a8dbd3d7e8371839c527f4b1e621ec54b" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>cfg</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a153aa2dbe17e0bd6bdf1230921fd40d6" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>create_tx_window</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1a9ceee853a70254b037a0be3c5d1e6ac7" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>get_and_reset_metrics</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1ac610ab8a5e2fd8da6bfcf7e5007988a7" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>get_buffer_state</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a0eddbb9c921c1998f66432ade3f63eb5" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>get_buffer_state_nolock</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1ae39a9e824b7dcde08c2e6cab3bcc1f02" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>get_metrics</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>get_polling_bit</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a731ccd62cbf00ca2032822816af7cf9b" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>handle_buffer_state_update</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1aefd48f6a90b1f4de6f701feea72d50b9" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>handle_sdu</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a8773fc7e74da7345a79ab73737cfe549" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>handle_status_pdu</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1ac86ef06db9641d1746d31f691d1d4bea" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>head_max_size</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1ac65d3f86fbb83584c47d80886cd03ebf" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>head_min_size</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a168f0b6c36ca1caa40be42eb9a6edada" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>log_state</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__entity_1a4608983200d86175a185104744f799d1" prot="protected" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>logger</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1a3fda1134cb2d93a9ea5f3869aeb7185f" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>metrics</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1aeed70aeb2db753ccfe7517d8975697cd" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>metrics_add_lost_sdus</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1a0a0fa2c793f61452e7eb6c81bcd766a1" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>metrics_add_pdus</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1aa3474cf81f3535b7ce9b0087ab750976" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>metrics_add_sdus</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1adf36ebaf8aac61626b4dd7a98cc7949a" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>metrics_mutex</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a39f9ed8e5334a9e25d4dcd6f624e8803" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>mod</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1aa84e4208ccaf23ccbd61dffdea2f19f5" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>mutex</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1ac74e43272e640075fe9a5aa607fffa93" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>poll_retransmit_timer</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a722242b95fd712889bb30761bf9383c8" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>pull_pdu</name></member>
      <member refid="classsrsgnb_1_1rlc__bearer__tx__metrics_1a4ee2e7e7bebe3cfc8c7e635a5cc62fb5" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>reset_metrics</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a2ea8c2b0be9666b90d6a1e863e0281c4" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>retx_queue</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a68087290b83ef93ac11e4af3852197cb" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>rlc_tx_am_entity</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__entity_1ab8d437677cc4af33b4a4262834607c67" prot="protected" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>rlc_tx_entity</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bee1796bcb55e9a733a409c1f8ddc4d" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>sdu_queue</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a5ba9ad2a00e2f8319d0011e1f4f22fac" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>set_status_provider</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a7e6a05c0dbb97c15a262a18ea3b184c9" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>sn_under_segmentation</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a0f9f6ac44adfa7dee36ada227d002073" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>st</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a7e89a3003299c73037c5d8e888145b48" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>status_provider</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a4c07195b4b39b95b84bdac771cc11d09" prot="public" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>timer_expired</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a3e9af8079691c62ee0682af0049fd6c0" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>tx_mod_base</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1a61165be248710a0765c2bff1a4862bdd" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>tx_window</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__entity_1ae4522fc23d7117d34741ab7291222577" prot="private" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>tx_window_size</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__entity_1afcc9ffecd18aee3dff5165a14d14da30" prot="protected" virt="non-virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>upper_cn</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__am__status__handler_1ade53ac4e170f04f5c9854ddc0995216b" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>~rlc_tx_am_status_handler</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__pdu__transmitter_1a7620d8fd2ad281a9505b92fb14b5c393" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>~rlc_tx_pdu_transmitter</name></member>
      <member refid="classsrsgnb_1_1rlc__tx__sdu__handler_1a6ac90b3ec025fdaf78dc89064052678b" prot="public" virt="virtual"><scope>srsgnb::rlc_tx_am_entity</scope><name>~rlc_tx_sdu_handler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
