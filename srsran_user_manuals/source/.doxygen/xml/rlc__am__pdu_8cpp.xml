<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rlc__am__pdu_8cpp" kind="file" language="C++">
    <compoundname>rlc_am_pdu.cpp</compoundname>
    <includes refid="rlc__am__pdu_8h" local="yes">rlc_am_pdu.h</includes>
    <incdepgraph>
      <node id="43">
        <label>atomic</label>
      </node>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="10">
        <label>limits</label>
      </node>
      <node id="18">
        <label>iterator</label>
      </node>
      <node id="1">
        <label>lib/rlc/rlc_am_pdu.cpp</label>
        <link refid="rlc__am__pdu_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>stdexcept</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="23">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>srsgnb/rlc/rlc_config.h</label>
        <link refid="rlc__config_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>pthread.h</label>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="42">
        <label>tuple</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>array</label>
      </node>
      <node id="40">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cerrno</label>
      </node>
      <node id="4">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="32">
        <label>chrono</label>
      </node>
      <node id="28">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>rlc_am_pdu.h</label>
        <link refid="rlc__am__pdu_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cstring</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlc_am_pdu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Container<sp/>implementation<sp/>for<sp/>pack/unpack<sp/>functions</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">rlc_am_status_pdu::rlc_am_status_pdu(<ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/>sn_size)<sp/>:<sp/>sn_size(sn_size),<sp/>mod_nr(<ref refid="namespacesrsgnb_1a1eaed18b62e5e415ab28856a8b091e25" kindref="member">cardinality</ref>(to_number(sn_size)))</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>nacks_.reserve(<ref refid="namespacesrsgnb_1a96099061f86fcdd3ed47efb290eafd99" kindref="member">RLC_AM_NR_TYP_NACKS</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::reset()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" kindref="member">cpt</ref><sp/><sp/><sp/><sp/>=<sp/>rlc_control_pdu_type::status_pdu;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>=<sp/><ref refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" kindref="member">INVALID_RLC_SN</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.clear();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>=<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::is_continuous_sequence(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>right)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SN<sp/>must<sp/>be<sp/>continuous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right.nack_sn<sp/>!=<sp/>((left.has_nack_range<sp/>?<sp/>left.nack_sn<sp/>+<sp/>left.nack_range<sp/>:<sp/>(left.nack_sn<sp/>+<sp/>1))<sp/>%<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a271cb7be9a8060595bd3b11de7cf6461" kindref="member">mod_nr</ref>))<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Segments<sp/>on<sp/>left<sp/>side<sp/>(if<sp/>present)<sp/>must<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>sdu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.has_so<sp/>&amp;&amp;<sp/>left.so_end<sp/>!=<sp/>rlc_am_status_nack::so_end_of_sdu)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Segments<sp/>on<sp/>right<sp/>side<sp/>(if<sp/>present)<sp/>must<sp/>start<sp/>from<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right.has_so<sp/>&amp;&amp;<sp/>right.so_start<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::push_nack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>nack)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.push_back(nack);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>+=<sp/>nack_size(nack);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>prev<sp/>=<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.back();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_continuous_sequence(prev,<sp/>nack)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.push_back(nack);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>+=<sp/>nack_size(nack);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>previous<sp/>NACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>size<sp/>of<sp/>previous<sp/>NACK<sp/>(add<sp/>updated<sp/>size<sp/>later)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>-=<sp/>nack_size(prev);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>and<sp/>update<sp/>NACK<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>range][NACK<sp/>range]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/>+=<sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>SDU][NACK<sp/>range]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>range][NACK<sp/>SDU]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref>++;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>SDU][NACK<sp/>SDU]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>and<sp/>update<sp/>segment<sp/>offsets<sp/>(if<sp/>required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>SDU][NACK<sp/>segm]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>SDU][NACK<sp/>segm]<sp/>or<sp/>[NACK<sp/>segm][NACK<sp/>segm]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>=<sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>segm][NACK<sp/>SDU]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>=<sp/>rlc_am_status_nack::so_end_of_sdu;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[NACK<sp/>segm][NACK<sp/>SDU]<sp/>or<sp/>[NACK<sp/>SDU][NACK<sp/>SDU]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>updated<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>+=<sp/>nack_size(prev);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::trim(uint32_t<sp/>max_packed_size)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_packed_size<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>trimming<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_packed_size<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>little<sp/>space<sp/>for<sp/>smallest<sp/>possible<sp/>status<sp/>PDU<sp/>(only<sp/>header<sp/>+<sp/>ACK).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>NACKs<sp/>(starting<sp/>from<sp/>the<sp/>back)<sp/>until<sp/>it<sp/>fits<sp/>into<sp/>given<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>note:<sp/>when<sp/>removing<sp/>a<sp/>NACK<sp/>for<sp/>a<sp/>segment,<sp/>we<sp/>have<sp/>to<sp/>remove<sp/>all<sp/>other<sp/>NACKs<sp/>with<sp/>the<sp/>same<sp/>SN<sp/>as<sp/>well,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>TS<sp/>38.322<sp/>Sec.<sp/>5.3.4:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&quot;set<sp/>the<sp/>ACK_SN<sp/>to<sp/>the<sp/>SN<sp/>of<sp/>the<sp/>next<sp/>not<sp/>received<sp/>RLC<sp/>SDU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>which<sp/>is<sp/>not<sp/>indicated<sp/>as<sp/>missing<sp/>in<sp/>the<sp/>resulting<sp/>STATUS<sp/>PDU.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(max_packed_size<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>||<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.back().nack_sn<sp/>==<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref>))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>-=<sp/>nack_size(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.back());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.back().nack_sn;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>.pop_back();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::refresh_packed_size()</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>=<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nack<sp/>:<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>+=<sp/>nack_size(nack);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">uint32_t<sp/>rlc_am_status_pdu::nack_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>nack)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>uint32_t<sp/>result<sp/>=<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" kindref="member">sn_size</ref><sp/>==<sp/>rlc_am_sn_size::size12bits<sp/>?<sp/><ref refid="namespacesrsgnb_1ac2972c338a36558689ea356a5e925d59" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_12bit_sn</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacesrsgnb_1a280691689aa3fda26b9f4b2a3f991993" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_18bit_sn</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_so</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_range</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>Header<sp/>pack/unpack<sp/>helper<sp/>functions</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>Ref:<sp/>3GPP<sp/>TS<sp/>38.322<sp/>v15.3.0<sp/>Section<sp/>6.2.2.4</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>move<sp/>implementation<sp/>from<sp/>header<sp/>to<sp/>this<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>Status<sp/>PDU<sp/>pack/unpack<sp/>functions</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>Ref:<sp/>3GPP<sp/>TS<sp/>38.322<sp/>v16.2.0<sp/>Section<sp/>6.2.2.5</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" kindref="member">rlc_am_status_pdu::is_control_pdu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader" kindref="compound">byte_buffer_reader</ref><sp/>pdu_reader<sp/>=<sp/>pdu;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((*(pdu_reader)<sp/>&gt;&gt;<sp/>7U)<sp/>&amp;<sp/>0x01U)<sp/>==<sp/>to_number(rlc_dc_field::control);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::unpack_12bit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader" kindref="compound">byte_buffer_reader</ref><sp/>pdu_reader<sp/>=<sp/>pdu;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>unpack<sp/>status<sp/>PDU:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check:<sp/>is<sp/>control<sp/>PDU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" kindref="member">is_control_pdu</ref>(pdu))<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>unpack<sp/>status<sp/>PDU:<sp/>input<sp/>is<sp/>not<sp/>a<sp/>status<sp/>PDU&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" kindref="member">cpt</ref><sp/>=<sp/>(rlc_control_pdu_type)((*pdu_reader<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x07);<sp/></highlight><highlight class="comment">//<sp/>3<sp/>bits<sp/>CPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check:<sp/>is<sp/>control<sp/>PDU<sp/>type<sp/>(CPT)<sp/>supported?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" kindref="member">cpt</ref><sp/>!=<sp/>rlc_control_pdu_type::status_pdu)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>control<sp/>PDU<sp/>type:<sp/>reserved<sp/>bits<sp/>are<sp/>set<sp/>in<sp/>CPT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0x0f)<sp/>&lt;&lt;<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>4<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xff);<sp/></highlight><highlight class="comment">//<sp/>last<sp/>8<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>E1<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>uint8_t<sp/>e1<sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x80;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>for<sp/>reserved<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pdu_reader<sp/>&amp;<sp/>0x7f)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU:<sp/>reserved<sp/>bits<sp/>are<sp/>set<sp/>in<sp/>3rd<sp/>Byte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>good,<sp/>continue<sp/>with<sp/>next<sp/>byte<sp/>depending<sp/>on<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e1<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>remaining<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1ac2972c338a36558689ea356a5e925d59" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_12bit_sn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1ac2972c338a36558689ea356a5e925d59" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_12bit_sn</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E1<sp/>flag<sp/>set,<sp/>read<sp/>a<sp/>NACK_SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref><sp/>nack<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x08;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>further<sp/>NACKs<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>e2<sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x04;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>set<sp/>of<sp/>{so_start,<sp/>so_end}<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>e3<sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x02;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>NACK<sp/>range<sp/>follows<sp/>(i.e.<sp/>NACK<sp/>across<sp/>multiple<sp/>SNs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>for<sp/>reserved<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pdu_reader<sp/>&amp;<sp/>0x01)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK:<sp/>reserved<sp/>bits<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xf0)<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e2<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>remaining<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_so</ref>)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK<sp/>SO:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_so</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/>=<sp/>(*pdu_reader)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/>|=<sp/>(*pdu_reader);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>=<sp/>(*pdu_reader)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>|=<sp/>(*pdu_reader);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e3<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>remaining<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_range</ref>)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK<sp/>range:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_range</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(*pdu_reader);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>push_nack(nack);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::unpack_18bit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader" kindref="compound">byte_buffer_reader</ref><sp/>pdu_reader<sp/>=<sp/>pdu;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>unpack<sp/>status<sp/>PDU:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check:<sp/>is<sp/>control<sp/>PDU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" kindref="member">is_control_pdu</ref>(pdu))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>unpack<sp/>status<sp/>PDU:<sp/>input<sp/>is<sp/>not<sp/>a<sp/>status<sp/>PDU&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" kindref="member">cpt</ref><sp/>=<sp/>(rlc_control_pdu_type)((*pdu_reader<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x07);<sp/></highlight><highlight class="comment">//<sp/>3<sp/>bits<sp/>CPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check:<sp/>is<sp/>control<sp/>PDU<sp/>type<sp/>(CPT)<sp/>supported?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" kindref="member">cpt</ref><sp/>!=<sp/>rlc_control_pdu_type::status_pdu)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>control<sp/>PDU<sp/>type:<sp/>reserved<sp/>bits<sp/>are<sp/>set<sp/>in<sp/>CPT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0x0f)<sp/>&lt;&lt;<sp/>14;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>4<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>6;<sp/></highlight><highlight class="comment">//<sp/>center<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xfc)<sp/>&gt;&gt;<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>6<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>E1<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>uint8_t<sp/>e1<sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x02;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>for<sp/>reserved<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pdu_reader<sp/>&amp;<sp/>0x01)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU:<sp/>reserved<sp/>bits<sp/>are<sp/>set<sp/>in<sp/>3rd<sp/>Byte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>good,<sp/>continue<sp/>with<sp/>next<sp/>byte<sp/>depending<sp/>on<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e1<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>remaining<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1a280691689aa3fda26b9f4b2a3f991993" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_18bit_sn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a280691689aa3fda26b9f4b2a3f991993" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_18bit_sn</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>E1<sp/>flag<sp/>set,<sp/>read<sp/>a<sp/>NACK_SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref><sp/>nack<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>center<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xc0)<sp/>&gt;&gt;<sp/>6;<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>2<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>e1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x20;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>further<sp/>NACKs<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>e2<sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x10;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>set<sp/>of<sp/>{so_start,<sp/>so_end}<sp/>follows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>e3<sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x08;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>NACK<sp/>range<sp/>follows<sp/>(i.e.<sp/>NACK<sp/>across<sp/>multiple<sp/>SNs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check<sp/>for<sp/>reserved<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pdu_reader<sp/>&amp;<sp/>0x07)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK:<sp/>reserved<sp/>bits<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e2<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>remaining<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_so</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK<sp/>SO:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_so</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/>=<sp/>(*pdu_reader)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/>|=<sp/>(*pdu_reader);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>=<sp/>(*pdu_reader)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>|=<sp/>(*pdu_reader);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e3<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>remaining<sp/>buffer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.length()<sp/>&lt;<sp/><ref refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_range</ref>)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>status<sp/>PDU<sp/>NACK<sp/>range:<sp/>input<sp/>too<sp/>short,<sp/>{}B<sp/>&lt;<sp/>{}B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu_reader.length(),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_range</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nack.<ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(*pdu_reader);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>push_nack(nack);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classsrsgnb_1_1rlc__am__status__pdu_1ab27f5df216f1146fffff119904b034bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ab27f5df216f1146fffff119904b034bc" kindref="member">rlc_am_status_pdu::unpack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" kindref="member">sn_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size12bits:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unpack_12bit(pdu);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size18bits:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unpack_18bit(pdu);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::pack_12bit(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="408"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_buf;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer" kindref="compound">byte_buffer_writer</ref><sp/>hdr_writer<sp/>=<sp/>hdr_buf;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>header<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(0U);<sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit<sp/>D/C<sp/>field<sp/>and<sp/>3<sp/>bit<sp/>CPT<sp/>are<sp/>all<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>first<sp/>4<sp/>bit<sp/>of<sp/>ACK_SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>&gt;&gt;<sp/>8U)<sp/>&amp;<sp/>0x0fU;<sp/></highlight><highlight class="comment">//<sp/>4<sp/>bits<sp/>ACK_SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>&amp;<sp/>0xffU);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>E1<sp/>flag<sp/>in<sp/>octet<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(0x80U);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(0x00U);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_sn<sp/>&gt;&gt;<sp/>4U)<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_sn<sp/>&amp;<sp/>0x0fU)<sp/>&lt;&lt;<sp/>4U);<sp/></highlight><highlight class="comment">//<sp/>lower<sp/>4<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size()<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x08U;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_so)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x04U;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_nack_range)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x02U;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>E3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_so)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_start<sp/>&gt;&gt;<sp/>8U);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_start);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_end<sp/>&gt;&gt;<sp/>8U);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_end);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_nack_range)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_range);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>pdu.<ref refid="classsrsgnb_1_1byte__buffer_1a5b3dd691d060a75288592940af781ce3" kindref="member">chain_before</ref>(std::move(hdr_buf));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_status_pdu::pack_18bit(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="457"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_buf;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer" kindref="compound">byte_buffer_writer</ref><sp/>hdr_writer<sp/>=<sp/>hdr_buf;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>header<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(0U);<sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit<sp/>D/C<sp/>field<sp/>and<sp/>3<sp/>bit<sp/>CPT<sp/>are<sp/>all<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>&gt;&gt;<sp/>14U)<sp/>&amp;<sp/>0x0fU;<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>4<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>&gt;&gt;<sp/>6U)<sp/>&amp;<sp/>0xffU);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>center<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>&lt;&lt;<sp/>2U)<sp/>&amp;<sp/>0xfcU);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lower<sp/>6<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>E1<sp/>flag<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x02;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_sn<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>upper<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_sn<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>0xffU);<sp/><sp/></highlight><highlight class="comment">//<sp/>center<sp/>8<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>((<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_sn<sp/>&lt;&lt;<sp/>6)<sp/>&amp;<sp/>0xc0U);<sp/><sp/></highlight><highlight class="comment">//<sp/>lower<sp/>2<sp/>bits<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>(uint32_t)(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>.size()<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x20U;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>E1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_so)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x10U;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>E2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_nack_range)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>|=<sp/>0x08U;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>E3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_so)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_start<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_start);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_end<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].so_end);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].has_nack_range)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref>[i].nack_range);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>pdu.<ref refid="classsrsgnb_1_1byte__buffer_1a5b3dd691d060a75288592940af781ce3" kindref="member">chain_before</ref>(std::move(hdr_buf));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="classsrsgnb_1_1rlc__am__status__pdu_1afcb27467fb6a1148ef2573c24efe4034" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1afcb27467fb6a1148ef2573c24efe4034" kindref="member">rlc_am_status_pdu::pack</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="506"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" kindref="member">sn_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size12bits:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pack_12bit(pdu);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size18bits:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pack_18bit(pdu);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/rlc/rlc_am_pdu.cpp"/>
  </compounddef>
</doxygen>
