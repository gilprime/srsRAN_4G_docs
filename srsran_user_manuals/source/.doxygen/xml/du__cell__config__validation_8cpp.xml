<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="du__cell__config__validation_8cpp" kind="file" language="C++">
    <compoundname>du_cell_config_validation.cpp</compoundname>
    <includes refid="du__cell__config__validation_8h" local="yes">srsgnb/du/du_cell_config_validation.h</includes>
    <includes local="yes">srsgnb/asn1/rrc_nr/rrc_nr.h</includes>
    <includes refid="band__helper_8h" local="yes">srsgnb/ran/band_helper.h</includes>
    <includes refid="bs__channel__bandwidth_8h" local="yes">srsgnb/ran/bs_channel_bandwidth.h</includes>
    <includes refid="pdcch__type0__css__coreset__config_8h" local="yes">srsgnb/ran/pdcch/pdcch_type0_css_coreset_config.h</includes>
    <includes refid="ssb__mapping_8h" local="yes">srsgnb/ran/ssb_mapping.h</includes>
    <includes refid="sched__consts_8h" local="yes">srsgnb/scheduler/sched_consts.h</includes>
    <incdepgraph>
      <node id="42">
        <label>atomic</label>
      </node>
      <node id="66">
        <label>srsgnb/ran/resource_allocation/rb_interval.h</label>
        <link refid="rb__interval_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>srsgnb/adt/bounded_bitset.h</label>
        <link refid="bounded__bitset_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>srsgnb/ran/subcarrier_spacing.h</label>
        <link refid="subcarrier__spacing_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb/du/du_cell_config_validation.h</label>
        <link refid="du__cell__config__validation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>system_error</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="79">
        <label>srsgnb/asn1/rrc_nr/rrc_nr.h</label>
      </node>
      <node id="72">
        <label>srsgnb/ran/frame_types.h</label>
        <link refid="frame__types_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>limits</label>
      </node>
      <node id="17">
        <label>iterator</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>stdint.h</label>
      </node>
      <node id="77">
        <label>srsgnb/ran/prach/restricted_set_config.h</label>
        <link refid="restricted__set__config_8h_source"/>
      </node>
      <node id="44">
        <label>srsgnb/du/du_cell_config.h</label>
        <link refid="du__cell__config_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>srsgnb/ran/carrier_configuration.h</label>
        <link refid="carrier__configuration_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="41">
        <label>cassert</label>
      </node>
      <node id="62">
        <label>detail/type_storage.h</label>
        <link refid="type__storage_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>stdexcept</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>dmrs.h</label>
        <link refid="dmrs_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="4">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>srsgnb/ran/ssb_properties.h</label>
        <link refid="ssb__properties_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>srsgnb/ran/ssb_configuration.h</label>
        <link refid="ssb__configuration_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>srsgnb/phy/constants.h</label>
        <link refid="constants_8h_source"/>
      </node>
      <node id="64">
        <label>prb_grant.h</label>
        <link refid="prb__grant_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>srsgnb/ran/slot_point.h</label>
        <link refid="slot__point_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>srsgnb/ran/pdcch/coreset.h</label>
        <link refid="coreset_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>pthread.h</label>
      </node>
      <node id="58">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>srsgnb/ran/ssb_mapping.h</label>
        <link refid="ssb__mapping_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="3">
        <label>srsgnb/adt/expected.h</label>
        <link refid="expected_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>bitset</label>
      </node>
      <node id="40">
        <label>tuple</label>
      </node>
      <node id="10">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="63">
        <label>utility</label>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="84">
        <label>srsgnb/scheduler/sched_consts.h</label>
        <link refid="sched__consts_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>srsgnb/adt/interval.h</label>
        <link refid="interval_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>resource_block_group.h</label>
        <link refid="resource__block__group_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>srsgnb/ran/frequency_range.h</label>
        <link refid="frequency__range_8h_source"/>
      </node>
      <node id="25">
        <label>cerrno</label>
      </node>
      <node id="71">
        <label>span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>band_helper.h</label>
        <link refid="band__helper_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cstddef</label>
      </node>
      <node id="54">
        <label>srsgnb/scheduler/bwp_configuration.h</label>
        <link refid="bwp__configuration_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>srsgnb/adt/bounded_integer.h</label>
        <link refid="bounded__integer_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>srsgnb/adt/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>srsgnb/ran/sliv.h</label>
        <link refid="sliv_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>srsgnb/ran/ofdm_symbol_range.h</label>
        <link refid="ofdm__symbol__range_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>srsgnb/ran/pdcch/pdcch_constants.h</label>
        <link refid="pdcch__constants_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>srsgnb/ran/resource_block.h</label>
        <link refid="resource__block_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>type_traits</label>
      </node>
      <node id="80">
        <label>srsgnb/ran/bs_channel_bandwidth.h</label>
        <link refid="bs__channel__bandwidth_8h_source"/>
      </node>
      <node id="59">
        <label>complex</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="81">
        <label>srsgnb/ran/pdcch/pdcch_type0_css_coreset_config.h</label>
        <link refid="pdcch__type0__css__coreset__config_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>srsgnb/ran/pci.h</label>
        <link refid="pci_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>srsgnb/srslog/bundled/fmt/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="60">
        <label>inttypes.h</label>
      </node>
      <node id="1">
        <label>lib/du/du_cell_config_validation.cpp</label>
        <link refid="du__cell__config__validation_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>srsgnb/adt/slot_array.h</label>
        <link refid="slot__array_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1a02e6d60eeaa4755de26bb6882b0412e8" prot="public" static="no">
        <name>HANDLE_RETURN</name>
        <param><defname>cond</defname></param>
        <initializer>  {                                                                                                                    \
    auto ret = cond;                                                                                                   \
    if (ret.is_error()) {                                                                                              \
      return ret;                                                                                                      \
    }                                                                                                                  \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="21" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1ae8c7977defae49b23e89d23938cc84a3" prot="public" static="no">
        <name>CHECK_TRUE</name>
        <param><defname>cond</defname></param>
        <param><defname>...</defname></param>
        <initializer>  if (not(cond)) {                                                                                                     \
    return {fmt::format(__VA_ARGS__)};                                                                                 \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="29" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1af74dadcc7d3f6eaf1553ce1f2992380f" prot="public" static="no">
        <name>CHECK_COMPARE_</name>
        <param><defname>val</defname></param>
        <param><defname>expected_val</defname></param>
        <param><defname>comparison</defname></param>
        <param><defname>...</defname></param>
        <initializer>  CHECK_TRUE(                                                                                                          \
      (val comparison expected_val), &quot;Invalid {} ({} &quot; #comparison &quot;{})&quot;, fmt::format(__VA_ARGS__), val, expected_val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="34" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1ae892f53acd97ac3e528713fdc32d5ef3" prot="public" static="no">
        <name>CHECK_EQ</name>
        <param><defname>val</defname></param>
        <param><defname>expected_val</defname></param>
        <param><defname>...</defname></param>
        <initializer>CHECK_TRUE((val == expected_val), &quot;Invalid {} ({} != {})&quot;, fmt::format(__VA_ARGS__), val, expected_val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="38" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1a2dd2d71a6ea64a232131d9c6ed25e631" prot="public" static="no">
        <name>CHECK_NEQ</name>
        <param><defname>val</defname></param>
        <param><defname>forbidden_val</defname></param>
        <param><defname>...</defname></param>
        <initializer>CHECK_TRUE((val != forbidden_val), &quot;Invalid {} ({} == {})&quot;, fmt::format(__VA_ARGS__), val, forbidden_val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="41" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1aae4c65f87cdf84ed70976fd909108d6a" prot="public" static="no">
        <name>CHECK_EQ_OR_BELOW</name>
        <param><defname>val</defname></param>
        <param><defname>max_val</defname></param>
        <param><defname>...</defname></param>
        <initializer>CHECK_TRUE((val &lt;= max_val), &quot;Invalid {} ({} &gt; {})&quot;, fmt::format(__VA_ARGS__), val, max_val)</initializer>
        <briefdescription>
<para>Checks if &quot;val&quot; is below or equal to &quot;max_val&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="45" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="du__cell__config__validation_8cpp_1a6ab8017d2a65a277e9d2175428d7f3d4" prot="public" static="no">
        <name>CHECK_BELOW</name>
        <param><defname>val</defname></param>
        <param><defname>max_val</defname></param>
        <param><defname>...</defname></param>
        <initializer>CHECK_TRUE((val &lt; max_val), &quot;Invalid {} ({} &gt;= {})&quot;, fmt::format(__VA_ARGS__), val, max_val)</initializer>
        <briefdescription>
<para>Checks if &quot;val&quot; is below &quot;max_val&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="49" column="9" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="du__cell__config__validation_8cpp_1a10d4fea6784f07bfdf2df228d828704d" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1expected" kindref="compound">error_type</ref>&lt; std::string &gt;</type>
        <definition>using check_outcome =  error_type&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>check_outcome</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="55" column="1" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="du__cell__config__validation_8cpp_1a9d56ba25ed893cb07bfe18b8bff91969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ASN1Enumerated</type>
          </param>
          <param>
            <type>typename Number</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool is_valid_enum_number</definition>
        <argsstring>(Number number)</argsstring>
        <name>is_valid_enum_number</name>
        <param>
          <type>Number</type>
          <declname>number</declname>
        </param>
        <briefdescription>
<para>Helper function to verify if a number belongs to the list of possible values of an ASN.1 enumerated type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="59" column="6" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="du__cell__config__validation_8cpp_1a5e8c7fbe32938a63c42b5ed691e7c350" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref></type>
        <definition>static check_outcome is_coreset0_ss0_idx_valid</definition>
        <argsstring>(const du_cell_config &amp;cell_cfg)</argsstring>
        <name>is_coreset0_ss0_idx_valid</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref> &amp;</type>
          <declname>cell_cfg</declname>
        </param>
        <briefdescription>
<para>Checks whether CORESET#0 table index is valid as per TS38.213, Table 13-{1,...,10}. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="66" column="22" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="66" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="du__cell__config__validation_8cpp_1aaac89a74b1c4c5591659cb18563dbc50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref></type>
        <definition>static check_outcome is_coreset0_params_valid</definition>
        <argsstring>(const du_cell_config &amp;cell_cfg)</argsstring>
        <name>is_coreset0_params_valid</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref> &amp;</type>
          <declname>cell_cfg</declname>
        </param>
        <briefdescription>
<para>Checks whether CORESET#0 configuration matches the values specified in TS38.211-7.3.2.2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="90" column="22" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="90" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="du__cell__config__validation_8cpp_1aae3e09a0df7be075398dfc6522212e61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref></type>
        <definition>static check_outcome is_search_space_valid</definition>
        <argsstring>(const search_space_configuration &amp;ss_cfg)</argsstring>
        <name>is_search_space_valid</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1search__space__configuration" kindref="compound">search_space_configuration</ref> &amp;</type>
          <declname>ss_cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="133" column="22" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="133" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="du__cell__config__validation_8cpp_1ab8e64f9605e0a1d9b480ec4196e3a861" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref></type>
        <definition>static check_outcome check_dl_config_common</definition>
        <argsstring>(const du_cell_config &amp;cell_cfg)</argsstring>
        <name>check_dl_config_common</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref> &amp;</type>
          <declname>cell_cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="149" column="22" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="149" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="du__cell__config__validation_8cpp_1a29f63fe7db4e11d811b3d25bbb3c4d30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref></type>
        <definition>static check_outcome check_ssb_configuration</definition>
        <argsstring>(const du_cell_config &amp;cell_cfg)</argsstring>
        <name>check_ssb_configuration</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref> &amp;</type>
          <declname>cell_cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/du/du_cell_config_validation.cpp" line="185" column="22" bodyfile="lib/du/du_cell_config_validation.cpp" bodystart="185" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/du/du_cell_config_validation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/asn1/rrc_nr/rrc_nr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/band_helper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/bs_channel_bandwidth.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/pdcch/pdcch_type0_css_coreset_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/ssb_mapping.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/scheduler/sched_consts.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HANDLE_RETURN(cond)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>auto<sp/>ret<sp/>=<sp/>cond;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(ret.is_error())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ret;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_TRUE(cond,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/>if<sp/>(not(cond))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>{fmt::format(__VA_ARGS__)};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_COMPARE_(val,<sp/>expected_val,<sp/>comparison,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>CHECK_TRUE(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(val<sp/>comparison<sp/>expected_val),<sp/>&quot;Invalid<sp/>{}<sp/>({}<sp/>&quot;<sp/>#comparison<sp/>&quot;{})&quot;,<sp/>fmt::format(__VA_ARGS__),<sp/>val,<sp/>expected_val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_EQ(val,<sp/>expected_val,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>CHECK_TRUE((val<sp/>==<sp/>expected_val),<sp/>&quot;Invalid<sp/>{}<sp/>({}<sp/>!=<sp/>{})&quot;,<sp/>fmt::format(__VA_ARGS__),<sp/>val,<sp/>expected_val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_NEQ(val,<sp/>forbidden_val,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/>CHECK_TRUE((val<sp/>!=<sp/>forbidden_val),<sp/>&quot;Invalid<sp/>{}<sp/>({}<sp/>==<sp/>{})&quot;,<sp/>fmt::format(__VA_ARGS__),<sp/>val,<sp/>forbidden_val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#define<sp/>CHECK_EQ_OR_BELOW(val,<sp/>max_val,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/>CHECK_TRUE((val<sp/>&lt;=<sp/>max_val),<sp/>&quot;Invalid<sp/>{}<sp/>({}<sp/>&gt;<sp/>{})&quot;,<sp/>fmt::format(__VA_ARGS__),<sp/>val,<sp/>max_val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">#define<sp/>CHECK_BELOW(val,<sp/>max_val,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/>CHECK_TRUE((val<sp/>&lt;<sp/>max_val),<sp/>&quot;Invalid<sp/>{}<sp/>({}<sp/>&gt;=<sp/>{})&quot;,<sp/>fmt::format(__VA_ARGS__),<sp/>val,<sp/>max_val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>typedef.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">error_type&lt;std::string&gt;</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ASN1Enumerated,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Number&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid_enum_number(Number<sp/>number)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>ASN1Enumerated<sp/>e;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asn1::number_to_enum(e,<sp/>number);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/>is_coreset0_ss0_idx_valid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref>&amp;<sp/>cell_cfg)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Check<sp/>which<sp/>table<sp/>to<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>checks<sp/>on<sp/>minimum<sp/>bandwidth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref><sp/>==<sp/>subcarrier_spacing::kHz15<sp/>and<sp/>cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref><sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>per<sp/>TS38.213,<sp/>Table<sp/>13-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_BELOW(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9cd3debf64abd18480c082c3c21ef436" kindref="member">coreset0_idx</ref>,<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>index<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref><sp/>==<sp/>subcarrier_spacing::kHz30<sp/>and<sp/>cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref><sp/>==<sp/>subcarrier_spacing::kHz30)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>per<sp/>TS38.213,<sp/>Table<sp/>13-4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_BELOW(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9cd3debf64abd18480c082c3c21ef436" kindref="member">coreset0_idx</ref>,<sp/>16,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>index<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>remaining<sp/>cases<sp/>will<sp/>trigger<sp/>an<sp/>assert<sp/>in<sp/>the<sp/>SSB<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>constraint<sp/>is<sp/>implementation-defined<sp/>and<sp/>comes<sp/>from<sp/>the<sp/>fact<sp/>that<sp/>our<sp/>PDCCH<sp/>scheduler<sp/>only<sp/>schedules<sp/>PDCCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>from<sp/>the<sp/>symbol<sp/>index<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref><sp/>==<sp/>subcarrier_spacing::kHz15<sp/>and<sp/>cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref><sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>per<sp/>TS38.213,<sp/>Table<sp/>13-11.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ_OR_BELOW(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a1b0212b53a8ab52d5c05df3080a81f98" kindref="member">searchspace0_idx</ref>,<sp/>9,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpaceZero<sp/>index<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/>is_coreset0_params_valid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref>&amp;<sp/>cell_cfg)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1coreset__configuration" kindref="compound">coreset_configuration</ref>&amp;<sp/>cs_cfg<sp/>=<sp/>*cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9829ffee5cd4cbe932bbc5b969370a51" kindref="member">dl_cfg_common</ref>.init_dl_bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1af4e2c23c3d6704ddcd0343371cd1deea" kindref="member">coreset0</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>CHECK_TRUE(cs_cfg.<ref refid="structsrsgnb_1_1coreset__configuration_1a3031536e1c50e5b9238d7550d0f62156" kindref="member">duration</ref><sp/>&gt;=<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>CORESET#0<sp/>slot<sp/>duration<sp/>({})&quot;</highlight><highlight class="normal">,<sp/>cs_cfg.<ref refid="structsrsgnb_1_1coreset__configuration_1a3031536e1c50e5b9238d7550d0f62156" kindref="member">duration</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implicit,<sp/>invariant<sp/>values<sp/>for<sp/>CORESET#0<sp/>as<sp/>per<sp/>TS38.211-7.3.2.2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>CHECK_EQ(cs_cfg.id,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>ID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>CHECK_TRUE(cs_cfg.interleaved.has_value(),<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>must<sp/>be<sp/>interleaved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>CHECK_EQ(cs_cfg.interleaved-&gt;interleaver_sz,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>interleaver<sp/>size<sp/>(R)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>CHECK_EQ(cs_cfg.interleaved-&gt;reg_bundle_sz,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>REG<sp/>Bundle<sp/>size<sp/>(L)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>CHECK_EQ(cs_cfg.interleaved-&gt;shift_index,<sp/>cell_cfg.pci,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>shift<sp/>index<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>PCI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>CHECK_EQ(cs_cfg.precoder_granurality,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coreset_configuration::precoder_granularity_type::same_as_reg_bundle,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>Precoder<sp/>Granularity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a928643ce67658447b5b7ab02831d080a" kindref="member">min_channel_bandwidth</ref><sp/>min_channel_bw<sp/>=<sp/>band_helper::get_min_channel_bw(cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1a51724d054f15a5d9e0a0c0bae7a56e67" kindref="member">band</ref>,<sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1pdcch__type0__css__coreset__description" kindref="compound">pdcch_type0_css_coreset_description</ref><sp/>coreset0_param<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1ac670faf159e553b0322f0f2e154151e0" kindref="member">pdcch_type0_css_coreset_get</ref>(min_channel_bw,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9cd3debf64abd18480c082c3c21ef436" kindref="member">coreset0_idx</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1ac848887c69be05a9659b8dfd1769e8ee" kindref="member">k_ssb</ref>.to_uint()));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CRB<sp/>(with<sp/>reference<sp/>to<sp/>SCScommon<sp/>carrier)<sp/>pointed<sp/>to<sp/>by<sp/>offset_to_point_A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>crb_ssb<sp/>=<sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref><sp/>==<sp/>subcarrier_spacing::kHz15</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1a55e50acbba6e46bca42a095e147c1f9b" kindref="member">offset_to_point_A</ref>.to_uint()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cell_cfg.ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1a55e50acbba6e46bca42a095e147c1f9b" kindref="member">offset_to_point_A</ref>.to_uint()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>Coreset0<sp/>does<sp/>not<sp/>start<sp/>before<sp/>pointA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>CHECK_TRUE(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(coreset0_param.<ref refid="structsrsgnb_1_1pdcch__type0__css__coreset__description_1af722f9738bcb0c410649a6d5e7b8ddfd" kindref="member">offset</ref>)<sp/>&lt;=<sp/>crb_ssb,<sp/></highlight><highlight class="stringliteral">&quot;CORESET#0<sp/>starts<sp/>before<sp/>pointA.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>Coreset0<sp/>is<sp/>within<sp/>the<sp/>Initial<sp/>DL<sp/>BWP<sp/>CRBs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1crb__interval" kindref="compound">crb_interval</ref><sp/>initial_bwp_crbs{cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9829ffee5cd4cbe932bbc5b969370a51" kindref="member">dl_cfg_common</ref>.init_dl_bwp.generic_params.<ref refid="structsrsgnb_1_1bwp__configuration_1af8ceaeaae0eccfbacd463cfc855e28d1" kindref="member">crbs</ref>};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1crb__interval" kindref="compound">crb_interval</ref><sp/>coreset0_crbs{crb_ssb<sp/>-<sp/>coreset0_param.<ref refid="structsrsgnb_1_1pdcch__type0__css__coreset__description_1af722f9738bcb0c410649a6d5e7b8ddfd" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crb_ssb<sp/>-<sp/>coreset0_param.<ref refid="structsrsgnb_1_1pdcch__type0__css__coreset__description_1af722f9738bcb0c410649a6d5e7b8ddfd" kindref="member">offset</ref><sp/>+<sp/>coreset0_param.<ref refid="structsrsgnb_1_1pdcch__type0__css__coreset__description_1a95719f87f50e3d3b63a364da5b04b900" kindref="member">nof_rb_coreset</ref>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>CHECK_TRUE(initial_bwp_crbs.contains(coreset0_crbs),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>CORESET#0<sp/>CRBs<sp/>[{},<sp/>{})<sp/>falls<sp/>outside<sp/>of<sp/>the<sp/>initial<sp/>DL<sp/>BWP<sp/>CRBs<sp/>[{},<sp/>{})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coreset0_crbs.start(),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coreset0_crbs.stop(),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_bwp_crbs.start(),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_bwp_crbs.stop());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/>is_search_space_valid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1search__space__configuration" kindref="compound">search_space_configuration</ref>&amp;<sp/>ss_cfg)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>CHECK_EQ_OR_BELOW(ss_cfg.id,<sp/>srsgnb::MAX_SEARCH_SPACE_ID,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpaceId&quot;</highlight><highlight class="normal">,<sp/>ss_cfg.id);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>CHECK_EQ_OR_BELOW(ss_cfg.cs_id,<sp/>srsgnb::MAX_CORESET_ID,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpace#{}<sp/>CORESET<sp/>ID&quot;</highlight><highlight class="normal">,<sp/>ss_cfg.id);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_period<sp/>=</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_valid_enum_number&lt;asn1::rrc_nr::search_space_s::monitoring_slot_periodicity_and_offset_c_::types&gt;(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a9bacc4ccd1ead9b95278ced82cea0510" kindref="member">monitoring_slot_period</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>CHECK_TRUE(valid_period,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SearchSpace#{}<sp/>slot<sp/>period={}&quot;</highlight><highlight class="normal">,<sp/>ss_cfg.id,<sp/>ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a9bacc4ccd1ead9b95278ced82cea0510" kindref="member">monitoring_slot_period</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>CHECK_BELOW(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a8444e9c5e8aac47f1f90b65cf71e6456" kindref="member">monitoring_slot_offset</ref>,<sp/>ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a9bacc4ccd1ead9b95278ced82cea0510" kindref="member">monitoring_slot_period</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpace#{}<sp/>monitoring<sp/>slot<sp/>offset&quot;</highlight><highlight class="normal">,<sp/>ss_cfg.id);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>CHECK_EQ_OR_BELOW(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a92c3318540c072c830614bf0a8d74c9b" kindref="member">duration</ref>,<sp/>ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a9bacc4ccd1ead9b95278ced82cea0510" kindref="member">monitoring_slot_period</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpace#{}<sp/>monitoring<sp/>slot<sp/>duration&quot;</highlight><highlight class="normal">,<sp/>ss_cfg.id);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>CHECK_NEQ(ss_cfg.<ref refid="structsrsgnb_1_1search__space__configuration_1a92c3318540c072c830614bf0a8d74c9b" kindref="member">duration</ref>,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpace#{}<sp/>monitoring<sp/>slot<sp/>duration&quot;</highlight><highlight class="normal">,<sp/>ss_cfg.id);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/>check_dl_config_common(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref>&amp;<sp/>cell_cfg)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1bwp__downlink__common" kindref="compound">bwp_downlink_common</ref>&amp;<sp/>bwp<sp/>=<sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9829ffee5cd4cbe932bbc5b969370a51" kindref="member">dl_cfg_common</ref>.init_dl_bwp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PDCCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1af4e2c23c3d6704ddcd0343371cd1deea" kindref="member">coreset0</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE_RETURN(is_coreset0_params_valid(cell_cfg));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bwp.pdcch_common.sib1_search_space_id<sp/>!=<sp/>srsgnb::MAX_NOF_SEARCH_SPACES)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ(bwp.pdcch_common.sib1_search_space_id,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;SearchSpaceSIB1<sp/>must<sp/>be<sp/>equal<sp/>to<sp/>0<sp/>for<sp/>initial<sp/>DL<sp/>BWP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1ad9d858cf42092ce51a739153b3f29aab" kindref="member">common_coreset</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_NEQ(bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1ad9d858cf42092ce51a739153b3f29aab" kindref="member">common_coreset</ref>-&gt;id,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Common<sp/>CORESET&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1search__space__configuration" kindref="compound">search_space_configuration</ref>&amp;<sp/>ss<sp/>:<sp/>bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1a39db8799331983e1abf5abab0a37425c" kindref="member">search_spaces</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE_RETURN(is_search_space_valid(ss));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ(ss.<ref refid="structsrsgnb_1_1search__space__configuration_1a08e27f8040bf8e652dff3b6c36e611dd" kindref="member">type</ref>,<sp/>search_space_configuration::type::common,<sp/></highlight><highlight class="stringliteral">&quot;common<sp/>SearchSpace#{}<sp/>type&quot;</highlight><highlight class="normal">,<sp/>ss.id);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_TRUE(ss.common.f0_0_and_f1_0,<sp/></highlight><highlight class="stringliteral">&quot;common<sp/>SearchSpace#{}<sp/>must<sp/>enable<sp/>DCI<sp/>format1_0<sp/>and<sp/>format0_0&quot;</highlight><highlight class="normal">,<sp/>ss.id);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss.cs_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_TRUE(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1af4e2c23c3d6704ddcd0343371cd1deea" kindref="member">coreset0</ref>.has_value(),<sp/></highlight><highlight class="stringliteral">&quot;common<sp/>SearchSpace#{}<sp/>points<sp/>to<sp/>CORESET#0<sp/>which<sp/>is<sp/>inactive&quot;</highlight><highlight class="normal">,<sp/>ss.id);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_TRUE(bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1ad9d858cf42092ce51a739153b3f29aab" kindref="member">common_coreset</ref>.has_value()<sp/>and<sp/>ss.cs_id<sp/>==<sp/>bwp.pdcch_common.<ref refid="structsrsgnb_1_1pdcch__config__common_1ad9d858cf42092ce51a739153b3f29aab" kindref="member">common_coreset</ref>-&gt;id,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;common<sp/>SearchSpace#{}<sp/>points<sp/>to<sp/>CORESET#{}<sp/>which<sp/>is<sp/>inactive&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.id,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.cs_id);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PDSCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>CHECK_TRUE(not<sp/>bwp.pdsch_common.<ref refid="structsrsgnb_1_1pdsch__config__common_1a9ae93edd088068b36ce29029781ed84b" kindref="member">pdsch_td_alloc_list</ref>.empty(),<sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>PDSCH-TimeDomainAllocationList&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pdsch<sp/>:<sp/>bwp.pdsch_common.<ref refid="structsrsgnb_1_1pdsch__config__common_1a9ae93edd088068b36ce29029781ed84b" kindref="member">pdsch_td_alloc_list</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ_OR_BELOW(pdsch.k0,<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;PDSCH<sp/>k0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remaining.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/>check_ssb_configuration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref>&amp;<sp/>cell_cfg)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1ssb__configuration" kindref="compound">ssb_configuration</ref>&amp;<sp/>ssb_cfg<sp/>=<sp/>cell_cfg.ssb_cfg;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>mixed<sp/>numerologies<sp/>supported<sp/>(yet).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>CHECK_EQ(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref>,<sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SSB<sp/>SCS<sp/>must<sp/>be<sp/>equal<sp/>to<sp/>SCS<sp/>common.<sp/>Mixed<sp/>numerologies<sp/>are<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>FR1<sp/>SCS<sp/>supported<sp/>(for<sp/>now).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>CHECK_EQ_OR_BELOW(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subcarrier_spacing::kHz30,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SSB<sp/>SCS<sp/>must<sp/>be<sp/>kHz15<sp/>or<sp/>kHz30.<sp/><sp/>FR2<sp/>frequencies<sp/>are<sp/>not<sp/>supported<sp/>yet<sp/>in<sp/>the<sp/>SSB<sp/>scheduler.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>CHECK_EQ(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1aeeac0b2f7cecee78db81e0168083ca72" kindref="member">ssb_bitmap</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1U)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(63U),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>beams<sp/>not<sp/>supported<sp/>for<sp/>SSB.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>that<sp/>SSB<sp/>does<sp/>not<sp/>get<sp/>located<sp/>outside<sp/>the<sp/>band.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref><sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>k_SSB<sp/>is<sp/>within<sp/>limits,<sp/>according<sp/>to<sp/>the<sp/>SCScommon.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ_OR_BELOW(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1ac848887c69be05a9659b8dfd1769e8ee" kindref="member">k_ssb</ref>.to_uint(),<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SCS<sp/>common<sp/>15kHz,<sp/>k_SSB<sp/>must<sp/>be<sp/>within<sp/>the<sp/>range<sp/>[0,<sp/>11].&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>following,<sp/>we<sp/>assume<sp/>the<sp/>SSB<sp/>is<sp/>located<sp/>inside<sp/>the<sp/>Transmission<sp/>Bandwidth<sp/>Configuration<sp/>of<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>band.<sp/>Refer<sp/>to<sp/>TS38.104,<sp/>Section<sp/>5.3.1<sp/>for<sp/>the<sp/>definition<sp/>of<sp/>Transmission<sp/>Bandwidth<sp/>Configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>the<sp/>Initial<sp/>DL<sp/>BWP<sp/>ranges<sp/>over<sp/>the<sp/>whole<sp/>Transmission<sp/>Bandwidth<sp/>Configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nof_crbs<sp/>=<sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9829ffee5cd4cbe932bbc5b969370a51" kindref="member">dl_cfg_common</ref>.init_dl_bwp.generic_params.<ref refid="structsrsgnb_1_1bwp__configuration_1af8ceaeaae0eccfbacd463cfc855e28d1" kindref="member">crbs</ref>.<ref refid="classsrsgnb_1_1interval_1afaa426e56c4e96208758552d97a7b43c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>offset_p_A_upper_bound<sp/>=</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1ac848887c69be05a9659b8dfd1769e8ee" kindref="member">k_ssb</ref>.to_uint()<sp/>&gt;<sp/>0<sp/>?<sp/>nof_crbs<sp/>-<sp/>NOF_SSB_PRBS<sp/>-<sp/>1<sp/>:<sp/>nof_crbs<sp/>-<sp/>NOF_SSB_PRBS;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ_OR_BELOW(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1a55e50acbba6e46bca42a095e147c1f9b" kindref="member">offset_to_point_A</ref>.to_uint(),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_p_A_upper_bound,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Offset<sp/>to<sp/>PointA<sp/>must<sp/>be<sp/>such<sp/>that<sp/>the<sp/>SSB<sp/>is<sp/>located<sp/>inside<sp/>the<sp/>Initial<sp/>DL<sp/>BWP,<sp/>i.e,<sp/>offset_to_point_A<sp/>&lt;=<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_p_A_upper_bound);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref><sp/>==<sp/>subcarrier_spacing::kHz30)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>k_SSB<sp/>is<sp/>within<sp/>limits,<sp/>according<sp/>to<sp/>the<sp/>SCScommon.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ_OR_BELOW(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1ac848887c69be05a9659b8dfd1769e8ee" kindref="member">k_ssb</ref>.to_uint(),<sp/>23,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SCS<sp/>common<sp/>30kHz,<sp/>k_SSB<sp/>must<sp/>be<sp/>within<sp/>the<sp/>range<sp/>[0,<sp/>23].&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>k_SSB<sp/>is<sp/>an<sp/>even<sp/>number,<sp/>as<sp/>this<sp/>is<sp/>a<sp/>requirement<sp/>coming<sp/>from<sp/>PHY<sp/>implementation<sp/>limitation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_TRUE(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1ac848887c69be05a9659b8dfd1769e8ee" kindref="member">k_ssb</ref>.to_uint()<sp/>%<sp/>2<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SCS<sp/>common<sp/>30kHz,<sp/>k_SSB<sp/>must<sp/>be<sp/>an<sp/>even<sp/>number.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>following,<sp/>we<sp/>assume<sp/>the<sp/>SSB<sp/>is<sp/>located<sp/>inside<sp/>the<sp/>Transmission<sp/>Bandwidth<sp/>Configuration<sp/>of<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>band.<sp/>Refer<sp/>to<sp/>TS38.104,<sp/>Section<sp/>5.3.1<sp/>for<sp/>the<sp/>definition<sp/>of<sp/>Transmission<sp/>Bandwidth<sp/>Configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>assume<sp/>the<sp/>Initial<sp/>DL<sp/>BWP<sp/>ranges<sp/>over<sp/>the<sp/>whole<sp/>Transmission<sp/>Bandwidth<sp/>Configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nof_crbs<sp/>=<sp/>cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1a9829ffee5cd4cbe932bbc5b969370a51" kindref="member">dl_cfg_common</ref>.init_dl_bwp.generic_params.<ref refid="structsrsgnb_1_1bwp__configuration_1af8ceaeaae0eccfbacd463cfc855e28d1" kindref="member">crbs</ref>.<ref refid="classsrsgnb_1_1interval_1afaa426e56c4e96208758552d97a7b43c" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>offset_p_A_upper_bound<sp/>=</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1ac848887c69be05a9659b8dfd1769e8ee" kindref="member">k_ssb</ref>.to_uint()<sp/>&gt;<sp/>0<sp/>?<sp/>(nof_crbs<sp/>-<sp/>NOF_SSB_PRBS<sp/>-<sp/>1)<sp/>*<sp/>2<sp/>:<sp/>(nof_crbs<sp/>-<sp/>NOF_SSB_PRBS)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_EQ_OR_BELOW(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1a55e50acbba6e46bca42a095e147c1f9b" kindref="member">offset_to_point_A</ref>.to_uint(),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_p_A_upper_bound,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Offset<sp/>to<sp/>PointA<sp/>must<sp/>be<sp/>such<sp/>that<sp/>the<sp/>SSB<sp/>is<sp/>located<sp/>inside<sp/>the<sp/>Initial<sp/>DL<sp/>BWP,<sp/>i.e,<sp/>offset_to_point_A<sp/>&lt;=<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_p_A_upper_bound);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK_TRUE(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1a55e50acbba6e46bca42a095e147c1f9b" kindref="member">offset_to_point_A</ref>.to_uint()<sp/>%<sp/>2<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;With<sp/>SCScommon<sp/>30kHz,<sp/>Offset<sp/>to<sp/>PointA<sp/>must<sp/>be<sp/>an<sp/>even<sp/>number&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_p_A_upper_bound);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ff" kindref="member">ssb_pattern_case</ref><sp/>ssb_case<sp/><sp/><sp/>=<sp/><ref refid="namespacesrsgnb_1ad39f8ccde355456fcb4551782c6667fc" kindref="member">ssb_get_ssb_pattern</ref>(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref>,<sp/>cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_bitmap<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1aeeac0b2f7cecee78db81e0168083ca72" kindref="member">ssb_bitmap</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(56U);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>is_paired<sp/>=<sp/>band_helper::is_paired_spectrum(band_helper::get_band_from_dl_arfcn(cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>uint8_t<sp/>L_max<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacesrsgnb_1a7f7ec59d8d3f9673c93e64a209e9c9a0" kindref="member">ssb_get_L_max</ref>(ssb_cfg.<ref refid="structsrsgnb_1_1ssb__configuration_1af05d6fe25f087f9f8cd772410f906ec7" kindref="member">scs</ref>,<sp/>cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>cutoff_freq_mhz_case_a_b_c<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>band_helper::nr_arfcn_to_freq(cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref>)<sp/>/<sp/>1e6;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>cutoff_freq_mhz_case_c_unpaired<sp/>=<sp/>band_helper::nr_arfcn_to_freq(cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref>)<sp/>/<sp/>1e6;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>SSB<sp/>beam<sp/>bitmap<sp/>and<sp/>L_max<sp/>are<sp/>compatible<sp/>with<sp/>SSB<sp/>case<sp/>and<sp/>DL<sp/>band.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssb_case<sp/>==<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref><sp/>and<sp/>not<sp/>is_paired)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref><sp/>&lt;=<sp/><ref refid="namespacesrsgnb_1a570e4d7e1acf25c785c63350fd0f1c24" kindref="member">CUTOFF_FREQ_ARFCN_CASE_C_UNPAIRED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EQ(L_max,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SSB<sp/>case<sp/>C<sp/>and<sp/>frequency<sp/>&lt;=<sp/>{}MHz,<sp/>L_max<sp/>must<sp/>be<sp/>4&quot;</highlight><highlight class="normal">,<sp/>cutoff_freq_mhz_case_c_unpaired);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_TRUE((ssb_bitmap<sp/>&amp;<sp/>0b00001111)<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SSB<sp/>case<sp/>C<sp/>and<sp/>frequency<sp/>&lt;=<sp/>{}MHz,<sp/>only<sp/>the<sp/>4<sp/>MSBs<sp/>of<sp/>SSB<sp/>bitmap<sp/>can<sp/>be<sp/>set&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cutoff_freq_mhz_case_c_unpaired);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EQ(L_max,<sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SSB<sp/>case<sp/>C<sp/>and<sp/>frequency<sp/>&gt;<sp/>{}MHz,<sp/>L_max<sp/>must<sp/>be<sp/>8&quot;</highlight><highlight class="normal">,<sp/>cutoff_freq_mhz_case_c_unpaired);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_cfg.dl_carrier.<ref refid="structsrsgnb_1_1carrier__configuration_1adf475848f2b45f881020d79a4c64e270" kindref="member">arfcn</ref><sp/>&lt;=<sp/><ref refid="namespacesrsgnb_1a17b953996ae0c7dda753d3fddda378f2" kindref="member">CUTOFF_FREQ_ARFCN_CASE_A_B_C</ref>)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EQ(L_max,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SSB<sp/>case<sp/>A<sp/>and<sp/>B<sp/>and<sp/>frequency<sp/>&lt;=<sp/>{}MHz,<sp/>L_max<sp/>must<sp/>be<sp/>4&quot;</highlight><highlight class="normal">,<sp/>cutoff_freq_mhz_case_a_b_c);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_TRUE((ssb_bitmap<sp/>&amp;<sp/>0b00001111)<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SSB<sp/>case<sp/>C<sp/>and<sp/>frequency<sp/>&lt;=<sp/>{}MHz,<sp/>only<sp/>the<sp/>4<sp/>MSBs<sp/>of<sp/>SSB<sp/>bitmap<sp/>can<sp/>be<sp/>set&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cutoff_freq_mhz_case_a_b_c);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EQ(L_max,<sp/>8,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>SSB<sp/>case<sp/>A<sp/>and<sp/>B<sp/>and<sp/>frequency<sp/>&gt;<sp/>{}MHz,<sp/>L_max<sp/>must<sp/>be<sp/>8&quot;</highlight><highlight class="normal">,<sp/>cutoff_freq_mhz_case_a_b_c);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="namespacesrsgnb_1a8c9b0d5c8b210f7816dafd6e0d0e586f" refkind="member"><highlight class="normal"><ref refid="classsrsgnb_1_1expected" kindref="compound">check_outcome</ref><sp/><ref refid="namespacesrsgnb_1a8c9b0d5c8b210f7816dafd6e0d0e586f" kindref="member">srsgnb::is_du_cell_config_valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1du__cell__config" kindref="compound">du_cell_config</ref>&amp;<sp/>cell_cfg)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>CHECK_EQ_OR_BELOW(cell_cfg.pci,<sp/>MAX_PCI,<sp/></highlight><highlight class="stringliteral">&quot;cell<sp/>PCI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>CHECK_EQ_OR_BELOW(cell_cfg.<ref refid="structsrsgnb_1_1du__cell__config_1ab3823a7a973cdae1fb5cf9c0207e7a8b" kindref="member">scs_common</ref>,<sp/>subcarrier_spacing::kHz120,<sp/></highlight><highlight class="stringliteral">&quot;SCS<sp/>common&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>HANDLE_RETURN(is_coreset0_ss0_idx_valid(cell_cfg));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>HANDLE_RETURN(check_dl_config_common(cell_cfg));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>HANDLE_RETURN(check_ssb_configuration(cell_cfg));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remaining.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/du/du_cell_config_validation.cpp"/>
  </compounddef>
</doxygen>
