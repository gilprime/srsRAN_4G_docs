<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1prach__generator__impl" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::prach_generator_impl</compoundname>
    <basecompoundref refid="classsrsgnb_1_1prach__generator" prot="public" virt="non-virtual">srsgnb::prach_generator</basecompoundref>
    <includes refid="prach__generator__impl_8h" local="no">prach_generator_impl.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1prach__generator__impl_1a7f342ba6dbbdea9480c735f99d0add74" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::prach_generator_impl::LONG</definition>
        <argsstring></argsstring>
        <name>LONG</name>
        <initializer>= prach_constants::LONG_SEQUENCE_LENGTH</initializer>
        <briefdescription>
<para>PRACH long sequence length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="28" column="29" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1af59fb12659c75ce8d7688901a50bd1a9" compoundref="prach__generator__impl_8cpp" startline="36" endline="78">get_sequence_number_long</referencedby>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1ae6078f7c18cbe53cb05fb5902f2fcf5e" compoundref="prach__generator__impl_8cpp" startline="80" endline="89">generate_y_u_v_long</referencedby>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1a0f979702e291b9dbe9b3d35888cdd0a7" compoundref="prach__generator__impl_8h" startline="53" endline="65">prach_generator_impl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1prach__generator__impl_1af7f67949d4c67420ff2c1a19ba7bd4b8" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::prach_generator_impl::SHORT</definition>
        <argsstring></argsstring>
        <name>SHORT</name>
        <initializer>= prach_constants::SHORT_SEQUENCE_LENGTH</initializer>
        <briefdescription>
<para>PRACH short sequence length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="30" column="29" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.h" bodystart="30" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1a0f979702e291b9dbe9b3d35888cdd0a7" compoundref="prach__generator__impl_8h" startline="53" endline="65">prach_generator_impl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1prach__generator__impl_1a2a8c62f862e7a8564d6ff3f8ee874ca9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classsrsgnb_1_1dft__processor" kindref="compound">dft_processor</ref> &gt;</type>
        <definition>std::unique_ptr&lt;dft_processor&gt; srsgnb::prach_generator_impl::dft_long</definition>
        <argsstring></argsstring>
        <name>dft_long</name>
        <briefdescription>
<para>DFT for long frequency-domain sequence generation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="33" column="19" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1ae6078f7c18cbe53cb05fb5902f2fcf5e" compoundref="prach__generator__impl_8cpp" startline="80" endline="89">generate_y_u_v_long</referencedby>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1a0f979702e291b9dbe9b3d35888cdd0a7" compoundref="prach__generator__impl_8h" startline="53" endline="65">prach_generator_impl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1prach__generator__impl_1abb149ddac7a84de2175654593b42d13e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classsrsgnb_1_1dft__processor" kindref="compound">dft_processor</ref> &gt;</type>
        <definition>std::unique_ptr&lt;dft_processor&gt; srsgnb::prach_generator_impl::dft_short</definition>
        <argsstring></argsstring>
        <name>dft_short</name>
        <briefdescription>
<para>DFT for short frequency-domain sequence generation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="35" column="19" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1prach__generator__impl_1a0f979702e291b9dbe9b3d35888cdd0a7" compoundref="prach__generator__impl_8h" startline="53" endline="65">prach_generator_impl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1prach__generator__impl_1af59fb12659c75ce8d7688901a50bd1a9" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned prach_generator_impl::get_sequence_number_long</definition>
        <argsstring>(unsigned root_sequence_index)</argsstring>
        <name>get_sequence_number_long</name>
        <param>
          <type>unsigned</type>
          <declname>root_sequence_index</declname>
        </param>
        <briefdescription>
<para>Calculates sequence number <formula id="227">$u$</formula> as per TS38.211 Table 6.3.3.1-3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="38" column="19" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.cpp" bodystart="36" bodyend="78"/>
        <references refid="classsrsgnb_1_1prach__generator__impl_1a7f342ba6dbbdea9480c735f99d0add74" compoundref="prach__generator__impl_8h" startline="28">LONG</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1prach__generator__impl_1ae6078f7c18cbe53cb05fb5902f2fcf5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; const <ref refid="namespacesrsgnb_1af4b08850893ef20c607d3b426a8a32e5" kindref="member">cf_t</ref> &gt;</type>
        <definition>span&lt; const cf_t &gt; prach_generator_impl::generate_y_u_v_long</definition>
        <argsstring>(unsigned u, unsigned C_v)</argsstring>
        <name>generate_y_u_v_long</name>
        <param>
          <type>unsigned</type>
          <declname>u</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>C_v</declname>
        </param>
        <briefdescription>
<para>Generates the sequence <formula id="228">$y_{u,v}$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">u</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">C_v</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence shift. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A read-only view of the generated sequence. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="44" column="8" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.cpp" bodystart="80" bodyend="89"/>
        <references refid="classsrsgnb_1_1prach__generator__impl_1a2a8c62f862e7a8564d6ff3f8ee874ca9" compoundref="prach__generator__impl_8h" startline="33">dft_long</references>
        <references refid="classsrsgnb_1_1prach__generator__impl_1a7f342ba6dbbdea9480c735f99d0add74" compoundref="prach__generator__impl_8h" startline="28">LONG</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1prach__generator__impl_1a0f979702e291b9dbe9b3d35888cdd0a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::prach_generator_impl::prach_generator_impl</definition>
        <argsstring>(std::unique_ptr&lt; dft_processor &gt; dft_long_, std::unique_ptr&lt; dft_processor &gt; dft_short_)</argsstring>
        <name>prach_generator_impl</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrsgnb_1_1dft__processor" kindref="compound">dft_processor</ref> &gt;</type>
          <declname>dft_long_</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrsgnb_1_1dft__processor" kindref="compound">dft_processor</ref> &gt;</type>
          <declname>dft_short_</declname>
        </param>
        <briefdescription>
<para>Constructor - Acquires ownership of the internal components. </para>
        </briefdescription>
        <detaileddescription>
<para>The PRACH generator depends on the DFT to generate the frequency-domain signals.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dft_long_</parametername>
</parameternamelist>
<parameterdescription>
<para>DFT processor for generating long sequences. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dft_short_</parametername>
</parameternamelist>
<parameterdescription>
<para>DFT processor for generating short sequences. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="53" column="3" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.h" bodystart="53" bodyend="65"/>
        <references refid="classsrsgnb_1_1prach__generator__impl_1a2a8c62f862e7a8564d6ff3f8ee874ca9" compoundref="prach__generator__impl_8h" startline="33">dft_long</references>
        <references refid="classsrsgnb_1_1dft__processor_1afbdf25102ee173cf9db93060ddf0431fa4c5d06b02c97731aaa976179c62dcf76">srsgnb::dft_processor::DIRECT</references>
        <references refid="classsrsgnb_1_1prach__generator__impl_1a7f342ba6dbbdea9480c735f99d0add74" compoundref="prach__generator__impl_8h" startline="28">LONG</references>
        <references refid="classsrsgnb_1_1prach__generator__impl_1abb149ddac7a84de2175654593b42d13e" compoundref="prach__generator__impl_8h" startline="35">dft_short</references>
        <references refid="classsrsgnb_1_1prach__generator__impl_1af7f67949d4c67420ff2c1a19ba7bd4b8" compoundref="prach__generator__impl_8h" startline="30">SHORT</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1prach__generator__impl_1a32499beeed7e2ba3f2f3a88a0377333e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; const <ref refid="namespacesrsgnb_1af4b08850893ef20c607d3b426a8a32e5" kindref="member">cf_t</ref> &gt;</type>
        <definition>span&lt; const cf_t &gt; prach_generator_impl::generate</definition>
        <argsstring>(const configuration &amp;config) override</argsstring>
        <name>generate</name>
        <reimplements refid="classsrsgnb_1_1prach__generator_1a930df2c5b39ee14c3fb3874cba73c894">generate</reimplements>
        <param>
          <type>const <ref refid="structsrsgnb_1_1prach__generator_1_1configuration" kindref="compound">configuration</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Generates the frequency-domain PRACH sequence <formula id="52">$y_{u,v}(n)$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters describing the generated sequence. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A read-only view of the generated sequence. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="68" column="8" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.cpp" bodystart="91" bodyend="112"/>
        <references refid="structsrsgnb_1_1prach__generator_1_1configuration_1af310b58bd4e1af07f9db957586f45f7d" compoundref="prach__generator_8h" startline="31">srsgnb::prach_generator::configuration::format</references>
        <references refid="classsrsgnb_1_1preamble__format_1afb08b63336460076b20ceff3ebf5ec08" compoundref="prach__preamble__format_8h" startline="35" endline="35">srsgnb::preamble_format::is_long_preamble</references>
        <references refid="structsrsgnb_1_1prach__generator_1_1configuration_1a1cdbb3f9ac048309edf2f35486cbddfc" compoundref="prach__generator_8h" startline="41">srsgnb::prach_generator::configuration::restricted_set</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>On-demand PRACH time-domain signal generator. </para>
    </briefdescription>
    <detaileddescription>
<para>It generates PRACH frequency-domain signals on demand instead of generating and storing them off-line. It minimizes memory footprint at the cost of longer processing time. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::prach_generator_impl</label>
        <link refid="classsrsgnb_1_1prach__generator__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::prach_generator</label>
        <link refid="classsrsgnb_1_1prach__generator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::prach_generator_impl</label>
        <link refid="classsrsgnb_1_1prach__generator__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::prach_generator</label>
        <link refid="classsrsgnb_1_1prach__generator"/>
      </node>
    </collaborationgraph>
    <location file="lib/phy/upper/channel_processors/prach_generator_impl.h" line="25" column="1" bodyfile="lib/phy/upper/channel_processors/prach_generator_impl.h" bodystart="24" bodyend="69"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1prach__generator__impl_1a2a8c62f862e7a8564d6ff3f8ee874ca9" prot="private" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>dft_long</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1abb149ddac7a84de2175654593b42d13e" prot="private" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>dft_short</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1a32499beeed7e2ba3f2f3a88a0377333e" prot="public" virt="virtual"><scope>srsgnb::prach_generator_impl</scope><name>generate</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1ae6078f7c18cbe53cb05fb5902f2fcf5e" prot="private" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>generate_y_u_v_long</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1af59fb12659c75ce8d7688901a50bd1a9" prot="private" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>get_sequence_number_long</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1a7f342ba6dbbdea9480c735f99d0add74" prot="private" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>LONG</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1a0f979702e291b9dbe9b3d35888cdd0a7" prot="public" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>prach_generator_impl</name></member>
      <member refid="classsrsgnb_1_1prach__generator__impl_1af7f67949d4c67420ff2c1a19ba7bd4b8" prot="private" virt="non-virtual"><scope>srsgnb::prach_generator_impl</scope><name>SHORT</name></member>
      <member refid="classsrsgnb_1_1prach__generator_1a51d3be8fa3b5666e4bf2c6bd7493e5a2" prot="public" virt="virtual"><scope>srsgnb::prach_generator_impl</scope><name>~prach_generator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
