<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsrsgnb_1_1copyonly__test__object" kind="struct" language="C++" prot="public">
    <compoundname>srsgnb::copyonly_test_object</compoundname>
    <includes refid="test__utils_8h" local="no">test_utils.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structsrsgnb_1_1copyonly__test__object_1a9e76a6b3eb3b005269bb98620740784f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int srsgnb::copyonly_test_object::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="217" column="7" bodyfile="include/srsgnb/support/test_utils.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1a7c90131cb11edfe8a52dc0cc59acc436" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::copyonly_test_object::copyonly_test_object</definition>
        <argsstring>()</argsstring>
        <name>copyonly_test_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="197" column="3" bodyfile="include/srsgnb/support/test_utils.h" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1af700ba63bf07630d9510d13d86e20c84" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::copyonly_test_object::copyonly_test_object</definition>
        <argsstring>(int v)</argsstring>
        <name>copyonly_test_object</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="198" column="12" bodyfile="include/srsgnb/support/test_utils.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1affca258d95cbdd20f762a1b5d166c54c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::copyonly_test_object::~copyonly_test_object</definition>
        <argsstring>()</argsstring>
        <name>~copyonly_test_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="199" column="3" bodyfile="include/srsgnb/support/test_utils.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1a5abc3ac7e6a79c25aba1a1cf2db30857" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::copyonly_test_object::copyonly_test_object</definition>
        <argsstring>(const copyonly_test_object &amp;other) noexcept</argsstring>
        <name>copyonly_test_object</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="200" column="3" bodyfile="include/srsgnb/support/test_utils.h" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1abb5023cf2d16d996ede2e11ce32dc2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::copyonly_test_object::copyonly_test_object</definition>
        <argsstring>(copyonly_test_object &amp;&amp;other)=delete</argsstring>
        <name>copyonly_test_object</name>
        <param>
          <type><ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="201" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1a1437c44b8fe7f9ef0e62a5719d634f20" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;</type>
        <definition>copyonly_test_object&amp; srsgnb::copyonly_test_object::operator=</definition>
        <argsstring>(const copyonly_test_object &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="202" column="24"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1ab988a45b17ed3ef2d225fe19fe513c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;</type>
        <definition>copyonly_test_object&amp; srsgnb::copyonly_test_object::operator=</definition>
        <argsstring>(copyonly_test_object &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="203" column="24"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1ae9a65dd525cdf7c682664dd0c5cca11c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int srsgnb::copyonly_test_object::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="205" column="8" bodyfile="include/srsgnb/support/test_utils.h" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1a64f54d341921716dca5826f9ea382d03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::copyonly_test_object::operator==</definition>
        <argsstring>(const copyonly_test_object &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="206" column="8" bodyfile="include/srsgnb/support/test_utils.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1aecfcf7cb32037e273e85458300e74255" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::copyonly_test_object::operator!=</definition>
        <argsstring>(const copyonly_test_object &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1copyonly__test__object" kindref="compound">copyonly_test_object</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="207" column="8" bodyfile="include/srsgnb/support/test_utils.h" bodystart="207" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1a45a6870fcc8674fcd15980c0cf0cd59a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t srsgnb::copyonly_test_object::object_count</definition>
        <argsstring>()</argsstring>
        <name>object_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="209" column="17" bodyfile="include/srsgnb/support/test_utils.h" bodystart="209" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structsrsgnb_1_1copyonly__test__object_1a1082e783ec0398c51b4fffbe03d93299" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>static size_t&amp; srsgnb::copyonly_test_object::object_count_impl</definition>
        <argsstring>()</argsstring>
        <name>object_count_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="212" column="17" bodyfile="include/srsgnb/support/test_utils.h" bodystart="212" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Test object to verify correct copy ctor/assignment logic. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::copyonly_test_object</label>
        <link refid="structsrsgnb_1_1copyonly__test__object"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/test_utils.h" line="196" column="27" bodyfile="include/srsgnb/support/test_utils.h" bodystart="196" bodyend="218"/>
    <listofallmembers>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a7c90131cb11edfe8a52dc0cc59acc436" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>copyonly_test_object</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1af700ba63bf07630d9510d13d86e20c84" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>copyonly_test_object</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a5abc3ac7e6a79c25aba1a1cf2db30857" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>copyonly_test_object</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1abb5023cf2d16d996ede2e11ce32dc2af" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>copyonly_test_object</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a45a6870fcc8674fcd15980c0cf0cd59a" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>object_count</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a1082e783ec0398c51b4fffbe03d93299" prot="private" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>object_count_impl</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1aecfcf7cb32037e273e85458300e74255" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>operator!=</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a1437c44b8fe7f9ef0e62a5719d634f20" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1ab988a45b17ed3ef2d225fe19fe513c2e" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a64f54d341921716dca5826f9ea382d03" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>operator==</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1a9e76a6b3eb3b005269bb98620740784f" prot="private" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>val</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1ae9a65dd525cdf7c682664dd0c5cca11c" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>value</name></member>
      <member refid="structsrsgnb_1_1copyonly__test__object_1affca258d95cbdd20f762a1b5d166c54c" prot="public" virt="non-virtual"><scope>srsgnb::copyonly_test_object</scope><name>~copyonly_test_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
