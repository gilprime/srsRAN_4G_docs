<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="sampling__rate_8h" kind="file" language="C++">
    <compoundname>sampling_rate.h</compoundname>
    <includes refid="subcarrier__spacing_8h" local="yes">srsgnb/ran/subcarrier_spacing.h</includes>
    <includes refid="srsgnb__assert_8h" local="yes">srsgnb/support/srsgnb_assert.h</includes>
    <includes local="no">cstdint</includes>
    <includedby refid="lower__phy__configuration_8h" local="yes">include/srsgnb/phy/lower/lower_phy_configuration.h</includedby>
    <incdepgraph>
      <node id="42">
        <label>atomic</label>
      </node>
      <node id="2">
        <label>srsgnb/ran/subcarrier_spacing.h</label>
        <link refid="subcarrier__spacing_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="28">
        <label>limits</label>
      </node>
      <node id="17">
        <label>iterator</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="41">
        <label>cassert</label>
      </node>
      <node id="29">
        <label>stdexcept</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="4">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>pthread.h</label>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="40">
        <label>tuple</label>
      </node>
      <node id="10">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="1">
        <label>include/srsgnb/phy/lower/sampling_rate.h</label>
        <link refid="sampling__rate_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/ran/frequency_range.h</label>
        <link refid="frequency__range_8h_source"/>
      </node>
      <node id="25">
        <label>cerrno</label>
      </node>
      <node id="39">
        <label>cstddef</label>
      </node>
      <node id="30">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>type_traits</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>srsgnb/srslog/bundled/fmt/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/srsgnb/phy/lower/lower_phy_configuration.h</label>
        <link refid="lower__phy__configuration_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/phy/lower/lower_phy_impl.h</label>
        <link refid="lower__phy__impl_8h_source"/>
      </node>
      <node id="3">
        <label>include/srsgnb/phy/lower/lower_phy_factory.h</label>
        <link refid="lower__phy__factory_8h_source"/>
      </node>
      <node id="1">
        <label>include/srsgnb/phy/lower/sampling_rate.h</label>
        <link refid="sampling__rate_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classsrsgnb_1_1sampling__rate" prot="public">srsgnb::sampling_rate</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1sampling__rate_01_4" prot="public">fmt::formatter&lt; srsgnb::sampling_rate &gt;</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/subcarrier_spacing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/support/srsgnb_assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classsrsgnb_1_1sampling__rate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1sampling__rate" kindref="compound">sampling_rate</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" kindref="member">value_type</ref><sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1sampling__rate_1abbcc071bb9157bd5a3075c7132397edc" kindref="member">sampling_rate</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39" refid="classsrsgnb_1_1sampling__rate_1aa47f3e4d894936ffaab99d4faed5c2af" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aa47f3e4d894936ffaab99d4faed5c2af" kindref="member">is_valid</ref>(T<sp/>scs_Hz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="40"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;T,<sp/>value_type&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>data<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref><sp/>==<sp/>0<sp/>||<sp/>scs_Hz<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref><sp/>%<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" kindref="member">value_type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(scs_Hz)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classsrsgnb_1_1sampling__rate_1aaaf5a287cf943a68feee6392e425370c" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aaaf5a287cf943a68feee6392e425370c" kindref="member">is_valid</ref>(<ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aaaf5a287cf943a68feee6392e425370c" kindref="member">is_valid</ref>(<ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(scs)<sp/>*<sp/>1000);<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="62" refid="classsrsgnb_1_1sampling__rate_1a1ad27c3aa62938dfc3f427d778d076c9" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a1ad27c3aa62938dfc3f427d778d076c9" kindref="member">get_dft_size</ref>(T<sp/>scs_Hz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(<ref refid="classsrsgnb_1_1sampling__rate_1aa47f3e4d894936ffaab99d4faed5c2af" kindref="member">is_valid</ref>(scs_Hz),<sp/></highlight><highlight class="stringliteral">&quot;Subcarrier<sp/>spacing<sp/>must<sp/>be<sp/>valid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref><sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" kindref="member">value_type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(scs_Hz);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classsrsgnb_1_1sampling__rate_1abde3f93b5960c97499480079a941c3d1" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1abde3f93b5960c97499480079a941c3d1" kindref="member">get_dft_size</ref>(<ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1abde3f93b5960c97499480079a941c3d1" kindref="member">get_dft_size</ref>(<ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(scs)<sp/>*<sp/>1000);<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="80" refid="classsrsgnb_1_1sampling__rate_1a379f90b26114f0dd517716f698afa749" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/><ref refid="classsrsgnb_1_1sampling__rate_1a379f90b26114f0dd517716f698afa749" kindref="member">to_Hz</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;value_type,<sp/>T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>data<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="90" refid="classsrsgnb_1_1sampling__rate_1ab475a751b1de2dd64a1ed48a621bda8d" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/>T<sp/><ref refid="classsrsgnb_1_1sampling__rate_1ab475a751b1de2dd64a1ed48a621bda8d" kindref="member">to_kHz</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="91"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;value_type,<sp/>T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>data<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref><sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classsrsgnb_1_1sampling__rate_1a46e20beea4d692d9e0fa74995af32748" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a46e20beea4d692d9e0fa74995af32748" kindref="member">to_MHz</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref>)<sp/>/<sp/>1e6;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="108" refid="classsrsgnb_1_1sampling__rate_1aaf0438dee2d045e89d10a51b5bb5a12e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate" kindref="compound">sampling_rate</ref><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aaf0438dee2d045e89d10a51b5bb5a12e" kindref="member">from_Hz</ref>(T<sp/>value_Hz)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;T,<sp/>value_type&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>data<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1abbcc071bb9157bd5a3075c7132397edc" kindref="member">sampling_rate</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" kindref="member">value_type</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value_Hz));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="123" refid="classsrsgnb_1_1sampling__rate_1a63e5fac6de23b660aaa374dfe353a92d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate" kindref="compound">sampling_rate</ref><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a63e5fac6de23b660aaa374dfe353a92d" kindref="member">from_kHz</ref>(T<sp/>value_kHz)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aaf0438dee2d045e89d10a51b5bb5a12e" kindref="member">from_Hz</ref>(value_kHz<sp/>*<sp/>1e3);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="137" refid="classsrsgnb_1_1sampling__rate_1aaab415e53408be0a2ff25678f15c7f21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate" kindref="compound">sampling_rate</ref><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aaab415e53408be0a2ff25678f15c7f21" kindref="member">from_MHz</ref>(T<sp/>value_MHz)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1aaf0438dee2d045e89d10a51b5bb5a12e" kindref="member">from_Hz</ref>(value_MHz<sp/>*<sp/>1e6);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144" refid="classsrsgnb_1_1sampling__rate_1acdd1326f5f2f99ec555fae6f6a0c2eea" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1sampling__rate_1acdd1326f5f2f99ec555fae6f6a0c2eea" kindref="member">sampling_rate</ref>(<ref refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" kindref="member">value_type</ref><sp/>value_)<sp/>:<sp/><ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref>(value_)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(<ref refid="classsrsgnb_1_1sampling__rate_1aa47f3e4d894936ffaab99d4faed5c2af" kindref="member">is_valid</ref>(15000),<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>sampling<sp/>rate<sp/>must<sp/>be<sp/>multiple<sp/>of<sp/>15kHz.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a48b22079b01098f9e77dfddb62cd6efb" kindref="member">value_type</ref><sp/><ref refid="classsrsgnb_1_1sampling__rate_1a9b5ba21f2e6f5b82ebc91ce68f01beb1" kindref="member">value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="159" refid="structfmt_1_1formatter_3_01srsgnb_1_1sampling__rate_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::sampling_rate&gt;<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.begin();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(<ref refid="classsrsgnb_1_1sampling__rate" kindref="compound">srsgnb::sampling_rate</ref><sp/>srate,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:.2f}MHz&quot;</highlight><highlight class="normal">,<sp/>srate.<ref refid="classsrsgnb_1_1sampling__rate_1a46e20beea4d692d9e0fa74995af32748" kindref="member">to_MHz</ref>());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/phy/lower/sampling_rate.h"/>
  </compounddef>
</doxygen>
