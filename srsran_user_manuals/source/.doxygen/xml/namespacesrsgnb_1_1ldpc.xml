<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacesrsgnb_1_1ldpc" kind="namespace" language="C++">
    <compoundname>srsgnb::ldpc</compoundname>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" prot="public" static="no" strong="no">
        <type></type>
        <name>lifting_size_t</name>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a63da9ad5da5fc250589091aa6eddfbfb" prot="public">
          <name>LS2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ab6793280063a46f65e80235eac5e09bd" prot="public">
          <name>LS3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a76b54908773b4cfd77d3390090fb7a8e" prot="public">
          <name>LS4</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a0c0dd42db2503213fa287436bf2473b6" prot="public">
          <name>LS5</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060aa5c23cc8fb16a425440d97ea71031dbc" prot="public">
          <name>LS6</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ae13ffe20eeddf947aac261e7a1f200f2" prot="public">
          <name>LS7</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a98c6dd27f3292a81d50cd50667b654a2" prot="public">
          <name>LS8</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a084be43456958242572f70bdee74a5c2" prot="public">
          <name>LS9</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060aa39ca6c992de589141cc67decfd385bf" prot="public">
          <name>LS10</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a1dc7c30d61d17b3ea262154edeb8cc5d" prot="public">
          <name>LS11</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a8b6cf99008627648d42f8827f3b53d9e" prot="public">
          <name>LS12</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a8e65b42220a1e1c0b1fbd23de568aa74" prot="public">
          <name>LS13</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a495899728025bbb8cf285c603e9aa91b" prot="public">
          <name>LS14</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a4a51547630df425e40d71b262f63aad8" prot="public">
          <name>LS15</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a03beaf03e835a7000ade4b2304aaf34b" prot="public">
          <name>LS16</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a1553bcaf1c9f2d499c6d8fb5a8e886ad" prot="public">
          <name>LS18</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a33d0cb18358d7668369b4d55fa80ca2f" prot="public">
          <name>LS20</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ab97f173b7f42f5979440cf37a0a1c382" prot="public">
          <name>LS22</name>
          <initializer>= 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060aafa799893f453b45185505457197fe23" prot="public">
          <name>LS24</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a00a0cd7a35c2505ac5c04383d3984bd2" prot="public">
          <name>LS26</name>
          <initializer>= 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a7a89feb3ed0a2fc13dd3d122a5377537" prot="public">
          <name>LS28</name>
          <initializer>= 28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a665fab64932d524f0092195947afc41c" prot="public">
          <name>LS30</name>
          <initializer>= 30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a0ba7a07e799a0d9dfb657b2b00de2275" prot="public">
          <name>LS32</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a7916094f77d64ec8f7fe1935b0c037c4" prot="public">
          <name>LS36</name>
          <initializer>= 36</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ab75832648eb5d44aad7cb76c4ac928cc" prot="public">
          <name>LS40</name>
          <initializer>= 40</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060afdcafe0f3214d6f7a37ec15518613bbf" prot="public">
          <name>LS44</name>
          <initializer>= 44</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a7a5f9719d6009c6ae25599ef1b19f4da" prot="public">
          <name>LS48</name>
          <initializer>= 48</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a6c4f20f010e213b2081f59edee11e3b7" prot="public">
          <name>LS52</name>
          <initializer>= 52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a1cd96b7bcfdd14823d34d69ba942c6d3" prot="public">
          <name>LS56</name>
          <initializer>= 56</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ac6df70da9a392a3e82f3dcd6b816dde4" prot="public">
          <name>LS60</name>
          <initializer>= 60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060afd6ea9161db9ac7c84c09808299259bb" prot="public">
          <name>LS64</name>
          <initializer>= 64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a8607ba8677976cd36836557630825e8a" prot="public">
          <name>LS72</name>
          <initializer>= 72</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ab06e9c3588e522116fdecaff7ac317d1" prot="public">
          <name>LS80</name>
          <initializer>= 80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060aa903b25173d30f7c30de3d3198e59ea5" prot="public">
          <name>LS88</name>
          <initializer>= 88</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a6779a322a59301451bd103d944ba768b" prot="public">
          <name>LS96</name>
          <initializer>= 96</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a5434558eece8eb0642beb06a36b4b83a" prot="public">
          <name>LS104</name>
          <initializer>= 104</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a251eae67fe8e544c49815296d4e5be00" prot="public">
          <name>LS112</name>
          <initializer>= 112</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a886afc5985b4f741a5ea036539429125" prot="public">
          <name>LS120</name>
          <initializer>= 120</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a87730470f3f2c5989abf338e654dfbb9" prot="public">
          <name>LS128</name>
          <initializer>= 128</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a0fb8ee605b17a3814d27e4f8af7d0ac5" prot="public">
          <name>LS144</name>
          <initializer>= 144</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a2ae7ed941289cf9e2415a17f6e641cb6" prot="public">
          <name>LS160</name>
          <initializer>= 160</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a4fa3571e21759b47fe946d1beabb0568" prot="public">
          <name>LS176</name>
          <initializer>= 176</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a4f6e95966fce321c0bff30c82d0a9941" prot="public">
          <name>LS192</name>
          <initializer>= 192</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a1b809e22e1a6d61cb4c92620fecec820" prot="public">
          <name>LS208</name>
          <initializer>= 208</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a44a00a3b8639878048cba4f337eae2da" prot="public">
          <name>LS224</name>
          <initializer>= 224</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a191a4ab81a5b1d80cc52bda76e78c761" prot="public">
          <name>LS240</name>
          <initializer>= 240</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a5db2dc5ef9627e9d2629cc67f5a412b5" prot="public">
          <name>LS256</name>
          <initializer>= 256</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a4fddebebef00838a7e79fe33c22eb590" prot="public">
          <name>LS288</name>
          <initializer>= 288</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060ad6f5987be8ddb01c39f5bf402f3a889a" prot="public">
          <name>LS320</name>
          <initializer>= 320</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060aaf8be17890912ceda00baee2f60aae7d" prot="public">
          <name>LS352</name>
          <initializer>= 352</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060a24b6fea187162533b8604a2b4a2035cc" prot="public">
          <name>LS384</name>
          <initializer>= 384</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Available lifting sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="28" column="20" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="28" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacesrsgnb_1_1ldpc_1a58a92055744a46942df9ecf4aef1fbc5" prot="public" static="no">
        <type>std::array&lt; std::array&lt; uint16_t, <ref refid="namespacesrsgnb_1_1ldpc_1a4c9799d4a66531db14028cab24df0bd1" kindref="member">MAX_BG_N_FULL</ref> &gt;, <ref refid="namespacesrsgnb_1_1ldpc_1ae1c3c163121c4a5af7d238593af8c589" kindref="member">MAX_BG_M</ref> &gt;</type>
        <definition>using srsgnb::ldpc::BG_matrix_t = typedef std::array&lt;std::array&lt;uint16_t, MAX_BG_N_FULL&gt;, MAX_BG_M&gt;</definition>
        <argsstring></argsstring>
        <name>BG_matrix_t</name>
        <briefdescription>
<para>Representation of a graph, inspired by TS38.212 Tables 5.3.2-2 and 5.3.2-3. </para>
        </briefdescription>
        <detaileddescription>
<para>Graphs are represented by a <computeroutput>max_BG_M</computeroutput> <formula id="205">$\times$</formula> <computeroutput>max_BG_N_full</computeroutput> matrix. A number between 0 and 383 at entry <formula id="206">$(m, n)$</formula> denotes a connection between check node <formula id="30">$m$</formula> and variable node <formula id="2">$n$</formula> in the base graph. The value of the number represents the circular shift applied to the connections in the lifted graph. If entry <formula id="206">$(m, n)$</formula> is equal to <computeroutput>NO_EDGE</computeroutput>, there is no connection in either the base graph or the lifted one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="54" column="1" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesrsgnb_1_1ldpc_1adda62dd3abd97604bd7acd6dc9a3f2d4" prot="public" static="no">
        <type>std::array&lt; uint16_t, <ref refid="namespacesrsgnb_1_1ldpc_1a95655042738dac6cee2c7047fd64f305" kindref="member">MAX_BG_CHECK_EDGES</ref> &gt;</type>
        <definition>using srsgnb::ldpc::BG_adjacency_row_t = typedef std::array&lt;uint16_t, MAX_BG_CHECK_EDGES&gt;</definition>
        <argsstring></argsstring>
        <name>BG_adjacency_row_t</name>
        <briefdescription>
<para>Represents a list of variable nodes connected to a check node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="60" column="1" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacesrsgnb_1_1ldpc_1afc2064d48a9e6670b967629e1aa401fc" prot="public" static="no">
        <type>std::array&lt; <ref refid="namespacesrsgnb_1_1ldpc_1adda62dd3abd97604bd7acd6dc9a3f2d4" kindref="member">BG_adjacency_row_t</ref>, <ref refid="namespacesrsgnb_1_1ldpc_1ae1c3c163121c4a5af7d238593af8c589" kindref="member">MAX_BG_M</ref> &gt;</type>
        <definition>using srsgnb::ldpc::BG_adjacency_matrix_t = typedef std::array&lt;BG_adjacency_row_t, MAX_BG_M&gt;</definition>
        <argsstring></argsstring>
        <name>BG_adjacency_matrix_t</name>
        <briefdescription>
<para>For check node <computeroutput>m</computeroutput>, BG_adjacency_matrix_t[m] provides a list of the variable nodes connected to it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="63" column="1" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1ab5cd7213af3d1e82a40997d6d3acca03" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::NOF_LIFTING_SIZES</definition>
        <argsstring></argsstring>
        <name>NOF_LIFTING_SIZES</name>
        <initializer>= 51</initializer>
        <briefdescription>
<para>Total number of lifting sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="82" column="20" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="82" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__impl_1a5720f300e42f160026b7f6dd4e15a9a2" compoundref="ldpc__decoder__impl_8cpp" startline="19" endline="44">srsgnb::ldpc_decoder_impl::init</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__impl_1a39f37cd89f5ccc5ec564154adb12745c" compoundref="ldpc__encoder__impl_8cpp" startline="20" endline="33">srsgnb::ldpc_encoder_impl::init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a05dbc4df73ca10477e90e047da92c43f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::NOF_LIFTING_INDICES</definition>
        <argsstring></argsstring>
        <name>NOF_LIFTING_INDICES</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>All lifting sizes are assigned an index from 0 to 7 (see TS38.212 Table 5.3.2-1). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="84" column="20" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a76ced19d0f80b4c1b7f593737fa8e2be" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::array&lt; <ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">lifting_size_t</ref>, <ref refid="namespacesrsgnb_1_1ldpc_1ab5cd7213af3d1e82a40997d6d3acca03" kindref="member">NOF_LIFTING_SIZES</ref> &gt;</type>
        <definition>constexpr std::array&lt;lifting_size_t, NOF_LIFTING_SIZES&gt; srsgnb::ldpc::all_lifting_sizes</definition>
        <argsstring></argsstring>
        <name>all_lifting_sizes</name>
        <initializer>= {
    LS2,   LS3,   LS4,   LS5,   LS6,   LS7,   LS8,   LS9,   LS10,  LS11,  LS12,  LS13,  LS14,
    LS15,  LS16,  LS18,  LS20,  LS22,  LS24,  LS26,  LS28,  LS30,  LS32,  LS36,  LS40,  LS44,
    LS48,  LS52,  LS56,  LS60,  LS64,  LS72,  LS80,  LS88,  LS96,  LS104, LS112, LS120, LS128,
    LS144, LS160, LS176, LS192, LS208, LS224, LS240, LS256, LS288, LS320, LS352, LS384}</initializer>
        <briefdescription>
<para>Array of lifting sizes, for iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="87" column="29" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="namespacesrsgnb_1_1ldpc_1a768a50a3593adc5139f7f4cc843a6a86" compoundref="ldpc__graph__impl_8cpp" startline="35" endline="45">create_graph_array</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a187fbcb4213527d02072c67c177790ae" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t srsgnb::ldpc::FILLER_BIT</definition>
        <argsstring></argsstring>
        <name>FILLER_BIT</name>
        <initializer>= 254</initializer>
        <briefdescription>
<para>Filler bit identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="94" column="26" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__matcher__impl_1a03724a6fceca36b11c53caffc77de00f" compoundref="ldpc__rate__matcher__impl_8cpp" startline="76" endline="119">srsgnb::ldpc_rate_matcher_impl::select_bits</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1af9ba28b20140035abdc4c29d3b9cbac6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_CODEBLOCK_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_CODEBLOCK_SIZE</name>
        <initializer>= all_lifting_sizes.back() * 66</initializer>
        <briefdescription>
<para>Maximum LDPC encoded codeblock size in bits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="97" column="27" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1pdsch__processor__impl_1a944f97851d3e931ae64809a1c31c1cdf" compoundref="pdsch__processor__impl_8cpp" startline="120" endline="174">srsgnb::pdsch_processor_impl::process</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1aab17d4f0def4df6d40873f226364e60b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_BG_K</definition>
        <argsstring></argsstring>
        <name>MAX_BG_K</name>
        <initializer>= 22</initializer>
        <briefdescription>
<para>Maximum number of information bits in a codeblock (before shortening). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_decoder_impl.h" line="23" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_decoder_impl.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a4e188ea601584d8e15f4f3e63824e699" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t srsgnb::ldpc::VOID_LIFTSIZE</definition>
        <argsstring></argsstring>
        <name>VOID_LIFTSIZE</name>
        <initializer>= 255</initializer>
        <briefdescription>
<para>Placeholder for invalid lifting-size values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="22" column="26" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="22" bodyend="-1"/>
        <referencedby refid="namespacesrsgnb_1_1ldpc_1a39a86e9cf2d2c71aca6385b475eb0ac3" compoundref="ldpc__luts__impl_8cpp" startline="4509" endline="4532">get_graph</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__matcher__impl_1aa3bd50a08db612abd4fc6a3e8c35fa6d" compoundref="ldpc__rate__matcher__impl_8cpp" startline="28" endline="74">srsgnb::ldpc_rate_matcher_impl::rate_match</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a1967af9f6b3ce8356a0ee2cc72abfeb9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t srsgnb::ldpc::NO_EDGE</definition>
        <argsstring></argsstring>
        <name>NO_EDGE</name>
        <initializer>= 0xffff</initializer>
        <briefdescription>
<para>Placeholder for missing edges in the Tanner graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="24" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__generic_1a500cb077147fb9be4d751bfc4b2235b6" compoundref="ldpc__decoder__impl_8cpp" startline="172" endline="227">srsgnb::ldpc_decoder_generic::update_check_to_variable_messages</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__generic_1a93107a25f420a286904a62e746280cac" compoundref="ldpc__decoder__impl_8cpp" startline="229" endline="249">srsgnb::ldpc_decoder_generic::update_soft_bits</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a69821bbfcf84e437d33135ad38e28865" compoundref="ldpc__encoder__impl_8cpp" startline="100" endline="132">srsgnb::ldpc_encoder_generic::preprocess_systematic_bits</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a5aca7d99d73494a0d18dd7ab84f651f0" compoundref="ldpc__encoder__impl_8cpp" startline="134" endline="155">srsgnb::ldpc_encoder_generic::encode_ext_region</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a35c77e72f6a7f823f2cbe85c2681c777" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::BG1_M</definition>
        <argsstring></argsstring>
        <name>BG1_M</name>
        <initializer>= 46</initializer>
        <briefdescription>
<para>Number of parity-check nodes in base graph BG1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="27" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__segmenter__impl_1a9942e39840cd4d0efc5ba5ac25994f73" compoundref="ldpc__segmenter__impl_8cpp" startline="70" endline="77">srsgnb::ldpc_segmenter_impl::compute_segment_length</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a5e6b9ae8f3d0e4c6c656dc2506c9ac64" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::BG1_N_FULL</definition>
        <argsstring></argsstring>
        <name>BG1_N_FULL</name>
        <initializer>= 68</initializer>
        <briefdescription>
<para>Number of variable nodes in base graph BG1, before shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="29" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__segmenter__impl_1a9942e39840cd4d0efc5ba5ac25994f73" compoundref="ldpc__segmenter__impl_8cpp" startline="70" endline="77">srsgnb::ldpc_segmenter_impl::compute_segment_length</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a492358364ef837148bd38cb080f79212" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::BG1_N_SHORT</definition>
        <argsstring></argsstring>
        <name>BG1_N_SHORT</name>
        <initializer>= 66</initializer>
        <briefdescription>
<para>Number of variable nodes in base graph BG1, after shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="31" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__matcher__impl_1aa3bd50a08db612abd4fc6a3e8c35fa6d" compoundref="ldpc__rate__matcher__impl_8cpp" startline="28" endline="74">srsgnb::ldpc_rate_matcher_impl::rate_match</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a0210caeff09dff38472c7539979e9e99" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::BG2_M</definition>
        <argsstring></argsstring>
        <name>BG2_M</name>
        <initializer>= 42</initializer>
        <briefdescription>
<para>Number of parity-check nodes in base graph BG2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="33" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__segmenter__impl_1a9942e39840cd4d0efc5ba5ac25994f73" compoundref="ldpc__segmenter__impl_8cpp" startline="70" endline="77">srsgnb::ldpc_segmenter_impl::compute_segment_length</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a8dcaad120e7684d4cde1bd677a331c13" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::BG2_N_FULL</definition>
        <argsstring></argsstring>
        <name>BG2_N_FULL</name>
        <initializer>= 52</initializer>
        <briefdescription>
<para>Number of variable nodes in base graph BG2, before shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="35" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__segmenter__impl_1a9942e39840cd4d0efc5ba5ac25994f73" compoundref="ldpc__segmenter__impl_8cpp" startline="70" endline="77">srsgnb::ldpc_segmenter_impl::compute_segment_length</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a80b0980ff240be0d715f4fcb4b7d5ebb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::BG2_N_SHORT</definition>
        <argsstring></argsstring>
        <name>BG2_N_SHORT</name>
        <initializer>= 50</initializer>
        <briefdescription>
<para>Number of variable nodes in base graph BG2, after shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="37" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="37" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__matcher__impl_1aa3bd50a08db612abd4fc6a3e8c35fa6d" compoundref="ldpc__rate__matcher__impl_8cpp" startline="28" endline="74">srsgnb::ldpc_rate_matcher_impl::rate_match</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a4c9799d4a66531db14028cab24df0bd1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_BG_N_FULL</definition>
        <argsstring></argsstring>
        <name>MAX_BG_N_FULL</name>
        <initializer>= std::max(<ref refid="namespacesrsgnb_1_1ldpc_1a5e6b9ae8f3d0e4c6c656dc2506c9ac64" kindref="member">BG1_N_FULL</ref>, <ref refid="namespacesrsgnb_1_1ldpc_1a8dcaad120e7684d4cde1bd677a331c13" kindref="member">BG2_N_FULL</ref>)</initializer>
        <briefdescription>
<para>Maximum number of variable nodes in a base graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="39" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1ae1c3c163121c4a5af7d238593af8c589" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_BG_M</definition>
        <argsstring></argsstring>
        <name>MAX_BG_M</name>
        <initializer>= std::max(<ref refid="namespacesrsgnb_1_1ldpc_1a35c77e72f6a7f823f2cbe85c2681c777" kindref="member">BG1_M</ref>, <ref refid="namespacesrsgnb_1_1ldpc_1a0210caeff09dff38472c7539979e9e99" kindref="member">BG2_M</ref>)</initializer>
        <briefdescription>
<para>Maximum number of parity check nodes in a base graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="41" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__generic_1ad44cd99c2d8e67a7c594ebe9bc839ab5" compoundref="ldpc__encoder__impl_8cpp" startline="165" endline="189">srsgnb::ldpc_encoder_generic::high_rate_bg1_i6</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a6d488788f9126bc0a40be7c439e6bf0b" compoundref="ldpc__encoder__impl_8cpp" startline="191" endline="214">srsgnb::ldpc_encoder_generic::high_rate_bg1_other</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a1cc132f0a07fdace72b511c088274d80" compoundref="ldpc__encoder__impl_8cpp" startline="216" endline="239">srsgnb::ldpc_encoder_generic::high_rate_bg2_i3_7</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a48a2a858e0bd24aee94c491483e1796b" compoundref="ldpc__encoder__impl_8cpp" startline="241" endline="267">srsgnb::ldpc_encoder_generic::high_rate_bg2_other</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a5715ceccdc23e2f7cc70a99cbfeb2be3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_LIFTING_SIZE</definition>
        <argsstring></argsstring>
        <name>MAX_LIFTING_SIZE</name>
        <initializer>= 384</initializer>
        <briefdescription>
<para>Maximum lifting size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="43" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a08bf4ddfe506ff6afa86f708206f2224" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_CODEBLOCK_LENGTH</definition>
        <argsstring></argsstring>
        <name>MAX_CODEBLOCK_LENGTH</name>
        <initializer>= (<ref refid="namespacesrsgnb_1_1ldpc_1a4c9799d4a66531db14028cab24df0bd1" kindref="member">MAX_BG_N_FULL</ref> - 2) * <ref refid="namespacesrsgnb_1_1ldpc_1a5715ceccdc23e2f7cc70a99cbfeb2be3" kindref="member">MAX_LIFTING_SIZE</ref></initializer>
        <briefdescription>
<para>Maximum codeblock length (recall that 2 * LS variable nodes are punctured from the full codeword). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="45" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a95655042738dac6cee2c7047fd64f305" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::MAX_BG_CHECK_EDGES</definition>
        <argsstring></argsstring>
        <name>MAX_BG_CHECK_EDGES</name>
        <initializer>= 20</initializer>
        <briefdescription>
<para>Maximum degree (number of incident edges) of a check node, in the base graphs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="57" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a31e17a6ece08ce0cb5a8924541eb81cf" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::NOF_BASE_GRAPHS</definition>
        <argsstring></argsstring>
        <name>NOF_BASE_GRAPHS</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Number of base graphs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="66" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a0b38b98812d6de9fde695b8a2c30332e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::TOTAL_NOF_GRAPHS</definition>
        <argsstring></argsstring>
        <name>TOTAL_NOF_GRAPHS</name>
        <initializer>= <ref refid="namespacesrsgnb_1_1ldpc_1ab5cd7213af3d1e82a40997d6d3acca03" kindref="member">NOF_LIFTING_SIZES</ref> * <ref refid="namespacesrsgnb_1_1ldpc_1a31e17a6ece08ce0cb5a8924541eb81cf" kindref="member">NOF_BASE_GRAPHS</ref></initializer>
        <briefdescription>
<para>Total number of lifted graphs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="68" column="27" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacesrsgnb_1_1ldpc_1a3edd55d7b04c252fa99398df0d9ee6ff" prot="public" static="yes" mutable="no">
        <type>const std::array&lt; <ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref>, <ref refid="namespacesrsgnb_1_1ldpc_1a0b38b98812d6de9fde695b8a2c30332e" kindref="member">TOTAL_NOF_GRAPHS</ref> &gt;</type>
        <definition>const std::array&lt;ldpc_graph_impl, TOTAL_NOF_GRAPHS&gt; srsgnb::ldpc::graph_array</definition>
        <argsstring></argsstring>
        <name>graph_array</name>
        <initializer>= <ref refid="namespacesrsgnb_1_1ldpc_1a768a50a3593adc5139f7f4cc843a6a86" kindref="member">create_graph_array</ref>()</initializer>
        <briefdescription>
<para>An array with all possible LDPC graphs (see <ref refid="namespacesrsgnb_1_1ldpc_1a768a50a3593adc5139f7f4cc843a6a86" kindref="member">create_graph_array()</ref>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="159" column="25" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="159" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__impl_1a5720f300e42f160026b7f6dd4e15a9a2" compoundref="ldpc__decoder__impl_8cpp" startline="19" endline="44">srsgnb::ldpc_decoder_impl::init</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__impl_1a39f37cd89f5ccc5ec564154adb12745c" compoundref="ldpc__encoder__impl_8cpp" startline="20" endline="33">srsgnb::ldpc_encoder_impl::init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesrsgnb_1_1ldpc_1aa95f3b61800c887aad3883b3df8107c4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr unsigned</type>
        <definition>constexpr unsigned srsgnb::ldpc::compute_nof_codeblocks</definition>
        <argsstring>(unsigned tbs, ldpc_base_graph_type bg)</argsstring>
        <name>compute_nof_codeblocks</name>
        <param>
          <type>unsigned</type>
          <declname>tbs</declname>
        </param>
        <param>
          <type><ref refid="namespacesrsgnb_1aef8df2da7a55cf1ada5a749a6433330c" kindref="member">ldpc_base_graph_type</ref></type>
          <declname>bg</declname>
        </param>
        <briefdescription>
<para>Computes the number of codeblocks from the transport block size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tbs</parametername>
</parameternamelist>
<parameterdescription>
<para>Transport block size as a number of bits (not including CRC). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bg</parametername>
</parameternamelist>
<parameterdescription>
<para>Base graph. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of codeblocks a transport block of size <computeroutput>tbs</computeroutput> is encoded into when using using base graph <computeroutput>bg</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="104" column="27" bodyfile="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" bodystart="104" bodyend="115"/>
        <referencedby refid="classsrsgnb_1_1ldpc__segmenter__impl_1ac42240fce4bb7e502661967508115d76" compoundref="ldpc__segmenter__impl_8cpp" startline="133" endline="209">srsgnb::ldpc_segmenter_impl::segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesrsgnb_1_1ldpc_1a768a50a3593adc5139f7f4cc843a6a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; <ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref>, <ref refid="namespacesrsgnb_1_1ldpc_1a0b38b98812d6de9fde695b8a2c30332e" kindref="member">TOTAL_NOF_GRAPHS</ref> &gt;</type>
        <definition>std::array&lt; ldpc_graph_impl, TOTAL_NOF_GRAPHS &gt; srsgnb::ldpc::create_graph_array</definition>
        <argsstring>()</argsstring>
        <name>create_graph_array</name>
        <briefdescription>
<para>Creates an array with all possible LDPC graphs. </para>
        </briefdescription>
        <detaileddescription>
<para>The graphs will be ordered by base graph and lifting size. For instance, the graph corresponding to BG2 and LS4 will be at entry <ref refid="namespacesrsgnb_1_1ldpc_1ab5cd7213af3d1e82a40997d6d3acca03" kindref="member">NOF_LIFTING_SIZES</ref> <computeroutput> + 3 </computeroutput>, since <computeroutput>LS4</computeroutput> is the third one in the list of all possible lifting sizes (i.e., <ref refid="namespacesrsgnb_1_1ldpc_1a76ced19d0f80b4c1b7f593737fa8e2be" kindref="member">all_lifting_sizes</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="156" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.cpp" bodystart="35" bodyend="45" declfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" declline="156" declcolumn="12"/>
        <references refid="namespacesrsgnb_1_1ldpc_1a76ced19d0f80b4c1b7f593737fa8e2be" compoundref="ldpc_8h" startline="87">all_lifting_sizes</references>
        <references refid="namespacesrsgnb_1_1ldpc_1a82c307d48e5817771bd4dc4a5f6c990a" compoundref="ldpc__luts__impl_8cpp" startline="4539" endline="4542">get_lifting_size_position</references>
      </memberdef>
      <memberdef kind="function" id="namespacesrsgnb_1_1ldpc_1a39a86e9cf2d2c71aca6385b475eb0ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1_1ldpc_1a58a92055744a46942df9ecf4aef1fbc5" kindref="member">BG_matrix_t</ref></type>
        <definition>BG_matrix_t srsgnb::ldpc::get_graph</definition>
        <argsstring>(ldpc_base_graph_type bg, lifting_size_t ls)</argsstring>
        <name>get_graph</name>
        <param>
          <type><ref refid="namespacesrsgnb_1aef8df2da7a55cf1ada5a749a6433330c" kindref="member">ldpc_base_graph_type</ref></type>
          <declname>bg</declname>
        </param>
        <param>
          <type><ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">lifting_size_t</ref></type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Get the LDPC Tanner graph corresponding to the given base graph and lifting size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bg</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired base graph. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ls</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired lifting size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A compact parity check matrix: the value taken by entry <formula id="206">$(m, n)$</formula> represents the shift applied when lifting the edge between check node <formula id="30">$m$</formula> and variable node <formula id="2">$n$</formula> of the base graph. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" line="27" column="13" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.cpp" bodystart="4509" bodyend="4532" declfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" declline="27" declcolumn="13"/>
        <references refid="ldpc__luts__impl_8cpp_1aef885187111905751c8dc9a343365b3b" compoundref="ldpc__luts__impl_8cpp" startline="45">LSindex</references>
        <references refid="namespacesrsgnb_1_1ldpc_1a4e188ea601584d8e15f4f3e63824e699" compoundref="ldpc__graph__impl_8h" startline="22">VOID_LIFTSIZE</references>
      </memberdef>
      <memberdef kind="function" id="namespacesrsgnb_1_1ldpc_1ad68c0a66dcd96fbd5b57d1d0152813bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t srsgnb::ldpc::get_lifting_index</definition>
        <argsstring>(lifting_size_t ls)</argsstring>
        <name>get_lifting_index</name>
        <param>
          <type><ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">lifting_size_t</ref></type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Get the lifting size index for a given lifting size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" line="30" column="9" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.cpp" bodystart="4534" bodyend="4537" declfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" declline="30" declcolumn="9"/>
        <references refid="ldpc__luts__impl_8cpp_1aef885187111905751c8dc9a343365b3b" compoundref="ldpc__luts__impl_8cpp" startline="45">LSindex</references>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__dematcher__impl_1ace370290b571f592a6a637f84ae143a3" compoundref="ldpc__rate__dematcher__impl_8cpp" startline="29" endline="85">srsgnb::ldpc_rate_dematcher_impl::rate_dematch</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__rate__matcher__impl_1aa3bd50a08db612abd4fc6a3e8c35fa6d" compoundref="ldpc__rate__matcher__impl_8cpp" startline="28" endline="74">srsgnb::ldpc_rate_matcher_impl::rate_match</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesrsgnb_1_1ldpc_1a82c307d48e5817771bd4dc4a5f6c990a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t srsgnb::ldpc::get_lifting_size_position</definition>
        <argsstring>(lifting_size_t ls)</argsstring>
        <name>get_lifting_size_position</name>
        <param>
          <type><ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">lifting_size_t</ref></type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>Get the position of the lifting size in the list of all lifting sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" line="33" column="9" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.cpp" bodystart="4539" bodyend="4542" declfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" declline="33" declcolumn="9"/>
        <references refid="ldpc__luts__impl_8cpp_1aef885187111905751c8dc9a343365b3b" compoundref="ldpc__luts__impl_8cpp" startline="45">LSindex</references>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__impl_1a5720f300e42f160026b7f6dd4e15a9a2" compoundref="ldpc__decoder__impl_8cpp" startline="19" endline="44">srsgnb::ldpc_decoder_impl::init</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__encoder__impl_1a39f37cd89f5ccc5ec564154adb12745c" compoundref="ldpc__encoder__impl_8cpp" startline="20" endline="33">srsgnb::ldpc_encoder_impl::init</referencedby>
        <referencedby refid="namespacesrsgnb_1_1ldpc_1a768a50a3593adc5139f7f4cc843a6a86" compoundref="ldpc__graph__impl_8cpp" startline="35" endline="45">create_graph_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacesrsgnb_1_1ldpc_1a31b9c5dbb57d3caaa17173ea2bf238d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacesrsgnb_1_1ldpc_1afc2064d48a9e6670b967629e1aa401fc" kindref="member">BG_adjacency_matrix_t</ref> *</type>
        <definition>const BG_adjacency_matrix_t * srsgnb::ldpc::get_adjacency_matrix</definition>
        <argsstring>(ldpc_base_graph_type bg)</argsstring>
        <name>get_adjacency_matrix</name>
        <param>
          <type><ref refid="namespacesrsgnb_1aef8df2da7a55cf1ada5a749a6433330c" kindref="member">ldpc_base_graph_type</ref></type>
          <declname>bg</declname>
        </param>
        <briefdescription>
<para>Get the adjacency matrix of base graph <computeroutput>bg</computeroutput> (sparse representation). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" line="36" column="29" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.cpp" bodystart="4544" bodyend="4554" declfile="lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h" declline="36" declcolumn="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LDPC constants and helper functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h" line="25" column="14"/>
  </compounddef>
</doxygen>
