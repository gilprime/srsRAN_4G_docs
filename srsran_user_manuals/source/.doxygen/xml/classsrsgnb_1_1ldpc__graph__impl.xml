<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1ldpc__graph__impl" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::ldpc_graph_impl</compoundname>
    <includes refid="ldpc__graph__impl_8h" local="no">ldpc_graph_impl.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors and destructors</header>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1acaf294131b08b3afe9822de9859c313c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ldpc_graph_impl::ldpc_graph_impl</definition>
        <argsstring>(ldpc_base_graph_type _bg, ldpc::lifting_size_t _ls)</argsstring>
        <name>ldpc_graph_impl</name>
        <param>
          <type><ref refid="namespacesrsgnb_1aef8df2da7a55cf1ada5a749a6433330c" kindref="member">ldpc_base_graph_type</ref></type>
          <declname>_bg</declname>
        </param>
        <param>
          <type><ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">ldpc::lifting_size_t</ref></type>
          <declname>_ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="78" column="3" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.cpp" bodystart="17" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a91efefb27a10b91eb5fbc83997b78131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_graph_impl::ldpc_graph_impl</definition>
        <argsstring>()</argsstring>
        <name>ldpc_graph_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="79" column="3" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a33770144fdfee283a91b52528d2b0c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_graph_impl::~ldpc_graph_impl</definition>
        <argsstring>()=default</argsstring>
        <name>~ldpc_graph_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="80" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Copy constructor and operator</header>
      <description><para>Deleted </para>
</description>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1aee805afc812f87ed344b90cd794946ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_graph_impl::ldpc_graph_impl</definition>
        <argsstring>(ldpc_graph_impl &amp;)=delete</argsstring>
        <name>ldpc_graph_impl</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="87" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a9f861de5ba682428819e937137177aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> &amp;</type>
        <definition>ldpc_graph_impl&amp; srsgnb::ldpc_graph_impl::operator=</definition>
        <argsstring>(ldpc_graph_impl &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="88" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Move constructor and operator</header>
      <description><para>Default </para>
</description>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a2a5de957046fb965bc848b86f86bea3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_graph_impl::ldpc_graph_impl</definition>
        <argsstring>(ldpc_graph_impl &amp;&amp;)=default</argsstring>
        <name>ldpc_graph_impl</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="95" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1aedb8d48642242c541a357670021b8046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> &amp;</type>
        <definition>ldpc_graph_impl&amp; srsgnb::ldpc_graph_impl::operator=</definition>
        <argsstring>(ldpc_graph_impl &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="96" column="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1a2c156c6e0e93f8e60e8dacd79748b813" prot="private" static="no" mutable="no">
        <type><ref refid="namespacesrsgnb_1aef8df2da7a55cf1ada5a749a6433330c" kindref="member">ldpc_base_graph_type</ref></type>
        <definition>ldpc_base_graph_type srsgnb::ldpc_graph_impl::base_graph</definition>
        <argsstring></argsstring>
        <name>base_graph</name>
        <briefdescription>
<para>Base graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="132" column="24" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="132" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a98cdcef4758d8a90079cd50b18c47498" compoundref="ldpc__graph__impl_8h" startline="100" endline="100">get_base_graph</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1abd2568e164a5157db451cda1e8ac400a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">ldpc::lifting_size_t</ref></type>
        <definition>ldpc::lifting_size_t srsgnb::ldpc_graph_impl::lifting_size</definition>
        <argsstring></argsstring>
        <name>lifting_size</name>
        <briefdescription>
<para>Lifting size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="134" column="24" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1ac9ed5055f90ad39e472312d696a268c3" compoundref="ldpc__graph__impl_8h" startline="103" endline="103">get_lifting_size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1a47bd4bab61a1470beb29f35e44237253" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t srsgnb::ldpc_graph_impl::lifting_index</definition>
        <argsstring></argsstring>
        <name>lifting_index</name>
        <briefdescription>
<para>Lifting index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="136" column="11" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="136" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1ace3d3cc19bf8a597f5f8becedb725582" compoundref="ldpc__graph__impl_8h" startline="106" endline="106">get_lifting_index</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1ab6de60bd44410a3608a6173d4442576b" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::nof_BG_check_nodes</definition>
        <argsstring></argsstring>
        <name>nof_BG_check_nodes</name>
        <briefdescription>
<para>Number of check nodes in the base graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="138" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="138" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a6d02cf1391a5d64429fdc410f101f091" compoundref="ldpc__graph__impl_8h" startline="116" endline="116">get_nof_BG_check_nodes</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a92d10842cc2978e253be7fec175662ba" compoundref="ldpc__graph__impl_8h" startline="125" endline="125">get_nof_BG_info_nodes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1ad7a9cdd7b67b3d52d3d362ece89548eb" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::nof_BG_var_nodes_full</definition>
        <argsstring></argsstring>
        <name>nof_BG_var_nodes_full</name>
        <briefdescription>
<para>Number of variable nodes in the base graph, before shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="140" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="140" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a4d52f5d4b22c1a2d86700d317ccf6618" compoundref="ldpc__graph__impl_8h" startline="119" endline="119">get_nof_BG_var_nodes_full</referencedby>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a92d10842cc2978e253be7fec175662ba" compoundref="ldpc__graph__impl_8h" startline="125" endline="125">get_nof_BG_info_nodes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1ab10e14989379d2a04b44d4ecc638a1c2" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::nof_BG_var_nodes_short</definition>
        <argsstring></argsstring>
        <name>nof_BG_var_nodes_short</name>
        <briefdescription>
<para>Number of variable nodes in the base graph, after shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="142" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="142" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a526396f76af38e440ae2a9aacfb28f92" compoundref="ldpc__graph__impl_8h" startline="122" endline="122">get_nof_BG_var_nodes_short</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1a4aad108867c9e7cf5db6d9b8515c419e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacesrsgnb_1_1ldpc_1a58a92055744a46942df9ecf4aef1fbc5" kindref="member">ldpc::BG_matrix_t</ref></type>
        <definition>ldpc::BG_matrix_t srsgnb::ldpc_graph_impl::parity_check_matrix</definition>
        <argsstring></argsstring>
        <name>parity_check_matrix</name>
        <briefdescription>
<para>Parity check matrix of the graph (BG representation). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="145" column="21" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="145" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a6f8412d8b92ecfa41e80e6b0be649c7f" compoundref="ldpc__graph__impl_8h" startline="113" endline="113">get_lifted_node</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__graph__impl_1a7b4d17bb5483a423ae5bde0c817d246d" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacesrsgnb_1_1ldpc_1afc2064d48a9e6670b967629e1aa401fc" kindref="member">ldpc::BG_adjacency_matrix_t</ref> *</type>
        <definition>const ldpc::BG_adjacency_matrix_t* srsgnb::ldpc_graph_impl::adjacency_matrix</definition>
        <argsstring></argsstring>
        <name>adjacency_matrix</name>
        <briefdescription>
<para>Adjacency matrix of the base graph (sparse representation). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="147" column="37" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="147" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1ldpc__graph__impl_1a0fc737bfd86d2ba0e4d063375e5a91fb" compoundref="ldpc__graph__impl_8h" startline="128" endline="128">get_adjacency_row</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a98cdcef4758d8a90079cd50b18c47498" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1aef8df2da7a55cf1ada5a749a6433330c" kindref="member">ldpc_base_graph_type</ref></type>
        <definition>ldpc_base_graph_type srsgnb::ldpc_graph_impl::get_base_graph</definition>
        <argsstring>() const</argsstring>
        <name>get_base_graph</name>
        <briefdescription>
<para>Returns the base graph generating the current graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="100" column="24" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="100" bodyend="100"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1a2c156c6e0e93f8e60e8dacd79748b813" compoundref="ldpc__graph__impl_8h" startline="132">base_graph</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1ac9ed5055f90ad39e472312d696a268c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">ldpc::lifting_size_t</ref></type>
        <definition>ldpc::lifting_size_t srsgnb::ldpc_graph_impl::get_lifting_size</definition>
        <argsstring>() const</argsstring>
        <name>get_lifting_size</name>
        <briefdescription>
<para>Returns the lifting size generating the current graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="103" column="24" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="103" bodyend="103"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1abd2568e164a5157db451cda1e8ac400a" compoundref="ldpc__graph__impl_8h" startline="134">lifting_size</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1ace3d3cc19bf8a597f5f8becedb725582" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t srsgnb::ldpc_graph_impl::get_lifting_index</definition>
        <argsstring>() const</argsstring>
        <name>get_lifting_index</name>
        <briefdescription>
<para>Returns the lifting index corresponding to the current lifting size (a number between 0 and 7). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="106" column="11" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="106" bodyend="106"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1a47bd4bab61a1470beb29f35e44237253" compoundref="ldpc__graph__impl_8h" startline="136">lifting_index</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a6f8412d8b92ecfa41e80e6b0be649c7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_graph_impl::get_lifted_node</definition>
        <argsstring>(unsigned m, unsigned n) const</argsstring>
        <name>get_lifted_node</name>
        <param>
          <type>unsigned</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns the compact representation of the lifted node at position <formula id="207">$(m,n)$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the base graph has an edge between check node <computeroutput>m</computeroutput> and variable node <computeroutput>n</computeroutput>, the returned value is the shift applied to the lifted node. Conversely, if there is no edge, then the returned value is <ref refid="namespacesrsgnb_1_1ldpc_1a1967af9f6b3ce8356a0ee2cc72abfeb9" kindref="member">srsgnb::ldpc::NO_EDGE</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="113" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="113" bodyend="113"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1a4aad108867c9e7cf5db6d9b8515c419e" compoundref="ldpc__graph__impl_8h" startline="145">parity_check_matrix</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a6d02cf1391a5d64429fdc410f101f091" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::get_nof_BG_check_nodes</definition>
        <argsstring>() const</argsstring>
        <name>get_nof_BG_check_nodes</name>
        <briefdescription>
<para>Returns the number of check nodes of the underlying base graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="116" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="116" bodyend="116"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1ab6de60bd44410a3608a6173d4442576b" compoundref="ldpc__graph__impl_8h" startline="138">nof_BG_check_nodes</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a4d52f5d4b22c1a2d86700d317ccf6618" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::get_nof_BG_var_nodes_full</definition>
        <argsstring>() const</argsstring>
        <name>get_nof_BG_var_nodes_full</name>
        <briefdescription>
<para>Returns the number of variable nodes of the underlying base graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="119" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="119" bodyend="119"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1ad7a9cdd7b67b3d52d3d362ece89548eb" compoundref="ldpc__graph__impl_8h" startline="140">nof_BG_var_nodes_full</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a526396f76af38e440ae2a9aacfb28f92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::get_nof_BG_var_nodes_short</definition>
        <argsstring>() const</argsstring>
        <name>get_nof_BG_var_nodes_short</name>
        <briefdescription>
<para>Returns the number of variable nodes of the underlying base graph after shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="122" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="122" bodyend="122"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1ab10e14989379d2a04b44d4ecc638a1c2" compoundref="ldpc__graph__impl_8h" startline="142">nof_BG_var_nodes_short</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a92d10842cc2978e253be7fec175662ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::ldpc_graph_impl::get_nof_BG_info_nodes</definition>
        <argsstring>() const</argsstring>
        <name>get_nof_BG_info_nodes</name>
        <briefdescription>
<para>Returns the number of variable nodes of the underlying base graph associated to information bits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="125" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="125" bodyend="125"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1ad7a9cdd7b67b3d52d3d362ece89548eb" compoundref="ldpc__graph__impl_8h" startline="140">nof_BG_var_nodes_full</references>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1ab6de60bd44410a3608a6173d4442576b" compoundref="ldpc__graph__impl_8h" startline="138">nof_BG_check_nodes</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__graph__impl_1a0fc737bfd86d2ba0e4d063375e5a91fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacesrsgnb_1_1ldpc_1adda62dd3abd97604bd7acd6dc9a3f2d4" kindref="member">ldpc::BG_adjacency_row_t</ref> &amp;</type>
        <definition>const ldpc::BG_adjacency_row_t&amp; srsgnb::ldpc_graph_impl::get_adjacency_row</definition>
        <argsstring>(unsigned m) const</argsstring>
        <name>get_adjacency_row</name>
        <param>
          <type>unsigned</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Returns a reference to the selected row of <ref refid="classsrsgnb_1_1ldpc__graph__impl_1a7b4d17bb5483a423ae5bde0c817d246d" kindref="member">ldpc_graph_impl::adjacency_matrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="128" column="34" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="128" bodyend="128"/>
        <references refid="classsrsgnb_1_1ldpc__graph__impl_1a7b4d17bb5483a423ae5bde0c817d246d" compoundref="ldpc__graph__impl_8h" startline="147">adjacency_matrix</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes the Tanner graph of an LDPC code (implementation). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::ldpc_graph_impl</label>
        <link refid="classsrsgnb_1_1ldpc__graph__impl"/>
      </node>
    </collaborationgraph>
    <location file="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" line="73" column="1" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h" bodystart="72" bodyend="148"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a7b4d17bb5483a423ae5bde0c817d246d" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>adjacency_matrix</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a2c156c6e0e93f8e60e8dacd79748b813" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>base_graph</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a0fc737bfd86d2ba0e4d063375e5a91fb" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_adjacency_row</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a98cdcef4758d8a90079cd50b18c47498" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_base_graph</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a6f8412d8b92ecfa41e80e6b0be649c7f" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_lifted_node</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1ace3d3cc19bf8a597f5f8becedb725582" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_lifting_index</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1ac9ed5055f90ad39e472312d696a268c3" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_lifting_size</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a6d02cf1391a5d64429fdc410f101f091" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_nof_BG_check_nodes</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a92d10842cc2978e253be7fec175662ba" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_nof_BG_info_nodes</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a4d52f5d4b22c1a2d86700d317ccf6618" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_nof_BG_var_nodes_full</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a526396f76af38e440ae2a9aacfb28f92" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>get_nof_BG_var_nodes_short</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1acaf294131b08b3afe9822de9859c313c" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>ldpc_graph_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a91efefb27a10b91eb5fbc83997b78131" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>ldpc_graph_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1aee805afc812f87ed344b90cd794946ff" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>ldpc_graph_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a2a5de957046fb965bc848b86f86bea3f" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>ldpc_graph_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a47bd4bab61a1470beb29f35e44237253" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>lifting_index</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1abd2568e164a5157db451cda1e8ac400a" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>lifting_size</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1ab6de60bd44410a3608a6173d4442576b" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>nof_BG_check_nodes</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1ad7a9cdd7b67b3d52d3d362ece89548eb" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>nof_BG_var_nodes_full</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1ab10e14989379d2a04b44d4ecc638a1c2" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>nof_BG_var_nodes_short</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a9f861de5ba682428819e937137177aae" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1aedb8d48642242c541a357670021b8046" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a4aad108867c9e7cf5db6d9b8515c419e" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>parity_check_matrix</name></member>
      <member refid="classsrsgnb_1_1ldpc__graph__impl_1a33770144fdfee283a91b52528d2b0c1f" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_graph_impl</scope><name>~ldpc_graph_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
