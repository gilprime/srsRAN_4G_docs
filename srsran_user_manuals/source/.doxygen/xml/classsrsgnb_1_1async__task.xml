<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1async__task" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::async_task</compoundname>
    <basecompoundref refid="classsrsgnb_1_1detail_1_1common__task__crtp" prot="public" virt="non-virtual">srsgnb::detail::common_task_crtp&lt; async_task&lt; R &gt;, R &gt;</basecompoundref>
    <includes refid="async__task_8h" local="no">async_task.h</includes>
    <innerclass refid="structsrsgnb_1_1async__task_1_1promise__type" prot="public">srsgnb::async_task::promise_type</innerclass>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1async__task_1a7036ab888d6b9c46296d44280c60fa34" prot="public" static="no">
        <type>R</type>
        <definition>using srsgnb::async_task&lt; R &gt;::result_type =  R</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="23" column="3" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsrsgnb_1_1async__task_1ab68a61c2d16b77276c45d523a467c4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class detail::common_task_crtp&lt; async_task&lt; R &gt;, R &gt;</definition>
        <argsstring></argsstring>
        <name>detail::common_task_crtp&lt; async_task&lt; R &gt;, R &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="64" column="4" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1async__task_1a819d8a50cbf5262d05690b9ffc062719" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1unique__coroutine" kindref="compound">unique_coroutine</ref>&lt; <ref refid="structsrsgnb_1_1async__task_1_1promise__type" kindref="compound">promise_type</ref> &gt;</type>
        <definition>unique_coroutine&lt;promise_type&gt; srsgnb::async_task&lt; R &gt;::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="79" column="20" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1async__task_1ac43d3b0ea625ba21110614906c7183b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::async_task&lt; R &gt;::async_task</definition>
        <argsstring>()=default</argsstring>
        <name>async_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="54" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task_1ac4d792cf487258490481b023423a376a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::async_task&lt; R &gt;::async_task</definition>
        <argsstring>(coro_handle&lt; promise_type &gt; cb)</argsstring>
        <name>async_task</name>
        <param>
          <type><ref refid="structsrsgnb_1_1coro__handle" kindref="compound">coro_handle</ref>&lt; <ref refid="structsrsgnb_1_1async__task_1_1promise__type" kindref="compound">promise_type</ref> &gt;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="55" column="12" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task_1af8d2a57bef5ea78e8eb48cc6cadc81b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1async__task" kindref="compound">async_task</ref>&lt; R &gt; &amp;</type>
        <definition>async_task&lt;R&gt;&amp; srsgnb::async_task&lt; R &gt;::get_awaiter</definition>
        <argsstring>()</argsstring>
        <name>get_awaiter</name>
        <briefdescription>
<para>Retrieve awaiter interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="58" column="14" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task_1a84c470b84acc132a5445e6c70b5b9276" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1coro__handle" kindref="compound">coro_handle</ref></type>
        <definition>coro_handle srsgnb::async_task&lt; R &gt;::await_suspend</definition>
        <argsstring>(coro_handle&lt;&gt; h) noexcept</argsstring>
        <name>await_suspend</name>
        <param>
          <type><ref refid="structsrsgnb_1_1coro__handle" kindref="compound">coro_handle</ref>&lt;&gt;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Register suspending coroutine as continuation of the current lazy_task. Tail-resumes &quot;this&quot; lazy_task. Called solely when &quot;this&quot; lazy_task is at initial suspension point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>suspending coroutine that is calling await_suspend. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coroutine handle to tail-resume. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task.h" line="64" column="4" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="64" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Lazy awaitable coroutine type that outputs a result of type R when completed. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Result of the task </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::async_task&lt; R &gt;</label>
        <link refid="classsrsgnb_1_1async__task"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::detail::common_task_crtp&lt; async_task&lt; R &gt;, R &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1common__task__crtp"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::async_task&lt; R &gt;</label>
        <link refid="classsrsgnb_1_1async__task"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::coro_handle&lt; promise_type &gt;</label>
        <link refid="structsrsgnb_1_1coro__handle"/>
      </node>
      <node id="3">
        <label>srsgnb::unique_coroutine&lt; srsgnb::async_task::promise_type &gt;</label>
        <link refid="classsrsgnb_1_1unique__coroutine"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::detail::common_task_crtp&lt; async_task&lt; R &gt;, R &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1common__task__crtp"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/async_task.h" line="21" column="1" bodyfile="include/srsgnb/support/async/async_task.h" bodystart="20" bodyend="80"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1async__task_1ac43d3b0ea625ba21110614906c7183b6" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>async_task</name></member>
      <member refid="classsrsgnb_1_1async__task_1ac4d792cf487258490481b023423a376a" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>async_task</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1ac7dccc55624ce69a41d5bf2f4fb983ad" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>await_ready</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a39cf42899cbebf7ec23295c4a54ee4b6" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>await_resume</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a6d2af1b6607352357311df7a54c2894b" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>await_resume</name></member>
      <member refid="classsrsgnb_1_1async__task_1a84c470b84acc132a5445e6c70b5b9276" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>await_suspend</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a79d656848d147e9f28c5f994c36ed5b1" prot="private" virt="non-virtual"><scope>srsgnb::async_task</scope><name>derived</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1ade5fa3006348b7e87467500506aedcef" prot="private" virt="non-virtual"><scope>srsgnb::async_task</scope><name>derived</name></member>
      <member refid="classsrsgnb_1_1async__task_1ab68a61c2d16b77276c45d523a467c4c1" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>detail::common_task_crtp&lt; async_task&lt; R &gt;, R &gt;</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a45261fe840f2cbe9b8b10d370efd495e" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a4ec18c97f93d9f0b1143109ac0f9adb0" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>get</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a4c725899bf9f3e428d98930cd3211008" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>get</name></member>
      <member refid="classsrsgnb_1_1async__task_1af8d2a57bef5ea78e8eb48cc6cadc81b4" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>get_awaiter</name></member>
      <member refid="classsrsgnb_1_1async__task_1a819d8a50cbf5262d05690b9ffc062719" prot="private" virt="non-virtual"><scope>srsgnb::async_task</scope><name>handle</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a23bc71549cdeb4eca7f747cd5a4561d9" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>ready</name></member>
      <member refid="classsrsgnb_1_1async__task_1a7036ab888d6b9c46296d44280c60fa34" prot="public" virt="non-virtual"><scope>srsgnb::async_task</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
