<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdetail_1_1fp" kind="class" language="C++" prot="public">
    <compoundname>detail::fp</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdetail_1_1fp_1a00c3e6e2dc33453af8bde1e4ea9ae015" prot="private" static="no">
        <type>uint64_t</type>
        <definition>using detail::fp::significand_type =  uint64_t</definition>
        <argsstring></argsstring>
        <name>significand_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="367" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdetail_1_1fp_1a66273e2e7390c72f24c7ae8ca20286c9" prot="public" static="no" mutable="no">
        <type>significand_type</type>
        <definition>significand_type detail::fp::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="370" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1fp_1a6bc195dc7de66ecea08d907da1e5ae0e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int detail::fp::e</definition>
        <argsstring></argsstring>
        <name>e</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="371" column="7" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdetail_1_1fp_1aa417737ba94deb25f3c388eca59cde55" prot="public" static="yes" mutable="no">
        <type>const FMT_CONSTEXPR_DECL int</type>
        <definition>const FMT_CONSTEXPR_DECL int detail::fp::double_significand_size</definition>
        <argsstring></argsstring>
        <name>double_significand_size</name>
        <initializer>=
      std::numeric_limits&lt;double&gt;::digits - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="376" column="39" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1fp_1af725a8b37eee4c2cc9e8c43d0a4cbc97" prot="public" static="yes" mutable="no">
        <type>const FMT_CONSTEXPR_DECL uint64_t</type>
        <definition>const FMT_CONSTEXPR_DECL uint64_t detail::fp::implicit_bit</definition>
        <argsstring></argsstring>
        <name>implicit_bit</name>
        <initializer>=
      1ULL &lt;&lt; double_significand_size</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="378" column="44" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdetail_1_1fp_1a0586ee7b6405a7301da5fed0959e1445" prot="public" static="yes" mutable="no">
        <type>const FMT_CONSTEXPR_DECL int</type>
        <definition>const FMT_CONSTEXPR_DECL int detail::fp::significand_size</definition>
        <argsstring></argsstring>
        <name>significand_size</name>
        <initializer>=
      <ref refid="structdetail_1_1bits" kindref="compound">bits</ref>&lt;significand_type&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="380" column="39" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdetail_1_1fp_1ae51e1a76b79af98a98567d3b57e5482a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>detail::fp::fp</definition>
        <argsstring>()</argsstring>
        <name>fp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="383" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1fp_1a68e336177e1c0037f4cf303986e47f5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>detail::fp::fp</definition>
        <argsstring>(uint64_t f_val, int e_val)</argsstring>
        <name>fp</name>
        <param>
          <type>uint64_t</type>
          <declname>f_val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="384" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1fp_1a8bd6f5a8690531e2fb80b794979dd328" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Double</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>detail::fp::fp</definition>
        <argsstring>(Double d)</argsstring>
        <name>fp</name>
        <param>
          <type>Double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="388" column="24" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1fp_1aac1dbcb3058db5148d6858bab5452d58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Double</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(sizeof(Double)==sizeof(uint64_t))</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool detail::fp::assign</definition>
        <argsstring>(Double d)</argsstring>
        <name>assign</name>
        <param>
          <type>Double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="392" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="392" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1fp_1aefaf51ccb41b796071481266c54d2232" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Double</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(sizeof(Double) !=sizeof(uint64_t))</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool detail::fp::assign</definition>
        <argsstring>(Double)</argsstring>
        <name>assign</name>
        <param>
          <type>Double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="416" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1fp_1a0fa2f06f7e11fa35884bc99ad05f6951" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Double</type>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1boundaries" kindref="compound">boundaries</ref></type>
        <definition>boundaries detail::fp::assign_with_boundaries</definition>
        <argsstring>(Double d)</argsstring>
        <name>assign_with_boundaries</name>
        <param>
          <type>Double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="425" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="425" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1fp_1af89bc128e0792198ec55998499b0e12a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Double</type>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1boundaries" kindref="compound">boundaries</ref></type>
        <definition>boundaries detail::fp::assign_float_with_boundaries</definition>
        <argsstring>(Double d)</argsstring>
        <name>assign_float_with_boundaries</name>
        <param>
          <type>Double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="435" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="435" bodyend="447"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>detail::fp</label>
        <link refid="classdetail_1_1fp"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="365" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="365" bodyend="448"/>
    <listofallmembers>
      <member refid="classdetail_1_1fp_1aac1dbcb3058db5148d6858bab5452d58" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>assign</name></member>
      <member refid="classdetail_1_1fp_1aefaf51ccb41b796071481266c54d2232" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>assign</name></member>
      <member refid="classdetail_1_1fp_1af89bc128e0792198ec55998499b0e12a" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>assign_float_with_boundaries</name></member>
      <member refid="classdetail_1_1fp_1a0fa2f06f7e11fa35884bc99ad05f6951" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>assign_with_boundaries</name></member>
      <member refid="classdetail_1_1fp_1aa417737ba94deb25f3c388eca59cde55" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>double_significand_size</name></member>
      <member refid="classdetail_1_1fp_1a6bc195dc7de66ecea08d907da1e5ae0e" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>e</name></member>
      <member refid="classdetail_1_1fp_1a66273e2e7390c72f24c7ae8ca20286c9" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>f</name></member>
      <member refid="classdetail_1_1fp_1ae51e1a76b79af98a98567d3b57e5482a" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>fp</name></member>
      <member refid="classdetail_1_1fp_1a68e336177e1c0037f4cf303986e47f5e" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>fp</name></member>
      <member refid="classdetail_1_1fp_1a8bd6f5a8690531e2fb80b794979dd328" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>fp</name></member>
      <member refid="classdetail_1_1fp_1af725a8b37eee4c2cc9e8c43d0a4cbc97" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>implicit_bit</name></member>
      <member refid="classdetail_1_1fp_1a0586ee7b6405a7301da5fed0959e1445" prot="public" virt="non-virtual"><scope>detail::fp</scope><name>significand_size</name></member>
      <member refid="classdetail_1_1fp_1a00c3e6e2dc33453af8bde1e4ea9ae015" prot="private" virt="non-virtual"><scope>detail::fp</scope><name>significand_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
