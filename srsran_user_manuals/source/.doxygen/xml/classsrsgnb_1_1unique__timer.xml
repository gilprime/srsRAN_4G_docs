<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1unique__timer" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::unique_timer</compoundname>
    <includes refid="timers_8h" local="no">timers.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1unique__timer_1afd3a289567c135b4b1bb592dc936e5f2" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto srsgnb::unique_timer::INVALID_TIMER_ID</definition>
        <argsstring></argsstring>
        <name>INVALID_TIMER_ID</name>
        <initializer>= std::numeric_limits&lt;<ref refid="namespacesrsgnb_1a7b91e95e400c28407d219ea3caf55f40" kindref="member">timer_id_t</ref>&gt;::<ref refid="namespacesrsgnb_1a7ed8cdcaf2365ffedb551d855a288426" kindref="member">max</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="257" column="25" bodyfile="include/srsgnb/support/timers.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1unique__timer_1afbb4deadee89493ab94921884a245c44" prot="private" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1timer__manager_1_1timer__handle" kindref="compound">timer_manager::timer_handle</ref> *</type>
        <definition>timer_manager::timer_handle* srsgnb::unique_timer::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="259" column="31" bodyfile="include/srsgnb/support/timers.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a7c27e94e50792155e6cd9cb5ad9e0b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_timer::unique_timer</definition>
        <argsstring>()=default</argsstring>
        <name>unique_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="262" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a4ad030d18844fa64288e54bf1319b9e6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_timer::unique_timer</definition>
        <argsstring>(timer_manager::timer_handle *pimpl)</argsstring>
        <name>unique_timer</name>
        <param>
          <type><ref refid="structsrsgnb_1_1timer__manager_1_1timer__handle" kindref="compound">timer_manager::timer_handle</ref> *</type>
          <declname>pimpl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="263" column="12" bodyfile="include/srsgnb/support/timers.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a7dbd913f0dbff5ba6891a34bf42aa276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_timer::unique_timer</definition>
        <argsstring>(const unique_timer &amp;)=delete</argsstring>
        <name>unique_timer</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="265" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a9ad02c062482af77e977bb97a43830b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref> &amp;</type>
        <definition>unique_timer&amp; srsgnb::unique_timer::operator=</definition>
        <argsstring>(const unique_timer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="266" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a2675a4d87b5d6faff6c8f9cea38641cc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_timer::unique_timer</definition>
        <argsstring>(unique_timer &amp;&amp;other) noexcept</argsstring>
        <name>unique_timer</name>
        <param>
          <type><ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="268" column="3" bodyfile="include/srsgnb/support/timers.h" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a54a5ea5b39f18cfb673f027fcd6af0a6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref> &amp;</type>
        <definition>unique_timer&amp; srsgnb::unique_timer::operator=</definition>
        <argsstring>(unique_timer &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1unique__timer" kindref="compound">unique_timer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="269" column="16" bodyfile="include/srsgnb/support/timers.h" bodystart="269" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a864ebab6525e4983811ff092ecc019e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_timer::~unique_timer</definition>
        <argsstring>()</argsstring>
        <name>~unique_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="278" column="3" bodyfile="include/srsgnb/support/timers.h" bodystart="278" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::unique_timer::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
<para>Returns true if the timer is valid, otherwise returns false if already released. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="287" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="287" bodyend="287"/>
        <referencedby refid="classsrsgnb_1_1unique__timer_1a648953eef6ac4397ec03a52721a4bb05" compoundref="timers_8h" startline="290" endline="290">id</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1ab870f2aaccc06ceae8e731f1b7f3bacc" compoundref="timers_8h" startline="293" endline="293">is_set</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1acfc060efe96ca206383e824697101d92" compoundref="timers_8h" startline="296" endline="296">is_running</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1aeb9911161d003a3d9585b78af392aa11" compoundref="timers_8h" startline="299" endline="299">has_expired</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1ad7409dbe25059f6396bd6c893f0e40a4" compoundref="timers_8h" startline="302" endline="302">time_elapsed</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1ae5dbf15feb025c41d17ea46ef46ebd66" compoundref="timers_8h" startline="305" endline="305">duration</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1acd529394fa104d48f89d80595ccb1425" compoundref="timers_8h" startline="308" endline="312">set</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1a4b169309f8b5fd965a0dec15544ae2bc" compoundref="timers_8h" startline="322" endline="326">run</referencedby>
        <referencedby refid="classsrsgnb_1_1unique__timer_1aaf7fbaf8c33be557b958f50f7ce09cf0" compoundref="timers_8h" startline="329" endline="334">stop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a648953eef6ac4397ec03a52721a4bb05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1a7b91e95e400c28407d219ea3caf55f40" kindref="member">timer_id_t</ref></type>
        <definition>timer_id_t srsgnb::unique_timer::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
<para>Returns the unique timer identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="290" column="14" bodyfile="include/srsgnb/support/timers.h" bodystart="290" bodyend="290"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a6d16e60172cd416d33b87530a9116b15" compoundref="timers_8h" startline="75">srsgnb::timer_manager::timer_handle::id</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1ab870f2aaccc06ceae8e731f1b7f3bacc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::unique_timer::is_set</definition>
        <argsstring>() const</argsstring>
        <name>is_set</name>
        <briefdescription>
<para>Returns true if the timer duration has been set, otherwise returns false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="293" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="293" bodyend="293"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a67caa40f7323abb5c7993b1a9ac1b6a7" compoundref="timers_8h" startline="102" endline="102">srsgnb::timer_manager::timer_handle::is_set</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1acfc060efe96ca206383e824697101d92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::unique_timer::is_running</definition>
        <argsstring>() const</argsstring>
        <name>is_running</name>
        <briefdescription>
<para>Returns true if the timer is currently running, otherwise returns false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="296" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="296" bodyend="296"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1aaf0bd6ffa1ddcda6c711209427f41638" compoundref="timers_8h" startline="93" endline="93">srsgnb::timer_manager::timer_handle::is_running</references>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" compoundref="rlc__tx__am__entity_8cpp" startline="379" endline="452">srsgnb::rlc_tx_am_entity::get_polling_bit</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1aeb9911161d003a3d9585b78af392aa11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::unique_timer::has_expired</definition>
        <argsstring>() const</argsstring>
        <name>has_expired</name>
        <briefdescription>
<para>Returns true if the timer has expired, otherwise returns false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="299" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="299" bodyend="299"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1aedc0ea780df9fab677679b6a5469b196" compoundref="timers_8h" startline="96" endline="96">srsgnb::timer_manager::timer_handle::has_expired</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1ad7409dbe25059f6396bd6c893f0e40a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1a0be707e6e824031784f5a15d82d7b055" kindref="member">timer_tick_difference_t</ref></type>
        <definition>timer_tick_difference_t srsgnb::unique_timer::time_elapsed</definition>
        <argsstring>() const</argsstring>
        <name>time_elapsed</name>
        <briefdescription>
<para>Returns the elapsed time in ticks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="302" column="27" bodyfile="include/srsgnb/support/timers.h" bodystart="302" bodyend="302"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a41ca1b9aefcc2235ff9c14a879777598" compoundref="timers_8h" startline="105" endline="114">srsgnb::timer_manager::timer_handle::time_elapsed</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1ae5dbf15feb025c41d17ea46ef46ebd66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1a0be707e6e824031784f5a15d82d7b055" kindref="member">timer_tick_difference_t</ref></type>
        <definition>timer_tick_difference_t srsgnb::unique_timer::duration</definition>
        <argsstring>() const</argsstring>
        <name>duration</name>
        <briefdescription>
<para>Returns the configured duration for this timer measured in ticks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="305" column="27" bodyfile="include/srsgnb/support/timers.h" bodystart="305" bodyend="305"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1ae8c58fe63538cef758cdb1175e98634c" compoundref="timers_8h" startline="99" endline="99">srsgnb::timer_manager::timer_handle::duration</references>
        <referencedby refid="classsrsgnb_1_1unique__timer_1acd529394fa104d48f89d80595ccb1425" compoundref="timers_8h" startline="308" endline="312">set</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1acd529394fa104d48f89d80595ccb1425" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::unique_timer::set</definition>
        <argsstring>(timer_tick_difference_t duration, unique_function&lt; void(timer_id_t)&gt; callback)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a0be707e6e824031784f5a15d82d7b055" kindref="member">timer_tick_difference_t</ref></type>
          <declname>duration</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref>&lt; void(<ref refid="namespacesrsgnb_1a7b91e95e400c28407d219ea3caf55f40" kindref="member">timer_id_t</ref>)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Configures the duration of the timer calling the provided callback upon timer expiration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="308" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="308" bodyend="312"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a47b1ef33e298a0ddeb62907c04ef25a1" compoundref="timers_8h" startline="117" endline="125">srsgnb::timer_manager::timer_handle::set</references>
        <references refid="classsrsgnb_1_1unique__timer_1ae5dbf15feb025c41d17ea46ef46ebd66" compoundref="timers_8h" startline="305" endline="305">duration</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1ab59d76d6e72cb89e76d2d9276d79e7c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::unique_timer::set</definition>
        <argsstring>(timer_tick_difference_t duration)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a0be707e6e824031784f5a15d82d7b055" kindref="member">timer_tick_difference_t</ref></type>
          <declname>duration</declname>
        </param>
        <briefdescription>
<para>Configures the duration of the timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="315" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="315" bodyend="319"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a47b1ef33e298a0ddeb62907c04ef25a1" compoundref="timers_8h" startline="117" endline="125">srsgnb::timer_manager::timer_handle::set</references>
        <references refid="classsrsgnb_1_1unique__timer_1ae5dbf15feb025c41d17ea46ef46ebd66" compoundref="timers_8h" startline="305" endline="305">duration</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1a4b169309f8b5fd965a0dec15544ae2bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::unique_timer::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
<para>Activates the timer to start ticking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="322" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="322" bodyend="326"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a88ab054d7ed6484c518ba213ed50babe" compoundref="timers_8h" startline="140" endline="140">srsgnb::timer_manager::timer_handle::run</references>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" compoundref="rlc__tx__am__entity_8cpp" startline="379" endline="452">srsgnb::rlc_tx_am_entity::get_polling_bit</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__timer_1aaf7fbaf8c33be557b958f50f7ce09cf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::unique_timer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stops the timer from ticking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/timers.h" line="329" column="8" bodyfile="include/srsgnb/support/timers.h" bodystart="329" bodyend="334"/>
        <references refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" compoundref="timers_8h" startline="287" endline="287">is_valid</references>
        <references refid="structsrsgnb_1_1timer__manager_1_1timer__handle_1a87a9c78111cedbac320d5e4e0671010b" compoundref="timers_8h" startline="143" endline="143">srsgnb::timer_manager::timer_handle::stop</references>
        <referencedby refid="classsrsgnb_1_1rlc__tx__am__entity_1a2bba6bbf36fd7f28fd9aeb624fa3f085" compoundref="rlc__tx__am__entity_8cpp" startline="379" endline="452">srsgnb::rlc_tx_am_entity::get_polling_bit</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a timer which invokes a user-provided callback upon timer expiration. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>srsgnb::timer_manager</label>
        <link refid="classsrsgnb_1_1timer__manager"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-free_list</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::unique_timer</label>
        <link refid="classsrsgnb_1_1unique__timer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>srsgnb::unique_function&lt; void(timer_id_t)&gt;</label>
        <link refid="classsrsgnb_1_1unique__function"/>
      </node>
      <node id="7">
        <label>srsgnb::intrusive_forward_list_element&lt; Tag &gt;</label>
        <link refid="structsrsgnb_1_1intrusive__forward__list__element"/>
      </node>
      <node id="3">
        <label>srsgnb::intrusive_double_linked_list_element&lt;&gt;</label>
        <link refid="structsrsgnb_1_1intrusive__double__linked__list__element"/>
      </node>
      <node id="4">
        <label>srsgnb::intrusive_forward_list_element&lt;&gt;</label>
        <link refid="structsrsgnb_1_1intrusive__forward__list__element"/>
      </node>
      <node id="6">
        <label>srsgnb::intrusive_forward_list&lt; srsgnb::timer_manager::timer_handle &gt;</label>
        <link refid="classsrsgnb_1_1intrusive__forward__list"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-node</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::timer_manager::timer_handle</label>
        <link refid="structsrsgnb_1_1timer__manager_1_1timer__handle"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+parent</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+callback</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/timers.h" line="256" column="1" bodyfile="include/srsgnb/support/timers.h" bodystart="255" bodyend="335"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1unique__timer_1ae5dbf15feb025c41d17ea46ef46ebd66" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>duration</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1afbb4deadee89493ab94921884a245c44" prot="private" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>handle</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1aeb9911161d003a3d9585b78af392aa11" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>has_expired</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a648953eef6ac4397ec03a52721a4bb05" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>id</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1afd3a289567c135b4b1bb592dc936e5f2" prot="private" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>INVALID_TIMER_ID</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1acfc060efe96ca206383e824697101d92" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>is_running</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1ab870f2aaccc06ceae8e731f1b7f3bacc" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>is_set</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a525f18d0db81b56db64501899bd5312b" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>is_valid</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a9ad02c062482af77e977bb97a43830b1" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a54a5ea5b39f18cfb673f027fcd6af0a6" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a4b169309f8b5fd965a0dec15544ae2bc" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>run</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1acd529394fa104d48f89d80595ccb1425" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>set</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1ab59d76d6e72cb89e76d2d9276d79e7c5" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>set</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1aaf7fbaf8c33be557b958f50f7ce09cf0" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>stop</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1ad7409dbe25059f6396bd6c893f0e40a4" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>time_elapsed</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a7c27e94e50792155e6cd9cb5ad9e0b65" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>unique_timer</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a4ad030d18844fa64288e54bf1319b9e6" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>unique_timer</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a7dbd913f0dbff5ba6891a34bf42aa276" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>unique_timer</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a2675a4d87b5d6faff6c8f9cea38641cc" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>unique_timer</name></member>
      <member refid="classsrsgnb_1_1unique__timer_1a864ebab6525e4983811ff092ecc019e6" prot="public" virt="non-virtual"><scope>srsgnb::unique_timer</scope><name>~unique_timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
