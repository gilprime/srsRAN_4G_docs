<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1slot__sync__point" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::slot_sync_point</compoundname>
    <includes refid="slot__sync__point_8h" local="no">slot_sync_point.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1slot__sync__point_1ab54e63f5e5e6341d8056221a8f5d55d3" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
        <definition>slot_point srsgnb::slot_sync_point::last_sl</definition>
        <argsstring></argsstring>
        <name>last_sl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="62" column="27" bodyfile="lib/scheduler/support/slot_sync_point.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1slot__sync__point_1a236a25366cd455523238e00a511e865a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t srsgnb::slot_sync_point::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="63" column="27" bodyfile="lib/scheduler/support/slot_sync_point.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1slot__sync__point_1a6c118179eee79a63981694f78cd76a78" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex srsgnb::slot_sync_point::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="64" column="27" bodyfile="lib/scheduler/support/slot_sync_point.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1slot__sync__point_1a2340a29e49cc7285d68e9a029960aeca" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable srsgnb::slot_sync_point::cvar</definition>
        <argsstring></argsstring>
        <name>cvar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="65" column="27" bodyfile="lib/scheduler/support/slot_sync_point.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1slot__sync__point_1a5edd865b7903395860a42c5eac9f5d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::slot_sync_point::slot_sync_point</definition>
        <argsstring>()=default</argsstring>
        <name>slot_sync_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__sync__point_1a56da9f9adb88bfead5c2765c76eb30db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::slot_sync_point::slot_sync_point</definition>
        <argsstring>(const slot_sync_point &amp;)=delete</argsstring>
        <name>slot_sync_point</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__sync__point" kindref="compound">slot_sync_point</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="25" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__sync__point_1a08ad9234aee6628c154e87d40c1a389f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::slot_sync_point::slot_sync_point</definition>
        <argsstring>(slot_sync_point &amp;&amp;)=delete</argsstring>
        <name>slot_sync_point</name>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__sync__point" kindref="compound">slot_sync_point</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="26" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__sync__point_1afe35791494c2389ace5165d827114508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__sync__point" kindref="compound">slot_sync_point</ref> &amp;</type>
        <definition>slot_sync_point&amp; srsgnb::slot_sync_point::operator=</definition>
        <argsstring>(const slot_sync_point &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1slot__sync__point" kindref="compound">slot_sync_point</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="27" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__sync__point_1adc2e7809d71137a1e8d67b3558d5fa85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1slot__sync__point" kindref="compound">slot_sync_point</ref> &amp;</type>
        <definition>slot_sync_point&amp; srsgnb::slot_sync_point::operator=</definition>
        <argsstring>(slot_sync_point &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__sync__point" kindref="compound">slot_sync_point</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="28" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1slot__sync__point_1a8ffcf686e6e5ce8b184b0365935465cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompletionFunction</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void srsgnb::slot_sync_point::wait</definition>
        <argsstring>(slot_point sl, size_t nof_workers, const CompletionFunction &amp;func)</argsstring>
        <name>wait</name>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>sl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nof_workers</declname>
        </param>
        <param>
          <type>const CompletionFunction &amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Called when thread enters synchronization point. Steps: </para>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>If the current thread is the first to call <ref refid="classsrsgnb_1_1slot__sync__point_1a8ffcf686e6e5ce8b184b0365935465cd" kindref="member">wait()</ref>, the count is set to the number of workers.</para>
</listitem><listitem><para>The count is decremented.<itemizedlist>
<listitem><para>If count &gt; 0, the current thread blocks waiting for count to reach zero.</para>
</listitem><listitem><para>If count==0, the current thread invokes completion callback, and notifies remaining threads to unlock. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sl</parametername>
</parameternamelist>
<parameterdescription>
<para>current slot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nof_workers</parametername>
</parameternamelist>
<parameterdescription>
<para>number of workers currently passing through synchronization point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Completion callback invoked when count reaches zero. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/support/slot_sync_point.h" line="39" column="8" bodyfile="lib/scheduler/support/slot_sync_point.h" bodystart="39" bodyend="59"/>
        <referencedby refid="classsrsgnb_1_1ue__scheduler__impl_1a4e3f3b5e0894c9473ce0f73862788e5a" compoundref="ue__scheduler__impl_8cpp" startline="43" endline="50">srsgnb::ue_scheduler_impl::run_slot</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This object creates a barrier for multiple threads when <ref refid="classsrsgnb_1_1slot__sync__point_1a8ffcf686e6e5ce8b184b0365935465cd" kindref="member">wait()</ref> is called. Once the count reaches zero, a callback is invoked. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>srsgnb::slot_point</label>
        <link refid="classsrsgnb_1_1slot__point"/>
      </node>
      <node id="1">
        <label>srsgnb::slot_sync_point</label>
        <link refid="classsrsgnb_1_1slot__sync__point"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-last_sl</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/scheduler/support/slot_sync_point.h" line="22" column="1" bodyfile="lib/scheduler/support/slot_sync_point.h" bodystart="21" bodyend="66"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1slot__sync__point_1a236a25366cd455523238e00a511e865a" prot="private" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>count</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1a2340a29e49cc7285d68e9a029960aeca" prot="private" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>cvar</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1ab54e63f5e5e6341d8056221a8f5d55d3" prot="private" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>last_sl</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1a6c118179eee79a63981694f78cd76a78" prot="private" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>mutex</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1afe35791494c2389ace5165d827114508" prot="public" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1adc2e7809d71137a1e8d67b3558d5fa85" prot="public" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1a5edd865b7903395860a42c5eac9f5d41" prot="public" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>slot_sync_point</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1a56da9f9adb88bfead5c2765c76eb30db" prot="public" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>slot_sync_point</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1a08ad9234aee6628c154e87d40c1a389f" prot="public" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>slot_sync_point</name></member>
      <member refid="classsrsgnb_1_1slot__sync__point_1a8ffcf686e6e5ce8b184b0365935465cd" prot="public" virt="non-virtual"><scope>srsgnb::slot_sync_point</scope><name>wait</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
