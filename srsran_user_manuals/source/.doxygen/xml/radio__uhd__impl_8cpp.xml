<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="radio__uhd__impl_8cpp" kind="file" language="C++">
    <compoundname>radio_uhd_impl.cpp</compoundname>
    <includes refid="radio__uhd__impl_8h" local="yes">radio_uhd_impl.h</includes>
    <includes refid="radio__uhd__device_8h" local="yes">radio_uhd_device.h</includes>
    <includes local="no">uhd/utils/thread_priority.h</includes>
    <incdepgraph>
      <node id="73">
        <label>srsgnb/adt/unique_function.h</label>
        <link refid="unique__function_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>atomic</label>
      </node>
      <node id="26">
        <label>functional</label>
      </node>
      <node id="7">
        <label>boost/exception/diagnostic_information.hpp</label>
      </node>
      <node id="19">
        <label>limits</label>
      </node>
      <node id="76">
        <label>srsgnb/radio/radio_session.h</label>
        <link refid="radio__session_8h_source"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>radio_uhd_device.h</label>
        <link refid="radio__uhd__device_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>iterator</label>
      </node>
      <node id="18">
        <label>cstdint</label>
      </node>
      <node id="51">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>stdint.h</label>
      </node>
      <node id="37">
        <label>srsgnb/support/error_handling.h</label>
        <link refid="error__handling_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cmath</label>
      </node>
      <node id="30">
        <label>cassert</label>
      </node>
      <node id="61">
        <label>detail/type_storage.h</label>
        <link refid="type__storage_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>stdexcept</label>
      </node>
      <node id="53">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>uhd/error.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="58">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>uhd/utils/log.hpp</label>
      </node>
      <node id="1">
        <label>lib/radio/uhd/radio_uhd_impl.cpp</label>
        <link refid="radio__uhd__impl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>uhd/exception.hpp</label>
      </node>
      <node id="71">
        <label>uhd/types/time_spec.hpp</label>
      </node>
      <node id="14">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>srsgnb/radio/radio_factory.h</label>
        <link refid="radio__factory_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>uhd/types/metadata.hpp</label>
      </node>
      <node id="63">
        <label>srsgnb/radio/radio_constants.h</label>
        <link refid="radio__constants_8h_source"/>
      </node>
      <node id="44">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>srsgnb/radio/radio_configuration.h</label>
        <link refid="radio__configuration_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>srsgnb/support/executors/task_executor.h</label>
        <link refid="task__executor_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>srsgnb/srsvec/detail/traits.h</label>
        <link refid="traits_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>pthread.h</label>
      </node>
      <node id="35">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cstdio</label>
      </node>
      <node id="56">
        <label>tuple</label>
      </node>
      <node id="41">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>radio_uhd_logger.h</label>
        <link refid="radio__uhd__logger_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
      <node id="64">
        <label>srsgnb/radio/radio_notification_handler.h</label>
        <link refid="radio__notification__handler_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>radio_uhd_tx_stream.h</label>
        <link refid="radio__uhd__tx__stream_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>utility</label>
      </node>
      <node id="47">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>array</label>
      </node>
      <node id="2">
        <label>radio_uhd_impl.h</label>
        <link refid="radio__uhd__impl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>uhd/utils/thread_priority.h</label>
      </node>
      <node id="69">
        <label>radio_uhd_tx_stream_fsm.h</label>
        <link refid="radio__uhd__tx__stream__fsm_8h_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>srsgnb/adt/static_vector.h</label>
        <link refid="static__vector_8h_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>radio_uhd_rx_stream.h</label>
        <link refid="radio__uhd__rx__stream_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cerrno</label>
      </node>
      <node id="74">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>srsgnb/gateways/baseband/baseband_gateway_buffer.h</label>
        <link refid="baseband__gateway__buffer_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>srsgnb/gateways/baseband/baseband_gateway_base.h</label>
        <link refid="baseband__gateway__base_8h_source"/>
      </node>
      <node id="77">
        <label>srsgnb/gateways/baseband/baseband_gateway.h</label>
        <link refid="baseband__gateway_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>radio_uhd_exception_handler.h</label>
        <link refid="radio__uhd__exception__handler_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>mutex</label>
      </node>
      <node id="46">
        <label>chrono</label>
      </node>
      <node id="42">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>uhd/usrp/multi_usrp.hpp</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>srsgnb/radio/radio_base.h</label>
        <link refid="radio__base_8h_source"/>
      </node>
      <node id="34">
        <label>srsgnb/srsvec/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>complex</label>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cstring</label>
      </node>
      <node id="52">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>srsgnb/radio/radio_management_plane.h</label>
        <link refid="radio__management__plane_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>radio_uhd_device_type.h</label>
        <link refid="radio__uhd__device__type_8h_source"/>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
      <node id="32">
        <label>srsgnb/srsvec/copy.h</label>
        <link refid="copy_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;radio_uhd_impl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;radio_uhd_device.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wall&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsuggest-override&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uhd/utils/thread_priority.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classsrsgnb_1_1radio__session__uhd__impl_1ad1b4421603df85b6d38bd8c4b75d1a2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ad1b4421603df85b6d38bd8c4b75d1a2f" kindref="member">radio_session_uhd_impl::set_time_to_gps_time</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>sensor_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gps_time&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>sensors;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_mboard_sensor_names(sensors)<sp/>!=<sp/>UHD_ERROR_NONE)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>not<sp/>possible<sp/>to<sp/>read<sp/>sensors.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>sensor<sp/>name.<sp/>Error<sp/>if<sp/>it<sp/>is<sp/>not<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(sensors.begin(),<sp/>sensors.end(),<sp/>sensor_name)<sp/>==<sp/>sensors.end())<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>sensor<sp/>%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>sensor_name.c_str());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>actual<sp/>sensor<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac_secs<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_sensor(sensor_name,<sp/>frac_secs))<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>not<sp/>possible<sp/>to<sp/>read<sp/>sensor<sp/>%s.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>sensor_name.c_str(),<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>time<sp/>and<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Setting<sp/>USRP<sp/>time<sp/>to<sp/>%fs\n&quot;</highlight><highlight class="normal">,<sp/>frac_secs);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_time_unknown_pps(uhd::time_spec_t(frac_secs))<sp/>!=<sp/>UHD_ERROR_NONE)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>failed<sp/>to<sp/>set<sp/>time.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classsrsgnb_1_1radio__session__uhd__impl_1a505517ac3fd2b667ff3ae2ce2f55d6c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a505517ac3fd2b667ff3ae2ce2f55d6c9" kindref="member">radio_session_uhd_impl::wait_sensor_locked</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_locked,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>sensor_name,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_mboard,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>is_locked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>sensor<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>sensors;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mboard)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>motherboard<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_mboard_sensor_names(sensors))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>mboard<sp/>sensor<sp/>names.<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>daughterboard<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_rx_sensor_names(sensors))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>Rx<sp/>sensor<sp/>names.<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>sensor<sp/>name.<sp/>Error<sp/>if<sp/>it<sp/>is<sp/>not<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(sensors.begin(),<sp/>sensors.end(),<sp/>sensor_name)<sp/>==<sp/>sensors.end())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>sensor<sp/>%s<sp/>not<sp/>found\n&quot;</highlight><highlight class="normal">,<sp/>sensor_name.c_str());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>actual<sp/>sensor<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_mboard)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_sensor(sensor_name,<sp/>is_locked))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>reading<sp/>mboard<sp/>sensor<sp/>%s.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>sensor_name.c_str(),<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_rx_sensor(sensor_name,<sp/>is_locked))<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>reading<sp/>rx<sp/>sensor<sp/>%s.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>sensor_name.c_str(),<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>value<sp/>and<sp/>wait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(1000);<sp/></highlight><highlight class="comment">//<sp/>1ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout<sp/>-=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>1ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(not<sp/>is_locked<sp/>and<sp/>timeout<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" kindref="member">radio_session_uhd_impl::set_tx_gain_unprotected</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port_idx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain_dB)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_idx<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>transmit<sp/>port<sp/>index<sp/>(%d)<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>ports<sp/>(%d).\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.size());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>uhd::gain_range_t<sp/>range;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_tx_gain_range(range,<sp/>port_idx))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>gain<sp/>range<sp/>for<sp/>transmitter<sp/>ch=%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>gain<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain_dB<sp/>&gt;<sp/>range.stop()<sp/>||<sp/>gain_dB<sp/>&lt;<sp/>range.start())<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>transmitter<sp/>%d<sp/>gain<sp/>%.2f<sp/>is<sp/>out-of-range<sp/>(%.2f<sp/>to<sp/>%.2f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_idx,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain_dB,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.start(),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.stop());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>gain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_tx_gain(port_idx,<sp/>gain_dB))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>gain<sp/>for<sp/>transmitter<sp/>%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" kindref="member">radio_session_uhd_impl::set_rx_gain_unprotected</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port_idx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain_dB)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_idx<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" kindref="member">rx_port_map</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>receive<sp/>port<sp/>index<sp/>(%d)<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>ports<sp/>(%d).\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" kindref="member">rx_port_map</ref>.size());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>uhd::gain_range_t<sp/>range;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_rx_gain_range(range,<sp/>port_idx))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>gain<sp/>range<sp/>for<sp/>receiver<sp/>ch=%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>gain<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain_dB<sp/>&gt;<sp/>range.stop()<sp/>||<sp/>gain_dB<sp/>&lt;<sp/>range.start())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>receiver<sp/>%d<sp/>gain<sp/>%.2f<sp/>is<sp/>out-of-range<sp/>(%.2f<sp/>to<sp/>%.2f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_idx,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain_dB,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.start(),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.stop());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>gain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_rx_gain(port_idx,<sp/>gain_dB))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>gain<sp/>for<sp/>receiver<sp/>%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" kindref="member">radio_session_uhd_impl::set_tx_freq</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port_idx,<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency" kindref="compound">radio_configuration::lo_frequency</ref><sp/>frequency)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_idx<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>transmit<sp/>port<sp/>index<sp/>(%d)<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>ports<sp/>(%d).\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.size());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>uhd::freq_range_t<sp/>range;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_tx_freq_range(range,<sp/>port_idx))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>frequency<sp/>range<sp/>for<sp/>transmitter<sp/>ch=%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>gain<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frequency.<ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" kindref="member">center_frequency_hz</ref><sp/>&gt;<sp/>range.stop()<sp/>||<sp/>frequency.<ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" kindref="member">center_frequency_hz</ref><sp/>&lt;<sp/>range.start())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>transmitter<sp/>%d<sp/>frequency<sp/>%.2f<sp/>MHz<sp/>is<sp/>out-of-range<sp/>(%.2f<sp/>to<sp/>%.2f<sp/>MHz)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_idx,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency.<ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" kindref="member">center_frequency_hz</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.start()<sp/>/<sp/>1e6,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.stop()<sp/>/<sp/>1e6);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_tx_freq(port_idx,<sp/>frequency))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>frequency<sp/>for<sp/>transmitter<sp/>%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" kindref="member">radio_session_uhd_impl::set_rx_freq</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port_idx,<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency" kindref="compound">radio_configuration::lo_frequency</ref><sp/>frequency)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port_idx<sp/>&gt;=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" kindref="member">rx_port_map</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>receive<sp/>port<sp/>index<sp/>(%d)<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>ports<sp/>(%d).\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.size());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>uhd::freq_range_t<sp/>range;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_rx_freq_range(range,<sp/>port_idx))<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>frequency<sp/>range<sp/>for<sp/>receiver<sp/>ch=%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>gain<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frequency.<ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" kindref="member">center_frequency_hz</ref><sp/>&gt;<sp/>range.stop()<sp/>||<sp/>frequency.<ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" kindref="member">center_frequency_hz</ref><sp/>&lt;<sp/>range.start())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>receiver<sp/>%d<sp/>frequency<sp/>%.2f<sp/>MHz<sp/>is<sp/>out-of-range<sp/>(%.2f<sp/>to<sp/>%.2f<sp/>MHz)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_idx,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency.<ref refid="structsrsgnb_1_1radio__configuration_1_1lo__frequency_1acabeaad1d0f6d5937cb69208213c5bcc" kindref="member">center_frequency_hz</ref>,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.start()<sp/>/<sp/>1e6,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.stop()<sp/>/<sp/>1e6);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_rx_freq(port_idx,<sp/>frequency))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>frequency<sp/>for<sp/>receiver<sp/>%d.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" kindref="member">radio_session_uhd_impl::start_rx_stream</ref>()</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>multiple<sp/>threads<sp/>from<sp/>starting<sp/>streams<sp/>simultaneously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ac3b4c1bef503ad8fb58046111232bf93" kindref="member">stream_start_mutex</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a254046c2463cce0a9773cf13769eb48e" kindref="member">stream_start_required</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>stream<sp/>start<sp/>is<sp/>no<sp/>longer<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a254046c2463cce0a9773cf13769eb48e" kindref="member">stream_start_required</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Immediate<sp/>start<sp/>of<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>uhd::time_spec_t<sp/>time_spec<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>USRP<sp/>time<sp/>as<sp/>timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_time_now(time_spec))<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>getting<sp/>time<sp/>to<sp/>start<sp/>stream.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>delay<sp/>to<sp/>current<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>time_spec<sp/>+=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3e224920edffa110c7ea56f73a65c5a3" kindref="member">START_STREAM_DELAY_S</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>all<sp/>streams<sp/>to<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stream<sp/>:<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream-&gt;start(time_spec))<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classsrsgnb_1_1radio__session__uhd__impl_1a3250d926cc32e410d939cf36bde73d6a" refkind="member"><highlight class="normal"><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3250d926cc32e410d939cf36bde73d6a" kindref="member">radio_session_uhd_impl::radio_session_uhd_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1radio" kindref="compound">radio_configuration::radio</ref>&amp;<sp/>radio_config,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1task__executor" kindref="compound">task_executor</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async_executor,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__notification__handler" kindref="compound">radio_notification_handler</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifier_)<sp/>:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>device(async_executor,<sp/>notifier_),<sp/>sampling_rate_hz(radio_config.sampling_rate_hz)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>fast-path<sp/>(U/L/O)<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>setenv(</highlight><highlight class="stringliteral">&quot;UHD_LOG_FASTPATH_DISABLE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>real<sp/>time<sp/>priority<sp/>to<sp/>UHD<sp/>threads.<sp/>All<sp/>threads<sp/>created<sp/>from<sp/>this<sp/>thread<sp/>inherit<sp/>the<sp/>priority.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uhd_set_thread_priority(uhd_default_thread_priority,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/>UHD_ERROR_NONE)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>Warning(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>UHD<sp/>RT<sp/>thread<sp/>priority.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>args<sp/>into<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>uhd::device_addr_t<sp/>device_addr(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9c74308fe0db4c0202a9df90e7efaf0e" kindref="member">args</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>logging<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UHD_LOG_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>uhd::log::severity_level<sp/>severity_level<sp/>=<sp/>uhd::log::severity_level::info;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a71b1b800a85d704904bfce8299d7572b" kindref="member">log_level</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>log_level<sp/>=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a71b1b800a85d704904bfce8299d7572b" kindref="member">log_level</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>e<sp/>:<sp/>log_level)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>std::toupper(e);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log_level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;WARNING&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severity_level<sp/>=<sp/>uhd::log::severity_level::warning;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log_level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severity_level<sp/>=<sp/>uhd::log::severity_level::info;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log_level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severity_level<sp/>=<sp/>uhd::log::severity_level::debug;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(log_level<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TRACE&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severity_level<sp/>=<sp/>uhd::log::severity_level::trace;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>severity_level<sp/>=<sp/>uhd::log::severity_level::error;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>uhd::log::set_console_level(severity_level);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>device<sp/>type<sp/>or<sp/>name<sp/>not<sp/>given<sp/>in<sp/>args,<sp/>select<sp/>device<sp/>from<sp/>found<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>device_addr.has_key(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>available<sp/>devices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uhd::device_addrs_t<sp/>devices<sp/>=<sp/>uhd::device::find(uhd::device_addr_t());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>if<sp/>no<sp/>device<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devices.empty())<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>no<sp/>radio<sp/>devices<sp/>found.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>first<sp/>available<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>uhd::device_addr_t<sp/>first_device_addr<sp/>=<sp/>devices.front();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>to<sp/>the<sp/>device<sp/>address<sp/>the<sp/>device<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_device_addr.has_key(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>device_addr.set(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/>first_device_addr.get(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse/Select<sp/>master<sp/>clock<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>device_addr.has_key(</highlight><highlight class="stringliteral">&quot;master_clock_rate&quot;</highlight><highlight class="normal">)<sp/>and<sp/>device_addr.has_key(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>master<sp/>clock<sp/>rate<sp/>for<sp/>B200<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>mcr;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(std::remainder(23.04e6,<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref>))<sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;23.04e6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(std::remainder(23.04e6,<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref>))<sp/>&lt;<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;30.72e6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref><sp/>&lt;<sp/>11.52e6)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/>std::to_string(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref><sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/>std::to_string(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_addr[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;x300&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;184.32e6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_addr[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;n3xx&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;122.88e6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_addr[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;e3x0&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;30.72e6&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>device_addr.set(</highlight><highlight class="stringliteral">&quot;master_clock_rate&quot;</highlight><highlight class="normal">,<sp/>mcr);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>total_rx_channel_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1stream" kindref="compound">radio_configuration::stream</ref>&amp;<sp/>stream_config<sp/>:<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a1fbcf54b278f57582a62be3f23885939" kindref="member">rx_streams</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>total_rx_channel_count<sp/>+=<sp/>stream_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>.size();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>total_tx_channel_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1stream" kindref="compound">radio_configuration::stream</ref>&amp;<sp/>stream_config<sp/>:<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a1fbcf54b278f57582a62be3f23885939" kindref="member">rx_streams</ref>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>total_tx_channel_count<sp/>+=<sp/>stream_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>.size();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>UHD<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Opening<sp/>USRP<sp/>tx_channels=%d,<sp/>rx_channels=%d,<sp/>args:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_tx_channel_count,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_rx_channel_count,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_addr.to_string().c_str());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>USRP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.usrp_make(device_addr))<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>opening<sp/>device.<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>device<sp/>name<sp/>is<sp/>not<sp/>set,<sp/>get<sp/>it<sp/>from<sp/>motherboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>std::string<sp/>mboard_name;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_mboard_name(mboard_name))<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a56e4fa1133b87b72ac05d559a2aefd16" kindref="member">type</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__device__type" kindref="compound">radio_uhd_device_type</ref>(mboard_name);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_locked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>std::string<sp/>sensor_name;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>sync<sp/>source.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_sync_source(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a118597035853d0fb7604e3afae78f342" kindref="member">clock</ref>))<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>GPS<sp/>time<sp/>if<sp/>GPSDO<sp/>is<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a118597035853d0fb7604e3afae78f342" kindref="member">clock</ref>.<ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1a5657e07df56e04e2484900f6fe19204e" kindref="member">sync</ref><sp/>==<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1aa51aa4573e34d8ccb44de2008ff5cfd8a5d2ec3ee1c91c66c2a282efb4c12c2a5" kindref="member">radio_configuration::clock_sources::source::GPSDO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ad1b4421603df85b6d38bd8c4b75d1a2f" kindref="member">set_time_to_gps_time</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>oscillator<sp/>sensor<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a118597035853d0fb7604e3afae78f342" kindref="member">clock</ref>.<ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1a5657e07df56e04e2484900f6fe19204e" kindref="member">sync</ref><sp/>==<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1aa51aa4573e34d8ccb44de2008ff5cfd8a5d2ec3ee1c91c66c2a282efb4c12c2a5" kindref="member">radio_configuration::clock_sources::source::GPSDO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gps_locked&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>sensor_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ref_locked&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>external<sp/>reference<sp/>/<sp/>GPS<sp/>is<sp/>locked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a118597035853d0fb7604e3afae78f342" kindref="member">clock</ref>.<ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1a5657e07df56e04e2484900f6fe19204e" kindref="member">sync</ref><sp/>==<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1aa51aa4573e34d8ccb44de2008ff5cfd8a5d2ec3ee1c91c66c2a282efb4c12c2a5" kindref="member">radio_configuration::clock_sources::source::GPSDO</ref><sp/>||</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a118597035853d0fb7604e3afae78f342" kindref="member">clock</ref>.<ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1a5657e07df56e04e2484900f6fe19204e" kindref="member">sync</ref><sp/>==<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1aa51aa4573e34d8ccb44de2008ff5cfd8a3932d629fb5e2be9d09b3a4485b3cc9d" kindref="member">radio_configuration::clock_sources::source::EXTERNAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blocks<sp/>until<sp/>clock<sp/>source<sp/>is<sp/>locked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>not_error<sp/>=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a505517ac3fd2b667ff3ae2ce2f55d6c9" kindref="member">wait_sensor_locked</ref>(is_locked,<sp/>sensor_name,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>300);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>Not<sp/>lock<sp/>error<sp/>if<sp/>the<sp/>return<sp/>was<sp/>successful,<sp/>wait_sensor_locked<sp/>prints<sp/>the<sp/>error<sp/>before<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>is_locked<sp/>and<sp/>!not_error)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>lock<sp/>reference<sp/>clock<sp/>source.<sp/>Sensor:<sp/>%s=%s\n&quot;</highlight><highlight class="normal">,<sp/>sensor_name.c_str(),<sp/>is_locked<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>Tx/Rx<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_tx_rate(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref>))<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>Tx<sp/>sampling<sp/>rate.<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_rx_rate(radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref>))<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>Rx<sp/>sampling<sp/>rate.<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.get_error_message().c_str());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>timestamps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((total_rx_channel_count<sp/>&gt;<sp/>1<sp/>||<sp/>total_tx_channel_count<sp/>&gt;<sp/>1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a118597035853d0fb7604e3afae78f342" kindref="member">clock</ref>.<ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1a5657e07df56e04e2484900f6fe19204e" kindref="member">sync</ref><sp/>!=<sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1clock__sources_1aa51aa4573e34d8ccb44de2008ff5cfd8a5d2ec3ee1c91c66c2a282efb4c12c2a5" kindref="member">radio_configuration::clock_sources::source::GPSDO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.set_time_unknown_pps(uhd::time_spec_t());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>transmit<sp/>stream,<sp/>create<sp/>stream<sp/>and<sp/>configure<sp/>RF<sp/>ports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>stream_idx<sp/>=<sp/>0;<sp/>stream_idx<sp/>!=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a015012dd6373e78f21266a2332974975" kindref="member">tx_streams</ref>.size();<sp/>++stream_idx)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1stream" kindref="compound">radio_configuration::stream</ref>&amp;<sp/>stream<sp/>=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a015012dd6373e78f21266a2332974975" kindref="member">tx_streams</ref>[stream_idx];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>stream<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description" kindref="compound">radio_uhd_tx_stream::stream_description</ref><sp/>stream_description<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description_1ab2e96043e8b51ddf06649bb022bb9d5f" kindref="member">id</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stream_idx;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description_1a7f4d1ac9948612c197a606fb23512bf1" kindref="member">otw_format</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1adbfdf99f19354b0a9fd84194dd89bc3d" kindref="member">otw_format</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description_1a2f28cedf43c0fd8743098bb73e077a0a" kindref="member">srate_hz</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a9cf23d6e0f264d5ee45348347bd88138" kindref="member">sampling_rate_hz</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description_1a2e380cb42463f2d38b2c20b911a476b4" kindref="member">args</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1a2a5320f716a0864f94fc78e499abeedf" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>ports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channel_idx<sp/>=<sp/>0;<sp/>channel_idx<sp/>!=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>.size();<sp/>++channel_idx)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>port<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>port_idx<sp/>=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.size();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>channel<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description_1a6881db1d4d4a9347e98b4f70aa44d886" kindref="member">ports</ref>.emplace_back(port_idx);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>stream<sp/>and<sp/>channel<sp/>indexes<sp/>for<sp/>the<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3a88de6b06e72d811a0cc19b4d5baed8" kindref="member">tx_port_map</ref>.emplace_back(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1aa6a7fe6e80a4a2fbef62a2c1d509c8ae" kindref="member">port_to_stream_channel</ref>(stream_idx,<sp/>channel_idx));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>transmit<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" kindref="member">tx_streams</ref>.emplace_back(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.create_tx_stream(stream_description));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>stream<sp/>creation<sp/>was<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" kindref="member">tx_streams</ref>.back()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channel_idx<sp/>=<sp/>0;<sp/>channel_idx<sp/>!=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>.size();<sp/>++channel_idx)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>port<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>port_idx<sp/>=<sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__tx__stream_1_1stream__description_1a6881db1d4d4a9347e98b4f70aa44d886" kindref="member">ports</ref>[channel_idx];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>port<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1channel" kindref="compound">radio_configuration::channel</ref>&amp;<sp/>channel<sp/>=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>[channel_idx];</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>gain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a6de5ac0c2182bc90c305005a1cef39bf" kindref="member">set_tx_gain_unprotected</ref>(port_idx,<sp/>channel.<ref refid="structsrsgnb_1_1radio__configuration_1_1channel_1afccfc761efec184ddd0ee1bccf6b50c4" kindref="member">gain_dB</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ada5ccb54c96667bb7e51fa52dd0ad98e" kindref="member">set_tx_freq</ref>(port_idx,<sp/>channel.<ref refid="structsrsgnb_1_1radio__configuration_1_1channel_1a7eba7b1c7a6380a0d56e2118b5e54a4d" kindref="member">freq</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>about<sp/>ignored<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!channel.<ref refid="structsrsgnb_1_1radio__configuration_1_1channel_1a56f4ba7ca3e41edeae642a66e5861b4d" kindref="member">args</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>transmitter<sp/>%d<sp/>unused<sp/>args.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>receive<sp/>stream,<sp/>create<sp/>stream<sp/>and<sp/>configure<sp/>RF<sp/>ports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>stream_idx<sp/>=<sp/>0;<sp/>stream_idx<sp/>!=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a1fbcf54b278f57582a62be3f23885939" kindref="member">rx_streams</ref>.size();<sp/>++stream_idx)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1stream" kindref="compound">radio_configuration::stream</ref>&amp;<sp/>stream<sp/>=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1a1fbcf54b278f57582a62be3f23885939" kindref="member">rx_streams</ref>[stream_idx];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>stream<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1radio__uhd__rx__stream_1_1stream__description" kindref="compound">radio_uhd_rx_stream::stream_description</ref><sp/>stream_description<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__rx__stream_1_1stream__description_1ac2080144db300fa886d1e334f5e2140d" kindref="member">id</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stream_idx;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__rx__stream_1_1stream__description_1a9be736d5996e7c5165f95026026c3187" kindref="member">otw_format</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>radio_config.<ref refid="structsrsgnb_1_1radio__configuration_1_1radio_1adbfdf99f19354b0a9fd84194dd89bc3d" kindref="member">otw_format</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__rx__stream_1_1stream__description_1aa93027b77e21b08849ce3a74fc8650a3" kindref="member">args</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1a2a5320f716a0864f94fc78e499abeedf" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>ports.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channel_idx<sp/>=<sp/>0;<sp/>channel_idx<sp/>!=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>.size();<sp/>++channel_idx)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>port<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>port_idx<sp/>=<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" kindref="member">rx_port_map</ref>.size();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>channel<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__rx__stream_1_1stream__description_1a43e660d9d6d702c0a3a7a36a7897450c" kindref="member">ports</ref>.emplace_back(port_idx);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>stream<sp/>and<sp/>channel<sp/>indexes<sp/>for<sp/>the<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1add457d4a7c61f9596a025bde8f49bda2" kindref="member">rx_port_map</ref>.emplace_back(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1aa6a7fe6e80a4a2fbef62a2c1d509c8ae" kindref="member">port_to_stream_channel</ref>(stream_idx,<sp/>channel_idx));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>transmit<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>.emplace_back(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a0932ef76236ccf8a310d0f2f03dfeaec" kindref="member">device</ref>.create_rx_stream(stream_description));</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>stream<sp/>creation<sp/>was<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>.back()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channel_idx<sp/>=<sp/>0;<sp/>channel_idx<sp/>!=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>.size();<sp/>++channel_idx)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>port<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>port_idx<sp/>=<sp/>stream_description.<ref refid="structsrsgnb_1_1radio__uhd__rx__stream_1_1stream__description_1a43e660d9d6d702c0a3a7a36a7897450c" kindref="member">ports</ref>[channel_idx];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>port<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1channel" kindref="compound">radio_configuration::channel</ref>&amp;<sp/>channel<sp/>=<sp/>stream.<ref refid="structsrsgnb_1_1radio__configuration_1_1stream_1ad96e955d15f39f6c83411f6b5fac352a" kindref="member">channels</ref>[channel_idx];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>gain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ac2bae893b7104b4f7bce4759b970e6de" kindref="member">set_rx_gain_unprotected</ref>(port_idx,<sp/>channel.<ref refid="structsrsgnb_1_1radio__configuration_1_1channel_1afccfc761efec184ddd0ee1bccf6b50c4" kindref="member">gain_dB</ref>))<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1aaf574cfd766d7544a2bfceea7ba9ed12" kindref="member">set_rx_freq</ref>(port_idx,<sp/>channel.<ref refid="structsrsgnb_1_1radio__configuration_1_1channel_1a7eba7b1c7a6380a0d56e2118b5e54a4d" kindref="member">freq</ref>))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>about<sp/>ignored<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!channel.<ref refid="structsrsgnb_1_1radio__configuration_1_1channel_1a56f4ba7ca3e41edeae642a66e5861b4d" kindref="member">args</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>transmitter<sp/>%d<sp/>unused<sp/>args.\n&quot;</highlight><highlight class="normal">,<sp/>port_idx);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>thread<sp/>priorities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uhd_set_thread_priority(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>!=<sp/>UHD_ERROR_NONE)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>setting<sp/>UHD<sp/>thread<sp/>priority.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition<sp/>to<sp/>successfully<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3c0645931e57998d8d0d5a0f8d998efb" kindref="member">state</ref><sp/>=<sp/>states::SUCCESSFUL_INIT;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a29ac3fe3d2fda51cc90d56d7bde80448" kindref="member">radio_session_uhd_impl::stop</ref>()</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition<sp/>state<sp/>to<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a3c0645931e57998d8d0d5a0f8d998efb" kindref="member">state</ref><sp/>=<sp/>states::STOP;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>transmit<sp/>streams<sp/>and<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stream<sp/>:<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" kindref="member">tx_streams</ref>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;stop();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>receive<sp/>streams<sp/>and<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stream<sp/>:<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;stop();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="classsrsgnb_1_1radio__session__uhd__impl_1a43dd92b72a5124afdb7ec50eb9f54856" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a43dd92b72a5124afdb7ec50eb9f54856" kindref="member">radio_session_uhd_impl::transmit</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_id,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1baseband__gateway__transmitter_1_1metadata" kindref="compound">baseband_gateway_transmitter::metadata</ref>&amp;<sp/><ref refid="structsrsgnb_1_1baseband__gateway__transmitter_1_1metadata" kindref="compound">metadata</ref>,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1baseband__gateway__buffer" kindref="compound">baseband_gateway_buffer</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data)</highlight></codeline>
<codeline lineno="569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>report_fatal_error_if_not(stream_id<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" kindref="member">tx_streams</ref>.size(),</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stream<sp/>identifier<sp/>(%d)<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>transmit<sp/>streams<sp/><sp/>(%d).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_id,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>.size());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>uhd::time_spec_t<sp/>time_spec<sp/>=<sp/>time_spec.from_ticks(<ref refid="structsrsgnb_1_1baseband__gateway__transmitter_1_1metadata" kindref="compound">metadata</ref>.<ref refid="structsrsgnb_1_1baseband__gateway__transmitter_1_1metadata_1ae8965e049c03393d7cd988216ea83437" kindref="member">ts</ref>,<sp/>sampling_rate_hz);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1af6aa042e296eb7c523500756b6eaf35b" kindref="member">tx_streams</ref>[stream_id]-&gt;transmit(data,<sp/>time_spec);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>interface<sp/>for<sp/>documentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" refkind="member"><highlight class="normal"><ref refid="structsrsgnb_1_1baseband__gateway__receiver_1_1metadata" kindref="compound">baseband_gateway_receiver::metadata</ref><sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" kindref="member">radio_session_uhd_impl::receive</ref>(<ref refid="classsrsgnb_1_1baseband__gateway__buffer" kindref="compound">baseband_gateway_buffer</ref>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>stream_id)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1baseband__gateway__receiver_1_1metadata" kindref="compound">baseband_gateway_receiver::metadata</ref><sp/>ret<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>report_fatal_error_if_not(stream_id<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>.size(),</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stream<sp/>identifier<sp/>(%d)<sp/>exceeds<sp/>the<sp/>number<sp/>of<sp/>receive<sp/>streams<sp/><sp/>(%d).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_id,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>.size());</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ac4b91c526ec7fb8df80c10092e407281" kindref="member">start_rx_stream</ref>())<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>uhd::time_spec_t<sp/>time_spec<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1a255312e421c470e57484d8f32a26d2b6" kindref="member">rx_streams</ref>[stream_id]-&gt;<ref refid="classsrsgnb_1_1radio__session__uhd__impl_1ae575bbaa41f014a04bf648ef2583c554" kindref="member">receive</ref>(data,<sp/>time_spec))<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>ret.<ref refid="structsrsgnb_1_1baseband__gateway__receiver_1_1metadata_1ab34c89a3b8e5e61168db6228281e6231" kindref="member">ts</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacesrsgnb_1ae5b939cbd6df410e55e6229f3f3e5f1d" kindref="member">baseband_gateway_timestamp</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(time_spec.get_full_secs())<sp/>*</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacesrsgnb_1ae5b939cbd6df410e55e6229f3f3e5f1d" kindref="member">baseband_gateway_timestamp</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sampling_rate_hz)<sp/>+</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacesrsgnb_1ae5b939cbd6df410e55e6229f3f3e5f1d" kindref="member">baseband_gateway_timestamp</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sampling_rate_hz<sp/>*<sp/>time_spec.get_frac_secs());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="classsrsgnb_1_1radio__factory__uhd__impl_1aabfdc3be708ec31ffbe3fffd86d6192a" refkind="member"><highlight class="normal">std::unique_ptr&lt;radio_session&gt;<sp/><ref refid="classsrsgnb_1_1radio__factory__uhd__impl_1aabfdc3be708ec31ffbe3fffd86d6192a" kindref="member">radio_factory_uhd_impl::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1radio__configuration_1_1radio" kindref="compound">radio_configuration::radio</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1task__executor" kindref="compound">task_executor</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async_task_executor,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__notification__handler" kindref="compound">radio_notification_handler</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifier)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;radio_session_uhd_impl&gt;<sp/>device<sp/>=</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_unique&lt;radio_session_uhd_impl&gt;(config,<sp/>async_task_executor,<sp/>notifier);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;is_successful())<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(device);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/radio/uhd/radio_uhd_impl.cpp"/>
  </compounddef>
</doxygen>
