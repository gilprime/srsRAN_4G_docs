<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsrsgnb_1_1rlc__am__status__nack" kind="struct" language="C++" prot="public">
    <compoundname>srsgnb::rlc_am_status_nack</compoundname>
    <includes refid="rlc__am__pdu_8h" local="no">rlc_am_pdu.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1a007c05cb6a0c32c60dee89c704c51b27" prot="public" static="yes" mutable="no">
        <type>const static uint16_t</type>
        <definition>const static uint16_t srsgnb::rlc_am_status_nack::so_end_of_sdu</definition>
        <argsstring></argsstring>
        <name>so_end_of_sdu</name>
        <initializer>= 0xffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="68" column="25" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::rlc_am_status_nack::nack_sn</definition>
        <argsstring></argsstring>
        <name>nack_sn</name>
        <briefdescription>
<para>Sequence Number (SN) of first missing SDU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="70" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool srsgnb::rlc_am_status_nack::has_so</definition>
        <argsstring></argsstring>
        <name>has_so</name>
        <briefdescription>
<para>NACKs continuous sequence of bytes [so_start..so_end]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="71" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::rlc_am_status_nack::so_start</definition>
        <argsstring></argsstring>
        <name>so_start</name>
        <briefdescription>
<para>First missing byte in SDU with SN=nack_sn. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="72" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::rlc_am_status_nack::so_end</definition>
        <argsstring></argsstring>
        <name>so_end</name>
        <briefdescription>
<para>Last missing byte in SDU with SN=nack_sn or SN=nack_sn+nack_range-1 if has_nack_range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="73" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool srsgnb::rlc_am_status_nack::has_nack_range</definition>
        <argsstring></argsstring>
        <name>has_nack_range</name>
        <briefdescription>
<para>NACKs continuous sequence of SDUs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="74" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t srsgnb::rlc_am_status_nack::nack_range</definition>
        <argsstring></argsstring>
        <name>nack_range</name>
        <briefdescription>
<para>Number of SDUs being NACKed (including SN=nack_sn) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="75" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsrsgnb_1_1rlc__am__status__nack_1af1f3c56dd18afa784f02e69639117ed7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::rlc_am_status_nack::rlc_am_status_nack</definition>
        <argsstring>()</argsstring>
        <name>rlc_am_status_nack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="77" column="3" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="77" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1rlc__am__status__nack_1ac045c78b2474bed500934b7d8a9c8f39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::rlc_am_status_nack::equals</definition>
        <argsstring>(const rlc_am_status_nack &amp;other) const</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="87" column="8" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1rlc__am__status__nack_1ab9e714db2ebb8d330c18c78d6c2c0281" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::rlc_am_status_nack::operator==</definition>
        <argsstring>(const rlc_am_status_nack &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="93" column="8" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1rlc__am__status__nack_1a046986bfec46c5898556cb79c09525c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::rlc_am_status_nack::operator!=</definition>
        <argsstring>(const rlc_am_status_nack &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="94" column="8" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="94" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Status PDU NACK. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::rlc_am_status_nack</label>
        <link refid="structsrsgnb_1_1rlc__am__status__nack"/>
      </node>
    </collaborationgraph>
    <location file="lib/rlc/rlc_am_pdu.h" line="67" column="25" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="67" bodyend="95"/>
    <listofallmembers>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1ac045c78b2474bed500934b7d8a9c8f39" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>equals</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>has_nack_range</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>has_so</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>nack_range</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>nack_sn</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1a046986bfec46c5898556cb79c09525c2" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>operator!=</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1ab9e714db2ebb8d330c18c78d6c2c0281" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>operator==</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1af1f3c56dd18afa784f02e69639117ed7" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>rlc_am_status_nack</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>so_end</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1a007c05cb6a0c32c60dee89c704c51b27" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>so_end_of_sdu</name></member>
      <member refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_nack</scope><name>so_start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
