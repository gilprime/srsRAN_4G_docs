<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1detail_1_1condition__variable" kind="class" language="C++" prot="public">
    <compoundname>srslog::detail::condition_variable</compoundname>
    <includes refid="thread__utils_8h" local="no">thread_utils.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrslog_1_1detail_1_1condition__variable_1a4dff84c92361915ef2b8727e17dcf234" prot="private" static="no" mutable="yes">
        <type><ref refid="classsrslog_1_1detail_1_1mutex" kindref="compound">mutex</ref></type>
        <definition>mutex srslog::detail::condition_variable::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="145" column="18" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1detail_1_1condition__variable_1a2b85cc2fb32b196ce340f3eaa3888615" prot="private" static="no" mutable="no">
        <type>pthread_cond_t</type>
        <definition>pthread_cond_t srslog::detail::condition_variable::cond_var</definition>
        <argsstring></argsstring>
        <name>cond_var</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="146" column="18" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a39d3916d52a26ba7afcdcee1e06c9261" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::detail::condition_variable::condition_variable</definition>
        <argsstring>()</argsstring>
        <name>condition_variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="102" column="3" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a75b267483b3a20a7472c4f622ecd26b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::detail::condition_variable::condition_variable</definition>
        <argsstring>(const condition_variable &amp;)=delete</argsstring>
        <name>condition_variable</name>
        <param>
          <type>const <ref refid="classsrslog_1_1detail_1_1condition__variable" kindref="compound">condition_variable</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="104" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a2667c192f28b5f4d5dd9d0b4d023be4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1condition__variable" kindref="compound">condition_variable</ref> &amp;</type>
        <definition>condition_variable&amp; srslog::detail::condition_variable::operator=</definition>
        <argsstring>(const condition_variable &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrslog_1_1detail_1_1condition__variable" kindref="compound">condition_variable</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="105" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a8063b4a26f37ac5af3c99c75af07c7db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::detail::condition_variable::~condition_variable</definition>
        <argsstring>()</argsstring>
        <name>~condition_variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="107" column="3" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1aa2c6ed7d46d683765fa84a6fcf2b7d7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::detail::condition_variable::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
<para>Internal mutex control. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="110" column="8" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="110" bodyend="110"/>
        <references refid="classsrslog_1_1detail_1_1mutex_1ae8ca386e979788f522a6bffe9df7faa5" compoundref="thread__utils_8h" startline="39" endline="39">srslog::detail::mutex::lock</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a1569fcfcdf8dd6b8b2230a27149cb664" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::detail::condition_variable::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="111" column="8" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1ad898c70ef0b8c5cb3e4d5d6c8ca4c72d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::detail::condition_variable::wait</definition>
        <argsstring>()</argsstring>
        <name>wait</name>
        <briefdescription>
<para>Blocks the calling thread on this condition variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="114" column="8" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="114" bodyend="114"/>
        <references refid="classsrslog_1_1detail_1_1mutex_1a267660aac0affdaf49ff5592e23a3580" compoundref="thread__utils_8h" startline="48" endline="48">srslog::detail::mutex::raw</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1aafc0797d034e0740a7842d1382b13bf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::detail::condition_variable::signal</definition>
        <argsstring>()</argsstring>
        <name>signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unblocks at least one waiting thread that is blocked on this condition variable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="118" column="8" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a9abe0125c1338abb77e12fa188ae3270" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::detail::condition_variable::broadcast</definition>
        <argsstring>()</argsstring>
        <name>broadcast</name>
        <briefdescription>
<para>Unblocks all waiting threads being blocked on this condition variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="121" column="8" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1aec0e4873f4a290e301dfce536813fe3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srslog::detail::condition_variable::wait</definition>
        <argsstring>(timespec ts)</argsstring>
        <name>wait</name>
        <param>
          <type>timespec</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blocks the calling thread on this condition variable up to the specified timeout. Returns true on timeout expiration, otherwise false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="125" column="8" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="125" bodyend="125"/>
        <references refid="classsrslog_1_1detail_1_1mutex_1a267660aac0affdaf49ff5592e23a3580" compoundref="thread__utils_8h" startline="48" endline="48">srslog::detail::mutex::raw</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrslog_1_1detail_1_1condition__variable_1a83ce283061f3dce3f6e017405dcc90db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>timespec</type>
        <definition>static timespec srslog::detail::condition_variable::build_timeout</definition>
        <argsstring>(unsigned timeout_ms)</argsstring>
        <name>build_timeout</name>
        <param>
          <type>unsigned</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds an absolute time timespec structure adding the specified time out in ms. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="129" column="19" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="129" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstraction of a pthread condition variable. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srslog::detail::condition_variable</label>
        <link refid="classsrslog_1_1detail_1_1condition__variable"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srslog::detail::mutex</label>
        <link refid="classsrslog_1_1detail_1_1mutex"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/srslog/detail/support/thread_utils.h" line="100" column="1" bodyfile="include/srsgnb/srslog/detail/support/thread_utils.h" bodystart="99" bodyend="147"/>
    <listofallmembers>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a9abe0125c1338abb77e12fa188ae3270" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>broadcast</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a83ce283061f3dce3f6e017405dcc90db" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>build_timeout</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a2b85cc2fb32b196ce340f3eaa3888615" prot="private" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>cond_var</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a39d3916d52a26ba7afcdcee1e06c9261" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>condition_variable</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a75b267483b3a20a7472c4f622ecd26b7" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>condition_variable</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1aa2c6ed7d46d683765fa84a6fcf2b7d7d" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>lock</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a4dff84c92361915ef2b8727e17dcf234" prot="private" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>m</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a2667c192f28b5f4d5dd9d0b4d023be4b" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>operator=</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1aafc0797d034e0740a7842d1382b13bf7" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>signal</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a1569fcfcdf8dd6b8b2230a27149cb664" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>unlock</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1ad898c70ef0b8c5cb3e4d5d6c8ca4c72d" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>wait</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1aec0e4873f4a290e301dfce536813fe3b" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>wait</name></member>
      <member refid="classsrslog_1_1detail_1_1condition__variable_1a8063b4a26f37ac5af3c99c75af07c7db" prot="public" virt="non-virtual"><scope>srslog::detail::condition_variable</scope><name>~condition_variable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
