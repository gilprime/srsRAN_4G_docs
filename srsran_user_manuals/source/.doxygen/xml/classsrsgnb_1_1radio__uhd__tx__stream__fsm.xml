<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1radio__uhd__tx__stream__fsm" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::radio_uhd_tx_stream_fsm</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17f" prot="private" static="no" strong="yes">
        <type></type>
        <name>states</name>
        <enumvalue id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fadd652546039b18970b8dcf2cff824268" prot="private">
          <name>UNINITIALIZED</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Indicates the stream was not initialized successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511" prot="private">
          <name>START_BURST</name>
          <briefdescription>
<para>Indicates the stream is ready to start burst. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" prot="private">
          <name>IN_BURST</name>
          <briefdescription>
<para>Indicates the stream is transmitting a burst. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fac35602a58494619ce38fe63bd33acf3a" prot="private">
          <name>END_OF_BURST</name>
          <briefdescription>
<para>Indicates an end-of-burst must be transmitted and abort any transmission. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09" prot="private">
          <name>WAIT_END_OF_BURST</name>
          <briefdescription>
<para>Indicates wait for end-of-burst acknowledgement. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa615a46af313786fc4e349f34118be111" prot="private">
          <name>STOP</name>
          <briefdescription>
<para>Indicates the stream must stop. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines the Tx stream internal states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="34" column="20" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="34" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double srsgnb::radio_uhd_tx_stream_fsm::WAIT_EOB_ACK_TIMEOUT_S</definition>
        <argsstring></argsstring>
        <name>WAIT_EOB_ACK_TIMEOUT_S</name>
        <initializer>= 0.1</initializer>
        <briefdescription>
<para>Wait for end-of-burst acknowledgement timeout in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="31" column="27" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" compoundref="radio__uhd__tx__stream__fsm_8h" startline="68" endline="77">async_event_underflow</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad0ce4cd9106f867a4e790ad886c1f1b1" compoundref="radio__uhd__tx__stream__fsm_8h" startline="94" endline="142">transmit_block</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17f" kindref="member">states</ref></type>
        <definition>states srsgnb::radio_uhd_tx_stream_fsm::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
<para>Indicates the current state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="50" column="10" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad36820b53f8675fa5ab2c1291c582eee" compoundref="radio__uhd__tx__stream__fsm_8h" startline="59" endline="63">init_successful</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" compoundref="radio__uhd__tx__stream__fsm_8h" startline="68" endline="77">async_event_underflow</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a6f5413408495e17e8dd682cf216a5742" compoundref="radio__uhd__tx__stream__fsm_8h" startline="81" endline="88">async_event_end_of_burst_ack</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad0ce4cd9106f867a4e790ad886c1f1b1" compoundref="radio__uhd__tx__stream__fsm_8h" startline="94" endline="142">transmit_block</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" prot="private" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex srsgnb::radio_uhd_tx_stream_fsm::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
<para>Protects the class concurrent access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="53" column="22" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad36820b53f8675fa5ab2c1291c582eee" compoundref="radio__uhd__tx__stream__fsm_8h" startline="59" endline="63">init_successful</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" compoundref="radio__uhd__tx__stream__fsm_8h" startline="68" endline="77">async_event_underflow</referencedby>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a6f5413408495e17e8dd682cf216a5742" compoundref="radio__uhd__tx__stream__fsm_8h" startline="81" endline="88">async_event_end_of_burst_ack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1abd929c1210d35368cbff57e35f845634" prot="private" static="no" mutable="no">
        <type>uhd::time_spec_t</type>
        <definition>uhd::time_spec_t srsgnb::radio_uhd_tx_stream_fsm::wait_eob_timeout</definition>
        <argsstring></argsstring>
        <name>wait_eob_timeout</name>
        <initializer>= uhd::time_spec_t()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="55" column="20" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad36820b53f8675fa5ab2c1291c582eee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::radio_uhd_tx_stream_fsm::init_successful</definition>
        <argsstring>()</argsstring>
        <name>init_successful</name>
        <briefdescription>
<para>Notifies that the transmit stream has been initialized successfully. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="59" column="8" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="59" bodyend="63"/>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" compoundref="radio__uhd__tx__stream__fsm_8h" startline="53">mutex</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" compoundref="radio__uhd__tx__stream__fsm_8h" startline="50">state</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511">START_BURST</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::radio_uhd_tx_stream_fsm::async_event_underflow</definition>
        <argsstring>(const uhd::time_spec_t &amp;time_spec)</argsstring>
        <name>async_event_underflow</name>
        <param>
          <type>const uhd::time_spec_t &amp;</type>
          <declname>time_spec</declname>
        </param>
        <briefdescription>
<para>Notifies an underflow event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Transitions state end of burst if it is in a burst. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">time_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the time the underflow event occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="68" column="8" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="68" bodyend="77"/>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" compoundref="radio__uhd__tx__stream__fsm_8h" startline="53">mutex</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" compoundref="radio__uhd__tx__stream__fsm_8h" startline="50">state</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049">IN_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fac35602a58494619ce38fe63bd33acf3a">END_OF_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" compoundref="radio__uhd__tx__stream__fsm_8h" startline="31">WAIT_EOB_ACK_TIMEOUT_S</references>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream_1afaba960bdf38a8d23070bc52a521a44c" compoundref="radio__uhd__tx__stream_8cpp" startline="15" endline="62">srsgnb::radio_uhd_tx_stream::recv_async_msg</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a6f5413408495e17e8dd682cf216a5742" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::radio_uhd_tx_stream_fsm::async_event_end_of_burst_ack</definition>
        <argsstring>()</argsstring>
        <name>async_event_end_of_burst_ack</name>
        <briefdescription>
<para>Notifies an end-of-burst acknowledgement. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Transitions state to start burst if it is waiting for the end-of-burst. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="81" column="8" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="81" bodyend="88"/>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" compoundref="radio__uhd__tx__stream__fsm_8h" startline="53">mutex</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" compoundref="radio__uhd__tx__stream__fsm_8h" startline="50">state</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09">WAIT_END_OF_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511">START_BURST</references>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream_1afaba960bdf38a8d23070bc52a521a44c" compoundref="radio__uhd__tx__stream_8cpp" startline="15" endline="62">srsgnb::radio_uhd_tx_stream::recv_async_msg</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad0ce4cd9106f867a4e790ad886c1f1b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::radio_uhd_tx_stream_fsm::transmit_block</definition>
        <argsstring>(uhd::tx_metadata_t &amp;metadata, uhd::time_spec_t &amp;time_spec)</argsstring>
        <name>transmit_block</name>
        <param>
          <type>uhd::tx_metadata_t &amp;</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>uhd::time_spec_t &amp;</type>
          <declname>time_spec</declname>
        </param>
        <briefdescription>
<para>Notifies a new block transmission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>Provides the destination of the required metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the transmission time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the block shall be transmitted. False if the block shall be ignored. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="94" column="8" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="94" bodyend="142"/>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" compoundref="radio__uhd__tx__stream__fsm_8h" startline="50">state</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511">START_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049">IN_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fac35602a58494619ce38fe63bd33acf3a">END_OF_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09">WAIT_END_OF_BURST</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" compoundref="radio__uhd__tx__stream__fsm_8h" startline="31">WAIT_EOB_ACK_TIMEOUT_S</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fadd652546039b18970b8dcf2cff824268">UNINITIALIZED</references>
        <references refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa615a46af313786fc4e349f34118be111">STOP</references>
        <referencedby refid="classsrsgnb_1_1radio__uhd__tx__stream_1aaaedcf40b763f6a609b376be04e4425e" compoundref="radio__uhd__tx__stream_8cpp" startline="78" endline="111">srsgnb::radio_uhd_tx_stream::transmit_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1af00fb4111d2d53db328d2f1729fea861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::radio_uhd_tx_stream_fsm::stop</definition>
        <argsstring>(uhd::tx_metadata_t &amp;metadata)</argsstring>
        <name>stop</name>
        <param>
          <type>uhd::tx_metadata_t &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="144" column="8" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="144" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1aebc6adb7e1d3bd07e5c3e3e5d2102f72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::radio_uhd_tx_stream_fsm::is_stopped</definition>
        <argsstring>() const</argsstring>
        <name>is_stopped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="153" column="8" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="153" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::radio_uhd_tx_stream_fsm</label>
        <link refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm"/>
      </node>
    </collaborationgraph>
    <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" line="28" column="1" bodyfile="lib/radio/uhd/radio_uhd_tx_stream_fsm.h" bodystart="27" bodyend="158"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a6f5413408495e17e8dd682cf216a5742" prot="public" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>async_event_end_of_burst_ack</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" prot="public" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>async_event_underflow</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad36820b53f8675fa5ab2c1291c582eee" prot="public" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>init_successful</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1aebc6adb7e1d3bd07e5c3e3e5d2102f72" prot="public" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>is_stopped</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" prot="private" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>mutex</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" prot="private" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>state</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17f" prot="private" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>states</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1af00fb4111d2d53db328d2f1729fea861" prot="public" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>stop</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad0ce4cd9106f867a4e790ad886c1f1b1" prot="public" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>transmit_block</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" prot="private" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>WAIT_EOB_ACK_TIMEOUT_S</name></member>
      <member refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1abd929c1210d35368cbff57e35f845634" prot="private" virt="non-virtual"><scope>srsgnb::radio_uhd_tx_stream_fsm</scope><name>wait_eob_timeout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
