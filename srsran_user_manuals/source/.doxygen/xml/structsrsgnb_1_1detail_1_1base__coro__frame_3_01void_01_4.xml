<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>srsgnb::detail::base_coro_frame&lt; void &gt;</compoundname>
    <includes refid="coroutine_8h" local="no">coroutine.h</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a3be276ff2ddc559c72a4045ee373f316" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t srsgnb::detail::base_coro_frame&lt; void &gt;::state_index</definition>
        <argsstring></argsstring>
        <name>state_index</name>
        <initializer>= (int32_t)detail::tag_init</initializer>
        <briefdescription>
<para>Used to save the state of the coroutine at suspension points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="71" column="11" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a083e3528cbaf11e020e4b98f8d6d900a" prot="public" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t" kindref="compound">detail::awaiter_memory_storage_t</ref>&lt; <ref refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a1420e52302dc196eb60354f62a875995" kindref="member">default_mem_buffer_storage</ref> &gt;</type>
        <definition>detail::awaiter_memory_storage_t&lt;default_mem_buffer_storage&gt; srsgnb::detail::base_coro_frame&lt; void &gt;::mem_buffer</definition>
        <argsstring></argsstring>
        <name>mem_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="75" column="36" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a1420e52302dc196eb60354f62a875995" prot="public" static="yes" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t srsgnb::detail::base_coro_frame&lt; void &gt;::default_mem_buffer_storage</definition>
        <argsstring></argsstring>
        <name>default_mem_buffer_storage</name>
        <initializer>= 32</initializer>
        <briefdescription>
<para>in-place memory buffer to store awaiter </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="74" column="64" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1aad39fbe16626d2267d2697bb176a4957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::detail::base_coro_frame&lt; void &gt;::base_coro_frame</definition>
        <argsstring>()=default</argsstring>
        <name>base_coro_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="324" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1abaf5bc502e19258be9d206385826a8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::detail::base_coro_frame&lt; void &gt;::base_coro_frame</definition>
        <argsstring>(const base_coro_frame&lt; void &gt; &amp;)=delete</argsstring>
        <name>base_coro_frame</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">base_coro_frame</ref>&lt; void &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="324" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1af6168cb143f348888bef701624e7b545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::detail::base_coro_frame&lt; void &gt;::base_coro_frame</definition>
        <argsstring>(base_coro_frame&lt; void &gt; &amp;&amp;)=delete</argsstring>
        <name>base_coro_frame</name>
        <param>
          <type><ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">base_coro_frame</ref>&lt; void &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="324" column="6"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a213cb28f5025cfd036565aaa365223d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">base_coro_frame</ref>&lt; void &gt; &amp;</type>
        <definition>base_coro_frame&lt;void&gt;&amp; srsgnb::detail::base_coro_frame&lt; void &gt;::operator=</definition>
        <argsstring>(const base_coro_frame&lt; void &gt; &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">base_coro_frame</ref>&lt; void &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="57" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1ae69003dc6fc99b5053acaff6ad3a4a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">base_coro_frame</ref>&lt; void &gt; &amp;</type>
        <definition>base_coro_frame&lt;void&gt;&amp; srsgnb::detail::base_coro_frame&lt; void &gt;::operator=</definition>
        <argsstring>(base_coro_frame&lt; void &gt; &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">base_coro_frame</ref>&lt; void &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="58" column="19"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a13e179150590348720fa09ebcf2483bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual srsgnb::detail::base_coro_frame&lt; void &gt;::~base_coro_frame</definition>
        <argsstring>()=default</argsstring>
        <name>~base_coro_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="59" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1ae9f58a71f55f2ab402c051ac55e624be" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::detail::base_coro_frame&lt; void &gt;::resume</definition>
        <argsstring>()=0</argsstring>
        <name>resume</name>
        <briefdescription>
<para>Resume coroutine from previously suspended point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="62" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a68e1bfae0bd869b5775a6eef831fc355" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::detail::base_coro_frame&lt; void &gt;::destroy</definition>
        <argsstring>()=0</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>Destroy coroutine frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="65" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1ad7b430fe81bdcdf202ae799b1e7f69cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::detail::base_coro_frame&lt; void &gt;::on_return</definition>
        <argsstring>()=0</argsstring>
        <name>on_return</name>
        <briefdescription>
<para>Destroy coroutine function local objects. Note: Promise and coroutine state stay intact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="68" column="16"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a9a86afc12ecb8341115a0a0ebc19370f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::base_coro_frame&lt; void &gt;::is_suspended</definition>
        <argsstring>() const</argsstring>
        <name>is_suspended</name>
        <briefdescription>
<para>Checks if coroutine is at a suspension point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="78" column="8" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="78" bodyend="78"/>
        <references refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t_1acf6dae9cf3acc636857b5e167c015677" compoundref="awaiter__memory__storage_8h" startline="124" endline="124">srsgnb::detail::awaiter_memory_storage_t&lt; InlineBuffer &gt;::empty</references>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1aa047b7fb33e73b5df9486f749289ddca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Awaitable</type>
          </param>
          <param>
            <type>typename EventType</type>
            <defval>detail::awaitable_result_t&lt;Awaitable&gt;</defval>
          </param>
        </templateparamlist>
        <type>detail::enable_if_nonvoid&lt; EventType &gt;</type>
        <definition>detail::enable_if_nonvoid&lt;EventType&gt; srsgnb::detail::base_coro_frame&lt; void &gt;::on_await_resume</definition>
        <argsstring>()</argsstring>
        <name>on_await_resume</name>
        <briefdescription>
<para>called by coroutine to clear awaiter, after a awaitable is set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="82" column="29" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="82" bodyend="91"/>
        <references refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t_1a71c9d44b6560f940a6d62fd85e35bdae" compoundref="awaiter__memory__storage_8h" startline="111" endline="114">srsgnb::detail::awaiter_memory_storage_t&lt; InlineBuffer &gt;::get_awaiter</references>
        <references refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t_1a6c8c32f7f327dd1c40bb941182bfab81" compoundref="awaiter__memory__storage_8h" startline="104" endline="107">srsgnb::detail::awaiter_memory_storage_t&lt; InlineBuffer &gt;::clear</references>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a7d95ea2af56e7011f8390425203dcf16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Awaitable</type>
          </param>
          <param>
            <type>typename EventType</type>
            <defval>detail::awaitable_result_t&lt;Awaitable&gt;</defval>
          </param>
        </templateparamlist>
        <type>detail::enable_if_void&lt; EventType &gt;</type>
        <definition>detail::enable_if_void&lt;EventType&gt; srsgnb::detail::base_coro_frame&lt; void &gt;::on_await_resume</definition>
        <argsstring>()</argsstring>
        <name>on_await_resume</name>
        <briefdescription>
<para>called by resumable to clear awaiter and extract result, after a awaitable is set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="95" column="26" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="95" bodyend="103"/>
        <references refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t_1a71c9d44b6560f940a6d62fd85e35bdae" compoundref="awaiter__memory__storage_8h" startline="111" endline="114">srsgnb::detail::awaiter_memory_storage_t&lt; InlineBuffer &gt;::get_awaiter</references>
        <references refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t_1a6c8c32f7f327dd1c40bb941182bfab81" compoundref="awaiter__memory__storage_8h" startline="104" endline="107">srsgnb::detail::awaiter_memory_storage_t&lt; InlineBuffer &gt;::clear</references>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a16aaa9798c5c468b8383ce17b28cd2c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Awaitable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void srsgnb::detail::base_coro_frame&lt; void &gt;::on_await_cancel</definition>
        <argsstring>()</argsstring>
        <name>on_await_cancel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="106" column="8" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="106" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Common coroutine frame functionality that is independent of the promise type Contains a small memory buffer to store awaiters and the current coroutine state </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::detail::base_coro_frame&lt; void &gt;</label>
        <link refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+mem_buffer</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::detail::small_memory_buffer_t&lt; InlineBuffer, alignof(std::max_align_t)&gt;</label>
        <link refid="structsrsgnb_1_1detail_1_1small__memory__buffer__t"/>
      </node>
      <node id="2">
        <label>srsgnb::detail::awaiter_memory_storage_t&lt; default_mem_buffer_storage &gt;</label>
        <link refid="structsrsgnb_1_1detail_1_1awaiter__memory__storage__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-storage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/coroutine.h" line="53" column="23" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="53" bodyend="111"/>
    <listofallmembers>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1aad39fbe16626d2267d2697bb176a4957" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>base_coro_frame</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1abaf5bc502e19258be9d206385826a8cc" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>base_coro_frame</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1af6168cb143f348888bef701624e7b545" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>base_coro_frame</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a1420e52302dc196eb60354f62a875995" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>default_mem_buffer_storage</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a68e1bfae0bd869b5775a6eef831fc355" prot="public" virt="pure-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>destroy</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a9a86afc12ecb8341115a0a0ebc19370f" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>is_suspended</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a083e3528cbaf11e020e4b98f8d6d900a" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>mem_buffer</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a16aaa9798c5c468b8383ce17b28cd2c1" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>on_await_cancel</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1aa047b7fb33e73b5df9486f749289ddca" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>on_await_resume</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a7d95ea2af56e7011f8390425203dcf16" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>on_await_resume</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1ad7b430fe81bdcdf202ae799b1e7f69cb" prot="public" virt="pure-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>on_return</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a213cb28f5025cfd036565aaa365223d7" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1ae69003dc6fc99b5053acaff6ad3a4a3c" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1ae9f58a71f55f2ab402c051ac55e624be" prot="public" virt="pure-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>resume</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a3be276ff2ddc559c72a4045ee373f316" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>state_index</name></member>
      <member refid="structsrsgnb_1_1detail_1_1base__coro__frame_3_01void_01_4_1a13e179150590348720fa09ebcf2483bf" prot="public" virt="virtual"><scope>srsgnb::detail::base_coro_frame&lt; void &gt;</scope><name>~base_coro_frame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
