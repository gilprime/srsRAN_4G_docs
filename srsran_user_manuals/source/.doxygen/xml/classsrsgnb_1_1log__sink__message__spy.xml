<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1log__sink__message__spy" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::log_sink_message_spy</compoundname>
    <basecompoundref refid="classsrslog_1_1sink" prot="public" virt="non-virtual">srslog::sink</basecompoundref>
    <includes refid="test__utils_8h" local="no">test_utils.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1log__sink__message__spy_1a11bf6ef232fde431e2322f8893dd2b73" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1sink" kindref="compound">srslog::sink</ref> &amp;</type>
        <definition>srslog::sink&amp; srsgnb::log_sink_message_spy::s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="121" column="27" bodyfile="include/srsgnb/support/test_utils.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1log__sink__message__spy_1af2b62cef7a193dd9d8acf93718a08683" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; srsgnb::log_sink_message_spy::entries</definition>
        <argsstring></argsstring>
        <name>entries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="122" column="15" bodyfile="include/srsgnb/support/test_utils.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__message__spy_1a642fe5ef7266412536bd1513d6525a88" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::log_sink_message_spy::log_sink_message_spy</definition>
        <argsstring>(std::unique_ptr&lt; srslog::log_formatter &gt; f)</argsstring>
        <name>log_sink_message_spy</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">srslog::log_formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="86" column="12" bodyfile="include/srsgnb/support/test_utils.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__message__spy_1a1b3bc23b70021bf4999272412cdab5c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::log_sink_message_spy::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Discards all registered log entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="95" column="8" bodyfile="include/srsgnb/support/test_utils.h" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__message__spy_1a5be8d708d32b8b8957a981ced49c7b3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::log_sink_message_spy::has_message</definition>
        <argsstring>(const std::string &amp;msg) const</argsstring>
        <name>has_message</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Returns true if the string in msg is found in the registered log entries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="103" column="8" bodyfile="include/srsgnb/support/test_utils.h" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__message__spy_1aa3295c0753dc7e119334460bc0c32359" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">srslog::detail::error_string</ref></type>
        <definition>srslog::detail::error_string srsgnb::log_sink_message_spy::write</definition>
        <argsstring>(srslog::detail::memory_buffer buffer) override</argsstring>
        <name>write</name>
        <reimplements refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">write</reimplements>
        <param>
          <type><ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">srslog::detail::memory_buffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Writes the provided memory buffer into the sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="111" column="32" bodyfile="include/srsgnb/support/test_utils.h" bodystart="111" bodyend="116"/>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1aa72ea90570be1ceb95d33fb32a9fa437" compoundref="memory__buffer_8h" startline="32" endline="32">srslog::detail::memory_buffer::data</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" compoundref="memory__buffer_8h" startline="41" endline="41">srslog::detail::memory_buffer::size</references>
        <references refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">srslog::sink::write</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__message__spy_1ae24ba450a728a05ab4f787cdee3b5719" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">srslog::detail::error_string</ref></type>
        <definition>srslog::detail::error_string srsgnb::log_sink_message_spy::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">flush</reimplements>
        <briefdescription>
<para>Flushes any buffered contents to the backing store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="118" column="32" bodyfile="include/srsgnb/support/test_utils.h" bodystart="118" bodyend="118"/>
        <references refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">srslog::sink::flush</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__message__spy_1ac9ca06444d24baa664ac5c33b85c33b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* srsgnb::log_sink_message_spy::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
<para>Identifier of this custom sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="92" column="21" bodyfile="include/srsgnb/support/test_utils.h" bodystart="92" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This custom sink intercepts log messages allowing users to check if a certain log entry has been generated. Calling spy.has_message(&quot;something&quot;) will return true if any log entries generated so far contain the string &quot;something&quot;. The log entries history can be cleared with reset so old entries can be discarded. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srsgnb::log_sink_message_spy</label>
        <link refid="classsrsgnb_1_1log__sink__message__spy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srsgnb::log_sink_message_spy</label>
        <link refid="classsrsgnb_1_1log__sink__message__spy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>-s</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/test_utils.h" line="84" column="1" bodyfile="include/srsgnb/support/test_utils.h" bodystart="83" bodyend="123"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1af2b62cef7a193dd9d8acf93718a08683" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>entries</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1ae24ba450a728a05ab4f787cdee3b5719" prot="public" virt="virtual"><scope>srsgnb::log_sink_message_spy</scope><name>flush</name></member>
      <member refid="classsrslog_1_1sink_1a3fe50dcff14510123286afa7885701a1" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>formatter</name></member>
      <member refid="classsrslog_1_1sink_1afefc81cbae7348e62570771e3d0f9ead" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1sink_1a1d6a623fb8292a96234d98f71fff18f2" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>get_formatter</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1a5be8d708d32b8b8957a981ced49c7b3b" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>has_message</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1a642fe5ef7266412536bd1513d6525a88" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>log_sink_message_spy</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1ac9ca06444d24baa664ac5c33b85c33b2" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>name</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1a1b3bc23b70021bf4999272412cdab5c2" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>reset</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1a11bf6ef232fde431e2322f8893dd2b73" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>s</name></member>
      <member refid="classsrslog_1_1sink_1a67b8e754a3c8f4e1668b7d9305fdbb58" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_message_spy</scope><name>sink</name></member>
      <member refid="classsrsgnb_1_1log__sink__message__spy_1aa3295c0753dc7e119334460bc0c32359" prot="public" virt="virtual"><scope>srsgnb::log_sink_message_spy</scope><name>write</name></member>
      <member refid="classsrslog_1_1sink_1a148d2b74c00249a71fa3bbf581dd22e5" prot="public" virt="virtual"><scope>srsgnb::log_sink_message_spy</scope><name>~sink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
