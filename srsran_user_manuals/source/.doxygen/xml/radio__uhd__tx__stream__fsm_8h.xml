<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="radio__uhd__tx__stream__fsm_8h" kind="file" language="C++">
    <compoundname>radio_uhd_tx_stream_fsm.h</compoundname>
    <includes local="no">mutex</includes>
    <includes local="no">uhd/types/metadata.hpp</includes>
    <includes local="no">uhd/types/time_spec.hpp</includes>
    <includedby refid="radio__uhd__tx__stream_8h" local="yes">lib/radio/uhd/radio_uhd_tx_stream.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>uhd/types/time_spec.hpp</label>
      </node>
      <node id="3">
        <label>uhd/types/metadata.hpp</label>
      </node>
      <node id="1">
        <label>lib/radio/uhd/radio_uhd_tx_stream_fsm.h</label>
        <link refid="radio__uhd__tx__stream__fsm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mutex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>lib/radio/uhd/radio_uhd_device.h</label>
        <link refid="radio__uhd__device_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/radio/uhd/radio_uhd_tx_stream.h</label>
        <link refid="radio__uhd__tx__stream_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/radio/uhd/radio_uhd_impl.h</label>
        <link refid="radio__uhd__impl_8h_source"/>
      </node>
      <node id="1">
        <label>lib/radio/uhd/radio_uhd_tx_stream_fsm.h</label>
        <link refid="radio__uhd__tx__stream__fsm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm" prot="public">srsgnb::radio_uhd_tx_stream_fsm</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wall&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsuggest-override&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uhd/types/metadata.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uhd/types/time_spec.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm" kindref="compound">radio_uhd_tx_stream_fsm</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" kindref="member">WAIT_EOB_ACK_TIMEOUT_S</ref><sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17f" kindref="member">states</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fadd652546039b18970b8dcf2cff824268" kindref="member">UNINITIALIZED</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511" kindref="member">START_BURST</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" kindref="member">IN_BURST</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fac35602a58494619ce38fe63bd33acf3a" kindref="member">END_OF_BURST</ref>,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09" kindref="member">WAIT_END_OF_BURST</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa615a46af313786fc4e349f34118be111" kindref="member">STOP</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17f" kindref="member">states</ref><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::mutex<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>uhd::time_spec_t<sp/>wait_eob_timeout<sp/>=<sp/>uhd::time_spec_t();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad36820b53f8675fa5ab2c1291c582eee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad36820b53f8675fa5ab2c1291c582eee" kindref="member">init_successful</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" kindref="member">mutex</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511" kindref="member">states::START_BURST</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a3703ec9d4ee8a8b933ff8c09dd76ddce" kindref="member">async_event_underflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uhd::time_spec_t&amp;<sp/>time_spec)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" kindref="member">mutex</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>==<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" kindref="member">states::IN_BURST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Debug(</highlight><highlight class="stringliteral">&quot;Underflow<sp/>detected.<sp/>Ending<sp/>burst...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fac35602a58494619ce38fe63bd33acf3a" kindref="member">states::END_OF_BURST</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait_eob_timeout<sp/>=<sp/>time_spec;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wait_eob_timeout<sp/>+=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" kindref="member">WAIT_EOB_ACK_TIMEOUT_S</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a6f5413408495e17e8dd682cf216a5742" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a6f5413408495e17e8dd682cf216a5742" kindref="member">async_event_end_of_burst_ack</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" kindref="member">mutex</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>==<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09" kindref="member">states::WAIT_END_OF_BURST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Debug(</highlight><highlight class="stringliteral">&quot;EOB<sp/>ACK<sp/>Received.<sp/>Staring<sp/>burst...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511" kindref="member">states::START_BURST</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad0ce4cd9106f867a4e790ad886c1f1b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ad0ce4cd9106f867a4e790ad886c1f1b1" kindref="member">transmit_block</ref>(uhd::tx_metadata_t&amp;<sp/>metadata,<sp/>uhd::time_spec_t&amp;<sp/>time_spec)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa2e6048de4f0e6a2f7bedfb29858bb511" kindref="member">states::START_BURST</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug(</highlight><highlight class="stringliteral">&quot;Start<sp/>of<sp/>burst.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>start<sp/>of<sp/>burst<sp/>flag<sp/>and<sp/>time<sp/>spec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.has_time_spec<sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.start_of_burst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.time_spec<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>time_spec;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition<sp/>to<sp/>in-burst.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" kindref="member">states::IN_BURST</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" kindref="member">states::IN_BURST</ref>:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fac35602a58494619ce38fe63bd33acf3a" kindref="member">states::END_OF_BURST</ref>:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>end-of-burst.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.end_of_burst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09" kindref="member">states::WAIT_END_OF_BURST</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_eob_timeout<sp/>==<sp/>uhd::time_spec_t())<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait_eob_timeout<sp/>=<sp/>metadata.time_spec;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait_eob_timeout<sp/>+=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a887853a327d9ac08aac9e3b7ef09972a" kindref="member">WAIT_EOB_ACK_TIMEOUT_S</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug(</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>burst.<sp/>Waiting<sp/>for<sp/>end-of-burst<sp/>ACK<sp/>(until<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>wait_eob_timeout.get_real_secs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa8e042eb023d26c571a1b7e49dce2d09" kindref="member">states::WAIT_END_OF_BURST</ref>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>starting<sp/>the<sp/>burst<sp/>if<sp/>the<sp/>wait<sp/>for<sp/>end-of-burst<sp/>expired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_eob_timeout.get_real_secs()<sp/>&lt;<sp/>time_spec.get_real_secs())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug(</highlight><highlight class="stringliteral">&quot;Expired<sp/>wait<sp/>for<sp/>EOB<sp/>ACK.<sp/>Start<sp/>of<sp/>burst.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>start<sp/>of<sp/>burst<sp/>flag<sp/>and<sp/>time<sp/>spec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.has_time_spec<sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.start_of_burst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.time_spec<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>time_spec;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transition<sp/>to<sp/>in-burst.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" kindref="member">states::IN_BURST</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug(</highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>end-of-burst<sp/>ACK<sp/>(until<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>wait_eob_timeout.get_real_secs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>now<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>time_spec.get_real_secs()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fadd652546039b18970b8dcf2cff824268" kindref="member">states::UNINITIALIZED</ref>:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa615a46af313786fc4e349f34118be111" kindref="member">states::STOP</ref>:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>transmission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transmission<sp/>shall<sp/>not<sp/>be<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop(uhd::tx_metadata_t&amp;<sp/>metadata)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" kindref="member">mutex</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>==<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17faa00bd30fdc3b10259deb2e20a7d03049" kindref="member">states::IN_BURST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.end_of_burst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa615a46af313786fc4e349f34118be111" kindref="member">states::STOP</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_stopped()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1adf73dbb717cedce9ee1470ed5d197db3" kindref="member">mutex</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1a1faec8bb86c93f1b4b24953618abfa01" kindref="member">state</ref><sp/>==<sp/><ref refid="classsrsgnb_1_1radio__uhd__tx__stream__fsm_1ae9f06e3c5be8014f72ea48abb9cbd17fa615a46af313786fc4e349f34118be111" kindref="member">states::STOP</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/radio/uhd/radio_uhd_tx_stream_fsm.h"/>
  </compounddef>
</doxygen>
