<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="band__helper_8cpp" kind="file" language="C++">
    <compoundname>band_helper.cpp</compoundname>
    <includes refid="band__helper_8h" local="yes">srsgnb/ran/band_helper.h</includes>
    <includes refid="bs__channel__bandwidth_8h" local="yes">srsgnb/ran/bs_channel_bandwidth.h</includes>
    <includes refid="duplex__mode_8h" local="yes">srsgnb/ran/duplex_mode.h</includes>
    <includes refid="ssb__mapping_8h" local="yes">srsgnb/ran/ssb_mapping.h</includes>
    <includes refid="subcarrier__spacing_8h" local="yes">srsgnb/ran/subcarrier_spacing.h</includes>
    <incdepgraph>
      <node id="49">
        <label>atomic</label>
      </node>
      <node id="9">
        <label>srsgnb/ran/resource_allocation/rb_interval.h</label>
        <link refid="rb__interval_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>srsgnb/ran/subcarrier_spacing.h</label>
        <link refid="subcarrier__spacing_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>functional</label>
      </node>
      <node id="16">
        <label>limits</label>
      </node>
      <node id="5">
        <label>srsgnb/ran/duplex_mode.h</label>
        <link refid="duplex__mode_8h_source"/>
      </node>
      <node id="24">
        <label>iterator</label>
      </node>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="42">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="48">
        <label>cassert</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="44">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>string</label>
      </node>
      <node id="28">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>srsgnb/ran/ssb_properties.h</label>
        <link refid="ssb__properties_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>srsgnb/phy/constants.h</label>
        <link refid="constants_8h_source"/>
      </node>
      <node id="50">
        <label>srsgnb/ran/slot_point.h</label>
        <link refid="slot__point_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>pthread.h</label>
      </node>
      <node id="55">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb/ran/ssb_mapping.h</label>
        <link refid="ssb__mapping_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cstdio</label>
      </node>
      <node id="47">
        <label>tuple</label>
      </node>
      <node id="32">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
      <node id="1">
        <label>lib/ran/band_helper.cpp</label>
        <link refid="band__helper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>array</label>
      </node>
      <node id="10">
        <label>srsgnb/adt/interval.h</label>
        <link refid="interval_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>srsgnb/ran/frequency_range.h</label>
        <link refid="frequency__range_8h_source"/>
      </node>
      <node id="13">
        <label>cerrno</label>
      </node>
      <node id="46">
        <label>cstddef</label>
      </node>
      <node id="2">
        <label>srsgnb/ran/band_helper.h</label>
        <link refid="band__helper_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>srsgnb/adt/bounded_integer.h</label>
        <link refid="bounded__integer_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>chrono</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>srsgnb/ran/bs_channel_bandwidth.h</label>
        <link refid="bs__channel__bandwidth_8h_source"/>
      </node>
      <node id="56">
        <label>complex</label>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstring</label>
      </node>
      <node id="43">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnr__band__raster" prot="public">nr_band_raster</innerclass>
    <innerclass refid="structnr__operating__band" prot="public">nr_operating_band</innerclass>
    <innerclass refid="structnr__band__ssb__scs__case" prot="public">nr_band_ssb_scs_case</innerclass>
    <innerclass refid="structnr__raster__params" prot="public">nr_raster_params</innerclass>
    <innerclass refid="structn__rb__per__scs" prot="public">n_rb_per_scs</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1" prot="public" static="no" strong="yes">
        <type></type>
        <name>delta_freq_raster</name>
        <enumvalue id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1a5b39c8b553c821e7cddc6da64b5bd2ee" prot="public">
          <name>DEFAULT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1ac295707ac45751358c3b2119838e4f44" prot="public">
          <name>kHz15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1ad1b76ad61dcdfb6703c9e7df47591e65" prot="public">
          <name>kHz30</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1a33f2782405f187fed9d2d8856fb4dce9" prot="public">
          <name>kHz60</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1ace1c31644a035083f921ae4a26189531" prot="public">
          <name>kHz100</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="band__helper_8cpp_1ab042641d658a89b1f84ac845537915c1ae0cf662fe34d7c815bd7cc03eb3d8f55" prot="public">
          <name>kHz120</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="22" column="29" bodyfile="lib/ran/band_helper.cpp" bodystart="22" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="band__helper_8cpp_1a38ff355cd630f7dfaa6b69c80c2594d9" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t nof_nr_DL_bands_fr1</definition>
        <argsstring></argsstring>
        <name>nof_nr_DL_bands_fr1</name>
        <initializer>= 36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="45" column="16" bodyfile="lib/ran/band_helper.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1aca59cda0d020696580bd51082277ae9d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::array&lt; <ref refid="structnr__band__raster" kindref="compound">nr_band_raster</ref>, nof_nr_DL_bands_fr1 &gt;</type>
        <definition>constexpr std::array&lt;nr_band_raster, nof_nr_DL_bands_fr1&gt; nr_band_table_fr1</definition>
        <argsstring></argsstring>
        <name>nr_band_table_fr1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="50" column="29" bodyfile="lib/ran/band_helper.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1a4011a66efacbe05585d2dbe5f9877ff9" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t nof_nr_operating_band_fr1</definition>
        <argsstring></argsstring>
        <name>nof_nr_operating_band_fr1</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="96" column="75" bodyfile="lib/ran/band_helper.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1a8c88407c61363cf4c8e0672e478f8ab8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::array&lt; <ref refid="structnr__operating__band" kindref="compound">nr_operating_band</ref>, nof_nr_operating_band_fr1 &gt;</type>
        <definition>constexpr std::array&lt;nr_operating_band, nof_nr_operating_band_fr1&gt; nr_operating_bands_fr1</definition>
        <argsstring></argsstring>
        <name>nr_operating_bands_fr1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="97" column="29" bodyfile="lib/ran/band_helper.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1ad3943a1fdd6d824abd268f0b4d2c3f78" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t nof_nr_ssb_bands_fr1</definition>
        <argsstring></argsstring>
        <name>nof_nr_ssb_bands_fr1</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="140" column="73" bodyfile="lib/ran/band_helper.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1a4d5fa84eccdc4ff2ffc1f18299c1bde9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::array&lt; <ref refid="structnr__band__ssb__scs__case" kindref="compound">nr_band_ssb_scs_case</ref>, nof_nr_ssb_bands_fr1 &gt;</type>
        <definition>constexpr std::array&lt;nr_band_ssb_scs_case, nof_nr_ssb_bands_fr1&gt; nr_ssb_band_scs_case_table_fr1</definition>
        <argsstring></argsstring>
        <name>nr_ssb_band_scs_case_table_fr1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="141" column="29" bodyfile="lib/ran/band_helper.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1aa830b53a2888938cde60263838e13c42" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t max_nr_arfcn</definition>
        <argsstring></argsstring>
        <name>max_nr_arfcn</name>
        <initializer>= 3279165</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="195" column="50" bodyfile="lib/ran/band_helper.cpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1a1d1b96b873c677dad1f24422ca818c0a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::array&lt; <ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref>, 3 &gt;</type>
        <definition>constexpr std::array&lt;nr_raster_params, 3&gt; nr_fr_params</definition>
        <argsstring></argsstring>
        <name>nr_fr_params</name>
        <initializer>= {{
    
    
    {0, 3000, 5, 0.0, 0, 0, 599999},
    
    {3000, 24250, 15, 3000.0, 600000, 600000, 2016666},
    
    {24250, 100000, 60, 24250.08, 2016667, 2016667, max_nr_arfcn}
    
}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="196" column="29" bodyfile="lib/ran/band_helper.cpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="band__helper_8cpp_1a3ebecd62fc8836bf40edb748e08225e5" prot="public" static="yes" mutable="no">
        <type>std::array&lt; <ref refid="structn__rb__per__scs" kindref="compound">n_rb_per_scs</ref>, 13 &gt;</type>
        <definition>std::array&lt;n_rb_per_scs, 13&gt; tx_bw_config_fr1</definition>
        <argsstring></argsstring>
        <name>tx_bw_config_fr1</name>
        <initializer>= {{
    
    
    {bs_channel_bandwidth_fr1::MHz5, 25, 11, 0},
    
    {bs_channel_bandwidth_fr1::MHz10, 52, 24, 11},
    
    {bs_channel_bandwidth_fr1::MHz15, 79, 38, 18},
    
    {bs_channel_bandwidth_fr1::MHz20, 106, 51, 24},
    
    {bs_channel_bandwidth_fr1::MHz25, 133, 65, 31},
    
    {bs_channel_bandwidth_fr1::MHz30, 160, 78, 38},
    
    {bs_channel_bandwidth_fr1::MHz40, 216, 106, 51},
    
    {bs_channel_bandwidth_fr1::MHz50, 270, 133, 65},
    
    {bs_channel_bandwidth_fr1::MHz60, 0, 162, 79},
    
    {bs_channel_bandwidth_fr1::MHz70, 0, 189, 93},
    
    {bs_channel_bandwidth_fr1::MHz80, 0, 217, 107},
    
    {bs_channel_bandwidth_fr1::MHz90, 0, 245, 121},
    
    {bs_channel_bandwidth_fr1::MHz100, 0, 273, 135}
    
}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="215" column="19" bodyfile="lib/ran/band_helper.cpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="band__helper_8cpp_1a668115140f7e16f8ce578277c6df8480" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref></type>
        <definition>static nr_raster_params get_raster_params</definition>
        <argsstring>(uint32_t nr_arfcn)</argsstring>
        <name>get_raster_params</name>
        <param>
          <type>uint32_t</type>
          <declname>nr_arfcn</declname>
        </param>
        <briefdescription>
<para>Helper to calculate F_REF according to Table 5.4.2.1-1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="247" column="25" bodyfile="lib/ran/band_helper.cpp" bodystart="247" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="band__helper_8cpp_1aa8b76eed98154c2d4124c675647495b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref></type>
        <definition>static nr_raster_params get_raster_params</definition>
        <argsstring>(double freq)</argsstring>
        <name>get_raster_params</name>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="258" column="25" bodyfile="lib/ran/band_helper.cpp" bodystart="258" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="band__helper_8cpp_1a12003c871cce5f64f3c0f739f12b4c82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_valid_raster_param</definition>
        <argsstring>(const nr_raster_params &amp;raster)</argsstring>
        <name>is_valid_raster_param</name>
        <param>
          <type>const <ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref> &amp;</type>
          <declname>raster</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/ran/band_helper.cpp" line="269" column="13" bodyfile="lib/ran/band_helper.cpp" bodystart="269" bodyend="277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/band_helper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/bs_channel_bandwidth.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/duplex_mode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/ssb_mapping.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/subcarrier_spacing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">band_helper;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Possible<sp/>values<sp/>of<sp/>delta<sp/>f_raster<sp/>in<sp/>Table<sp/>5.4.2.3-1<sp/>and<sp/>Table<sp/>5.4.2.3-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>delta_freq_raster<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>DEFAULT<sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//<sp/>for<sp/>bands<sp/>with<sp/>2<sp/>possible<sp/>values<sp/>for<sp/>delta_f_raster<sp/>(e.g.<sp/>15<sp/>and<sp/>30<sp/>kHz),<sp/>the<sp/>lower<sp/>is<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>kHz15,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>kHz30,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>kHz60,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>kHz100,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>kHz120</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NR<sp/>operating<sp/>band<sp/>and<sp/>DL<sp/>ARFCN<sp/>lower-bound<sp/>and<sp/>upper-bound.<sp/>See<sp/>Table<sp/>5.4.2.3-1<sp/>in<sp/>TS<sp/>38.104.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structnr__band__raster" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnr__band__raster" kindref="compound">nr_band_raster</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>delta_freq_raster<sp/>delta_f_rast;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul_nref_first;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul_nref_step;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul_nref_last;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_nref_first;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_nref_step;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_nref_last;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>From<sp/>Table<sp/>5.4.2.3-1<sp/>in<sp/>TS<sp/>38.104,<sp/>this<sp/>is<sp/>the<sp/>number<sp/>of<sp/>NR<sp/>FR1<sp/>bands<sp/>that<sp/>has<sp/>a<sp/>DL<sp/>allocated<sp/>band<sp/>(FDD,<sp/>TDD<sp/>or<sp/>SDL).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Band<sp/>41<sp/>has<sp/>two<sp/>different<sp/>Freq<sp/>raster,<sp/>we<sp/>only<sp/>consider<sp/>raster<sp/>15kHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>nof_nr_DL_bands_fr1<sp/>=<sp/>36;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Table<sp/>with<sp/>NR<sp/>operating<sp/>FR1<sp/>band<sp/>and<sp/>related<sp/>ARFCN<sp/>lower-bound<sp/>and<sp/>upper-bound.<sp/>See<sp/>Table<sp/>5.4.2.3-1<sp/>in<sp/>TS<sp/>38.104.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>It<sp/>only<sp/>includes<sp/>FDD,<sp/>TDD,<sp/>and<sp/>SDL<sp/>bands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Band<sp/>2<sp/>is<sp/>a<sp/>subset<sp/>of<sp/>band<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::array&lt;nr_band_raster,<sp/>nof_nr_DL_bands_fr1&gt;<sp/>nr_band_table_fr1<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n1,<sp/><sp/>delta_freq_raster::kHz100,<sp/>384000,<sp/>20,<sp/>396000,<sp/>422000,<sp/>20,<sp/>434000},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n2,<sp/><sp/>delta_freq_raster::kHz100,<sp/>370000,<sp/>20,<sp/>382000,<sp/>386000,<sp/>20,<sp/>398000},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n3,<sp/><sp/>delta_freq_raster::kHz100,<sp/>342000,<sp/>20,<sp/>357000,<sp/>361000,<sp/>20,<sp/>376000},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n5,<sp/><sp/>delta_freq_raster::kHz100,<sp/>164800,<sp/>20,<sp/>169800,<sp/>173800,<sp/>20,<sp/>178800},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n7,<sp/><sp/>delta_freq_raster::kHz100,<sp/>500000,<sp/>20,<sp/>514000,<sp/>524000,<sp/>20,<sp/>538000},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n8,<sp/><sp/>delta_freq_raster::kHz100,<sp/>176000,<sp/>20,<sp/>183000,<sp/>185000,<sp/>20,<sp/>192000},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n12,<sp/>delta_freq_raster::kHz100,<sp/>139800,<sp/>20,<sp/>143200,<sp/>145800,<sp/>20,<sp/>149200},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n20,<sp/>delta_freq_raster::kHz100,<sp/>166400,<sp/>20,<sp/>172400,<sp/>158200,<sp/>20,<sp/>164200},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n25,<sp/>delta_freq_raster::kHz100,<sp/>370000,<sp/>20,<sp/>383000,<sp/>386000,<sp/>20,<sp/>399000},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n28,<sp/>delta_freq_raster::kHz100,<sp/>140600,<sp/>20,<sp/>149600,<sp/>151600,<sp/>20,<sp/>160600},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n34,<sp/>delta_freq_raster::kHz100,<sp/>402000,<sp/>20,<sp/>405000,<sp/>402000,<sp/>20,<sp/>405000},</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n38,<sp/>delta_freq_raster::kHz100,<sp/>514000,<sp/>20,<sp/>524000,<sp/>514000,<sp/>20,<sp/>524000},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n39,<sp/>delta_freq_raster::kHz100,<sp/>376000,<sp/>20,<sp/>384000,<sp/>376000,<sp/>20,<sp/>384000},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n40,<sp/>delta_freq_raster::kHz100,<sp/>460000,<sp/>20,<sp/>480000,<sp/>460000,<sp/>20,<sp/>480000},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n41,<sp/>delta_freq_raster::kHz15,<sp/><sp/>499200,<sp/><sp/>3,<sp/>537999,<sp/>499200,<sp/><sp/>3,<sp/>537999},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n41,<sp/>delta_freq_raster::kHz30,<sp/><sp/>499200,<sp/><sp/>6,<sp/>537996,<sp/>499200,<sp/><sp/>6,<sp/>537996},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n50,<sp/>delta_freq_raster::kHz100,<sp/>286400,<sp/>20,<sp/>303400,<sp/>286400,<sp/>20,<sp/>303400},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n51,<sp/>delta_freq_raster::kHz100,<sp/>285400,<sp/>20,<sp/>286400,<sp/>285400,<sp/>20,<sp/>286400},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n66,<sp/>delta_freq_raster::kHz100,<sp/>342000,<sp/>20,<sp/>356000,<sp/>422000,<sp/>20,<sp/>440000},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n70,<sp/>delta_freq_raster::kHz100,<sp/>339000,<sp/>20,<sp/>342000,<sp/>399000,<sp/>20,<sp/>404000},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n71,<sp/>delta_freq_raster::kHz100,<sp/>132600,<sp/>20,<sp/>139600,<sp/>123400,<sp/>20,<sp/>130400},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n74,<sp/>delta_freq_raster::kHz100,<sp/>285400,<sp/>20,<sp/>294000,<sp/>295000,<sp/>20,<sp/>303600},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n75,<sp/>delta_freq_raster::kHz100,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>286400,<sp/>20,<sp/>303400},</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n76,<sp/>delta_freq_raster::kHz100,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>285400,<sp/>20,<sp/>286400},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n77,<sp/>delta_freq_raster::kHz15,<sp/><sp/>620000,<sp/><sp/>1,<sp/>680000,<sp/>620000,<sp/><sp/>1,<sp/>680000},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n77,<sp/>delta_freq_raster::kHz30,<sp/><sp/>620000,<sp/><sp/>2,<sp/>680000,<sp/>620000,<sp/><sp/>2,<sp/>680000},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n78,<sp/>delta_freq_raster::kHz15,<sp/><sp/>620000,<sp/><sp/>1,<sp/>653333,<sp/>620000,<sp/><sp/>1,<sp/>653333},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n78,<sp/>delta_freq_raster::kHz30,<sp/><sp/>620000,<sp/><sp/>2,<sp/>653332,<sp/>620000,<sp/><sp/>2,<sp/>653332},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n79,<sp/>delta_freq_raster::kHz15,<sp/><sp/>693334,<sp/><sp/>2,<sp/>733333,<sp/>693334,<sp/><sp/>2,<sp/>733333},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n79,<sp/>delta_freq_raster::kHz30,<sp/><sp/>693334,<sp/><sp/>2,<sp/>733332,<sp/>693334,<sp/><sp/>2,<sp/>733332},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n80,<sp/>delta_freq_raster::kHz100,<sp/>342000,<sp/><sp/>20,<sp/>357000,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n81,<sp/>delta_freq_raster::kHz100,<sp/>176000,<sp/><sp/>20,<sp/>183000,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n82,<sp/>delta_freq_raster::kHz100,<sp/>166400,<sp/><sp/>20,<sp/>172400,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n83,<sp/>delta_freq_raster::kHz100,<sp/>140600,<sp/><sp/>20,<sp/>149600,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n84,<sp/>delta_freq_raster::kHz100,<sp/>384000,<sp/><sp/>20,<sp/>396000,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n86,<sp/>delta_freq_raster::kHz100,<sp/>342000,<sp/><sp/>20,<sp/>356000,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/>0}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NR<sp/>operating<sp/>band<sp/>in<sp/>FR1<sp/>with<sp/>related<sp/>Duplex<sp/>Mode.<sp/>See<sp/>TS<sp/>38.101-1<sp/>Table<sp/>5.2-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structnr__operating__band" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnr__operating__band" kindref="compound">nr_operating_band</ref><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/><sp/><sp/><sp/><sp/>band;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1" kindref="member">duplex_mode</ref><sp/>duplex;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nof_nr_operating_band_fr1<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::array&lt;nr_operating_band,<sp/>nof_nr_operating_band_fr1&gt;<sp/>nr_operating_bands_fr1<sp/><sp/><sp/><sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n1,<sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n2,<sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n3,<sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n5,<sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n7,<sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n8,<sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n12,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n20,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n25,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n28,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n34,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n38,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n39,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n40,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n41,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n50,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n51,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n66,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n70,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n71,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n74,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n75,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n76,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n77,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n78,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n79,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>},</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n80,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1ab6e4d934ab0c243d22087d3dd6dda0ac" kindref="member">duplex_mode::SUL</ref>},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n81,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1ab6e4d934ab0c243d22087d3dd6dda0ac" kindref="member">duplex_mode::SUL</ref>},</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n82,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1ab6e4d934ab0c243d22087d3dd6dda0ac" kindref="member">duplex_mode::SUL</ref>},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n83,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1ab6e4d934ab0c243d22087d3dd6dda0ac" kindref="member">duplex_mode::SUL</ref>},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n84,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1ab6e4d934ab0c243d22087d3dd6dda0ac" kindref="member">duplex_mode::SUL</ref>},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n86,<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1ab6e4d934ab0c243d22087d3dd6dda0ac" kindref="member">duplex_mode::SUL</ref>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NR<sp/>operating<sp/>band<sp/>in<sp/>FR1<sp/>with<sp/>SSB<sp/>Subcarrier<sp/>Spacing<sp/>and<sp/>SSB<sp/>pattern<sp/>case.<sp/>See<sp/>TS<sp/>38.101-1<sp/>Table<sp/>5.2-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structnr__band__ssb__scs__case" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnr__band__ssb__scs__case" kindref="compound">nr_band_ssb_scs_case</ref><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>band;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ff" kindref="member">ssb_pattern_case</ref><sp/><sp/><sp/>pattern;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nof_nr_ssb_bands_fr1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::array&lt;nr_band_ssb_scs_case,<sp/>nof_nr_ssb_bands_fr1&gt;<sp/>nr_ssb_band_scs_case_table_fr1<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n1,<sp/><sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n2,<sp/><sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n3,<sp/><sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n5,<sp/><sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n5,<sp/><sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa9d5ed678fe57bcca610140957afab571" kindref="member">ssb_pattern_case::B</ref>},</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n7,<sp/><sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n8,<sp/><sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n12,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n20,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n25,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n28,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n34,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n34,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n38,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n38,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n39,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n39,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n40,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n41,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n41,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n50,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n51,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n66,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n66,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa9d5ed678fe57bcca610140957afab571" kindref="member">ssb_pattern_case::B</ref>},</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n70,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n71,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n74,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n75,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n76,<sp/>subcarrier_spacing::kHz15,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n77,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n78,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{nr_band::n79,<sp/>subcarrier_spacing::kHz30,<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structnr__raster__params" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>freq_range_start;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>freq_range_end;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>delta_F_global_kHz;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>F_REF_Offs_MHz;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>uint32_t<sp/>N_REF_Offs;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>uint32_t<sp/>N_REF_min;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>uint32_t<sp/>N_REF_max;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="188"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>freq_range_start<sp/>==<sp/>rhs.freq_range_start<sp/>&amp;&amp;<sp/>freq_range_end<sp/>==<sp/>rhs.freq_range_end<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_F_global_kHz<sp/>==<sp/>rhs.delta_F_global_kHz<sp/>&amp;&amp;<sp/>F_REF_Offs_MHz<sp/>==<sp/>rhs.F_REF_Offs_MHz<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_REF_Offs<sp/>==<sp/>rhs.N_REF_Offs<sp/>&amp;&amp;<sp/>N_REF_min<sp/>==<sp/>rhs.N_REF_min<sp/>&amp;&amp;<sp/>N_REF_max<sp/>==<sp/>rhs.N_REF_max;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_nr_arfcn<sp/>=<sp/>3279165;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::array&lt;nr_raster_params,<sp/>3&gt;<sp/>nr_fr_params<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frequency<sp/>range<sp/>0<sp/>-<sp/>3000<sp/>MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>3000,<sp/>5,<sp/>0.0,<sp/>0,<sp/>0,<sp/>599999},</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frequency<sp/>range<sp/>3000<sp/>-<sp/>24250<sp/>MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{3000,<sp/>24250,<sp/>15,<sp/>3000.0,<sp/>600000,<sp/>600000,<sp/>2016666},</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frequency<sp/>range<sp/>24250<sp/>-<sp/>100000<sp/>MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{24250,<sp/>100000,<sp/>60,<sp/>24250.08,<sp/>2016667,<sp/>2016667,<sp/>max_nr_arfcn}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structn__rb__per__scs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structn__rb__per__scs" kindref="compound">n_rb_per_scs</ref><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a3a938fe6642f4c4aa1e079d2f3f24a15" kindref="member">bs_channel_bandwidth_fr1</ref><sp/>bw;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_rb_15kHz;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_rb_30kHz;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_rb_60kHz;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>implements<sp/>Table<sp/>5.3.2-1<sp/>in<sp/>TS<sp/>38.104.<sp/>Value<sp/>N_RB<sp/>=<sp/>0<sp/>represent<sp/>N/A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;n_rb_per_scs,<sp/>13&gt;<sp/>tx_bw_config_fr1<sp/>=<sp/>{{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>5MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz5,<sp/>25,<sp/>11,<sp/>0},</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>10MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz10,<sp/>52,<sp/>24,<sp/>11},</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>15MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz15,<sp/>79,<sp/>38,<sp/>18},</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>20MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz20,<sp/>106,<sp/>51,<sp/>24},</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>25MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz25,<sp/>133,<sp/>65,<sp/>31},</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>30MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz30,<sp/>160,<sp/>78,<sp/>38},</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>40MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz40,<sp/>216,<sp/>106,<sp/>51},</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>50MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz50,<sp/>270,<sp/>133,<sp/>65},</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>60MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz60,<sp/>0,<sp/>162,<sp/>79},</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>70MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz70,<sp/>0,<sp/>189,<sp/>93},</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>80MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz80,<sp/>0,<sp/>217,<sp/>107},</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>90MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz90,<sp/>0,<sp/>245,<sp/>121},</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW<sp/>=<sp/>100MHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{bs_channel_bandwidth_fr1::MHz100,<sp/>0,<sp/>273,<sp/>135}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref><sp/>get_raster_params(uint32_t<sp/>nr_arfcn)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref>&amp;<sp/>fr<sp/>:<sp/>nr_fr_params)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nr_arfcn<sp/>&gt;=<sp/>fr.N_REF_min<sp/>&amp;&amp;<sp/>nr_arfcn<sp/>&lt;=<sp/>fr.N_REF_max)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fr;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>empty<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref><sp/>get_raster_params(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref>&amp;<sp/>fr<sp/>:<sp/>nr_fr_params)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&gt;=<sp/>fr.freq_range_start<sp/>*<sp/>1e6<sp/>&amp;&amp;<sp/>freq<sp/>&lt;=<sp/>fr.freq_range_end<sp/>*<sp/>1e6)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fr;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>empty<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid_raster_param(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref>&amp;<sp/>raster)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref>&amp;<sp/>fr<sp/>:<sp/>nr_fr_params)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr<sp/>==<sp/>raster)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/>srsgnb::band_helper::get_band_from_dl_arfcn(uint32_t<sp/>arfcn)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__band__raster" kindref="compound">nr_band_raster</ref>&amp;<sp/>band<sp/>:<sp/>nr_band_table_fr1)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>given<sp/>ARFCN<sp/>is<sp/>between<sp/>the<sp/>first<sp/>and<sp/>last<sp/>possible<sp/>ARFCN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arfcn<sp/>&gt;=<sp/>band.dl_nref_first<sp/>and<sp/>arfcn<sp/>&lt;=<sp/>band.dl_nref_last)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>band.band;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nr_band::invalid;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">uint32_t<sp/>srsgnb::band_helper::get_ul_arfcn_from_dl_arfcn(uint32_t<sp/>dl_arfcn)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>The<sp/>procedure<sp/>implemented<sp/>in<sp/>this<sp/>function<sp/>is<sp/>implementation-defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>same<sp/>ARFCN<sp/>for<sp/>TDD<sp/>bands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_duplex_mode(get_band_from_dl_arfcn(dl_arfcn))<sp/>==<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1a1ffd07437a30fba5785ce6557acca2b2" kindref="member">duplex_mode::TDD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dl_arfcn;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Derive<sp/>UL<sp/>ARFCN<sp/>for<sp/>FDD<sp/>bands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>band<sp/>:<sp/>nr_band_table_fr1)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(band.band<sp/>==<sp/>get_band_from_dl_arfcn(dl_arfcn))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset<sp/>=<sp/>(dl_arfcn<sp/>-<sp/>band.dl_nref_first)<sp/>/<sp/>band.dl_nref_step;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(band.ul_nref_first<sp/>+<sp/>offset<sp/>*<sp/>band.ul_nref_step);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>srsgnb::band_helper::nr_arfcn_to_freq(uint32_t<sp/>nr_arfcn)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref><sp/>params<sp/>=<sp/>get_raster_params(nr_arfcn);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>is_valid_raster_param(params))<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(params.F_REF_Offs_MHz<sp/>*<sp/>1e6<sp/>+<sp/>params.delta_F_global_kHz<sp/>*<sp/>(nr_arfcn<sp/>-<sp/>params.N_REF_Offs)<sp/>*<sp/>1e3);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">uint32_t<sp/>srsgnb::band_helper::freq_to_nr_arfcn(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="structnr__raster__params" kindref="compound">nr_raster_params</ref><sp/>params<sp/>=<sp/>get_raster_params(freq);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>is_valid_raster_param(params))<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(((freq<sp/>-<sp/>params.F_REF_Offs_MHz<sp/>*<sp/>1e6)<sp/>/<sp/>1e3<sp/>/<sp/>params.delta_F_global_kHz)<sp/>+</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params.N_REF_Offs);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ff" kindref="member">ssb_pattern_case</ref><sp/>srsgnb::band_helper::get_ssb_pattern(<ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/>band,<sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>the<sp/>given<sp/>band<sp/>and<sp/>SCS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__band__ssb__scs__case" kindref="compound">nr_band_ssb_scs_case</ref>&amp;<sp/>ssb_scs_case<sp/>:<sp/>nr_ssb_band_scs_case_table_fr1)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>bands<sp/>are<sp/>in<sp/>ascending<sp/>order,<sp/>do<sp/>not<sp/>waste<sp/>more<sp/>time<sp/>if<sp/>the<sp/>current<sp/>band<sp/>is<sp/>bigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssb_scs_case.band<sp/>&gt;<sp/>band)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffafedb2d84cafe20862cb4399751a8a7e3" kindref="member">ssb_pattern_case::invalid</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssb_scs_case.band<sp/>==<sp/>band<sp/>and<sp/>ssb_scs_case.scs<sp/>==<sp/>scs)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ssb_scs_case.pattern;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Band<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>so<sp/>consider<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffafedb2d84cafe20862cb4399751a8a7e3" kindref="member">ssb_pattern_case::invalid</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>srsgnb::band_helper::get_lowest_ssb_scs(<ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/>band)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>the<sp/>given<sp/>band<sp/>and<sp/>SCS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__band__ssb__scs__case" kindref="compound">nr_band_ssb_scs_case</ref>&amp;<sp/>ss_raster<sp/>:<sp/>nr_ssb_band_scs_case_table_fr1)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>band<sp/>and<sp/>SCS<sp/>match!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss_raster.band<sp/>==<sp/>band)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss_raster.scs;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>bands<sp/>are<sp/>in<sp/>ascending<sp/>order,<sp/>do<sp/>not<sp/>waste<sp/>more<sp/>time<sp/>if<sp/>the<sp/>current<sp/>band<sp/>is<sp/>bigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ss_raster.band<sp/>&gt;<sp/>band)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subcarrier_spacing::invalid;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Band<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>so<sp/>consider<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subcarrier_spacing::invalid;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1" kindref="member">duplex_mode</ref><sp/>srsgnb::band_helper::get_duplex_mode(<ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/>band)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>the<sp/>given<sp/>band.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnr__operating__band" kindref="compound">nr_operating_band</ref>&amp;<sp/>b<sp/>:<sp/>nr_operating_bands_fr1)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>band<sp/>and<sp/>SCS<sp/>match!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.band<sp/>==<sp/>band)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.duplex;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>bands<sp/>are<sp/>in<sp/>ascending<sp/>order,<sp/>do<sp/>not<sp/>waste<sp/>more<sp/>time<sp/>if<sp/>the<sp/>current<sp/>band<sp/>is<sp/>bigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.band<sp/>&gt;<sp/>band)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>duplex_mode::INVALID;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Band<sp/>is<sp/>out<sp/>of<sp/>range,<sp/>so<sp/>consider<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>duplex_mode::INVALID;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>srsgnb::band_helper::is_paired_spectrum(<ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/>band)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1" kindref="member">duplex_mode</ref><sp/>mode<sp/>=<sp/>get_duplex_mode(band);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>srsgnb_assert(mode<sp/>&lt;<sp/>duplex_mode::INVALID,<sp/></highlight><highlight class="stringliteral">&quot;Returned<sp/>invalid<sp/>duplex<sp/>MODE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/><ref refid="namespacesrsgnb_1a83f6ffefc7d0a575c536ffac0750f2f1aeec6da44109af7259e81b505436583ff" kindref="member">duplex_mode::FDD</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>srsgnb::band_helper::get_abs_freq_point_a_from_center_freq(uint32_t<sp/>nof_prb,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>center_freq)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a1691e371d39f897676e1185dce645bb1" kindref="member">NRE</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>FR1<sp/>unit<sp/>of<sp/>resources<sp/>blocks<sp/>for<sp/>freq<sp/>calc<sp/>is<sp/>always<sp/>180kHz<sp/>regardless<sp/>for<sp/>actual<sp/>SCS<sp/>of<sp/>carrier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>offset_to_carrier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>center_freq<sp/>-<sp/>(nof_prb<sp/>/<sp/>2<sp/>*<sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(subcarrier_spacing::kHz15)<sp/>*<sp/>KHZ_TO_HZ<sp/>*<sp/><ref refid="namespacesrsgnb_1a1691e371d39f897676e1185dce645bb1" kindref="member">NRE</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">uint32_t<sp/>srsgnb::band_helper::get_abs_freq_point_a_arfcn(uint32_t<sp/>nof_prb,<sp/>uint32_t<sp/>arfcn)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>freq_to_nr_arfcn(get_abs_freq_point_a_from_center_freq(nof_prb,<sp/>nr_arfcn_to_freq(arfcn)));</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>srsgnb::band_helper::get_center_freq_from_abs_freq_point_a(uint32_t<sp/>nof_prb,<sp/>uint32_t<sp/>freq_point_a_arfcn)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a1691e371d39f897676e1185dce645bb1" kindref="member">NRE</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>FR1<sp/>unit<sp/>of<sp/>resources<sp/>blocks<sp/>for<sp/>freq<sp/>calc<sp/>is<sp/>always<sp/>180kHz<sp/>regardless<sp/>for<sp/>actual<sp/>SCS<sp/>of<sp/>carrier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>offset_to_carrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>abs_freq_point_a_freq<sp/>=<sp/>nr_arfcn_to_freq(freq_point_a_arfcn);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs_freq_point_a_freq<sp/>+<sp/>(nof_prb<sp/>/<sp/>2<sp/>*<sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(subcarrier_spacing::kHz15)<sp/>*<sp/>KHZ_TO_HZ<sp/>*<sp/><ref refid="namespacesrsgnb_1a1691e371d39f897676e1185dce645bb1" kindref="member">NRE</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>srsgnb::band_helper::get_abs_freq_point_a_from_f_ref(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f_ref,<sp/>uint32_t<sp/>nof_rbs,<sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>(i):<sp/>It<sp/>is<sp/>unclear<sp/>whether<sp/>the<sp/>SCS<sp/>should<sp/>always<sp/>be<sp/>15kHz<sp/>for<sp/>FR1<sp/>(\ref<sp/>get_abs_freq_point_a_from_center_freq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>see<sp/>note).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>(ii):<sp/>TS<sp/>38.104,<sp/>Section<sp/>5.4.2.2,<sp/>reports<sp/>&lt;em&gt;[...]<sp/>The<sp/>mapping<sp/>must<sp/>apply<sp/>to<sp/>at<sp/>least<sp/>one<sp/>numerology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>supported<sp/>by<sp/>the<sp/>BS.&lt;\em&gt;.<sp/>Therefore,<sp/>the<sp/>correct<sp/>SCS<sp/>to<sp/>be<sp/>used<sp/>in<sp/>this<sp/>procedure<sp/>still<sp/>needs<sp/>to<sp/>determined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>of<sp/>the<sp/>number<sp/>of<sp/>subcarriers<sp/>in<sp/>a<sp/>RE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>NRE_half<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>procedure,<sp/>which<sp/>is<sp/>explained<sp/>in<sp/>TS<sp/>38.104,<sp/>Section<sp/>5.4.2.2,<sp/>gives<sp/>the<sp/>position<sp/>of<sp/>f_ref<sp/>in<sp/>terms<sp/>of<sp/>subcarrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>CRB<sp/>index,<sp/>depending<sp/>on<sp/>the<sp/>size<sp/>of<sp/>N_RB.<sp/>Below<sp/>we<sp/>compute<sp/>the<sp/>value<sp/>in<sp/>unit<sp/>of<sp/>subcarriers,<sp/>meaning<sp/>we<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>separate<sp/>the<sp/>cases<sp/>of<sp/>even<sp/>and<sp/>odd<sp/>N_RB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>delta_point_a_f_ref<sp/>=<sp/>nof_rbs<sp/>*<sp/>NRE_half;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_ref<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(delta_point_a_f_ref<sp/>*<sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(scs)<sp/>*<sp/>KHZ_TO_HZ);</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">srsgnb::band_helper::get_f_ref_from_abs_freq_point_a(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>abs_freq_point_a,<sp/>uint32_t<sp/>nof_rbs,<sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>notes<sp/>in<sp/>\ref<sp/>get_abs_freq_point_a_from_f_ref.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>of<sp/>the<sp/>number<sp/>of<sp/>subcarriers<sp/>in<sp/>a<sp/>RE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>NRE_half<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>procedure<sp/>used<sp/>in<sp/>this<sp/>function<sp/>is<sp/>the<sp/>inverse<sp/>of<sp/>what<sp/>explained<sp/>in<sp/>TS<sp/>38.104,<sp/>Section<sp/>5.4.2.2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>delta_point_a_f_ref<sp/>=<sp/>nof_rbs<sp/>*<sp/>NRE_half;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs_freq_point_a<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(delta_point_a_f_ref<sp/>*<sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(scs)<sp/>*<sp/>KHZ_TO_HZ);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>srsgnb::band_helper::get_n_rbs_from_bw(<ref refid="namespacesrsgnb_1a3a938fe6642f4c4aa1e079d2f3f24a15" kindref="member">bs_channel_bandwidth_fr1</ref><sp/>bw,<sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs,<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11" kindref="member">frequency_range</ref><sp/>fr)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>invalid<sp/>value<sp/>in<sp/>case<sp/>the<sp/>input<sp/>parameters<sp/>are<sp/>not<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fr<sp/>!=<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref><sp/>or<sp/>scs<sp/>&gt;<sp/>subcarrier_spacing::kHz60)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>on<sp/>the<sp/>table<sp/>\ref<sp/>tx_bw_config_fr1<sp/>for<sp/>the<sp/>BS<sp/>channel<sp/>bandwidth<sp/>and<sp/>return<sp/>the<sp/>N_RB<sp/>corresponding<sp/>to<sp/>SCS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bw_idx<sp/>=<sp/>0;<sp/>bw_idx<sp/>&lt;<sp/>tx_bw_config_fr1.size();<sp/>++bw_idx)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_bw_config_fr1[bw_idx].bw<sp/>==<sp/>bw)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx_bw_config_fr1[bw_idx].n_rb_15kHz;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz30)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx_bw_config_fr1[bw_idx].n_rb_30kHz;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx_bw_config_fr1[bw_idx].n_rb_60kHz;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><ref refid="namespacesrsgnb_1a928643ce67658447b5b7ab02831d080a" kindref="member">min_channel_bandwidth</ref><sp/>srsgnb::band_helper::get_min_channel_bw(<ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref><sp/><ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref>,<sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>scs)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespacesrsgnb_1aa10717dc03c6ef10955d28db0592d673" kindref="member">nr_band</ref>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n1:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n2:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n3:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n7:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n25:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n34:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n38:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n39:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n40:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n50:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n66:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n70:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n74:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n75:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n80:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n84:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n86:<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz5;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz30<sp/>or<sp/>scs<sp/>==<sp/>subcarrier_spacing::kHz60)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz10;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n5:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n8:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n12:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n20:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n28:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n71:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n81:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n82:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n83:<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz5;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz30)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz10;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n51:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n76:<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>==<sp/>subcarrier_spacing::kHz15)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz5;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n41:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n77:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n78:<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>&lt;=<sp/>subcarrier_spacing::kHz60)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz10;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>nr_band::n79:<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scs<sp/>&lt;=<sp/>subcarrier_spacing::kHz60)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::MHz40;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_channel_bandwidth::invalid;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/ran/band_helper.cpp"/>
  </compounddef>
</doxygen>
