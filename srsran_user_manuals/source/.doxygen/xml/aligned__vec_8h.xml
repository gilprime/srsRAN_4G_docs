<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="aligned__vec_8h" kind="file" language="C++">
    <compoundname>aligned_vec.h</compoundname>
    <includes refid="span_8h" local="yes">srsgnb/adt/span.h</includes>
    <includedby refid="dft__processor__fftw__impl_8h" local="yes">lib/phy/generic_functions/dft_processor_fftw_impl.h</includedby>
    <includedby refid="dft__processor__fftx__impl_8h" local="yes">lib/phy/generic_functions/dft_processor_fftx_impl.h</includedby>
    <includedby refid="dft__processor__generic__impl_8h" local="yes">lib/phy/generic_functions/dft_processor_generic_impl.h</includedby>
    <includedby refid="ofdm__modulator__impl_8h" local="yes">lib/phy/lower/modulation/ofdm_modulator_impl.h</includedby>
    <includedby refid="prach__processor__worker_8h" local="yes">lib/phy/lower/processors/prach/prach_processor_worker.h</includedby>
    <includedby refid="resource__grid__impl_8h" local="yes">lib/phy/support/resource_grid_impl.h</includedby>
    <includedby refid="resource__grid__pool__impl_8h" local="yes">lib/phy/support/resource_grid_pool_impl.h</includedby>
    <includedby refid="polar__code__impl_8h" local="yes">lib/phy/upper/channel_coding/polar/polar_code_impl.h</includedby>
    <includedby refid="polar__decoder__impl_8h" local="yes">lib/phy/upper/channel_coding/polar/polar_decoder_impl.h</includedby>
    <includedby refid="polar__encoder__impl_8h" local="yes">lib/phy/upper/channel_coding/polar/polar_encoder_impl.h</includedby>
    <includedby refid="prach__detector__simple__impl_8h" local="yes">lib/phy/upper/channel_processors/prach_detector_simple_impl.h</includedby>
    <includedby refid="aligned__vec_8cpp" local="yes">lib/srsvec/aligned_vec.cpp</includedby>
    <incdepgraph>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="3">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstdio</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="12">
        <label>array</label>
      </node>
      <node id="5">
        <label>cerrno</label>
      </node>
      <node id="2">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="1">
        <label>include/srsgnb/srsvec/aligned_vec.h</label>
        <link refid="aligned__vec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>lib/phy/generic_functions/dft_processor_generic_impl.h</label>
        <link refid="dft__processor__generic__impl_8h_source"/>
      </node>
      <node id="3">
        <label>lib/phy/generic_functions/dft_processor_fftx_impl.h</label>
        <link refid="dft__processor__fftx__impl_8h_source"/>
      </node>
      <node id="2">
        <label>lib/phy/generic_functions/dft_processor_fftw_impl.h</label>
        <link refid="dft__processor__fftw__impl_8h_source"/>
      </node>
      <node id="10">
        <label>lib/phy/support/resource_grid_pool_impl.h</label>
        <link refid="resource__grid__pool__impl_8h_source"/>
      </node>
      <node id="5">
        <label>lib/phy/lower/modulation/ofdm_modulator_impl.h</label>
        <link refid="ofdm__modulator__impl_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/phy/upper/channel_processors/prach_detector_simple_impl.h</label>
        <link refid="prach__detector__simple__impl_8h_source"/>
      </node>
      <node id="6">
        <label>lib/phy/lower/modulation/ofdm_modulator_factory_impl.h</label>
        <link refid="ofdm__modulator__factory__impl_8h_source"/>
      </node>
      <node id="7">
        <label>lib/phy/lower/processors/prach/prach_processor_worker.h</label>
        <link refid="prach__processor__worker_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>lib/phy/support/resource_grid_impl.h</label>
        <link refid="resource__grid__impl_8h_source"/>
      </node>
      <node id="13">
        <label>lib/phy/upper/channel_coding/polar/polar_encoder_impl.h</label>
        <link refid="polar__encoder__impl_8h_source"/>
      </node>
      <node id="11">
        <label>lib/phy/upper/channel_coding/polar/polar_code_impl.h</label>
        <link refid="polar__code__impl_8h_source"/>
      </node>
      <node id="8">
        <label>lib/phy/lower/processors/prach/prach_processor_impl.h</label>
        <link refid="prach__processor__impl_8h_source"/>
      </node>
      <node id="1">
        <label>include/srsgnb/srsvec/aligned_vec.h</label>
        <link refid="aligned__vec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>lib/phy/upper/channel_coding/polar/polar_decoder_impl.h</label>
        <link refid="polar__decoder__impl_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsrsgnb_1_1srsvec_1_1aligned__vec" prot="public">srsgnb::srsvec::aligned_vec</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacesrsgnb_1_1srsvec">srsgnb::srsvec</innernamespace>
    <innernamespace refid="namespacesrsgnb_1_1srsvec_1_1detail">srsgnb::srsvec::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/span.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">srsvec<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mem_alloc(std::size_t<sp/>size);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>mem_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="25" refid="classsrsgnb_1_1srsvec_1_1aligned__vec" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dealloc()<sp/>{<sp/>detail::mem_free(this-&gt;<ref refid="classsrsgnb_1_1span_1aba4308bbfa76f662c5e7cf1b4afd78c5" kindref="member">data</ref>());<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec&lt;T&gt;</ref>&amp;<sp/>operator=(<ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec&lt;T&gt;</ref>&amp;&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec&lt;T&gt;</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec&lt;T&gt;</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec&lt;T&gt;</ref>&amp;<sp/>other)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec</ref>(<ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec&lt;T&gt;</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec</ref>()<sp/>:<sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;T&gt;</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0UL){};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec</ref>(std::size_t<sp/><ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>)<sp/>{<sp/>resize(<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>);<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>new_size)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>==<sp/>this-&gt;<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>dealloc();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/><sp/><sp/><sp/>ptr_<sp/><sp/><sp/><sp/>=<sp/>(T*)detail::mem_alloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>new_size);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;T&gt;</ref><sp/>o<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;T&gt;</ref>(ptr_,<sp/>new_size);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;T&gt;</ref>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>~<ref refid="classsrsgnb_1_1srsvec_1_1aligned__vec" kindref="compound">aligned_vec</ref>()<sp/>{<sp/>dealloc();<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsvec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/srsvec/aligned_vec.h"/>
  </compounddef>
</doxygen>
