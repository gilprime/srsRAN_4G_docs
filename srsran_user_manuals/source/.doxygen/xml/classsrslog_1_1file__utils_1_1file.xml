<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1file__utils_1_1file" kind="class" language="C++" prot="public">
    <compoundname>srslog::file_utils::file</compoundname>
    <includes refid="file__utils_8h" local="no">file_utils.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrslog_1_1file__utils_1_1file_1a9d1267cd372a5ed095f2e49c4e3ca211" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string srslog::file_utils::file::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="73" column="15" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1file__utils_1_1file_1a7ee330a3670471fd16482ae379bdb45a" prot="private" static="no" mutable="no">
        <type>std::FILE *</type>
        <definition>std::FILE* srslog::file_utils::file::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="74" column="14" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1a09236b8751340ba765e0e7f6642d5c8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::file_utils::file::~file</definition>
        <argsstring>()</argsstring>
        <name>~file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="77" column="3" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1afcfaf72851e6a4bf5f879c5a1e554403" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::file_utils::file::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="79" column="12" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1aedd585dac74c5058a4bfde2be85beb64" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::FILE *</type>
        <definition>std::FILE* srslog::file_utils::file::get_handle</definition>
        <argsstring>() const</argsstring>
        <name>get_handle</name>
        <briefdescription>
<para>Returns the handle of the underlying file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="82" column="13" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1a6ab857af2b60b6ec77b2ed6df9a5dc7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; srslog::file_utils::file::get_path</definition>
        <argsstring>() const</argsstring>
        <name>get_path</name>
        <briefdescription>
<para>Returns the path of the file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="85" column="21" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1ac104918e45f47b7372eab90820b17110" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_utils::file::create</definition>
        <argsstring>(const std::string &amp;new_path)</argsstring>
        <name>create</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>new_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new file in the specified path by previously closing any opened file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="89" column="24" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="89" bodyend="99"/>
        <references refid="classsrslog_1_1file__utils_1_1file_1af21989b38b1132485cdcf66e2a03e06b" compoundref="file__utils_8h" startline="127" endline="134">close</references>
        <referencedby refid="classsrslog_1_1file__sink_1af041fe2f972306da1f21c0f97bbd633c" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="73" endline="76">srslog::file_sink::create_file</referencedby>
        <referencedby refid="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" compoundref="buffered__file__sink_8h" startline="34" endline="51">srslog::buffered_file_sink::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1ad07253657cab84fb7e9daf133eca55ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_utils::file::write</definition>
        <argsstring>(detail::memory_buffer buffer)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">detail::memory_buffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes the provided memory buffer into an open file, otherwise does nothing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="103" column="24" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="103" bodyend="112"/>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1aa72ea90570be1ceb95d33fb32a9fa437" compoundref="memory__buffer_8h" startline="32" endline="32">srslog::detail::memory_buffer::data</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" compoundref="memory__buffer_8h" startline="41" endline="41">srslog::detail::memory_buffer::size</references>
        <references refid="classsrslog_1_1file__utils_1_1file_1af21989b38b1132485cdcf66e2a03e06b" compoundref="file__utils_8h" startline="127" endline="134">close</references>
        <referencedby refid="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="34" endline="59">srslog::file_sink::write</referencedby>
        <referencedby refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" compoundref="buffered__file__sink_8h" startline="67" endline="75">srslog::buffered_file_sink::flush_buffer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1a7cde6bc69c56d58f1015345451ba415e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_utils::file::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
<para>Flushes the contents of an open file, otherwise does nothing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="115" column="24" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="115" bodyend="124"/>
        <references refid="classsrslog_1_1file__utils_1_1file_1af21989b38b1132485cdcf66e2a03e06b" compoundref="file__utils_8h" startline="127" endline="134">close</references>
        <referencedby refid="classsrslog_1_1file__sink_1aa22d9ba36bca69a2d6090cd22969fdb0" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="61" endline="61">srslog::file_sink::flush</referencedby>
        <referencedby refid="classsrslog_1_1buffered__file__sink_1adacf6406627e1915a4cc47a1d3958da4" compoundref="buffered__file__sink_8h" startline="53" endline="59">srslog::buffered_file_sink::flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__utils_1_1file_1af21989b38b1132485cdcf66e2a03e06b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::file_utils::file::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>Closes an open file, otherwise does nothing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_utils.h" line="127" column="8" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="127" bodyend="134"/>
        <referencedby refid="classsrslog_1_1file__utils_1_1file_1ac104918e45f47b7372eab90820b17110" compoundref="file__utils_8h" startline="89" endline="99">create</referencedby>
        <referencedby refid="classsrslog_1_1file__utils_1_1file_1ad07253657cab84fb7e9daf133eca55ad" compoundref="file__utils_8h" startline="103" endline="112">write</referencedby>
        <referencedby refid="classsrslog_1_1file__utils_1_1file_1a7cde6bc69c56d58f1015345451ba415e" compoundref="file__utils_8h" startline="115" endline="124">flush</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class provides basic file operations and disables itself when it encounters an error. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srslog::file_utils::file</label>
        <link refid="classsrslog_1_1file__utils_1_1file"/>
      </node>
    </collaborationgraph>
    <location file="lib/srslog/sinks/file_utils.h" line="72" column="1" bodyfile="lib/srslog/sinks/file_utils.h" bodystart="71" bodyend="135"/>
    <listofallmembers>
      <member refid="classsrslog_1_1file__utils_1_1file_1af21989b38b1132485cdcf66e2a03e06b" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>close</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1ac104918e45f47b7372eab90820b17110" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>create</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1a7cde6bc69c56d58f1015345451ba415e" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>flush</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1aedd585dac74c5058a4bfde2be85beb64" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>get_handle</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1a6ab857af2b60b6ec77b2ed6df9a5dc7b" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>get_path</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1a7ee330a3670471fd16482ae379bdb45a" prot="private" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>handle</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1afcfaf72851e6a4bf5f879c5a1e554403" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>operator bool</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1a9d1267cd372a5ed095f2e49c4e3ca211" prot="private" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>path</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1ad07253657cab84fb7e9daf133eca55ad" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>write</name></member>
      <member refid="classsrslog_1_1file__utils_1_1file_1a09236b8751340ba765e0e7f6642d5c8a" prot="public" virt="non-virtual"><scope>srslog::file_utils::file</scope><name>~file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
