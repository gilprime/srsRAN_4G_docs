<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1manual__event__flag" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::manual_event_flag</compoundname>
    <basecompoundref refid="classsrsgnb_1_1detail_1_1manual__event__common" prot="public" virt="non-virtual">srsgnb::detail::manual_event_common</basecompoundref>
    <includes refid="manual__event_8h" local="no">manual_event.h</includes>
    <innerclass refid="structsrsgnb_1_1manual__event__flag_1_1awaiter__type" prot="public">srsgnb::manual_event_flag::awaiter_type</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1manual__event__flag_1a8c18945cd7d1cd7e1574a004d0965987" prot="public" static="no">
        <type>void</type>
        <definition>using srsgnb::manual_event_flag::result_type =  void</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/manual_event.h" line="85" column="3" bodyfile="include/srsgnb/support/async/manual_event.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1manual__event__flag_1ac57f292cc52d4476f13aa0c1f16e6118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::manual_event_flag::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/manual_event.h" line="91" column="8" bodyfile="include/srsgnb/support/async/manual_event.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1manual__event__flag_1a2ab460814203a7bc09617ea530b529bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1manual__event__flag_1_1awaiter__type" kindref="compound">awaiter_type</ref></type>
        <definition>awaiter_type srsgnb::manual_event_flag::get_awaiter</definition>
        <argsstring>()</argsstring>
        <name>get_awaiter</name>
        <briefdescription>
<para>awaiter interface </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/manual_event.h" line="94" column="16" bodyfile="include/srsgnb/support/async/manual_event.h" bodystart="94" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Awaitable type that can be manually set to one of the states: &quot;set&quot; or &quot;unset&quot; Coroutines will automatically resume when they await on a <ref refid="classsrsgnb_1_1manual__event__flag" kindref="compound">manual_event_flag</ref> that is in &quot;set&quot; state. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::manual_event_flag</label>
        <link refid="classsrsgnb_1_1manual__event__flag"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::detail::manual_event_common</label>
        <link refid="classsrsgnb_1_1detail_1_1manual__event__common"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::manual_event_flag</label>
        <link refid="classsrsgnb_1_1manual__event__flag"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::detail::manual_event_common</label>
        <link refid="classsrsgnb_1_1detail_1_1manual__event__common"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/manual_event.h" line="83" column="1" bodyfile="include/srsgnb/support/async/manual_event.h" bodystart="82" bodyend="95"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a7a9a3f5a0a60ec665869ba2aa3c16928" prot="protected" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>flush</name></member>
      <member refid="classsrsgnb_1_1manual__event__flag_1a2ab460814203a7bc09617ea530b529bb" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>get_awaiter</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1ade3cb35dba2b7a3fc5c124084fc16556" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>is_set</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a7b2e351b506e00cd3cc86f0070647694" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>manual_event_common</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a83166ac98b3f02780a1b1fad3f9c0d9b" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>manual_event_common</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a43808f84a53703c24952d7285f829e51" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a31fc450d13ff75d5ba6b77d75353770f" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>reset</name></member>
      <member refid="classsrsgnb_1_1manual__event__flag_1a8c18945cd7d1cd7e1574a004d0965987" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>result_type</name></member>
      <member refid="classsrsgnb_1_1manual__event__flag_1ac57f292cc52d4476f13aa0c1f16e6118" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>set</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a2bf78c61539ce739efd16f2d99b33a0e" prot="protected" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>state</name></member>
      <member refid="classsrsgnb_1_1detail_1_1manual__event__common_1a227264b9459768624df3ccdd82dd4fc4" prot="public" virt="non-virtual"><scope>srsgnb::manual_event_flag</scope><name>~manual_event_common</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
