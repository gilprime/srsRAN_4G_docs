<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="radio__zmq__rx__channel_8cpp" kind="file" language="C++">
    <compoundname>radio_zmq_rx_channel.cpp</compoundname>
    <includes refid="radio__zmq__rx__channel_8h" local="yes">radio_zmq_rx_channel.h</includes>
    <incdepgraph>
      <node id="71">
        <label>srsgnb/adt/unique_function.h</label>
        <link refid="unique__function_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>atomic</label>
      </node>
      <node id="62">
        <label>system_error</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="75">
        <label>zmq.h</label>
      </node>
      <node id="13">
        <label>limits</label>
      </node>
      <node id="21">
        <label>iterator</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="46">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>stdint.h</label>
      </node>
      <node id="69">
        <label>detail/event_impl.h</label>
        <link refid="event__impl_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>srsgnb/support/error_handling.h</label>
        <link refid="error__handling_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="25">
        <label>cassert</label>
      </node>
      <node id="59">
        <label>srsgnb/adt/detail/type_storage.h</label>
        <link refid="type__storage_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>srsgnb/support/detail/type_list.h</label>
        <link refid="type__list_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stdexcept</label>
      </node>
      <node id="48">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="53">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>srsgnb/adt/detail/operator.h</label>
        <link refid="operator_8h_source"/>
      </node>
      <node id="8">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>srsgnb/support/executors/task_executor.h</label>
        <link refid="task__executor_8h_source"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>srsgnb/srsvec/detail/traits.h</label>
        <link refid="traits_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>srsgnb/support/async/detail/function_signature.h</label>
        <link refid="function__signature_8h_source"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/radio/zmq/radio_zmq_rx_channel.cpp</label>
        <link refid="radio__zmq__rx__channel_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>condition_variable</label>
      </node>
      <node id="43">
        <label>pthread.h</label>
      </node>
      <node id="30">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstdio</label>
      </node>
      <node id="61">
        <label>srsgnb/adt/expected.h</label>
        <link refid="expected_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>tuple</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>awaiter_memory_storage.h</label>
        <link refid="awaiter__memory__storage_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
      <node id="54">
        <label>srsgnb/radio/radio_notification_handler.h</label>
        <link refid="radio__notification__handler_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>srsgnb/support/async/coroutine.h</label>
        <link refid="coroutine_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>utility</label>
      </node>
      <node id="42">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>array</label>
      </node>
      <node id="56">
        <label>srsgnb/support/async/async_queue.h</label>
        <link refid="async__queue_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>srsgnb/support/async/manual_event.h</label>
        <link refid="manual__event_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cerrno</label>
      </node>
      <node id="72">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>srsgnb/gateways/baseband/baseband_gateway_buffer.h</label>
        <link refid="baseband__gateway__buffer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>srsgnb/gateways/baseband/baseband_gateway_base.h</label>
        <link refid="baseband__gateway__base_8h_source"/>
      </node>
      <node id="50">
        <label>cstddef</label>
      </node>
      <node id="57">
        <label>srsgnb/adt/circular_buffer.h</label>
        <link refid="circular__buffer_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="41">
        <label>chrono</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>thread</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>srsgnb/radio/radio_base.h</label>
        <link refid="radio__base_8h_source"/>
      </node>
      <node id="3">
        <label>radio_zmq_rx_channel_fsm.h</label>
        <link refid="radio__zmq__rx__channel__fsm_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srsvec/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>type_traits</label>
      </node>
      <node id="74">
        <label>set</label>
      </node>
      <node id="2">
        <label>radio_zmq_rx_channel.h</label>
        <link refid="radio__zmq__rx__channel_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>complex</label>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="34">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cstring</label>
      </node>
      <node id="47">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="27">
        <label>srsgnb/srsvec/copy.h</label>
        <link refid="copy_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;radio_zmq_rx_channel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;int&gt;<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a7cf76cf2a4c75a2c606a894705d73392" kindref="member">radio_zmq_rx_channel::VALID_SOCKET_TYPES</ref><sp/>=<sp/>{ZMQ_REQ};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">radio_zmq_rx_channel::radio_zmq_rx_channel(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zmq_context,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel_description&amp;<sp/><sp/>config,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__notification__handler" kindref="compound">radio_notification_handler</ref>&amp;<sp/>notification_handler_,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1task__executor" kindref="compound">task_executor</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async_executor_)<sp/>:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>stream_id(config.stream_id),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>channel_id(config.channel_id),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>socket_type(config.socket_type),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>logger(srslog::fetch_basic_logger(config.channel_id_str,<sp/>false)),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>circular_buffer(config.buffer_size),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>buffer(config.buffer_size<sp/>*<sp/>sizeof(<ref refid="namespacesrsgnb_1a76ff57ca7c8111aa8936364c876c0940" kindref="member">radio_sample_type</ref>)),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>notification_handler(notification_handler_),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>async_executor(async_executor_)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>log<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.<ref refid="classsrslog_1_1detail_1_1logger__impl_1a70bfaf5c4255d339daae19d8d7194b23" kindref="member">set_level</ref>(srslog::str_to_basic_level(config.log_level));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>the<sp/>socket<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(VALID_SOCKET_TYPES.count(config.socket_type)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>receiver<sp/>type<sp/>{}<sp/>({}).&quot;</highlight><highlight class="normal">,<sp/>config.socket_type,<sp/>config.address);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>sock<sp/>=<sp/>zmq_socket(<ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a0230c7a98ea4c4177416afda04323ee1" kindref="member">zmq_context</ref>,<sp/>config.socket_type);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>transmitter<sp/>socket<sp/>({}).<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>config.address,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.info(</highlight><highlight class="stringliteral">&quot;Connecting<sp/>to<sp/>address<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>config.address);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zmq_connect(sock,<sp/>config.address.c_str())<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>transmitter<sp/>socket<sp/>({}).<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>config.address,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>timeout<sp/>is<sp/>set...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.trx_timeout_ms)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/>config.trx_timeout_ms;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>receive<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zmq_setsockopt(sock,<sp/>ZMQ_RCVTIMEO,<sp/>&amp;timeout,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(timeout))<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>receive<sp/>timeout<sp/>on<sp/>tx<sp/>socket.<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>send<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zmq_setsockopt(sock,<sp/>ZMQ_SNDTIMEO,<sp/>&amp;timeout,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(timeout))<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>send<sp/>timeout<sp/>on<sp/>tx<sp/>socket.<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>linger<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/>config.linger_timeout_ms;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zmq_setsockopt(sock,<sp/>ZMQ_LINGER,<sp/>&amp;timeout,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(timeout))<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__session__zmq__impl_1a2c19948331d4192f126ce3d2ad735176" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>linger<sp/>timeout<sp/>on<sp/>tx<sp/>socket.<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicate<sp/>the<sp/>initialization<sp/>was<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>state_fsm.init_successful();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>async_executor.defer([</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/>run_async();<sp/>});</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">radio_zmq_rx_channel::~radio_zmq_rx_channel()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>socket<sp/>if<sp/>opened.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a76248546c79db0772ec00c20d962f21a" kindref="member">sock</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq_close(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a76248546c79db0772ec00c20d962f21a" kindref="member">sock</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a76248546c79db0772ec00c20d962f21a" kindref="member">sock</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radio_zmq_rx_channel::send_request()</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>Transmit<sp/>request<sp/>is<sp/>socket<sp/>type<sp/>is<sp/>REPLY<sp/>and<sp/>no<sp/>request<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a4dad8a8a1f36bf6cee4936b77978f217" kindref="member">socket_type</ref><sp/>==<sp/>ZMQ_REQ)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Receive<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dummy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>n<sp/><sp/><sp/><sp/><sp/>=<sp/>zmq_send(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a76248546c79db0772ec00c20d962f21a" kindref="member">sock</ref>,<sp/>&amp;dummy,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dummy),<sp/>0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Socket<sp/>sent<sp/>request.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1afbad0597c4ab56deb6b1b45d97b051d9" kindref="member">request_sent</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>happened.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>zmq_errno();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>EFSM<sp/>||<sp/>err<sp/>==<sp/>EAGAIN)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>timeout<sp/>and<sp/>FSM<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Exception<sp/>to<sp/>send<sp/>request.<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>error<sp/>cannot<sp/>be<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Socket<sp/>failed<sp/>to<sp/>send<sp/>request.<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1aa543856f9dcece814c0bf4a9f45af3ab" kindref="member">on_error</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>other<sp/>socket<sp/>types<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radio_zmq_rx_channel::receive_response()</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>send<sp/>samples<sp/>over<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacesrsgnb_1a76ff57ca7c8111aa8936364c876c0940" kindref="member">radio_sample_type</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbytes<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1add3a4673af4ea5689726fc7f8b94cfc4" kindref="member">buffer</ref>.size();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>zmq_recv(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a76248546c79db0772ec00c20d962f21a" kindref="member">sock</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1add3a4673af4ea5689726fc7f8b94cfc4" kindref="member">buffer</ref>.data(),<sp/>nbytes,<sp/>ZMQ_DONTWAIT);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>an<sp/>error<sp/>occurred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>happened.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>zmq_errno();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>EFSM<sp/>||<sp/>err<sp/>==<sp/>EAGAIN)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>timeout<sp/>and<sp/>FSM<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>error<sp/>cannot<sp/>be<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Socket<sp/>failed<sp/>to<sp/>receive<sp/>DATA.<sp/>{}.&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1aa543856f9dcece814c0bf4a9f45af3ab" kindref="member">on_error</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>received<sp/>number<sp/>of<sp/>bytes<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>%<sp/>sample_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.error(</highlight><highlight class="stringliteral">&quot;Socket<sp/>failed<sp/>to<sp/>receive<sp/>DATA.<sp/>Invalid<sp/>number<sp/>of<sp/>bytes<sp/>{}%{}={}.&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>sample_size,<sp/>n<sp/>%<sp/>sample_size);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1aa543856f9dcece814c0bf4a9f45af3ab" kindref="member">on_error</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nsamples<sp/>=<sp/>n<sp/>/<sp/>sample_size;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Socket<sp/>received<sp/>{}<sp/>samples.&quot;</highlight><highlight class="normal">,<sp/>nsamples);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>buffer<sp/>size<sp/>has<sp/>not<sp/>been<sp/>exceeded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>report_fatal_error_if_not(nsamples<sp/>&lt;=<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1add3a4673af4ea5689726fc7f8b94cfc4" kindref="member">buffer</ref>.size(),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Buffer<sp/>overflow.<sp/>Buffer<sp/>size<sp/>({})<sp/>is<sp/>not<sp/>enough<sp/>for<sp/>the<sp/>received<sp/>number<sp/>of<sp/>samples<sp/>({})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1add3a4673af4ea5689726fc7f8b94cfc4" kindref="member">buffer</ref>.size(),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsamples);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;<sp/>count<sp/>!=<sp/>nsamples;<sp/>++count)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a3be9d6e89b1e54b6ac2a5c518389f62c" kindref="member">is_running</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a4e6fb4ec5b505fb38cdfd5d97c3c8765" kindref="member">circular_buffer</ref>.try_push(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1add3a4673af4ea5689726fc7f8b94cfc4" kindref="member">buffer</ref>[count]))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>buffer<sp/>overflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1radio__notification__handler_1_1event__description" kindref="compound">radio_notification_handler::event_description</ref><sp/>event;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="structsrsgnb_1_1radio__notification__handler_1_1event__description_1aedcdaea9d18dbefd070a6c5f9fbef384" kindref="member">stream_id</ref><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6e1b6c8f662691fb190457acb5597393" kindref="member">stream_id</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.channel_id<sp/>=<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6158cefcc48020b3aff921e124459ce1" kindref="member">channel_id</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.source<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__notification__handler_1_1event__source_1a5520dfc44f2b1c146c83297f03d3fad8a2869e02c18d307a390d590c90be7db3b" kindref="member">radio_notification_handler::event_source::RECEIVE</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1radio__notification__handler_1_1event__type_1a45d1eb339c65c5a0dd3739035a4c07c0ac717fd5dfb0252bb95219951740d8376" kindref="member">radio_notification_handler::event_type::OVERFLOW</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a3afea12cc1ea6343be0b7fd15606c60e" kindref="member">notification_handler</ref>.<ref refid="classsrsgnb_1_1radio__notification__handler_1a3573fbe3f45693f891e09ba19531d652" kindref="member">on_radio_rt_event</ref>(event);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>some<sp/>time<sp/>before<sp/>trying<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sleep_for_ms<sp/>=<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a68bf10262a5597aa29569bf943f728ac" kindref="member">CIRC_BUFFER_TRY_PUSH_SLEEP_FOR_MS</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(sleep_for_ms));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>successful<sp/>transition<sp/>to<sp/>wait<sp/>for<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a965abc0db65f118eeedc2c773e9a47b1" kindref="member">data_received</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radio_zmq_rx_channel::run_async()</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transmit<sp/>request<sp/>if<sp/>it<sp/>has<sp/>no<sp/>pending<sp/>response,<sp/>otherwise<sp/>receive<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1af2fda4c81a0e9a400a432af567ea6622" kindref="member">has_pending_response</ref>())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>send_request();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>receive_response();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Feedback<sp/>task<sp/>if<sp/>not<sp/>stopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a3be9d6e89b1e54b6ac2a5c518389f62c" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1af59ed02e9784cb83709d01bc9eae183c" kindref="member">async_executor</ref>.<ref refid="classsrsgnb_1_1task__executor_1aef95524aeb46a16f2d4cc8413cbfd18c" kindref="member">defer</ref>([</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{<sp/>run_async();<sp/>});</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Stopped<sp/>asynchronous<sp/>task.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a6d3f5e7124837b80d635f2ef97cdee0f" kindref="member">async_task_stopped</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radio_zmq_rx_channel::receive(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;radio_sample_type&gt;</ref><sp/>data)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Requested<sp/>to<sp/>receive<sp/>{}<sp/>samples.&quot;</highlight><highlight class="normal">,<sp/>data.size());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>sample...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacesrsgnb_1a76ff57ca7c8111aa8936364c876c0940" kindref="member">radio_sample_type</ref>&amp;<sp/>sample<sp/>:<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>push<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a3be9d6e89b1e54b6ac2a5c518389f62c" kindref="member">is_running</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a4e6fb4ec5b505fb38cdfd5d97c3c8765" kindref="member">circular_buffer</ref>.try_pop(sample))<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>some<sp/>time<sp/>before<sp/>trying<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sleep_for_ms<sp/>=<sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1addc7d7a8219ff7d95300e6b69dcb5b33" kindref="member">CIRC_BUFFER_TRY_POP_SLEEP_FOR_MS</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(sleep_for_ms));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radio_zmq_rx_channel::stop()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Stopping...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a039bc33e0704677483e2069d50d2a931" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>radio_zmq_rx_channel::wait_stop()</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a9c16ff8894597b99c9f84d4195255881" kindref="member">state_fsm</ref>.<ref refid="classsrsgnb_1_1radio__zmq__rx__channel__fsm_1a41bf94f6ac607a0ae59999993af4f44d" kindref="member">wait_stop</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1radio__zmq__rx__channel_1a6af1b0f03bacbbbdeb6c28e71cb03b13" kindref="member">logger</ref>.debug(</highlight><highlight class="stringliteral">&quot;Stopped<sp/>successfully.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/radio/zmq/radio_zmq_rx_channel.cpp"/>
  </compounddef>
</doxygen>
