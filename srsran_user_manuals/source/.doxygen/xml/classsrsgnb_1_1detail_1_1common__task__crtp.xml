<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1detail_1_1common__task__crtp" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::detail::common_task_crtp</compoundname>
    <includes refid="base__task_8h" local="no">base_task.h</includes>
    <templateparamlist>
      <param>
        <type>typename Derived</type>
      </param>
      <param>
        <type>typename Result</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1common__task__crtp_1af66e65a9158a476fb8b34e2c20ff343b" prot="public" static="no">
        <type>Result</type>
        <definition>using srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::result_type =  Result</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="34" column="3" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a45261fe840f2cbe9b8b10d370efd495e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Checks if async task has an handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="37" column="8" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="37" bodyend="37"/>
        <referencedby refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a23bc71549cdeb4eca7f747cd5a4561d9" compoundref="base__task_8h" startline="40" endline="40">srsgnb::detail::common_task_crtp&lt; eager_async_task&lt; srsgnb::expected &gt;, srsgnb::expected &gt;::ready</referencedby>
        <referencedby refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a4ec18c97f93d9f0b1143109ac0f9adb0" compoundref="base__task_8h" startline="44" endline="48">srsgnb::detail::common_task_crtp&lt; eager_async_task&lt; srsgnb::expected &gt;, srsgnb::expected &gt;::get</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a23bc71549cdeb4eca7f747cd5a4561d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::ready</definition>
        <argsstring>() const</argsstring>
        <name>ready</name>
        <briefdescription>
<para>Returns true if base_task is complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="40" column="8" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a4ec18c97f93d9f0b1143109ac0f9adb0" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Res</type>
            <defval>std::decay_t&lt;result_type&gt;</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; not std::is_same&lt; Res, void &gt;::value, bool &gt;</type>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>const Res &amp;</type>
        <definition>const Res&amp; srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::get</definition>
        <argsstring>() const &amp;</argsstring>
        <name>get</name>
        <briefdescription>
<para>Called to get result of task once it is complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="44" column="13" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a4c725899bf9f3e428d98930cd3211008" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Res</type>
            <defval>std::decay_t&lt;result_type&gt;</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; not std::is_same&lt; Res, void &gt;::value, bool &gt;</type>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type>Res</type>
        <definition>Res srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::get</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="50" column="7" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1ac7dccc55624ce69a41d5bf2f4fb983ad" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::await_ready</definition>
        <argsstring>() const noexcept</argsstring>
        <name>await_ready</name>
        <briefdescription>
<para>Awaiter interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="57" column="8" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a39cf42899cbebf7ec23295c4a54ee4b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Res</type>
            <defval>result_type</defval>
          </param>
        </templateparamlist>
        <type>detail::enable_if_nonvoid&lt; Res &gt;</type>
        <definition>detail::enable_if_nonvoid&lt;Res&gt; srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::await_resume</definition>
        <argsstring>()</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="59" column="29" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a6d2af1b6607352357311df7a54c2894b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Res</type>
            <defval>result_type</defval>
          </param>
        </templateparamlist>
        <type>detail::enable_if_void&lt; Res &gt;</type>
        <definition>detail::enable_if_void&lt;Res&gt; srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::await_resume</definition>
        <argsstring>()</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="65" column="26" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1a79d656848d147e9f28c5f994c36ed5b1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived&amp; srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::derived</definition>
        <argsstring>()</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="71" column="17" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1common__task__crtp_1ade5fa3006348b7e87467500506aedcef" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Derived &amp;</type>
        <definition>const Derived&amp; srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;::derived</definition>
        <argsstring>() const</argsstring>
        <name>derived</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/detail/base_task.h" line="72" column="17" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Common functionality to lazy and eager async tasks. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::detail::common_task_crtp&lt; Derived, Result &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1common__task__crtp"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/detail/base_task.h" line="32" column="1" bodyfile="include/srsgnb/support/async/detail/base_task.h" bodystart="31" bodyend="73"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1ac7dccc55624ce69a41d5bf2f4fb983ad" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>await_ready</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a39cf42899cbebf7ec23295c4a54ee4b6" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>await_resume</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a6d2af1b6607352357311df7a54c2894b" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>await_resume</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a79d656848d147e9f28c5f994c36ed5b1" prot="private" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>derived</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1ade5fa3006348b7e87467500506aedcef" prot="private" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>derived</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a45261fe840f2cbe9b8b10d370efd495e" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a4ec18c97f93d9f0b1143109ac0f9adb0" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>get</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a4c725899bf9f3e428d98930cd3211008" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>get</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1a23bc71549cdeb4eca7f747cd5a4561d9" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>ready</name></member>
      <member refid="classsrsgnb_1_1detail_1_1common__task__crtp_1af66e65a9158a476fb8b34e2c20ff343b" prot="public" virt="non-virtual"><scope>srsgnb::detail::common_task_crtp</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
