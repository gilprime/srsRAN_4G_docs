<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="polar__interleaver__impl_8cpp" kind="file" language="C++">
    <compoundname>polar_interleaver_impl.cpp</compoundname>
    <includes refid="polar__interleaver__impl_8h" local="yes">polar_interleaver_impl.h</includes>
    <incdepgraph>
      <node id="17">
        <label>functional</label>
      </node>
      <node id="10">
        <label>limits</label>
      </node>
      <node id="18">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>stdexcept</label>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="5">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/phy/upper/channel_coding/polar/polar_interleaver_impl.cpp</label>
        <link refid="polar__interleaver__impl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/phy/upper/channel_coding/polar/polar_interleaver.h</label>
        <link refid="polar__interleaver_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="14">
        <label>array</label>
      </node>
      <node id="7">
        <label>cerrno</label>
      </node>
      <node id="4">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>cstring</label>
      </node>
      <node id="13">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>polar_interleaver_impl.h</label>
        <link refid="polar__interleaver__impl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;polar_interleaver_impl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;uint8_t,<sp/>polar_interleaver_impl::K_MAX_IL&gt;<sp/>polar_interleaver_impl::pattern<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/>2,<sp/><sp/><sp/>4,<sp/><sp/><sp/>7,<sp/><sp/><sp/>9,<sp/><sp/><sp/>14,<sp/><sp/>19,<sp/><sp/>20,<sp/><sp/>24,<sp/><sp/>25,<sp/><sp/>26,<sp/><sp/>28,<sp/><sp/>31,<sp/><sp/>34,<sp/><sp/>42,<sp/><sp/>45,<sp/><sp/>49,<sp/><sp/>50,<sp/><sp/>51,<sp/><sp/>53,<sp/><sp/>54,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>56,<sp/><sp/>58,<sp/><sp/>59,<sp/><sp/>61,<sp/><sp/>62,<sp/><sp/>65,<sp/><sp/>66,<sp/><sp/>67,<sp/><sp/>69,<sp/><sp/>70,<sp/><sp/>71,<sp/><sp/>72,<sp/><sp/>76,<sp/><sp/>77,<sp/><sp/>81,<sp/><sp/>82,<sp/><sp/>83,<sp/><sp/>87,<sp/><sp/>88,<sp/><sp/>89,<sp/><sp/>91,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>93,<sp/><sp/>95,<sp/><sp/>98,<sp/><sp/>101,<sp/>104,<sp/>106,<sp/>108,<sp/>110,<sp/>111,<sp/>113,<sp/>115,<sp/>118,<sp/>119,<sp/>120,<sp/>122,<sp/>123,<sp/>126,<sp/>127,<sp/>129,<sp/>132,<sp/>134,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>138,<sp/>139,<sp/>140,<sp/>1,<sp/><sp/><sp/>3,<sp/><sp/><sp/>5,<sp/><sp/><sp/>8,<sp/><sp/><sp/>10,<sp/><sp/>15,<sp/><sp/>21,<sp/><sp/>27,<sp/><sp/>29,<sp/><sp/>32,<sp/><sp/>35,<sp/><sp/>43,<sp/><sp/>46,<sp/><sp/>52,<sp/><sp/>55,<sp/><sp/>57,<sp/><sp/>60,<sp/><sp/>63,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>68,<sp/><sp/>73,<sp/><sp/>78,<sp/><sp/>84,<sp/><sp/>90,<sp/><sp/>92,<sp/><sp/>94,<sp/><sp/>96,<sp/><sp/>99,<sp/><sp/>102,<sp/>105,<sp/>107,<sp/>109,<sp/>112,<sp/>114,<sp/>116,<sp/>121,<sp/>124,<sp/>128,<sp/>130,<sp/>133,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>135,<sp/>141,<sp/>6,<sp/><sp/><sp/>11,<sp/><sp/>16,<sp/><sp/>22,<sp/><sp/>30,<sp/><sp/>33,<sp/><sp/>36,<sp/><sp/>44,<sp/><sp/>47,<sp/><sp/>64,<sp/><sp/>74,<sp/><sp/>79,<sp/><sp/>85,<sp/><sp/>97,<sp/><sp/>100,<sp/>103,<sp/>117,<sp/>125,<sp/>131,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>136,<sp/>142,<sp/>12,<sp/><sp/>17,<sp/><sp/>23,<sp/><sp/>37,<sp/><sp/>48,<sp/><sp/>75,<sp/><sp/>80,<sp/><sp/>86,<sp/><sp/>137,<sp/>143,<sp/>13,<sp/><sp/>18,<sp/><sp/>38,<sp/><sp/>144,<sp/>39,<sp/><sp/>145,<sp/>40,<sp/><sp/>146,<sp/>41,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>147,<sp/>148,<sp/>149,<sp/>150,<sp/>151,<sp/>152,<sp/>153,<sp/>154,<sp/>155,<sp/>156,<sp/>157,<sp/>158,<sp/>159,<sp/>160,<sp/>161,<sp/>162,<sp/>163};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classsrsgnb_1_1polar__interleaver__impl_1aa710efeb13534f36c35ead60df52ac95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1polar__interleaver__impl_1aa710efeb13534f36c35ead60df52ac95" kindref="member">polar_interleaver_impl::interleave</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;uint8_t&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polar_interleaver_direction<sp/>direction)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>assert(in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>()<sp/>==<sp/>out.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>K<sp/>=<sp/>in.<ref refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>uint32_t<sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>K_MAX_IL;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern[m]<sp/>&gt;=<sp/>K_MAX_IL<sp/>-<sp/>K)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pi_k<sp/>=<sp/>pattern[m]<sp/>-<sp/>(K_MAX_IL<sp/>-<sp/>K);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>polar_interleaver_direction::tx)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[k]<sp/>=<sp/>in[pi_k];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[pi_k]<sp/>=<sp/>in[k];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/phy/upper/channel_coding/polar/polar_interleaver_impl.cpp"/>
  </compounddef>
</doxygen>
