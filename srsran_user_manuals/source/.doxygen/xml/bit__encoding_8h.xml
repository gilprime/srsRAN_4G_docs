<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bit__encoding_8h" kind="file" language="C++">
    <compoundname>bit_encoding.h</compoundname>
    <includes refid="byte__buffer_8h" local="yes">srsgnb/adt/byte_buffer.h</includes>
    <includes refid="format_8h" local="yes">srsgnb/srslog/bundled/fmt/format.h</includes>
    <includedby refid="bit__encoding_8cpp" local="yes">lib/support/bit_encoding.cpp</includedby>
    <incdepgraph>
      <node id="42">
        <label>atomic</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="17">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cassert</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="22">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>pthread.h</label>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="41">
        <label>tuple</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="32">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cerrno</label>
      </node>
      <node id="1">
        <label>include/srsgnb/support/bit_encoding.h</label>
        <link refid="bit__encoding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>cstddef</label>
      </node>
      <node id="31">
        <label>chrono</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classsrsgnb_1_1bit__encoder" prot="public">srsgnb::bit_encoder</innerclass>
    <innerclass refid="classsrsgnb_1_1bit__decoder" prot="public">srsgnb::bit_decoder</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1bit__encoder_01_4" prot="public">fmt::formatter&lt; srsgnb::bit_encoder &gt;</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1bit__decoder_01_4" prot="public">fmt::formatter&lt; srsgnb::bit_decoder &gt;</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/byte_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/bundled/fmt/format.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classsrsgnb_1_1bit__encoder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1bit__encoder" kindref="compound">bit_encoder</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder" kindref="compound">bit_encoder</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>:<sp/><ref refid="classsrsgnb_1_1bit__encoder_1a4164fa2e1baf08669b5784f61682fdf4" kindref="member">writer</ref>(<ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classsrsgnb_1_1bit__encoder_1a30f89e1626c2dc004b4d65dd8b8f83e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">srsgnb::byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a30f89e1626c2dc004b4d65dd8b8f83e2" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a4164fa2e1baf08669b5784f61682fdf4" kindref="member">writer</ref>.<ref refid="classsrsgnb_1_1byte__buffer__writer_1abfef82559acaf45bf3e3c5a82e808762" kindref="member">view</ref>();<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classsrsgnb_1_1bit__encoder_1a19a840e1308218aaddd0822349dbf904" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a19a840e1308218aaddd0822349dbf904" kindref="member">nof_bytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a4164fa2e1baf08669b5784f61682fdf4" kindref="member">writer</ref>.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a404c62982f2275bd178144e0b4727ab1" kindref="member">length</ref>();<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classsrsgnb_1_1bit__encoder_1adc353bc7bf3f1fdd2aeedaed4aea29dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1adc353bc7bf3f1fdd2aeedaed4aea29dd" kindref="member">nof_bits</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8U<sp/>*<sp/>(<ref refid="classsrsgnb_1_1bit__encoder_1a4164fa2e1baf08669b5784f61682fdf4" kindref="member">writer</ref>.<ref refid="classsrsgnb_1_1byte__buffer__writer_1a404c62982f2275bd178144e0b4727ab1" kindref="member">length</ref>()<sp/>-<sp/>(<ref refid="classsrsgnb_1_1bit__encoder_1a16dbec0261bd4e7bfc5a13f920bd0fbf" kindref="member">offset</ref><sp/>==<sp/>0U<sp/>?<sp/>0U<sp/>:<sp/>1U))<sp/>+<sp/><ref refid="classsrsgnb_1_1bit__encoder_1a16dbec0261bd4e7bfc5a13f920bd0fbf" kindref="member">offset</ref>;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classsrsgnb_1_1bit__encoder_1ad094259be339bd8e3ce5ae16481971e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1ad094259be339bd8e3ce5ae16481971e8" kindref="member">next_bit_offset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a16dbec0261bd4e7bfc5a13f920bd0fbf" kindref="member">offset</ref>;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a270145bd520eb6c979f62a2613583ef8" kindref="member">pack</ref>(uint64_t<sp/>val,<sp/>uint32_t<sp/>n_bits);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a1ffc996ee85fc96e2e18b172dc490b05" kindref="member">pack_bytes</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">srsgnb::span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a1ffc996ee85fc96e2e18b172dc490b05" kindref="member">pack_bytes</ref>(<ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">srsgnb::byte_buffer_view</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a31649128ccc1b3828a7943a7cb0140a8" kindref="member">align_bytes_zero</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classsrsgnb_1_1bit__encoder_1a4164fa2e1baf08669b5784f61682fdf4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer" kindref="compound">srsgnb::byte_buffer_writer</ref><sp/><ref refid="classsrsgnb_1_1bit__encoder_1a4164fa2e1baf08669b5784f61682fdf4" kindref="member">writer</ref>;</highlight></codeline>
<codeline lineno="61" refid="classsrsgnb_1_1bit__encoder_1a16dbec0261bd4e7bfc5a13f920bd0fbf" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="classsrsgnb_1_1bit__encoder_1a16dbec0261bd4e7bfc5a13f920bd0fbf" kindref="member">offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classsrsgnb_1_1bit__decoder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1bit__decoder" kindref="compound">bit_decoder</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder" kindref="compound">bit_decoder</ref>(<ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">srsgnb::byte_buffer_view</ref><sp/>buffer_)<sp/>:<sp/>buffer(buffer_),<sp/>it(buffer.begin())<sp/>{}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classsrsgnb_1_1bit__decoder_1a4e5bc56c9b20cfdc25a3ad5e51abf1b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">srsgnb::byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1bit__decoder_1a4e5bc56c9b20cfdc25a3ad5e51abf1b3" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classsrsgnb_1_1bit__decoder_1af3c53d7f20dee84ebef076ad62e47c78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1af3c53d7f20dee84ebef076ad62e47c78" kindref="member">nof_bytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(it<sp/>-<sp/>buffer.begin())<sp/>+<sp/>(offset<sp/>!=<sp/>0<sp/>?<sp/>1U<sp/>:<sp/>0U);<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classsrsgnb_1_1bit__decoder_1aea12581ac2fd050166b6199a79fde2b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1aea12581ac2fd050166b6199a79fde2b7" kindref="member">nof_bits</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset<sp/>+<sp/>8U<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(it<sp/>-<sp/>buffer.begin());<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classsrsgnb_1_1bit__decoder_1acc8738bf068f7a1c88da7985f113a41c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1acc8738bf068f7a1c88da7985f113a41c" kindref="member">next_bit_offset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1ab73f3df8bc31f0c892fac7f0d06f4904" kindref="member">advance_bits</ref>(uint32_t<sp/>n_bits);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1a861191dac89bf701464e5a253fc006aa" kindref="member">unpack</ref>(T&amp;<sp/>val,<sp/>uint32_t<sp/>n_bits);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1aecbe1df2b95b00261b83e2b2caf96edf" kindref="member">unpack_bytes</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">srsgnb::span&lt;uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder_1aedc01e0c8d8d7c12037d3edf6c734719" kindref="member">align_bytes</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">srsgnb::byte_buffer_view</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">srsgnb::byte_buffer::const_iterator</ref><sp/>it;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="114" refid="structfmt_1_1formatter_3_01srsgnb_1_1bit__encoder_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::bit_encoder&gt;<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.begin();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__encoder" kindref="compound">srsgnb::bit_encoder</ref>&amp;<sp/>s,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classsrsgnb_1_1bit__encoder_1ad094259be339bd8e3ce5ae16481971e8" kindref="member">next_bit_offset</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:b}&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classsrsgnb_1_1bit__encoder_1a30f89e1626c2dc004b4d65dd8b8f83e2" kindref="member">data</ref>());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:b}&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classsrsgnb_1_1bit__encoder_1a30f89e1626c2dc004b4d65dd8b8f83e2" kindref="member">data</ref>().<ref refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" kindref="member">view</ref>(0,<sp/>s.<ref refid="classsrsgnb_1_1bit__encoder_1a19a840e1308218aaddd0822349dbf904" kindref="member">nof_bytes</ref>()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>last_byte<sp/>=<sp/>s.<ref refid="classsrsgnb_1_1bit__encoder_1a30f89e1626c2dc004b4d65dd8b8f83e2" kindref="member">data</ref>()[s.<ref refid="classsrsgnb_1_1bit__encoder_1a19a840e1308218aaddd0822349dbf904" kindref="member">nof_bytes</ref>()<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>last_byte<sp/>&gt;&gt;<sp/>(8U<sp/>-<sp/>s.<ref refid="classsrsgnb_1_1bit__encoder_1ad094259be339bd8e3ce5ae16481971e8" kindref="member">next_bit_offset</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{:0&gt;{}b}&quot;</highlight><highlight class="normal">,<sp/>last_byte,<sp/>s.<ref refid="classsrsgnb_1_1bit__encoder_1ad094259be339bd8e3ce5ae16481971e8" kindref="member">next_bit_offset</ref>());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.out();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="138" refid="structfmt_1_1formatter_3_01srsgnb_1_1bit__decoder_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::bit_decoder&gt;<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.begin();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1bit__decoder" kindref="compound">srsgnb::bit_decoder</ref>&amp;<sp/>s,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.<ref refid="classsrsgnb_1_1bit__decoder_1acc8738bf068f7a1c88da7985f113a41c" kindref="member">next_bit_offset</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:b}&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1a4e5bc56c9b20cfdc25a3ad5e51abf1b3" kindref="member">data</ref>().<ref refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" kindref="member">view</ref>(0,<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1af3c53d7f20dee84ebef076ad62e47c78" kindref="member">nof_bytes</ref>()));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:b}&quot;</highlight><highlight class="normal">,<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1a4e5bc56c9b20cfdc25a3ad5e51abf1b3" kindref="member">data</ref>().<ref refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" kindref="member">view</ref>(0,<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1af3c53d7f20dee84ebef076ad62e47c78" kindref="member">nof_bytes</ref>()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>last_byte<sp/>=<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1a4e5bc56c9b20cfdc25a3ad5e51abf1b3" kindref="member">data</ref>()[s.<ref refid="classsrsgnb_1_1bit__decoder_1af3c53d7f20dee84ebef076ad62e47c78" kindref="member">nof_bytes</ref>()<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_byte<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>last_byte<sp/>&gt;&gt;<sp/>(8U<sp/>-<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1acc8738bf068f7a1c88da7985f113a41c" kindref="member">next_bit_offset</ref>());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmt::format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>{:0&gt;{}b}&quot;</highlight><highlight class="normal">,<sp/>last_byte,<sp/>s.<ref refid="classsrsgnb_1_1bit__decoder_1acc8738bf068f7a1c88da7985f113a41c" kindref="member">next_bit_offset</ref>());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.out();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/support/bit_encoding.h"/>
  </compounddef>
</doxygen>
