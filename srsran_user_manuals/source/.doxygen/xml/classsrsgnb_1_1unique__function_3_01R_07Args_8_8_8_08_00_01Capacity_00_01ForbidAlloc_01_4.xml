<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class R</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>Capacity</declname>
        <defname>Capacity</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>ForbidAlloc</declname>
        <defname>ForbidAlloc</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a0b7c6426a5310fc23e88e457fe27fc24" prot="private" static="no">
        <type>std::aligned_storage_t&lt; Capacity, alignof(std::max_align_t)&gt;</type>
        <definition>using srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::storage_t =  std::aligned_storage_t&lt;Capacity, alignof(std::max_align_t)&gt;</definition>
        <argsstring></argsstring>
        <name>storage_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="121" column="3" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a0fe83ef409e246bb25b3e67724cad47c" prot="private" static="no">
        <type><ref refid="classsrsgnb_1_1task__details_1_1oper__table__t" kindref="compound">task_details::oper_table_t</ref>&lt; R, Args... &gt;</type>
        <definition>using srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::oper_table_t =  task_details::oper_table_t&lt;R, Args...&gt;</definition>
        <argsstring></argsstring>
        <name>oper_table_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="122" column="3" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1add2a2a93eb35ca60381d1531a1d33419" prot="private" static="yes" mutable="no">
        <type>const <ref refid="classsrsgnb_1_1task__details_1_1empty__table__t" kindref="compound">task_details::empty_table_t</ref>&lt; R, Args... &gt;</type>
        <definition>const task_details::empty_table_t&lt; R, Args... &gt; srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::empty_table</definition>
        <argsstring></argsstring>
        <name>empty_table</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="123" column="44" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad07b8c8b6298f7bab9b3f4f59204fa37" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <initializer>= Capacity</initializer>
        <briefdescription>
<para>size of buffer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="126" column="27" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1adf492365880626c66391cb199038c24e" prot="public" static="no" mutable="yes">
        <type>storage_t</type>
        <definition>storage_t srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="178" column="23" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a6754bb9af0b1369ee88018e0275cbe2e" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="179" column="22" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1acfe2854fe9a712607823fe8de705dcff" prot="private" static="no" mutable="no">
        <type>union <ref refid="classsrsgnb_1_1unique__function" kindref="compound">srsgnb::unique_function</ref>&lt; R(Args...), Capacity, ForbidAlloc &gt;::@7</type>
        <definition>union srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::@7 srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::@8</definition>
        <argsstring></argsstring>
        <name>@8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="180" column="3"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a73c4f1194a1cac3386d6297a2885eb04" prot="private" static="no" mutable="no">
        <type>const <ref refid="classsrsgnb_1_1task__details_1_1oper__table__t" kindref="compound">oper_table_t</ref> *</type>
        <definition>const oper_table_t* srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::oper_ptr</definition>
        <argsstring></argsstring>
        <name>oper_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="181" column="22" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1acd12865c68008daf9bab82040b3806bf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::unique_function</definition>
        <argsstring>() noexcept</argsstring>
        <name>unique_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="128" column="13" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad6dbb08453256bc83cc5c64042075353" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>task_details::enable_if_small_capture&lt; T, <ref refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad07b8c8b6298f7bab9b3f4f59204fa37" kindref="member">capacity</ref> &gt;</type>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::unique_function</definition>
        <argsstring>(T &amp;&amp;function) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</argsstring>
        <name>unique_function</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Called when T capture fits the <ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref> small buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="132" column="3" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad6dbb08453256bc83cc5c64042075353" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>task_details::enable_if_big_capture&lt; T, <ref refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad07b8c8b6298f7bab9b3f4f59204fa37" kindref="member">capacity</ref> &gt;</type>
            <defval>true</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::unique_function</definition>
        <argsstring>(T &amp;&amp;function) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</argsstring>
        <name>unique_function</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Called when T capture does not fit the <ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref> small buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="142" column="3" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="142" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a1bed4fb7dd70dbc5267d035bd8476515" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::unique_function</definition>
        <argsstring>(unique_function &amp;&amp;other) noexcept</argsstring>
        <name>unique_function</name>
        <param>
          <type><ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="153" column="3" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a3cb19abdd101a3755beca17217d309c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::~unique_function</definition>
        <argsstring>()</argsstring>
        <name>~unique_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="159" column="3" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ab5049dbe5b542fb2d32bb63080d5f5b1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref> &amp;</type>
        <definition>unique_function&amp; srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::operator=</definition>
        <argsstring>(unique_function &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="161" column="19" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="161" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a1c962b63c10ced244d8b1805f2eddecf" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>R</type>
        <definition>R srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::operator()</definition>
        <argsstring>(Args... args) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Call operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="171" column="5" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1aa705032a07941a8084ba94818dc1eee9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::is_empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="173" column="8" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a20c118239d362573d1a2811127aee8be" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;::is_in_small_buffer</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_in_small_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/unique_function.h" line="174" column="8" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="174" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>srsgnb::task_details::oper_table_t&lt; R, Args... &gt;</label>
        <link refid="classsrsgnb_1_1task__details_1_1oper__table__t"/>
      </node>
      <node id="1">
        <label>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</label>
        <link refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4"/>
        <childnode refid="1" relation="usage">
          <edgelabel>-@8</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>-oper_ptr</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-empty_table</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::task_details::empty_table_t&lt; R, Args... &gt;</label>
        <link refid="classsrsgnb_1_1task__details_1_1empty__table__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/unique_function.h" line="119" column="1" bodyfile="include/srsgnb/adt/unique_function.h" bodystart="118" bodyend="182"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1adf492365880626c66391cb199038c24e" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>buffer</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad07b8c8b6298f7bab9b3f4f59204fa37" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>capacity</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1add2a2a93eb35ca60381d1531a1d33419" prot="private" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>empty_table</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1aa705032a07941a8084ba94818dc1eee9" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>is_empty</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a20c118239d362573d1a2811127aee8be" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>is_in_small_buffer</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a73c4f1194a1cac3386d6297a2885eb04" prot="private" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>oper_ptr</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a0fe83ef409e246bb25b3e67724cad47c" prot="private" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>oper_table_t</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a1c962b63c10ced244d8b1805f2eddecf" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>operator()</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ab5049dbe5b542fb2d32bb63080d5f5b1" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a6754bb9af0b1369ee88018e0275cbe2e" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>ptr</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a0b7c6426a5310fc23e88e457fe27fc24" prot="private" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>storage_t</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1acd12865c68008daf9bab82040b3806bf" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>unique_function</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad6dbb08453256bc83cc5c64042075353" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>unique_function</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1ad6dbb08453256bc83cc5c64042075353" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>unique_function</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a1bed4fb7dd70dbc5267d035bd8476515" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>unique_function</name></member>
      <member refid="classsrsgnb_1_1unique__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01ForbidAlloc_01_4_1a3cb19abdd101a3755beca17217d309c3" prot="public" virt="non-virtual"><scope>srsgnb::unique_function&lt; R(Args...), Capacity, ForbidAlloc &gt;</scope><name>~unique_function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
