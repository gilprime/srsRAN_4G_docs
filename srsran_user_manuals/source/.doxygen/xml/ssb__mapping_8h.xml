<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ssb__mapping_8h" kind="file" language="C++">
    <compoundname>ssb_mapping.h</compoundname>
    <includes refid="constants_8h" local="yes">srsgnb/phy/constants.h</includes>
    <includes refid="frequency__range_8h" local="yes">srsgnb/ran/frequency_range.h</includes>
    <includes refid="rb__interval_8h" local="yes">srsgnb/ran/resource_allocation/rb_interval.h</includes>
    <includes refid="slot__point_8h" local="yes">srsgnb/ran/slot_point.h</includes>
    <includes refid="ssb__properties_8h" local="yes">srsgnb/ran/ssb_properties.h</includes>
    <includes refid="subcarrier__spacing_8h" local="yes">srsgnb/ran/subcarrier_spacing.h</includes>
    <includes refid="math__utils_8h" local="yes">srsgnb/support/math_utils.h</includes>
    <includes local="no">array</includes>
    <includes local="no">cassert</includes>
    <includedby refid="ssb__processor_8h" local="yes">include/srsgnb/phy/upper/channel_processors/ssb_processor.h</includedby>
    <includedby refid="du__cell__config__validation_8cpp" local="yes">lib/du/du_cell_config_validation.cpp</includedby>
    <includedby refid="ssb__assembler_8cpp" local="yes">lib/mac/mac_dl/ssb_assembler.cpp</includedby>
    <includedby refid="band__helper_8cpp" local="yes">lib/ran/band_helper.cpp</includedby>
    <includedby refid="ssb__mapping_8cpp" local="yes">lib/ran/ssb_mapping.cpp</includedby>
    <includedby refid="cell__configuration_8cpp" local="yes">lib/scheduler/cell/cell_configuration.cpp</includedby>
    <includedby refid="ssb__scheduler_8cpp" local="yes">lib/scheduler/common_scheduling/ssb_scheduler.cpp</includedby>
    <incdepgraph>
      <node id="44">
        <label>atomic</label>
      </node>
      <node id="4">
        <label>srsgnb/ran/resource_allocation/rb_interval.h</label>
        <link refid="rb__interval_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>srsgnb/ran/subcarrier_spacing.h</label>
        <link refid="subcarrier__spacing_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>functional</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="43">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="23">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>srsgnb/ran/ssb_properties.h</label>
        <link refid="ssb__properties_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb/phy/constants.h</label>
        <link refid="constants_8h_source"/>
      </node>
      <node id="45">
        <label>srsgnb/ran/slot_point.h</label>
        <link refid="slot__point_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>pthread.h</label>
      </node>
      <node id="50">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/srsgnb/ran/ssb_mapping.h</label>
        <link refid="ssb__mapping_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cstdio</label>
      </node>
      <node id="42">
        <label>tuple</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>array</label>
      </node>
      <node id="5">
        <label>srsgnb/adt/interval.h</label>
        <link refid="interval_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/ran/frequency_range.h</label>
        <link refid="frequency__range_8h_source"/>
      </node>
      <node id="8">
        <label>cerrno</label>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="47">
        <label>srsgnb/adt/bounded_integer.h</label>
        <link refid="bounded__integer_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>chrono</label>
      </node>
      <node id="28">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>type_traits</label>
      </node>
      <node id="51">
        <label>complex</label>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>include/srsgnb/phy/upper/upper_phy_factories.h</label>
        <link refid="upper__phy__factories_8h_source"/>
      </node>
      <node id="4">
        <label>include/srsgnb/phy/upper/channel_processors/channel_processor_factories.h</label>
        <link refid="channel__processor__factories_8h_source"/>
      </node>
      <node id="8">
        <label>lib/phy/upper/downlink_processor_single_executor_impl.h</label>
        <link refid="downlink__processor__single__executor__impl_8h_source"/>
      </node>
      <node id="1">
        <label>include/srsgnb/ran/ssb_mapping.h</label>
        <link refid="ssb__mapping_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/srsgnb/phy/upper/channel_processors/ssb_processor.h</label>
        <link refid="ssb__processor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/srsgnb/fapi_adaptor/phy/messages/ssb.h</label>
        <link refid="phy_2messages_2ssb_8h_source"/>
      </node>
      <node id="5">
        <label>include/srsgnb/phy/upper/downlink_processor.h</label>
        <link refid="downlink__processor_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/phy/upper/channel_processors/ssb_processor_impl.h</label>
        <link refid="ssb__processor__impl_8h_source"/>
      </node>
      <node id="7">
        <label>lib/phy/upper/downlink_processor_pool_impl.h</label>
        <link refid="downlink__processor__pool__impl_8h_source"/>
      </node>
      <node id="9">
        <label>lib/phy/upper/upper_phy_impl.h</label>
        <link refid="upper__phy__impl_8h_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/phy/constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/frequency_range.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/resource_allocation/rb_interval.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/slot_point.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/ssb_properties.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/ran/subcarrier_spacing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">srsgnb/support/math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespacesrsgnb_1a46fada6faf5d18b183d1c3b2fac898ab" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a46fada6faf5d18b183d1c3b2fac898ab" kindref="member">ssb_get_l_first</ref>(<ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ff" kindref="member">ssb_pattern_case</ref><sp/>pattern_case,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ssb_idx)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>A<sp/>-<sp/>15<sp/>kHz<sp/>SCS:<sp/>the<sp/>first<sp/>symbols<sp/>of<sp/>the<sp/>candidate<sp/>SS/PBCH<sp/>blocks<sp/>have<sp/>indexes<sp/>of<sp/>{<sp/>2<sp/>,<sp/>8<sp/>}<sp/>+<sp/>14<sp/>⋅<sp/>n<sp/>.<sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>carrier<sp/>frequencies<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>3<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>.<sp/>For<sp/>carrier<sp/>frequencies<sp/>within<sp/>FR1<sp/>larger<sp/>than<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>,<sp/>2<sp/>,<sp/>3<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_case<sp/>==<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa7fc56270e7a70fa81a5935b72eacbe29" kindref="member">ssb_pattern_case::A</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>2&gt;<sp/>first_symbols<sp/>=<sp/>{2,<sp/>8};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first_symbols[ssb_idx<sp/>%<sp/>first_symbols.size()]<sp/>+<sp/>14<sp/>*<sp/>(ssb_idx<sp/>/<sp/>first_symbols.size());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>B<sp/>-<sp/>30<sp/>kHz<sp/>SCS:<sp/>the<sp/>first<sp/>symbols<sp/>of<sp/>the<sp/>candidate<sp/>SS/PBCH<sp/>blocks<sp/>have<sp/>indexes<sp/>{<sp/>4<sp/>,<sp/>8<sp/>,<sp/>16<sp/>,<sp/>20<sp/>}<sp/>+<sp/>28<sp/>⋅<sp/>n<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>carrier<sp/>frequencies<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>3<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>.<sp/>For<sp/>carrier<sp/>frequencies<sp/>within<sp/>FR1<sp/>larger<sp/>than<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_case<sp/>==<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa9d5ed678fe57bcca610140957afab571" kindref="member">ssb_pattern_case::B</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>4&gt;<sp/>first_symbols<sp/>=<sp/>{4,<sp/>8,<sp/>16,<sp/>20};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first_symbols[ssb_idx<sp/>%<sp/>first_symbols.size()]<sp/>+<sp/>28<sp/>*<sp/>(ssb_idx<sp/>/<sp/>first_symbols.size());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>C<sp/>-<sp/>30<sp/>kHz<sp/>SCS:<sp/>the<sp/>first<sp/>symbols<sp/>of<sp/>the<sp/>candidate<sp/>SS/PBCH<sp/>blocks<sp/>have<sp/>indexes<sp/>{<sp/>2<sp/>,<sp/>8<sp/>}<sp/>+<sp/>14<sp/>⋅<sp/>n<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>For<sp/>paired<sp/>spectrum<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>carrier<sp/>frequencies<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>3<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>.<sp/>For<sp/>carrier<sp/>frequencies<sp/>within<sp/>FR1<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>3<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>,<sp/>2<sp/>,<sp/>3<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>For<sp/>unpaired<sp/>spectrum<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>carrier<sp/>frequencies<sp/>smaller<sp/>than<sp/>1.88<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>.<sp/>For<sp/>carrier<sp/>frequencies<sp/>within<sp/>FR1<sp/>equal<sp/>to<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>larger<sp/>than<sp/>1.88<sp/>GHz,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>,<sp/>2<sp/>,<sp/>3<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_case<sp/>==<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa0d61f8370cad1d412f80b84d143e1257" kindref="member">ssb_pattern_case::C</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>2&gt;<sp/>first_symbols<sp/>=<sp/>{2,<sp/>8};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first_symbols[ssb_idx<sp/>%<sp/>first_symbols.size()]<sp/>+<sp/>14<sp/>*<sp/>(ssb_idx<sp/>/<sp/>first_symbols.size());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>D<sp/>-<sp/>120<sp/>kHz<sp/>SCS:<sp/>the<sp/>first<sp/>symbols<sp/>of<sp/>the<sp/>candidate<sp/>SS/PBCH<sp/>blocks<sp/>have<sp/>indexes<sp/>{<sp/>4<sp/>,<sp/>8<sp/>,<sp/>16<sp/>,<sp/>20<sp/>}<sp/>+<sp/>28<sp/>⋅<sp/>n<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>carrier<sp/>frequencies<sp/>within<sp/>FR2,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>,<sp/>2<sp/>,<sp/>3<sp/>,<sp/>5<sp/>,<sp/>6<sp/>,<sp/>7<sp/>,<sp/>8<sp/>,<sp/>10<sp/>,<sp/>11<sp/>,<sp/>12<sp/>,<sp/>13<sp/>,<sp/>15<sp/>,<sp/>16<sp/>,<sp/>17<sp/>,<sp/>18<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_case<sp/>==<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffaf623e75af30e62bbd73d6df5b50bb7b5" kindref="member">ssb_pattern_case::D</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>4&gt;<sp/><sp/>first_symbols<sp/>=<sp/>{4,<sp/>8,<sp/>16,<sp/>20};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>16&gt;<sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0,<sp/>1,<sp/>2,<sp/>3,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>15,<sp/>16,<sp/>17,<sp/>18};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ssb_idx<sp/>&lt;<sp/>first_symbols.size()<sp/>*<sp/>n.size());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first_symbols[ssb_idx<sp/>%<sp/>first_symbols.size()]<sp/>+<sp/>28<sp/>*<sp/>n[ssb_idx<sp/>/<sp/>first_symbols.size()];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Case<sp/>E<sp/>-<sp/>240<sp/>kHz<sp/>SCS:<sp/>the<sp/>first<sp/>symbols<sp/>of<sp/>the<sp/>candidate<sp/>SS/PBCH<sp/>blocks<sp/>have<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//{<sp/>8<sp/>,<sp/>12<sp/>,<sp/>16<sp/>,<sp/>20<sp/>,<sp/>32<sp/>,<sp/>36<sp/>,<sp/>40<sp/>,<sp/>44<sp/>}<sp/>+<sp/>56<sp/>⋅<sp/>n<sp/>.<sp/>For<sp/>carrier<sp/>frequencies<sp/>within<sp/>FR2,<sp/>n<sp/>=<sp/>0<sp/>,<sp/>1<sp/>,<sp/>2<sp/>,<sp/>3<sp/>,<sp/>5<sp/>,<sp/>6<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>7<sp/>,<sp/>8<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pattern_case<sp/>==<sp/><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ffa3a3ea00cfc35332cedf6e5e9a32e94da" kindref="member">ssb_pattern_case::E</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>8&gt;<sp/><sp/>first_symbols<sp/>=<sp/>{8,<sp/>12,<sp/>16,<sp/>20,<sp/>32,<sp/>36,<sp/>40,<sp/>44};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::array&lt;unsigned,<sp/>16&gt;<sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0,<sp/>1,<sp/>2,<sp/>3,<sp/>5,<sp/>6,<sp/>7,<sp/>8,<sp/>10,<sp/>11,<sp/>12,<sp/>13,<sp/>15,<sp/>16,<sp/>17,<sp/>18};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ssb_idx<sp/>&lt;<sp/>first_symbols.size()<sp/>*<sp/>n.size());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first_symbols[ssb_idx<sp/>%<sp/>first_symbols.size()]<sp/>+<sp/>56<sp/>*<sp/>n[ssb_idx<sp/>/<sp/>first_symbols.size()];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Impossible!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>srsgnb_assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SSB<sp/>pattern<sp/>case&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="namespacesrsgnb_1ae54949545c17d2fdbb763dbf097adffe" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1ae54949545c17d2fdbb763dbf097adffe" kindref="member">ssb_get_k_first</ref>(<ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11" kindref="member">frequency_range</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/><sp/><sp/><sp/>ssb_scs,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/><sp/><sp/><sp/>common_scs,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1ssb__offset__to__pointA" kindref="compound">ssb_offset_to_pointA</ref><sp/><sp/>offset_to_pointA,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1ssb__subcarrier__offset" kindref="compound">ssb_subcarrier_offset</ref><sp/>subcarrier_offset)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>SCS<sp/>are<sp/>valid<sp/>for<sp/>the<sp/>frequency<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>srsgnb_assert(<ref refid="namespacesrsgnb_1a42dc3c5c246d71c1a24666323104431f" kindref="member">is_scs_valid</ref>(ssb_scs,<sp/>fr),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>combination<sp/>of<sp/>FR{}<sp/>and<sp/>SSB<sp/>SCS<sp/>{}kHz.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr<sp/>==<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref><sp/>?<sp/>1<sp/>:<sp/>2,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(ssb_scs));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>srsgnb_assert(<ref refid="namespacesrsgnb_1a42dc3c5c246d71c1a24666323104431f" kindref="member">is_scs_valid</ref>(common_scs,<sp/>fr),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>combination<sp/>of<sp/>FR{}<sp/>and<sp/><sp/>Common<sp/>SCS<sp/>{}kHz.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr<sp/>==<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref><sp/>?<sp/>1<sp/>:<sp/>2,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(common_scs));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>offset<sp/>to<sp/>Point<sp/>A<sp/>and<sp/>the<sp/>subcarrier<sp/>offset<sp/>are<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>srsgnb_assert(offset_to_pointA.<ref refid="classsrsgnb_1_1bounded__integer_1ab792fb5e45a4d90b0e264b12759c5c4c" kindref="member">is_valid</ref>(),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>offset<sp/>to<sp/>Point<sp/>A<sp/>{}<sp/>(max<sp/>{})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_to_pointA.to_uint(),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_offset_to_pointA::max());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>srsgnb_assert(subcarrier_offset.<ref refid="classsrsgnb_1_1ssb__subcarrier__offset_1aa7250eaa3a999ec2cdcf967fea65b0b7" kindref="member">is_valid</ref>(fr),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>subcarrier<sp/>offset<sp/>{}<sp/>for<sp/>FR{}<sp/>(max<sp/>{})&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subcarrier_offset.to_uint(),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr<sp/>==<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref><sp/>?<sp/>1<sp/>:<sp/>2,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_subcarrier_offset::max(fr));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>Point<sp/>A<sp/>offset<sp/>SCS<sp/>depending<sp/>on<sp/>the<sp/>frequency<sp/>range<sp/>and<sp/>convert<sp/>SCS<sp/>to<sp/>kHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>pointA_offset_scs_kHz<sp/>=</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>((fr<sp/>==<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref>)<sp/>?<sp/>subcarrier_spacing::kHz15<sp/>:<sp/>subcarrier_spacing::kHz60);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>subcarrier<sp/>offset<sp/>SCS<sp/>depending<sp/>on<sp/>the<sp/>frequency<sp/>range<sp/>and<sp/>convert<sp/>it<sp/>to<sp/>kHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>subcarrier_offset_scs_kHz<sp/>=</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>((fr<sp/>==<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref>)<sp/>?<sp/>subcarrier_spacing::kHz15<sp/>:<sp/>common_scs);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SS/PBCH<sp/>block<sp/>SCS<sp/>in<sp/>kHz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ssb_scs_kHz<sp/>=<sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(ssb_scs);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>number<sp/>of<sp/>15kHz<sp/>subcarriers<sp/>from<sp/>point<sp/>A<sp/>to<sp/>the<sp/>first<sp/>subcarrier<sp/>of<sp/>the<sp/>SS/PBCH<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k_first_15kHz<sp/>=<sp/>(offset_to_pointA.to_uint()<sp/>*<sp/><ref refid="namespacesrsgnb_1a1691e371d39f897676e1185dce645bb1" kindref="member">NRE</ref><sp/>*<sp/>pointA_offset_scs_kHz<sp/>+</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subcarrier_offset.to_uint()<sp/>*<sp/>subcarrier_offset_scs_kHz)<sp/>/</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>above<sp/>conversion<sp/>is<sp/>exact<sp/>and<sp/>has<sp/>no<sp/>remainder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>srsgnb_assert((k_first_15kHz<sp/>*<sp/>15)<sp/>%<sp/>ssb_scs_kHz<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>combination<sp/>of<sp/>FR{},<sp/>SSB<sp/>SCS<sp/>{}kHz,<sp/>Common<sp/>SCS<sp/>{}kHz,<sp/>offsetToPointA<sp/>{}<sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ssb-SubcarrierOffset<sp/>{}.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr<sp/>==<sp/><ref refid="namespacesrsgnb_1ae51e11d1cd0a0d99d339b43e798a3f11a34d1cf1496d544eb35e3461a5235f7e9" kindref="member">frequency_range::FR1</ref><sp/>?<sp/>1<sp/>:<sp/>2,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_scs_kHz,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a1e7bf788a6e1125670387568e03b4b89" kindref="member">scs_to_khz</ref>(common_scs),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_to_pointA.to_uint(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subcarrier_offset.to_uint());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>actual<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(k_first_15kHz<sp/>*<sp/>15)<sp/>/<sp/>ssb_scs_kHz;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="namespacesrsgnb_1ac2182602fc78153abfadb424ff33f6ff" kindref="member">ssb_pattern_case</ref><sp/><ref refid="namespacesrsgnb_1ad39f8ccde355456fcb4551782c6667fc" kindref="member">ssb_get_ssb_pattern</ref>(<ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>ssb_scs,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>dl_arfcn);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">uint8_t<sp/><ref refid="namespacesrsgnb_1a7f7ec59d8d3f9673c93e64a209e9c9a0" kindref="member">ssb_get_L_max</ref>(<ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/>ssb_scs,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>dl_arfcn);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">crb_interval<sp/><ref refid="namespacesrsgnb_1a2bf4f99a684cd938e06186dff57d7aac" kindref="member">get_ssb_crbs</ref>(<ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/><sp/><sp/><sp/>ssb_scs,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref><sp/><sp/><sp/><sp/>scs_common,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_offset_to_pointA<sp/><sp/>offset_to_pA,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssb_subcarrier_offset<sp/>k_ssb);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/ran/ssb_mapping.h"/>
  </compounddef>
</doxygen>
