<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1log__backend__impl" kind="class" language="C++" prot="public">
    <compoundname>srslog::log_backend_impl</compoundname>
    <basecompoundref refid="classsrslog_1_1detail_1_1log__backend" prot="public" virt="non-virtual">srslog::detail::log_backend</basecompoundref>
    <includes refid="log__backend__impl_8h" local="no">log_backend_impl.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrslog_1_1log__backend__impl_1ada87d003238fd771662b5028288c28b3" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1detail_1_1work__queue" kindref="compound">detail::work_queue</ref>&lt; <ref refid="structsrslog_1_1detail_1_1log__entry" kindref="compound">detail::log_entry</ref> &gt;</type>
        <definition>detail::work_queue&lt;detail::log_entry&gt; srslog::log_backend_impl::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="52" column="22" bodyfile="lib/srslog/log_backend_impl.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1log__backend__impl_1ad46e0b4bd34864875ff777cfb5a64f70" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1detail_1_1dyn__arg__store__pool" kindref="compound">detail::dyn_arg_store_pool</ref></type>
        <definition>detail::dyn_arg_store_pool srslog::log_backend_impl::arg_pool</definition>
        <argsstring></argsstring>
        <name>arg_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="53" column="41" bodyfile="lib/srslog/log_backend_impl.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1log__backend__impl_1a0339262bdfb9554f96e55a762cd06cbc" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1backend__worker" kindref="compound">backend_worker</ref></type>
        <definition>backend_worker srslog::log_backend_impl::worker</definition>
        <argsstring></argsstring>
        <name>worker</name>
        <initializer>{queue, arg_pool}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="54" column="41" bodyfile="lib/srslog/log_backend_impl.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1a85db19fbc3ce8cd8ff0783285f5d727a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::log_backend_impl::log_backend_impl</definition>
        <argsstring>()=default</argsstring>
        <name>log_backend_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1acedba00330502fd19c9f06f82acba635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::log_backend_impl::log_backend_impl</definition>
        <argsstring>(const log_backend_impl &amp;other)=delete</argsstring>
        <name>log_backend_impl</name>
        <param>
          <type>const <ref refid="classsrslog_1_1log__backend__impl" kindref="compound">log_backend_impl</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="26" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1ada037d04cdb30a742c015e417cecc0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrslog_1_1log__backend__impl" kindref="compound">log_backend_impl</ref> &amp;</type>
        <definition>log_backend_impl&amp; srslog::log_backend_impl::operator=</definition>
        <argsstring>(const log_backend_impl &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrslog_1_1log__backend__impl" kindref="compound">log_backend_impl</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="27" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1a28f080d9e6fdc29feae90593c4289cc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void srslog::log_backend_impl::start</definition>
        <argsstring>(backend_priority priority=backend_priority::normal) override</argsstring>
        <name>start</name>
        <reimplements refid="classsrslog_1_1detail_1_1log__backend_1afa55f23e43827304a172b159fd585780">start</reimplements>
        <param>
          <type>backend_priority</type>
          <declname>priority</declname>
          <defval>backend_priority::normal</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the processing of incoming log entries. NOTE: Calling this function more than once has no side effects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="29" column="8" bodyfile="lib/srslog/log_backend_impl.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1a6f0f1d0b28ba221d4bd79bcf102f5da9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool srslog::log_backend_impl::push</definition>
        <argsstring>(detail::log_entry &amp;&amp;entry) override</argsstring>
        <name>push</name>
        <reimplements refid="classsrslog_1_1detail_1_1log__backend_1a13c29881fc1af8da38ba63655d038f8e">push</reimplements>
        <param>
          <type><ref refid="structsrslog_1_1detail_1_1log__entry" kindref="compound">detail::log_entry</ref> &amp;&amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pushes a log entry into the backend. Returns true on success, otherwise false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="31" column="8" bodyfile="lib/srslog/log_backend_impl.h" bodystart="31" bodyend="39"/>
        <references refid="classsrslog_1_1detail_1_1dyn__arg__store__pool_1a2e3de258ca7aa659a4d05f6237109cf2" compoundref="dyn__arg__store__pool_8h" startline="54" endline="63">srslog::detail::dyn_arg_store_pool::dealloc</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1ad021171dd5d4ee853cdf6767bc561e55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>fmt::dynamic_format_arg_store&lt; fmt::format_context &gt; *</type>
        <definition>fmt::dynamic_format_arg_store&lt;fmt::format_context&gt;* srslog::log_backend_impl::alloc_arg_store</definition>
        <argsstring>() override</argsstring>
        <name>alloc_arg_store</name>
        <reimplements refid="classsrslog_1_1detail_1_1log__backend_1ae6a35c82a4c5257f946e477a2ce907b9">alloc_arg_store</reimplements>
        <briefdescription>
<para>Allocates a dyn_arg_store and returns a pointer to it on success, otherwise returns nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="41" column="33" bodyfile="lib/srslog/log_backend_impl.h" bodystart="41" bodyend="41"/>
        <references refid="classsrslog_1_1detail_1_1dyn__arg__store__pool_1a18bc9a24e7b708c9d4eb09e90f56050c" compoundref="dyn__arg__store__pool_8h" startline="40" endline="51">srslog::detail::dyn_arg_store_pool::alloc</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1a077ade5320042bbeb42767a0ced5c92e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool srslog::log_backend_impl::is_running</definition>
        <argsstring>() const override</argsstring>
        <name>is_running</name>
        <reimplements refid="classsrslog_1_1detail_1_1log__backend_1a2bf906bec5e3362d2064f3bba433df3f">is_running</reimplements>
        <briefdescription>
<para>Returns true when the backend has been started, otherwise false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="43" column="8" bodyfile="lib/srslog/log_backend_impl.h" bodystart="43" bodyend="43"/>
        <references refid="classsrslog_1_1backend__worker_1a779a741d31c550aa735bf2962177700f" compoundref="backend__worker_8h" startline="49" endline="49">srslog::backend_worker::is_running</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1a058aa2eed8e099cecaf944d4e5ea8f61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::log_backend_impl::set_error_handler</definition>
        <argsstring>(error_handler err_handler)</argsstring>
        <name>set_error_handler</name>
        <param>
          <type>error_handler</type>
          <declname>err_handler</declname>
        </param>
        <briefdescription>
<para>Installs the specified error handler into the backend worker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="46" column="8" bodyfile="lib/srslog/log_backend_impl.h" bodystart="46" bodyend="46"/>
        <references refid="classsrslog_1_1backend__worker_1a0254ca3a08a242d6ab89546e562dbee1" compoundref="backend__worker_8h" startline="53" endline="68">srslog::backend_worker::set_error_handler</references>
        <referencedby refid="classsrslog_1_1srslog__instance_1aa82dd9ebd8a40c7ba868a6f6d138efd1" compoundref="srslog__instance_8h" startline="77" endline="77">srslog::srslog_instance::set_error_handler</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1log__backend__impl_1af6eecba559adbc10a8f0d0c8721d532a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::log_backend_impl::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stops the backend worker thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/log_backend_impl.h" line="49" column="8" bodyfile="lib/srslog/log_backend_impl.h" bodystart="49" bodyend="49"/>
        <references refid="classsrslog_1_1backend__worker_1a4cc4b03e0bfdd20fa137f6b5669eb9a7" compoundref="backend__worker_8cpp" startline="16" endline="23">srslog::backend_worker::stop</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements the log backend interface. It internally manages a worker thread to process incoming log entries. NOTE: Thread safe class. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srslog::detail::log_backend</label>
        <link refid="classsrslog_1_1detail_1_1log__backend"/>
      </node>
      <node id="1">
        <label>srslog::log_backend_impl</label>
        <link refid="classsrslog_1_1log__backend__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srslog::detail::log_backend</label>
        <link refid="classsrslog_1_1detail_1_1log__backend"/>
      </node>
      <node id="8">
        <label>srslog::detail::shared_variable&lt; bool &gt;</label>
        <link refid="classsrslog_1_1detail_1_1shared__variable"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>srslog::log_backend_impl</label>
        <link refid="classsrslog_1_1log__backend__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-worker</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-arg_pool</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::dyn_circular_buffer&lt; srslog::detail::log_entry &gt;</label>
        <link refid="classsrsgnb_1_1dyn__circular__buffer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>detail::buffer&lt; char &gt;</label>
        <link refid="classdetail_1_1buffer"/>
      </node>
      <node id="7">
        <label>srslog::backend_worker</label>
        <link refid="classsrslog_1_1backend__worker"/>
        <childnode refid="8" relation="usage">
          <edgelabel>-running_flag</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-fmt_buffer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-arg_pool</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>basic_memory_buffer&lt; char &gt;</label>
        <link refid="classbasic__memory__buffer"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srslog::detail::work_queue&lt; srslog::detail::log_entry &gt;</label>
        <link refid="classsrslog_1_1detail_1_1work__queue"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>srslog::detail::mutex</label>
        <link refid="classsrslog_1_1detail_1_1mutex"/>
      </node>
      <node id="11">
        <label>srslog::detail::dyn_arg_store_pool</label>
        <link refid="classsrslog_1_1detail_1_1dyn__arg__store__pool"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb::detail::base_circular_buffer&lt; std::vector&lt; detail::type_storage&lt; srslog::detail::log_entry &gt; &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__circular__buffer"/>
      </node>
    </collaborationgraph>
    <location file="lib/srslog/log_backend_impl.h" line="22" column="1" bodyfile="lib/srslog/log_backend_impl.h" bodystart="21" bodyend="55"/>
    <listofallmembers>
      <member refid="classsrslog_1_1log__backend__impl_1ad021171dd5d4ee853cdf6767bc561e55" prot="public" virt="virtual"><scope>srslog::log_backend_impl</scope><name>alloc_arg_store</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1ad46e0b4bd34864875ff777cfb5a64f70" prot="private" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>arg_pool</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1a077ade5320042bbeb42767a0ced5c92e" prot="public" virt="virtual"><scope>srslog::log_backend_impl</scope><name>is_running</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1a85db19fbc3ce8cd8ff0783285f5d727a" prot="public" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>log_backend_impl</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1acedba00330502fd19c9f06f82acba635" prot="public" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>log_backend_impl</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1ada037d04cdb30a742c015e417cecc0a9" prot="public" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>operator=</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1a6f0f1d0b28ba221d4bd79bcf102f5da9" prot="public" virt="virtual"><scope>srslog::log_backend_impl</scope><name>push</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1ada87d003238fd771662b5028288c28b3" prot="private" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>queue</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1a058aa2eed8e099cecaf944d4e5ea8f61" prot="public" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>set_error_handler</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1a28f080d9e6fdc29feae90593c4289cc0" prot="public" virt="virtual"><scope>srslog::log_backend_impl</scope><name>start</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1af6eecba559adbc10a8f0d0c8721d532a" prot="public" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>stop</name></member>
      <member refid="classsrslog_1_1log__backend__impl_1a0339262bdfb9554f96e55a762cd06cbc" prot="private" virt="non-virtual"><scope>srslog::log_backend_impl</scope><name>worker</name></member>
      <member refid="classsrslog_1_1detail_1_1log__backend_1a07ddadc38493451509df66464885c134" prot="public" virt="virtual"><scope>srslog::log_backend_impl</scope><name>~log_backend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
