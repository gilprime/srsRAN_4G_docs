<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1circular__map_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::circular_map::const_iterator</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsrsgnb_1_1circular__map_1_1const__iterator_1aaf58d3e218871a2439a842401a77e637" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class circular_map&lt; K, T, N &gt;</definition>
        <argsstring></argsstring>
        <name>circular_map&lt; K, T, N &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="115" column="10" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1circular__map_1_1const__iterator_1a352df73374331bdbdfae36205009e433" prot="private" static="no" mutable="no">
        <type>const <ref refid="classsrsgnb_1_1circular__map" kindref="compound">circular_map</ref>&lt; K, T, N &gt; *</type>
        <definition>const circular_map&lt;K, T, N&gt;* srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="119" column="24" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1circular__map_1_1const__iterator_1abb41546dcf556fdb568151b78ced9322" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="120" column="34" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1aa94148e0636367eb5ce6058280c5dddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::const_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1a62c414c0a5ac592dd9689b0fbfe23d41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const circular_map&lt; K, T, N &gt; *map, size_t idx_)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1circular__map" kindref="compound">circular_map</ref>&lt; K, T, N &gt; *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>idx_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="97" column="5" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1ad7ccccb281331d8ca1abe627c3b88835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1circular__map_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="104" column="20" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1ac5fd97ae98f1bf921ea8f784f647580c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const obj_t &amp;</type>
        <definition>const obj_t&amp; srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="111" column="17" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1af67b4b4a6cc2e6360a18cc1aa64644cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const obj_t *</type>
        <definition>const obj_t* srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="112" column="17" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1aa8f01230d2013129fe671d5ed3a4c44d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::operator==</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1circular__map_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="114" column="10" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1circular__map_1_1const__iterator_1a462cfdb75a9f95f476a480d1b66a3d84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::circular_map&lt; K, T, N &gt;::const_iterator::operator!=</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1circular__map_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/circular_map.h" line="115" column="10" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="115" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::circular_map&lt; K, T, N &gt;::const_iterator</label>
        <link refid="classsrsgnb_1_1circular__map_1_1const__iterator"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/circular_map.h" line="94" column="1" bodyfile="include/srsgnb/adt/circular_map.h" bodystart="93" bodyend="121"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1aaf58d3e218871a2439a842401a77e637" prot="private" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>circular_map&lt; K, T, N &gt;</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1aa94148e0636367eb5ce6058280c5dddf" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1a62c414c0a5ac592dd9689b0fbfe23d41" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1abb41546dcf556fdb568151b78ced9322" prot="private" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>idx</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1a462cfdb75a9f95f476a480d1b66a3d84" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1ac5fd97ae98f1bf921ea8f784f647580c" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>operator*</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1ad7ccccb281331d8ca1abe627c3b88835" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>operator++</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1af67b4b4a6cc2e6360a18cc1aa64644cf" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1aa8f01230d2013129fe671d5ed3a4c44d" prot="public" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1circular__map_1_1const__iterator_1a352df73374331bdbdfae36205009e433" prot="private" virt="non-virtual"><scope>srsgnb::circular_map::const_iterator</scope><name>ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
