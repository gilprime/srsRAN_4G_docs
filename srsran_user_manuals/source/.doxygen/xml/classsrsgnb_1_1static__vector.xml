<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1static__vector" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::static_vector</compoundname>
    <includes refid="static__vector_8h" local="no">static_vector.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>MAX_N</declname>
        <defname>MAX_N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1static__vector_1a36cd581b7ab065c4442d2a516c254482" prot="public" static="no">
        <type>T *</type>
        <definition>using srsgnb::static_vector&lt; T, MAX_N &gt;::iterator =  T*</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="20" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1static__vector_1ab9eacc0849241797a1f591cdbceeec5f" prot="public" static="no">
        <type>const T *</type>
        <definition>using srsgnb::static_vector&lt; T, MAX_N &gt;::const_iterator =  const T*</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="21" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1static__vector_1a3faf2ce3b0831d7d9603691c89a463a8" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using srsgnb::static_vector&lt; T, MAX_N &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="22" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1static__vector_1a1255debf7275b1ff206d27207793221e" prot="public" static="no">
        <type>T</type>
        <definition>using srsgnb::static_vector&lt; T, MAX_N &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="23" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1static__vector_1afb9835362fa317d6b83a23929c7072f9" prot="public" static="no">
        <type>std::make_signed_t&lt; size_type &gt;</type>
        <definition>using srsgnb::static_vector&lt; T, MAX_N &gt;::difference_type =  std::make_signed_t&lt;size_type&gt;</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="24" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1static__vector_1ac43c0c0ea7422aec38f05a830361b162" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t srsgnb::static_vector&lt; T, MAX_N &gt;::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="259" column="46" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1static__vector_1ac5fa66b8f616ae4362e78b38bac0257b" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="structsrsgnb_1_1detail_1_1type__storage" kindref="compound">detail::type_storage</ref>&lt; T &gt;, MAX_N &gt;</type>
        <definition>std::array&lt;detail::type_storage&lt;T&gt;, MAX_N&gt; srsgnb::static_vector&lt; T, MAX_N &gt;::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="260" column="14" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a9a50791c11642704f323a53658102a9c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>static_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="26" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ac4ceb2e12c4bfbadd1be89334abccb97" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>(size_type count)</argsstring>
        <name>static_vector</name>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="27" column="12" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a8e6d7c0705868b7afa328fdab8aece49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>(size_type count, const T &amp;initial_value)</argsstring>
        <name>static_vector</name>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>initial_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="28" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a4df7c58888cf5ed1363a47e9393ade84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>(const static_vector &amp;other)</argsstring>
        <name>static_vector</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="29" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a583db4aaf0651afe2cea961afbeeda0c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>(static_vector &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; value_type &gt;::value)</argsstring>
        <name>static_vector</name>
        <param>
          <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="34" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a7758a0867ccf2e4a6a840f705349f60c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>(std::initializer_list&lt; T &gt; init)</argsstring>
        <name>static_vector</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="41" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a1ab4b41e9c8e6da9b1abc4d86fd3bc3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::static_vector</definition>
        <argsstring>(const_iterator it_begin, const_iterator it_end)</argsstring>
        <name>static_vector</name>
        <param>
          <type>const_iterator</type>
          <declname>it_begin</declname>
        </param>
        <param>
          <type>const_iterator</type>
          <declname>it_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="42" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a2f04a079872b6ac87160a0e4702dbccc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::static_vector&lt; T, MAX_N &gt;::~static_vector</definition>
        <argsstring>()</argsstring>
        <name>~static_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="43" column="3" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a90e428396e2dabd976399fa0ec255a29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
        <definition>static_vector&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::operator=</definition>
        <argsstring>(const static_vector &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="44" column="17" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="44" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a3217e17c10303f1e1b45347ae25d706c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
        <definition>static_vector&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::operator=</definition>
        <argsstring>(static_vector &amp;&amp;other) noexcept(std::is_nothrow_move_assignable&lt; value_type &gt;::value)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="52" column="17" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="52" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a0f636a4dabee5ca160a6038172bdd63a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::assign</definition>
        <argsstring>(size_type nof_elems, const T &amp;value)</argsstring>
        <name>assign</name>
        <param>
          <type>size_type</type>
          <declname>nof_elems</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="73" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a2c457d90ef5152504037bcc8e81d19af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::assign</definition>
        <argsstring>(const_iterator it_start, const_iterator it_end)</argsstring>
        <name>assign</name>
        <param>
          <type>const_iterator</type>
          <declname>it_start</declname>
        </param>
        <param>
          <type>const_iterator</type>
          <declname>it_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="78" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a8888425790e7c0cd95ebb8adc534dd28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::assign</definition>
        <argsstring>(std::initializer_list&lt; T &gt; ilist)</argsstring>
        <name>assign</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>ilist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="83" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a58d3319e00b06e0b36514bf9afcc6479" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::operator[]</definition>
        <argsstring>(std::size_t i) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="86" column="5" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ad9f21d2c976a9e4a2d20ccba9dad88ec" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="91" column="11" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ad4842fbf0976b159bc956e0af4476da0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="96" column="5" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ac84bb342dd8bb0a1c632189d50233fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="101" column="11" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a62df9f6cc41806b959999be9f7fdfd88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="106" column="11" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1acabb9efd7fc64d126d4032aafaf369ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::static_vector&lt; T, MAX_N &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="107" column="11" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a5ba6713c99ab2478e2a10d7dfcb725a9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* srsgnb::static_vector&lt; T, MAX_N &gt;::data</definition>
        <argsstring>() noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="108" column="11" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a0d0914a3fabea5ece85a24e9658e3f40" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* srsgnb::static_vector&lt; T, MAX_N &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="109" column="11" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ae723c7834f60dc80a059e1cdc686de3c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator srsgnb::static_vector&lt; T, MAX_N &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="112" column="18" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a740ae1bc020c03e69abdeca9316d6382" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator srsgnb::static_vector&lt; T, MAX_N &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="113" column="18" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a1a6dcd73d747a0ec5bd1b1615cfb948c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator srsgnb::static_vector&lt; T, MAX_N &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="114" column="18" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1aa941164ac7b8e8a37a0a1ef748920d78" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator srsgnb::static_vector&lt; T, MAX_N &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="115" column="18" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a24034fa9a66509265334551c68ce5e4c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::static_vector&lt; T, MAX_N &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="118" column="32" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a449a8865af4d17b33d184086576c3758" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t srsgnb::static_vector&lt; T, MAX_N &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="119" column="32" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ad7744779e44218617a89c73dea66c970" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::static_vector&lt; T, MAX_N &gt;::full</definition>
        <argsstring>() const noexcept</argsstring>
        <name>full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="120" column="32" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1afd1a7f3c5ea4d3fc5a62c9a81d033e9c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="124" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a1baeba7f41376fb05ca81f4517c81737" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator srsgnb::static_vector&lt; T, MAX_N &gt;::erase</definition>
        <argsstring>(iterator pos)</argsstring>
        <name>erase</name>
        <param>
          <type>iterator</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="129" column="12" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="129" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a46c7528929c179ca95cde0bd33423696" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator srsgnb::static_vector&lt; T, MAX_N &gt;::erase</definition>
        <argsstring>(iterator it_start, iterator it_end)</argsstring>
        <name>erase</name>
        <param>
          <type>iterator</type>
          <declname>it_start</declname>
        </param>
        <param>
          <type>iterator</type>
          <declname>it_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="138" column="12" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="138" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a358b128eeff2c80e5da016aa2f3e2c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::push_back</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>push_back</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="151" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1abb20e9be947eef419feb39ba83f44b4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::push_back</definition>
        <argsstring>(T &amp;&amp;value)</argsstring>
        <name>push_back</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="158" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a49226d13c38dc1aeebe56471c89ee1d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::emplace_back</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="166" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a422c2631c47c5ddff6ef05715d376168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="173" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ae643e89fcef35f5639b9d0930fd324eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::resize</definition>
        <argsstring>(size_type count)</argsstring>
        <name>resize</name>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="179" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a91330b3d65ffdee6fe37ef854482be33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::resize</definition>
        <argsstring>(size_type count, const T &amp;value)</argsstring>
        <name>resize</name>
        <param>
          <type>size_type</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="185" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="185" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1aa9763b13479e04becfa7664fbedefdbe" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::static_vector&lt; T, MAX_N &gt;::operator==</definition>
        <argsstring>(const static_vector &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="202" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a89f9268fdef1654cc5a5c80ac0a2facd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::static_vector&lt; T, MAX_N &gt;::operator!=</definition>
        <argsstring>(const static_vector &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="206" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1afcea000b93b11ce3167a6fb4cd4b7d9f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::swap</definition>
        <argsstring>(static_vector &amp;other) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="208" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="208" bodyend="226"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1ad586e053bc961aea353675030b178db2" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>static constexpr std::size_t srsgnb::static_vector&lt; T, MAX_N &gt;::capacity</definition>
        <argsstring>() noexcept</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="121" column="32" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="121" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1adbf772879ed6ba6e71ed54fa86d2fec0" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::destroy</definition>
        <argsstring>(iterator it_start, iterator it_end) noexcept</argsstring>
        <name>destroy</name>
        <param>
          <type>iterator</type>
          <declname>it_start</declname>
        </param>
        <param>
          <type>iterator</type>
          <declname>it_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="229" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a313c4835b7f30e46a136bd09041b5951" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::append</definition>
        <argsstring>(const_iterator it_begin, const_iterator it_end)</argsstring>
        <name>append</name>
        <param>
          <type>const_iterator</type>
          <declname>it_begin</declname>
        </param>
        <param>
          <type>const_iterator</type>
          <declname>it_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="235" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="235" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a12f6ae86a77231d9939fe1bdf548c13c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::append</definition>
        <argsstring>(size_type N, const T &amp;element)</argsstring>
        <name>append</name>
        <param>
          <type>size_type</type>
          <declname>N</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="242" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="242" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1static__vector_1a83677677a0e05e95d0a29084941c6948" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::static_vector&lt; T, MAX_N &gt;::append</definition>
        <argsstring>(size_type N)</argsstring>
        <name>append</name>
        <param>
          <type>size_type</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/static_vector.h" line="249" column="8" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="249" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Random access, variable-sized container with embedded storage. Contrarily to std::vector&lt;T&gt;, its size is limited at compile-time, and it does not rely on allocators. Contrarily to std::array, the elements are constructed and destructed dynamically when the container size() changes. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MAX_N</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of elements of the <ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::static_vector&lt; T, MAX_N &gt;</label>
        <link refid="classsrsgnb_1_1static__vector"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/static_vector.h" line="18" column="1" bodyfile="include/srsgnb/adt/static_vector.h" bodystart="17" bodyend="261"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1static__vector_1a313c4835b7f30e46a136bd09041b5951" prot="private" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>append</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a12f6ae86a77231d9939fe1bdf548c13c" prot="private" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>append</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a83677677a0e05e95d0a29084941c6948" prot="private" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>append</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a0f636a4dabee5ca160a6038172bdd63a" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>assign</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a2c457d90ef5152504037bcc8e81d19af" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>assign</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a8888425790e7c0cd95ebb8adc534dd28" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>assign</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ad4842fbf0976b159bc956e0af4476da0" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>back</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ac84bb342dd8bb0a1c632189d50233fa7" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>back</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ae723c7834f60dc80a059e1cdc686de3c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a1a6dcd73d747a0ec5bd1b1615cfb948c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ac5fa66b8f616ae4362e78b38bac0257b" prot="private" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>buffer</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ad586e053bc961aea353675030b178db2" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>capacity</name></member>
      <member refid="classsrsgnb_1_1static__vector_1afd1a7f3c5ea4d3fc5a62c9a81d033e9c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ab9eacc0849241797a1f591cdbceeec5f" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a5ba6713c99ab2478e2a10d7dfcb725a9" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>data</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a0d0914a3fabea5ece85a24e9658e3f40" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>data</name></member>
      <member refid="classsrsgnb_1_1static__vector_1adbf772879ed6ba6e71ed54fa86d2fec0" prot="private" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>destroy</name></member>
      <member refid="classsrsgnb_1_1static__vector_1afb9835362fa317d6b83a23929c7072f9" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>difference_type</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a49226d13c38dc1aeebe56471c89ee1d5" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>emplace_back</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a24034fa9a66509265334551c68ce5e4c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a740ae1bc020c03e69abdeca9316d6382" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1static__vector_1aa941164ac7b8e8a37a0a1ef748920d78" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a1baeba7f41376fb05ca81f4517c81737" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>erase</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a46c7528929c179ca95cde0bd33423696" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>erase</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a62df9f6cc41806b959999be9f7fdfd88" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>front</name></member>
      <member refid="classsrsgnb_1_1static__vector_1acabb9efd7fc64d126d4032aafaf369ff" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>front</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ad7744779e44218617a89c73dea66c970" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>full</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a36cd581b7ab065c4442d2a516c254482" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a89f9268fdef1654cc5a5c80ac0a2facd" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a90e428396e2dabd976399fa0ec255a29" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a3217e17c10303f1e1b45347ae25d706c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1static__vector_1aa9763b13479e04becfa7664fbedefdbe" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a58d3319e00b06e0b36514bf9afcc6479" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ad9f21d2c976a9e4a2d20ccba9dad88ec" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a422c2631c47c5ddff6ef05715d376168" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>pop_back</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a358b128eeff2c80e5da016aa2f3e2c9c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>push_back</name></member>
      <member refid="classsrsgnb_1_1static__vector_1abb20e9be947eef419feb39ba83f44b4a" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>push_back</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ae643e89fcef35f5639b9d0930fd324eb" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>resize</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a91330b3d65ffdee6fe37ef854482be33" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>resize</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a449a8865af4d17b33d184086576c3758" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>size</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ac43c0c0ea7422aec38f05a830361b162" prot="private" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>size_</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a3faf2ce3b0831d7d9603691c89a463a8" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>size_type</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a9a50791c11642704f323a53658102a9c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1ac4ceb2e12c4bfbadd1be89334abccb97" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a8e6d7c0705868b7afa328fdab8aece49" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a4df7c58888cf5ed1363a47e9393ade84" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a583db4aaf0651afe2cea961afbeeda0c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a7758a0867ccf2e4a6a840f705349f60c" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a1ab4b41e9c8e6da9b1abc4d86fd3bc3f" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>static_vector</name></member>
      <member refid="classsrsgnb_1_1static__vector_1afcea000b93b11ce3167a6fb4cd4b7d9f" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>swap</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a1255debf7275b1ff206d27207793221e" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>value_type</name></member>
      <member refid="classsrsgnb_1_1static__vector_1a2f04a079872b6ac87160a0e4702dbccc" prot="public" virt="non-virtual"><scope>srsgnb::static_vector</scope><name>~static_vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
