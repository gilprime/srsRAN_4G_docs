<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacedetail" kind="namespace" language="C++">
    <compoundname>detail</compoundname>
    <innerclass refid="structdetail_1_1accumulator" prot="public">detail::accumulator</innerclass>
    <innerclass refid="structdetail_1_1ansi__color__escape" prot="public">detail::ansi_color_escape</innerclass>
    <innerclass refid="classdetail_1_1arg__converter" prot="public">detail::arg_converter</innerclass>
    <innerclass refid="structdetail_1_1arg__data" prot="public">detail::arg_data</innerclass>
    <innerclass refid="structdetail_1_1arg__data_3_01T_00_01Char_00_01NUM__ARGS_00_010_01_4" prot="public">detail::arg_data&lt; T, Char, NUM_ARGS, 0 &gt;</innerclass>
    <innerclass refid="classdetail_1_1arg__formatter" prot="public">detail::arg_formatter</innerclass>
    <innerclass refid="classdetail_1_1arg__formatter__base" prot="public">detail::arg_formatter_base</innerclass>
    <innerclass refid="structdetail_1_1arg__mapper" prot="public">detail::arg_mapper</innerclass>
    <innerclass refid="structdetail_1_1arg__ref" prot="public">detail::arg_ref</innerclass>
    <innerclass refid="structdetail_1_1auto__id" prot="public">detail::auto_id</innerclass>
    <innerclass refid="structdetail_1_1basic__compiled__format" prot="public">detail::basic_compiled_format</innerclass>
    <innerclass refid="structdetail_1_1basic__data" prot="public">detail::basic_data</innerclass>
    <innerclass refid="classdetail_1_1bigint" prot="public">detail::bigint</innerclass>
    <innerclass refid="structdetail_1_1bits" prot="public">detail::bits</innerclass>
    <innerclass refid="structdetail_1_1boundaries" prot="public">detail::boundaries</innerclass>
    <innerclass refid="classdetail_1_1buffer" prot="public">detail::buffer</innerclass>
    <innerclass refid="classdetail_1_1char__converter" prot="public">detail::char_converter</innerclass>
    <innerclass refid="classdetail_1_1char__specs__checker" prot="public">detail::char_specs_checker</innerclass>
    <innerclass refid="structdetail_1_1char__t__impl" prot="public">detail::char_t_impl</innerclass>
    <innerclass refid="structdetail_1_1char__t__impl_3_01S_00_01enable__if__t_3_01is__string_3_01S_01_4_1_1value_01_4_01_4" prot="public">detail::char_t_impl&lt; S, enable_if_t&lt; is_string&lt; S &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1chrono__format__checker" prot="public">detail::chrono_format_checker</innerclass>
    <innerclass refid="structdetail_1_1chrono__formatter" prot="public">detail::chrono_formatter</innerclass>
    <innerclass refid="structdetail_1_1color__type" prot="public">detail::color_type</innerclass>
    <innerclass refid="classdetail_1_1compile__parse__context" prot="public">detail::compile_parse_context</innerclass>
    <innerclass refid="classdetail_1_1compiled__format" prot="public">detail::compiled_format</innerclass>
    <innerclass refid="structdetail_1_1compiled__format__base" prot="public">detail::compiled_format_base</innerclass>
    <innerclass refid="structdetail_1_1compiled__format__base_3_01S_00_01enable__if__t_3_01is__compile__string_3_01S_01_4_1_1value_01_4_01_4" prot="public">detail::compiled_format_base&lt; S, enable_if_t&lt; is_compile_string&lt; S &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1compiled__string" prot="public">detail::compiled_string</innerclass>
    <innerclass refid="structdetail_1_1conditional__helper" prot="public">detail::conditional_helper</innerclass>
    <innerclass refid="classdetail_1_1container__buffer" prot="public">detail::container_buffer</innerclass>
    <innerclass refid="classdetail_1_1counting__iterator" prot="public">detail::counting_iterator</innerclass>
    <innerclass refid="classdetail_1_1cstring__type__checker" prot="public">detail::cstring_type_checker</innerclass>
    <innerclass refid="classdetail_1_1custom__formatter" prot="public">detail::custom_formatter</innerclass>
    <innerclass refid="structdetail_1_1custom__value" prot="public">detail::custom_value</innerclass>
    <innerclass refid="structdetail_1_1data" prot="public">detail::data</innerclass>
    <innerclass refid="structdetail_1_1default__arg__formatter" prot="public">detail::default_arg_formatter</innerclass>
    <innerclass refid="classdetail_1_1dyn__node__pool" prot="public">detail::dyn_node_pool</innerclass>
    <innerclass refid="classdetail_1_1dynamic__arg__list" prot="public">detail::dynamic_arg_list</innerclass>
    <innerclass refid="structdetail_1_1dynamic__format__specs" prot="public">detail::dynamic_format_specs</innerclass>
    <innerclass refid="classdetail_1_1dynamic__specs__handler" prot="public">detail::dynamic_specs_handler</innerclass>
    <innerclass refid="structdetail_1_1error__handler" prot="public">detail::error_handler</innerclass>
    <innerclass refid="structdetail_1_1fallback__formatter" prot="public">detail::fallback_formatter</innerclass>
    <innerclass refid="structdetail_1_1fallback__formatter_3_01T_00_01Char_00_01enable__if__t_3_01is__streamable_3_01T_70fb5240ebb5f83009cdb1627fa42087" prot="public">detail::fallback_formatter&lt; T, Char, enable_if_t&lt; is_streamable&lt; T, Char &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1fallback__uintptr" prot="public">detail::fallback_uintptr</innerclass>
    <innerclass refid="structdetail_1_1fill__t" prot="public">detail::fill_t</innerclass>
    <innerclass refid="structdetail_1_1fixed__handler" prot="public">detail::fixed_handler</innerclass>
    <innerclass refid="structdetail_1_1float__specs" prot="public">detail::float_specs</innerclass>
    <innerclass refid="classdetail_1_1float__writer" prot="public">detail::float_writer</innerclass>
    <innerclass refid="structdetail_1_1format__decimal__result" prot="public">detail::format_decimal_result</innerclass>
    <innerclass refid="structdetail_1_1format__handler" prot="public">detail::format_handler</innerclass>
    <innerclass refid="structdetail_1_1format__part" prot="public">detail::format_part</innerclass>
    <innerclass refid="structdetail_1_1format__part__array" prot="public">detail::format_part_array</innerclass>
    <innerclass refid="classdetail_1_1format__string__checker" prot="public">detail::format_string_checker</innerclass>
    <innerclass refid="classdetail_1_1format__string__compiler" prot="public">detail::format_string_compiler</innerclass>
    <innerclass refid="classdetail_1_1formatbuf" prot="public">detail::formatbuf</innerclass>
    <innerclass refid="classdetail_1_1fp" prot="public">detail::fp</innerclass>
    <innerclass refid="structdetail_1_1get__cstring" prot="public">detail::get_cstring</innerclass>
    <innerclass refid="structdetail_1_1grisu__shortest__handler" prot="public">detail::grisu_shortest_handler</innerclass>
    <innerclass refid="structdetail_1_1id__adapter" prot="public">detail::id_adapter</innerclass>
    <innerclass refid="structdetail_1_1int128__t" prot="public">detail::int128_t</innerclass>
    <innerclass refid="structdetail_1_1int__checker" prot="public">detail::int_checker</innerclass>
    <innerclass refid="structdetail_1_1int__checker_3_01true_01_4" prot="public">detail::int_checker&lt; true &gt;</innerclass>
    <innerclass refid="classdetail_1_1int__type__checker" prot="public">detail::int_type_checker</innerclass>
    <innerclass refid="structdetail_1_1int__writer" prot="public">detail::int_writer</innerclass>
    <innerclass refid="structdetail_1_1integer__sequence" prot="public">detail::integer_sequence</innerclass>
    <innerclass refid="structdetail_1_1is__back__insert__iterator" prot="public">detail::is_back_insert_iterator</innerclass>
    <innerclass refid="structdetail_1_1is__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" prot="public">detail::is_back_insert_iterator&lt; std::back_insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__compiled__string" prot="public">detail::is_compiled_string</innerclass>
    <innerclass refid="structdetail_1_1is__contiguous__back__insert__iterator" prot="public">detail::is_contiguous_back_insert_iterator</innerclass>
    <innerclass refid="structdetail_1_1is__contiguous__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" prot="public">detail::is_contiguous_back_insert_iterator&lt; std::back_insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__integral" prot="public">detail::is_integral</innerclass>
    <innerclass refid="structdetail_1_1is__integral_3_01int128__t_01_4" prot="public">detail::is_integral&lt; int128_t &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__integral_3_01uint128__t_01_4" prot="public">detail::is_integral&lt; uint128_t &gt;</innerclass>
    <innerclass refid="classdetail_1_1is__like__std__string" prot="public">detail::is_like_std_string</innerclass>
    <innerclass refid="structdetail_1_1is__like__std__string_3_01fmt_1_1basic__string__view_3_01Char_01_4_01_4" prot="public">detail::is_like_std_string&lt; fmt::basic_string_view&lt; Char &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__named__arg" prot="public">detail::is_named_arg</innerclass>
    <innerclass refid="structdetail_1_1is__named__arg_3_01named__arg_3_01Char_00_01T_01_4_01_4" prot="public">detail::is_named_arg&lt; named_arg&lt; Char, T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1is__output__iterator" prot="public">detail::is_output_iterator</innerclass>
    <innerclass refid="structdetail_1_1is__range__" prot="public">detail::is_range_</innerclass>
    <innerclass refid="structdetail_1_1is__range___3_01T_00_01conditional__t_3_01false_00_01conditional__helper_3_01decbf99f07690e728235bae9890aa68451c" prot="public">detail::is_range_&lt; T, conditional_t&lt; false, conditional_helper&lt; decltype(std::declval&lt; T &gt;().begin()), decltype(std::declval&lt; T &gt;().end())&gt;, void &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__reference__wrapper" prot="public">detail::is_reference_wrapper</innerclass>
    <innerclass refid="structdetail_1_1is__reference__wrapper_3_01std_1_1reference__wrapper_3_01T_01_4_01_4" prot="public">detail::is_reference_wrapper&lt; std::reference_wrapper&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1is__streamable" prot="public">detail::is_streamable</innerclass>
    <innerclass refid="structdetail_1_1is__string" prot="public">detail::is_string</innerclass>
    <innerclass refid="classdetail_1_1is__tuple__like__" prot="public">detail::is_tuple_like_</innerclass>
    <innerclass refid="classdetail_1_1is__zero__int" prot="public">detail::is_zero_int</innerclass>
    <innerclass refid="structdetail_1_1iterator__category" prot="public">detail::iterator_category</innerclass>
    <innerclass refid="structdetail_1_1iterator__category_3_01It_00_01void__t_3_01typename_01It_1_1iterator__category_01_4_01_4" prot="public">detail::iterator_category&lt; It, void_t&lt; typename It::iterator_category &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1iterator__category_3_01T_01_5_01_4" prot="public">detail::iterator_category&lt; T * &gt;</innerclass>
    <innerclass refid="classdetail_1_1locale__ref" prot="public">detail::locale_ref</innerclass>
    <innerclass refid="structdetail_1_1make__integer__sequence" prot="public">detail::make_integer_sequence</innerclass>
    <innerclass refid="structdetail_1_1make__integer__sequence_3_01T_00_010_00_01Ns_8_8_8_01_4" prot="public">detail::make_integer_sequence&lt; T, 0, Ns... &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__unsigned__or__bool" prot="public">detail::make_unsigned_or_bool</innerclass>
    <innerclass refid="structdetail_1_1make__unsigned__or__bool_3_01bool_01_4" prot="public">detail::make_unsigned_or_bool&lt; bool &gt;</innerclass>
    <innerclass refid="structdetail_1_1make__unsigned__or__unchanged" prot="public">detail::make_unsigned_or_unchanged</innerclass>
    <innerclass refid="structdetail_1_1make__unsigned__or__unchanged_3_01T_00_01true_01_4" prot="public">detail::make_unsigned_or_unchanged&lt; T, true &gt;</innerclass>
    <innerclass refid="structdetail_1_1named__arg" prot="public">detail::named_arg</innerclass>
    <innerclass refid="structdetail_1_1named__arg__info" prot="public">detail::named_arg_info</innerclass>
    <innerclass refid="structdetail_1_1named__arg__value" prot="public">detail::named_arg_value</innerclass>
    <innerclass refid="structdetail_1_1null" prot="public">detail::null</innerclass>
    <innerclass refid="classdetail_1_1numeric__specs__checker" prot="public">detail::numeric_specs_checker</innerclass>
    <innerclass refid="structdetail_1_1part__counter" prot="public">detail::part_counter</innerclass>
    <innerclass refid="structdetail_1_1precision__adapter" prot="public">detail::precision_adapter</innerclass>
    <innerclass refid="classdetail_1_1precision__checker" prot="public">detail::precision_checker</innerclass>
    <innerclass refid="classdetail_1_1printf__precision__handler" prot="public">detail::printf_precision_handler</innerclass>
    <innerclass refid="classdetail_1_1printf__width__handler" prot="public">detail::printf_width_handler</innerclass>
    <innerclass refid="classdetail_1_1specs__checker" prot="public">detail::specs_checker</innerclass>
    <innerclass refid="classdetail_1_1specs__handler" prot="public">detail::specs_handler</innerclass>
    <innerclass refid="classdetail_1_1specs__setter" prot="public">detail::specs_setter</innerclass>
    <innerclass refid="structdetail_1_1std__string__view" prot="public">detail::std_string_view</innerclass>
    <innerclass refid="structdetail_1_1string__value" prot="public">detail::string_value</innerclass>
    <innerclass refid="structdetail_1_1test__stream" prot="public">detail::test_stream</innerclass>
    <innerclass refid="classdetail_1_1truncating__iterator" prot="public">detail::truncating_iterator</innerclass>
    <innerclass refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1false__type_01_4" prot="public">detail::truncating_iterator&lt; OutputIt, std::false_type &gt;</innerclass>
    <innerclass refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4" prot="public">detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</innerclass>
    <innerclass refid="classdetail_1_1truncating__iterator__base" prot="public">detail::truncating_iterator_base</innerclass>
    <innerclass refid="structdetail_1_1type__constant" prot="public">detail::type_constant</innerclass>
    <innerclass refid="structdetail_1_1uint128__t" prot="public">detail::uint128_t</innerclass>
    <innerclass refid="classdetail_1_1utf8__to__utf16" prot="public">detail::utf8_to_utf16</innerclass>
    <innerclass refid="classdetail_1_1value" prot="public">detail::value</innerclass>
    <innerclass refid="structdetail_1_1view" prot="public">detail::view</innerclass>
    <innerclass refid="structdetail_1_1void__t__impl" prot="public">detail::void_t_impl</innerclass>
    <innerclass refid="structdetail_1_1width__adapter" prot="public">detail::width_adapter</innerclass>
    <innerclass refid="classdetail_1_1width__checker" prot="public">detail::width_checker</innerclass>
    <innerclass refid="structdetail_1_1write__int__data" prot="public">detail::write_int_data</innerclass>
    <innernamespace refid="namespacedetail_1_1cf">detail::cf</innernamespace>
    <innernamespace refid="namespacedetail_1_1digits">detail::digits</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="chrono_8h_1a4938659a89541ba388c06c6a33e0c8ad" prot="public" static="no" strong="yes">
        <type></type>
        <name>numeric_system</name>
        <enumvalue id="chrono_8h_1a4938659a89541ba388c06c6a33e0c8adac00f0c4675b91fb8b918e4079a0b1bac" prot="public">
          <name>standard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="chrono_8h_1a4938659a89541ba388c06c6a33e0c8adaa04fe4e390a7c7d5d4583f85d24e164d" prot="public">
          <name>alternative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="470" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="470" bodyend="474"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1af2d1c9abcf61fc5c29bb85fdbd0c0153" prot="public" static="no" strong="no">
        <type>unsigned char</type>
        <name>char8_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="333" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="333" bodyend="333"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9" prot="public" static="no" strong="yes">
        <type></type>
        <name>type</name>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a73ddc4daf8ea1ceb20179c284cfeb878" prot="public">
          <name>none_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a06d324fffd90570dc177e7d1aabcb4dd" prot="public">
          <name>int_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a3c383a94c25cfa30af585e9cc4c1f395" prot="public">
          <name>uint_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9ac01eca37c575543a14a5e4b150348c0a" prot="public">
          <name>long_long_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9aa3f9d61ae41ea1110330fd2f5c4965dc" prot="public">
          <name>ulong_long_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9aecf38f9991052ed7003df04b819cd478" prot="public">
          <name>int128_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a3e36c658caeae0ad96bf06dc49216553" prot="public">
          <name>uint128_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a5c3e61d27b2bdaf4ddb98aadc356e863" prot="public">
          <name>bool_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9abdf69faf97b2619c533f3ee73208d6e6" prot="public">
          <name>char_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9ad3f651749fd17ed60828db3d8c918219" prot="public">
          <name>last_integer_type</name>
          <initializer>= char_type</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9afd7170216efb2a7d32648e80919fb0ff" prot="public">
          <name>float_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9aaaacacbe6cfde1582c36c02ebed184cc" prot="public">
          <name>double_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9aa035716d6974f4772007421d9da94b7e" prot="public">
          <name>long_double_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a9b0037530522f724121f3fcc18407aff" prot="public">
          <name>last_numeric_type</name>
          <initializer>= long_double_type</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9aa2a29726625aeaf3218b1df220a74b1f" prot="public">
          <name>cstring_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a4771e2c3115bb1af6ce17d9d35a0eb48" prot="public">
          <name>string_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9ac4c3a6c59d8a6e74dc8b960f585f494a" prot="public">
          <name>pointer_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="core_8h_1ad46d232fb6116de4dac0c43dbde8e7a9a30b646549b4a4e783335c2ca40542c08" prot="public">
          <name>custom_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="819" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="819" bodyend="840"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1aa8c4795e6101bd5db6ea2863ab6ddd37" prot="public" static="no" strong="no">
        <type></type>
        <name>@20</name>
        <enumvalue id="core_8h_1aa8c4795e6101bd5db6ea2863ab6ddd37a216bab4ee1c699215731c714a24f14aa" prot="public">
          <name>long_short</name>
          <initializer>= sizeof(long) == sizeof(int)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="961" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="961" bodyend="961"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1a1068cdf3b78b6a9f7035418e794bfdfe" prot="public" static="no" strong="no">
        <type></type>
        <name>@21</name>
        <enumvalue id="core_8h_1a1068cdf3b78b6a9f7035418e794bfdfea149a6008e8eb33e9f04e9c60e5af67df" prot="public">
          <name>packed_arg_bits</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1090" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1090" bodyend="1090"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1a3a3b4c80431491ecb85772ba3df30ff9" prot="public" static="no" strong="no">
        <type></type>
        <name>@22</name>
        <enumvalue id="core_8h_1a3a3b4c80431491ecb85772ba3df30ff9ada6fd23ae888ef5565f969ed3dcfc955" prot="public">
          <name>max_packed_args</name>
          <initializer>= 62 / packed_arg_bits</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1092" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1092" bodyend="1092"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1a281cdbc8b4c412b7bf3f785f23249086" prot="public" static="no" strong="no">
        <type>unsigned long long</type>
        <name>@23</name>
        <enumvalue id="core_8h_1a281cdbc8b4c412b7bf3f785f23249086a5ef7ee224da6d76d4334a2fdabc33369" prot="public">
          <name>is_unpacked_bit</name>
          <initializer>= 1ULL &lt;&lt; 63</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1093" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1093" bodyend="1093"/>
      </memberdef>
      <memberdef kind="enum" id="core_8h_1ab3d313716572e51cfe1c48998694ad88" prot="public" static="no" strong="no">
        <type>unsigned long long</type>
        <name>@24</name>
        <enumvalue id="core_8h_1ab3d313716572e51cfe1c48998694ad88aedcfb8122499decbcaf5949d966dbbca" prot="public">
          <name>has_named_args_bit</name>
          <initializer>= 1ULL &lt;&lt; 62</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1094" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1094" bodyend="1094"/>
      </memberdef>
      <memberdef kind="enum" id="format-inl_8h_1a85c22d2ea092a6b8340cec5779f4f2e7" prot="public" static="no" strong="yes">
        <type></type>
        <name>round_direction</name>
        <enumvalue id="format-inl_8h_1a85c22d2ea092a6b8340cec5779f4f2e7aad921d60486366258809553a3db49a4a" prot="public">
          <name>unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format-inl_8h_1a85c22d2ea092a6b8340cec5779f4f2e7a46c48bec0d282018b9d167eef7711b2c" prot="public">
          <name>up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format-inl_8h_1a85c22d2ea092a6b8340cec5779f4f2e7a74e8333ad11685ff3bdae589c8f6e34d" prot="public">
          <name>down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="761" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="761" bodyend="761"/>
      </memberdef>
      <memberdef kind="enum" id="format_8h_1a6d3fb50aed591a58636fa8e2b39222f9" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>float_format</name>
        <enumvalue id="format_8h_1a6d3fb50aed591a58636fa8e2b39222f9a958153f1b8b96ec4c4eb2147429105d9" prot="public">
          <name>general</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format_8h_1a6d3fb50aed591a58636fa8e2b39222f9ab0ab0254bd58eb87eaee3172ba49fefb" prot="public">
          <name>exp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format_8h_1a6d3fb50aed591a58636fa8e2b39222f9acec315e3d0975e5cc2811d5d8725f149" prot="public">
          <name>fixed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format_8h_1a6d3fb50aed591a58636fa8e2b39222f9ab8d1b43eae73587ba56baef574709ecb" prot="public">
          <name>hex</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1071" column="24" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1071" bodyend="1076"/>
      </memberdef>
      <memberdef kind="enum" id="format_8h_1ac4c79842ec549e8b02145d43a1fbc330" prot="public" static="no" strong="yes">
        <type></type>
        <name>arg_id_kind</name>
        <enumvalue id="format_8h_1ac4c79842ec549e8b02145d43a1fbc330a334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format_8h_1ac4c79842ec549e8b02145d43a1fbc330a6a992d5529f459a44fee58c733255e86" prot="public">
          <name>index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="format_8h_1ac4c79842ec549e8b02145d43a1fbc330ab068931cc450442b63f5b3d276ea4297" prot="public">
          <name>name</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2281" column="23" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2281" bodyend="2281"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="core_8h_1a9dc55254a0b651b00ec7a0390b8c35bf" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
        </templateparamlist>
        <type>std::is_constructible&lt; <ref refid="structdetail_1_1fallback__formatter" kindref="compound">fallback_formatter</ref>&lt; T, typename Context::char_type &gt; &gt;</type>
        <definition>using detail::has_fallback_formatter = typedef std::is_constructible&lt;fallback_formatter&lt;T, typename Context::char_type&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>has_fallback_formatter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="746" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="747" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1ad56d4ab24a38ce2caa8ee0d905fbcf78" prot="public" static="no">
        <type>conditional_t&lt; long_short, int, long long &gt;</type>
        <definition>using detail::long_type = typedef conditional_t&lt;long_short, int, long long&gt;</definition>
        <argsstring></argsstring>
        <name>long_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="962" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="962" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a2cf212f7cb695256ac8c1cee8e3406b5" prot="public" static="no">
        <type>conditional_t&lt; long_short, unsigned, unsigned long long &gt;</type>
        <definition>using detail::ulong_type = typedef conditional_t&lt;long_short, unsigned, unsigned long long&gt;</definition>
        <argsstring></argsstring>
        <name>ulong_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="963" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="963" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a339c84659505dbd2276f8496a77f6669" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1type__constant" kindref="compound">type_constant</ref>&lt; decltype(<ref refid="structdetail_1_1arg__mapper" kindref="compound">arg_mapper</ref>&lt; Context &gt;().map(std::declval&lt; const T &amp; &gt;())), typename Context::char_type &gt;</type>
        <definition>using detail::mapped_type_constant = typedef type_constant&lt;decltype(arg_mapper&lt;Context&gt;().map(std::declval&lt;const T&amp;&gt;())), typename Context::char_type&gt;</definition>
        <argsstring></argsstring>
        <name>mapped_type_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1086" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1088" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1a716952b5b40584c824cc8c9327bd66d6" prot="public" static="no">
        <type><ref refid="structdetail_1_1fallback__uintptr" kindref="compound">fallback_uintptr</ref></type>
        <definition>using detail::uintptr_t = typedef fallback_uintptr</definition>
        <argsstring></argsstring>
        <name>uintptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="272" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1a7bf6775e36600ae7e2bf9d6e0a309a0e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1void__t__impl" kindref="compound">detail::void_t_impl</ref>&lt; Ts... &gt;::type</type>
        <definition>using detail::void_t = typedef typename detail::void_t_impl&lt;Ts...&gt;::type</definition>
        <argsstring></argsstring>
        <name>void_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="305" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1a4a39a2b28cbffad10a8c1aff003d0b6c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(std::begin(std::declval&lt; T &amp; &gt;()))</type>
        <definition>using detail::iterator_t = typedef decltype(std::begin(std::declval&lt;T&amp;&gt;()))</definition>
        <argsstring></argsstring>
        <name>iterator_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="309" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1a17d5bfef15bf18e08b2bce72218d97c0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(std::end(std::declval&lt; T &amp; &gt;()))</type>
        <definition>using detail::sentinel_t = typedef decltype(std::end(std::declval&lt;T&amp;&gt;()))</definition>
        <argsstring></argsstring>
        <name>sentinel_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="310" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1ae081d5e2243e8940c304a840bc09a908" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>using detail::checked_ptr = typedef T*</definition>
        <argsstring></argsstring>
        <name>checked_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="361" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1ad584feb9c277f4cb51d7080fc4aa3e93" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename InputIt</type>
          </param>
          <param>
            <type>typename OutChar</type>
          </param>
        </templateparamlist>
        <type>bool_constant&lt; std::is_same&lt; typename std::iterator_traits&lt; InputIt &gt;::value_type, char &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &amp;&amp;std::is_same&lt; OutChar, char8_type &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &gt;</type>
        <definition>using detail::needs_conversion = typedef bool_constant&lt; std::is_same&lt;typename std::iterator_traits&lt;InputIt&gt;::value_type, char&gt;::value &amp;&amp; std::is_same&lt;OutChar, char8_type&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>needs_conversion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="540" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1a3a48e649f0146ba29b9476b1a4efe2ce" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, std::numeric_limits&lt; T &gt;::is_signed||std::is_same&lt; T, <ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref> &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &gt;</type>
        <definition>using detail::is_signed = typedef std::integral_constant&lt;bool, std::numeric_limits&lt;T&gt;::is_signed || std::is_same&lt;T, int128_t&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>is_signed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="728" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1afe0d864e264f254558dd9736f0b4ae1b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>conditional_t&lt; num_bits&lt; T &gt;()&lt;=32, uint32_t, conditional_t&lt; num_bits&lt; T &gt;()&lt;=64, uint64_t, <ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref> &gt; &gt;</type>
        <definition>using detail::uint32_or_64_or_128_t = typedef conditional_t&lt;num_bits&lt;T&gt;() &lt;= 32, uint32_t, conditional_t&lt;num_bits&lt;T&gt;() &lt;= 64, uint64_t, uint128_t&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>uint32_or_64_or_128_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="753" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1ae6bedb78ab4aac08b0ce8534d954318e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool_constant&lt; <ref refid="structdetail_1_1is__integral" kindref="compound">is_integral</ref>&lt; T &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &amp;&amp;!std::is_same&lt; T, bool &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &amp;&amp;!std::is_same&lt; T, char &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &amp;&amp;!std::is_same&lt; T, wchar_t &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &gt;</type>
        <definition>using detail::is_integer = typedef bool_constant&lt;is_integral&lt;T&gt;::value &amp;&amp; !std::is_same&lt;T, bool&gt;::value &amp;&amp; !std::is_same&lt;T, char&gt;::value &amp;&amp; !std::is_same&lt;T, wchar_t&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>is_integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2059" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2062" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="format_8h_1aa25c7d55b6b3e997f07fae32884e0514" prot="public" static="no">
        <type>void(*)(<ref refid="classdetail_1_1buffer" kindref="compound">detail::buffer</ref>&lt; char &gt; &amp;, int, <ref refid="classbasic__string__view" kindref="compound">string_view</ref>)</type>
        <definition>using detail::format_func = typedef void (*)(detail::buffer&lt;char&gt;&amp;, int, string_view)</definition>
        <argsstring></argsstring>
        <name>format_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2895" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ranges_8h_1ab8ad9084b8c3d1b80bab7c42cb936d0e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>size_t...</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1integer__sequence" kindref="compound">integer_sequence</ref>&lt; size_t, N... &gt;</type>
        <definition>using detail::index_sequence = typedef integer_sequence&lt;size_t, N...&gt;</definition>
        <argsstring></argsstring>
        <name>index_sequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="130" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ranges_8h_1a82dd889f447e7a1383b8757be27f66e9" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1make__integer__sequence" kindref="compound">make_integer_sequence</ref>&lt; size_t, N &gt;</type>
        <definition>using detail::make_index_sequence = typedef make_integer_sequence&lt;size_t, N&gt;</definition>
        <argsstring></argsstring>
        <name>make_index_sequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="138" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="format_8h_1afff9299aba0ea4694c55cddeec0d2ae4" prot="public" static="no" mutable="no">
        <type>FMT_EXTERN template struct</type>
        <definition>FMT_EXTERN template struct detail::basic_data&lt; void &gt;</definition>
        <argsstring></argsstring>
        <name>basic_data&lt; void &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="778" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="format_8cc_1ac76a90731f8d475d7b8e9aea37e461b3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t detail::memory_heap_tag</definition>
        <argsstring></argsstring>
        <name>memory_heap_tag</name>
        <initializer>= 0xAA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/bundled/fmt/format.cc" line="67" column="26" bodyfile="lib/srslog/bundled/fmt/format.cc" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="format_8cc_1aa351b7c386737f714d218e1330340250" prot="public" static="yes" mutable="no">
        <type><ref refid="classdetail_1_1dyn__node__pool" kindref="compound">dyn_node_pool</ref></type>
        <definition>dyn_node_pool detail::node_pool</definition>
        <argsstring></argsstring>
        <name>node_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/bundled/fmt/format.cc" line="128" column="22" bodyfile="lib/srslog/bundled/fmt/format.cc" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="chrono_8h_1a556904330c36d3d826ed34b09447438b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref> localtime_r</type>
        <definition>null localtime_r detail::FMT_NOMACRO</definition>
        <argsstring>(...)</argsstring>
        <name>FMT_NOMACRO</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="311" column="21" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="311" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1acca4638afe6cbc4e38e3901cd0c16186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::localtime_s</definition>
        <argsstring>(...)</argsstring>
        <name>localtime_s</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="312" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a5f72d5acfa41ae0e7350078cdb72d93c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::gmtime_r</definition>
        <argsstring>(...)</argsstring>
        <name>gmtime_r</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="313" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a124e4142bce4975170df82199789b2e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1null" kindref="compound">null</ref></type>
        <definition>null detail::gmtime_s</definition>
        <argsstring>(...)</argsstring>
        <name>gmtime_s</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="314" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="314" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a1f56278fd84d8bc33338c33694a87fb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t detail::strftime</definition>
        <argsstring>(char *str, size_t count, const char *format, const std::tm *time)</argsstring>
        <name>strftime</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const std::tm *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="391" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1aa394945bd077a30102ef2ca015a1540b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t detail::strftime</definition>
        <argsstring>(wchar_t *str, size_t count, const wchar_t *format, const std::tm *time)</argsstring>
        <name>strftime</name>
        <param>
          <type>wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>const std::tm *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="396" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a62a0c33d4a3b06e64729e55cb00e3636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Period</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units</definition>
        <argsstring>()</argsstring>
        <name>get_units</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="443" column="38" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a05629efc50011804c42e7c767412dae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::atto &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::atto &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="446" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="446" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a98bc6dd4cc6663a266842de3a62e597e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::femto &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::femto &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="447" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="447" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1ac5c18e13e17683ce777b198f6e0ab7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::pico &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::pico &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="448" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="448" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a73ab2b6a847078b19d8ab800210e3129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::nano &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::nano &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="449" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="449" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1ae2739dae50a5dd36a164689102686eb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::micro &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::micro &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="450" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="450" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1ac8f31e21f42fbab8ddad3076919bf874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::milli &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::milli &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="451" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="451" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a39646ecf86d5007270722752044ab619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::centi &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::centi &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="452" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="452" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a1ef13033f3a495a12bdea2151a1b72a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::deci &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::deci &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="453" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="453" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a7e27ce6d5a4bd07470e7e0bdae79586c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::ratio&lt; 1 &gt; &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::ratio&lt; 1 &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="454" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="454" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a24cffe87986d92e855af42e9436b7981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::deca &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::deca &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="455" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="455" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a3f9ce2c7d412290407a161616ff80a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::hecto &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::hecto &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="456" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="456" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a7424c60c93f8bc3f017549606a037ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::kilo &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::kilo &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="457" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="457" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a93ec8e29fab32d53c35fefc66229ab4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::mega &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::mega &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="458" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a3a0901d5a8ec1f02338b44bdea653467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::giga &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::giga &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="459" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="459" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a046c6c3c020e5670addc3468c3561c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::tera &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::tera &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="460" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1ae74f7ed0deb11456c97bf87c9d76d05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::peta &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::peta &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="461" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="461" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a00be3160ac12c9c8b7ba92795d7756e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::exa &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::exa &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="462" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a1300dfa615cf7d4ca3eac1c6d8e582ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::ratio&lt; 60 &gt; &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::ratio&lt; 60 &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="463" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="463" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1afc06329e4ccd8e7eab34cc6a421a3a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::get_units&lt; std::ratio&lt; 3600 &gt; &gt;</definition>
        <argsstring>()</argsstring>
        <name>get_units&lt; std::ratio&lt; 3600 &gt; &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="466" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a1630867e4333dc65c58254faaa4c9fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_chrono_format</definition>
        <argsstring>(const Char *begin, const Char *end, Handler &amp;&amp;handler)</argsstring>
        <name>parse_chrono_format</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="478" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="478" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a2b3e8f824c374e42174c97c7ffe56841" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_integral&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool detail::isnan</definition>
        <argsstring>(T)</argsstring>
        <name>isnan</name>
        <param>
          <type>T</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="664" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="664" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1ab69f2583a2a167ea0b0e4c333448b113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_integral&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool detail::isfinite</definition>
        <argsstring>(T)</argsstring>
        <name>isfinite</name>
        <param>
          <type>T</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="673" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="673" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a929bdeea8b3a0e09b5785f3d12540d58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_integral&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int detail::to_nonnegative_int</definition>
        <argsstring>(T value, int upper)</argsstring>
        <name>to_nonnegative_int</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="683" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="683" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1ae7415818bbbc5e306422e8a341126ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_integral&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T detail::mod</definition>
        <argsstring>(T x, int y)</argsstring>
        <name>mod</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="698" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="698" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a455d343d67b456f593d31c1b40186bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename FromRep</type>
          </param>
          <param>
            <type>typename FromPeriod</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To detail::fmt_safe_duration_cast</definition>
        <argsstring>(std::chrono::duration&lt; FromRep, FromPeriod &gt; from)</argsstring>
        <name>fmt_safe_duration_cast</name>
        <param>
          <type>std::chrono::duration&lt; FromRep, FromPeriod &gt;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="720" column="4" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="720" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1afe1ec4d4c96158dd196c3f3eee8d7ed1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Rep</type>
          </param>
          <param>
            <type>typename Period</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_integral&lt; Rep &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>std::chrono::duration&lt; Rep, std::milli &gt;</type>
        <definition>std::chrono::duration&lt; Rep, std::milli &gt; detail::get_milliseconds</definition>
        <argsstring>(std::chrono::duration&lt; Rep, Period &gt; d)</argsstring>
        <name>get_milliseconds</name>
        <param>
          <type>std::chrono::duration&lt; Rep, Period &gt;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="730" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="730" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a8df2f4acf49861d6cdba35bff3245134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Rep</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::format_duration_value</definition>
        <argsstring>(OutputIt out, Rep val, int precision)</argsstring>
        <name>format_duration_value</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Rep</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="763" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="763" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1a7594c0bc5a5dd12ad9d1804545f1c36f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::copy_unit</definition>
        <argsstring>(string_view unit, OutputIt out, Char)</argsstring>
        <name>copy_unit</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="772" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="772" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1adcecc40fe13a2b872de3b7fc8a871c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::copy_unit</definition>
        <argsstring>(string_view unit, OutputIt out, wchar_t)</argsstring>
        <name>copy_unit</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>unit</declname>
        </param>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>wchar_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="777" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="777" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="chrono_8h_1afcf68cff2fcc34231c571f367bbffa3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Period</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::format_duration_unit</definition>
        <argsstring>(OutputIt out)</argsstring>
        <name>format_duration_unit</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="785" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/chrono.h" bodystart="785" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1aad26922cd6821f772eb22aeb1408980a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="structdetail_1_1ansi__color__escape" kindref="compound">ansi_color_escape</ref>&lt; Char &gt;</type>
        <definition>FMT_CONSTEXPR ansi_color_escape&lt;Char&gt; detail::make_foreground_color</definition>
        <argsstring>(detail::color_type foreground) FMT_NOEXCEPT</argsstring>
        <name>make_foreground_color</name>
        <param>
          <type><ref refid="structdetail_1_1color__type" kindref="compound">detail::color_type</ref></type>
          <declname>foreground</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="431" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1a4a4a9c894018ea2a012b5862da8d08ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="structdetail_1_1ansi__color__escape" kindref="compound">ansi_color_escape</ref>&lt; Char &gt;</type>
        <definition>FMT_CONSTEXPR ansi_color_escape&lt;Char&gt; detail::make_background_color</definition>
        <argsstring>(detail::color_type background) FMT_NOEXCEPT</argsstring>
        <name>make_background_color</name>
        <param>
          <type><ref refid="structdetail_1_1color__type" kindref="compound">detail::color_type</ref></type>
          <declname>background</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="437" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="437" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1ae3d649818676b1dccf18bccdacd7d4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="structdetail_1_1ansi__color__escape" kindref="compound">ansi_color_escape</ref>&lt; Char &gt;</type>
        <definition>FMT_CONSTEXPR ansi_color_escape&lt;Char&gt; detail::make_emphasis</definition>
        <argsstring>(emphasis em) FMT_NOEXCEPT</argsstring>
        <name>make_emphasis</name>
        <param>
          <type>emphasis</type>
          <declname>em</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="443" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1a03ede88b01766daf1fdd65098cf389bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::fputs</definition>
        <argsstring>(const Char *chars, FILE *stream) FMT_NOEXCEPT</argsstring>
        <name>fputs</name>
        <param>
          <type>const Char *</type>
          <declname>chars</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="448" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="448" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1a39d5c60186a159809d0af12f36e38ab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::fputs&lt; wchar_t &gt;</definition>
        <argsstring>(const wchar_t *chars, FILE *stream) FMT_NOEXCEPT</argsstring>
        <name>fputs&lt; wchar_t &gt;</name>
        <param>
          <type>const wchar_t *</type>
          <declname>chars</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="453" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="453" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1a6fcdcd0449f2a06895cc307c1cf8f95e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::reset_color</definition>
        <argsstring>(FILE *stream) FMT_NOEXCEPT</argsstring>
        <name>reset_color</name>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="457" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1aed24b7a492eece34f553e7c560bec724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::reset_color&lt; wchar_t &gt;</definition>
        <argsstring>(FILE *stream) FMT_NOEXCEPT</argsstring>
        <name>reset_color&lt; wchar_t &gt;</name>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="461" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1a9ee263999290809b10058489e6c34535" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::reset_color</definition>
        <argsstring>(basic_memory_buffer&lt; Char &gt; &amp;buffer) FMT_NOEXCEPT</argsstring>
        <name>reset_color</name>
        <param>
          <type><ref refid="classbasic__memory__buffer" kindref="compound">basic_memory_buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="466" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="466" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="color_8h_1a4094c451bef434d9c08da70b057e6e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::vformat_to</definition>
        <argsstring>(basic_memory_buffer&lt; Char &gt; &amp;buf, const text_style &amp;ts, basic_string_view&lt; Char &gt; format_str, basic_format_args&lt; buffer_context&lt; Char &gt;&gt; args)</argsstring>
        <name>vformat_to</name>
        <param>
          <type><ref refid="classbasic__memory__buffer" kindref="compound">basic_memory_buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="classtext__style" kindref="compound">text_style</ref> &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; Char &gt;&gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/color.h" line="473" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/color.h" bodystart="473" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1a5a2850c394261d60aece52dbd93d3df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tail</declname>
            <defname>Tail</defname>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; detail::first</definition>
        <argsstring>(const T &amp;value, const Tail &amp;...)</argsstring>
        <name>first</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const Tail &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="40" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1a93ae51ce59a91f8261f935c84f095c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR unsigned</type>
        <definition>FMT_CONSTEXPR unsigned detail::count_parts</definition>
        <argsstring>(basic_string_view&lt; Char &gt; format_str)</argsstring>
        <name>count_parts</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="119" column="24" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1a8f34e3b1447d78c25e251b0bdea2bc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>IS_CONSTEXPR</declname>
            <defname>IS_CONSTEXPR</defname>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename PartHandler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR void</type>
        <definition>FMT_CONSTEXPR void detail::compile_format_string</definition>
        <argsstring>(basic_string_view&lt; Char &gt; format_str, PartHandler handler)</argsstring>
        <name>compile_format_string</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>PartHandler</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="187" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1a5b3ee33cf5ec2ee4f5d3da02015e050d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>typename Id</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::format_arg</definition>
        <argsstring>(basic_format_parse_context&lt; typename Context::char_type &gt; &amp;parse_ctx, Context &amp;ctx, Id arg_id)</argsstring>
        <name>format_arg</name>
        <param>
          <type><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context</ref>&lt; typename Context::char_type &gt; &amp;</type>
          <declname>parse_ctx</declname>
        </param>
        <param>
          <type>Context &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>arg_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="195" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="195" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1a4b35fa8f207f1f57ff98950f5560b023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>unsigned</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="structdetail_1_1format__part__array" kindref="compound">format_part_array</ref>&lt; Char, N &gt;</type>
        <definition>FMT_CONSTEXPR format_part_array&lt;Char, N&gt; detail::compile_to_parts</definition>
        <argsstring>(basic_string_view&lt; Char &gt; format_str)</argsstring>
        <name>compile_to_parts</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="297" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="297" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1af09057bbe3b75748d4789a5a89c220f2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr const T &amp;</type>
        <definition>constexpr const T&amp; detail::constexpr_max</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>constexpr_max</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="317" column="31" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1aef8e3ad9749eea494063c52528a8f3d8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structis__compile__string" kindref="compound">is_compile_string</ref>&lt; S &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto detail::compile</definition>
        <argsstring>(S format_str) -&gt; detail::compiled_format&lt; S, Args... &gt;</argsstring>
        <name>compile</name>
        <param>
          <type>S</type>
          <declname>format_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="560" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="560" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="compile_8h_1a4cc7dabcbe241187bd94d735c0659010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto detail::compile</definition>
        <argsstring>(const Char(&amp;format_str)[N]) -&gt; detail::compiled_format&lt; const Char *, Args... &gt;</argsstring>
        <name>compile</name>
        <param>
          <type>const Char(&amp;)</type>
          <declname>format_str</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/compile.h" line="567" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/compile.h" bodystart="567" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a8249a7aee80c371580193de8004c8a94" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T detail::const_check</definition>
        <argsstring>(T value)</argsstring>
        <name>const_check</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="276" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a6c6e0604e89fc0ef840b154b8e8b0524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_NORETURN FMT_API void</type>
        <definition>FMT_FUNC void detail::assert_fail</definition>
        <argsstring>(const char *file, int line, const char *message)</argsstring>
        <name>assert_fail</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="51" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="51" bodyend="58" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="278" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a06b4b36f7074d59dcc54e8cf06f39c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR std::make_unsigned&lt; Int &gt;::type</type>
        <definition>FMT_CONSTEXPR std::make_unsigned&lt;Int&gt;::type detail::to_unsigned</definition>
        <argsstring>(Int value)</argsstring>
        <name>to_unsigned</name>
        <param>
          <type>Int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="318" column="50" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a9fd1b91954c13d1c4a303d4910aea815" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_SUPPRESS_MSC_WARNING</definition>
        <argsstring>(4566) const expr unsigned char micro[]</argsstring>
        <name>FMT_SUPPRESS_MSC_WARNING</name>
        <param>
          <type>4566</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="323" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="323" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a6834c328b1ce12ad432df01c7f09406b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool detail::is_unicode</definition>
        <argsstring>()</argsstring>
        <name>is_unicode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="325" column="28" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ac7c01a1dadcc0fa5646390d0bb27be6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void detail::to_string_view</definition>
        <argsstring>(...)</argsstring>
        <name>to_string_view</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="495" column="6" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="495" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1afbd391b394bf543d026bce315c6f131b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>Container &amp;</type>
        <definition>Container&amp; detail::get_container</definition>
        <argsstring>(std::back_insert_iterator&lt; Container &gt; it)</argsstring>
        <name>get_container</name>
        <param>
          <type>std::back_insert_iterator&lt; Container &gt;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="730" column="18" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="730" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a3a28bc7b7a52b0653a1da27750e18187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::init_named_args</definition>
        <argsstring>(named_arg_info&lt; Char &gt; *, int, int)</argsstring>
        <name>init_named_args</name>
        <param>
          <type><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info</ref>&lt; Char &gt; *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="786" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="786" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1afcdfcc63793005e0e9c5a6fbf6f82618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tail</declname>
            <defname>Tail</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::init_named_args</definition>
        <argsstring>(named_arg_info&lt; Char &gt; *named_args, int arg_count, int named_arg_count, const T &amp;, const Tail &amp;... args)</argsstring>
        <name>init_named_args</name>
        <param>
          <type><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info</ref>&lt; Char &gt; *</type>
          <declname>named_args</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>named_arg_count</declname>
        </param>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>const Tail &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="789" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="789" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ab45ae1f89e2fcc86b7a1f83fbe86b100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tail</declname>
            <defname>Tail</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::init_named_args</definition>
        <argsstring>(named_arg_info&lt; Char &gt; *named_args, int arg_count, int named_arg_count, const named_arg&lt; Char, T &gt; &amp;arg, const Tail &amp;... args)</argsstring>
        <name>init_named_args</name>
        <param>
          <type><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info</ref>&lt; Char &gt; *</type>
          <declname>named_args</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>named_arg_count</declname>
        </param>
        <param>
          <type>const <ref refid="structdetail_1_1named__arg" kindref="compound">named_arg</ref>&lt; Char, T &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const Tail &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="795" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="795" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1aef09362fe78f97bcd17b9c4192c44a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>FMT_INLINE void</type>
        <definition>FMT_INLINE void detail::init_named_args</definition>
        <argsstring>(std::nullptr_t, int, int, const Args &amp;...)</argsstring>
        <name>init_named_args</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const Args &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="803" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="803" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ab2f84fb3de26acdac3fc63a2dce5ea5e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>B</declname>
            <defname>B</defname>
            <defval>false</defval>
          </param>
        </templateparamlist>
        <type>constexpr size_t</type>
        <definition>constexpr size_t detail::count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="810" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="810" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a3b352b86665e2819d889cdf1f064788c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>B1</declname>
            <defname>B1</defname>
          </param>
          <param>
            <type>bool</type>
            <declname>B2</declname>
            <defname>B2</defname>
          </param>
          <param>
            <type>bool...</type>
            <declname>Tail</declname>
            <defname>Tail</defname>
          </param>
        </templateparamlist>
        <type>constexpr size_t</type>
        <definition>constexpr size_t detail::count</definition>
        <argsstring>()</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="811" column="34" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="811" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ab6a5b99d2f6a28dcbe993c48f180d9dc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr size_t</type>
        <definition>constexpr size_t detail::count_named_args</definition>
        <argsstring>()</argsstring>
        <name>count_named_args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="815" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="815" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a37505e9beefe6364bcaff6d8b5f5d52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(int, int_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="851" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="851" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a6b44317eb9e575cb17b19d02510b5c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(unsigned, uint_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>unsigned</type>
        </param>
        <param>
          <type>uint_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="852" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="852" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a9cfcf5302ffb694882756683888ff323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(long long, long_long_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>long long</type>
        </param>
        <param>
          <type>long_long_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="853" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="853" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a19fe0523a95f2e571745ce3acf05f9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(unsigned long long, ulong_long_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>unsigned long long</type>
        </param>
        <param>
          <type>ulong_long_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="854" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="854" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a167c8a998550ac44e82e104f7e5a03ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(int128_t, int128_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type><ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref></type>
        </param>
        <param>
          <type>int128_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="855" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="855" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a16c6f0fa9431a2b4519ba0d14a7ada72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(uint128_t, uint128_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type><ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref></type>
        </param>
        <param>
          <type>uint128_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="856" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="856" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a9a98f5bf5accfd1a7770ecd7c586ac10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(bool, bool_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>bool_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="857" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="857" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1acf06cc05efb342381969ffe9fca3ff3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(Char, char_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>Char</type>
        </param>
        <param>
          <type>char_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="858" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="858" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a612aa9352f054dd6f7c49683f8899e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(float, float_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="859" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="859" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1accc5f6bff51925f9522a124b327c0152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(double, double_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="860" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="860" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a003e0caffa44ced976fd5d7e5dcedfec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(long double, long_double_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>long double</type>
        </param>
        <param>
          <type>long_double_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="861" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="861" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a2884e1bff3a236b6326f46ad5d9e3a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(const Char *, cstring_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>const Char *</type>
        </param>
        <param>
          <type>cstring_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="862" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="862" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a8e5fa1a45b440bec62a7b1a5996d471f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(basic_string_view&lt; Char &gt;, string_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        </param>
        <param>
          <type>string_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="863" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="863" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a8b6bfb13963951edc6b82d79be793541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>detail::FMT_TYPE_CONSTANT</definition>
        <argsstring>(const void *, pointer_type)</argsstring>
        <name>FMT_TYPE_CONSTANT</name>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type>pointer_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="864" column="1" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="864" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a75429f7a79746d6058e8d46951964362" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool detail::is_integral_type</definition>
        <argsstring>(type t)</argsstring>
        <name>is_integral_type</name>
        <param>
          <type>type</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="866" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="866" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ab52e686c2eecca47f1dcc29a3dcfe72f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool detail::is_arithmetic_type</definition>
        <argsstring>(type t)</argsstring>
        <name>is_arithmetic_type</name>
        <param>
          <type>type</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="870" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="870" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a3b9029d1d5a999c73d00362807c7840b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; Context &gt;</type>
        <definition>FMT_CONSTEXPR basic_format_arg&lt; Context &gt; detail::make_arg</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>make_arg</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1249" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1249" bodyend="1254" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="957" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a9b6ea2c97952d4f7feb5197787941f16" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>constexpr unsigned long long</type>
        <definition>constexpr unsigned long long detail::encode_types</definition>
        <argsstring>()</argsstring>
        <name>encode_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1240" column="41" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1240" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ad0fbaed73ea39ceff19dc5e6ae200aba" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr unsigned long long</type>
        <definition>constexpr unsigned long long detail::encode_types</definition>
        <argsstring>()</argsstring>
        <name>encode_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1243" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1243" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1abf4b92af4c93418616f5470500bb0498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>IS_PACKED</declname>
            <defname>IS_PACKED</defname>
          </param>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>type</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(IS_PACKED)</type>
          </param>
        </templateparamlist>
        <type><ref refid="classdetail_1_1value" kindref="compound">value</ref>&lt; Context &gt;</type>
        <definition>value&lt;Context&gt; detail::make_arg</definition>
        <argsstring>(const T &amp;val)</argsstring>
        <name>make_arg</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1261" column="14" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1261" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a37818aa7f2f26301a54ba01d5fd96ffc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>IS_PACKED</declname>
            <defname>IS_PACKED</defname>
          </param>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>type</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!IS_PACKED)</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; Context &gt;</type>
        <definition>basic_format_arg&lt;Context&gt; detail::make_arg</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>make_arg</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1267" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1267" bodyend="1269"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ae56b851e959627db9e9bcb9dcd6d2812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; detail::unwrap</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>unwrap</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1275" column="21" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1275" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a831114612dd14c864b58c531cdaec1ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; detail::unwrap</definition>
        <argsstring>(const std::reference_wrapper&lt; T &gt; &amp;v)</argsstring>
        <name>unwrap</name>
        <param>
          <type>const std::reference_wrapper&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1276" column="21" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1276" bodyend="1278"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a9f9490d451c4924aa03541038a7a4470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!<ref refid="structis__compile__string" kindref="compound">is_compile_string</ref>&lt; S &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>FMT_INLINE void</type>
        <definition>FMT_INLINE void detail::check_format_string</definition>
        <argsstring>(const S &amp;)</argsstring>
        <name>check_format_string</name>
        <param>
          <type>const S &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1796" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1796" bodyend="1802"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1aa614c17d10a1daed9ec84b7c311ee209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structis__compile__string" kindref="compound">is_compile_string</ref>&lt; S &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::check_format_string</definition>
        <argsstring>(S)</argsstring>
        <name>check_format_string</name>
        <param>
          <type>S</type>
          <defname>format_str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2869" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2869" bodyend="2876" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="1804" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1acf29a2062ad490f6f8390e5db3affe84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename Char</type>
            <defval>char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classformat__arg__store" kindref="compound">format_arg_store</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; Char &gt;, remove_reference_t&lt; Args &gt;... &gt;</type>
        <definition>format_arg_store&lt;buffer_context&lt;Char&gt;, remove_reference_t&lt;Args&gt;...&gt; detail::make_args_checked</definition>
        <argsstring>(const S &amp;format_str, const remove_reference_t&lt; Args &gt; &amp;... args)</argsstring>
        <name>make_args_checked</name>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>const remove_reference_t&lt; Args &gt; &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1808" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1808" bodyend="1815"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1aa515075f344482e08358e80c0dcf0d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_same&lt; Char, char &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>std::basic_string&lt; Char &gt;</type>
        <definition>std::basic_string&lt; Char &gt; detail::vformat</definition>
        <argsstring>(basic_string_view&lt; Char &gt; format_str, basic_format_args&lt; buffer_context&lt; type_identity_t&lt; Char &gt;&gt;&gt; args)</argsstring>
        <name>vformat</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; type_identity_t&lt; Char &gt;&gt;&gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1818" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="3604" bodyend="3610" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="1818" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a6a9eea923f4babb0784f05e320508818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_API std::string</type>
        <definition>FMT_FUNC std::string detail::vformat</definition>
        <argsstring>(string_view format_str, format_args args)</argsstring>
        <name>vformat</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="structformat__args" kindref="compound">format_args</ref></type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1822" column="21" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="1401" bodyend="1410" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="1822" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a578c38e5ca63f55bde5482c4ed918735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Args</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_same&lt; Char, char &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>FMT_BUFFER_CONTEXT(Char) void</type>
        <definition>FMT_BUFFER_CONTEXT (Char) void detail::vprint_mojibake</definition>
        <argsstring>(std::FILE *, basic_string_view&lt; Char &gt;, const Args &amp;)</argsstring>
        <name>vprint_mojibake</name>
        <param>
          <type>std::FILE *</type>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        </param>
        <param>
          <type>const Args &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1831" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1831" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a77e0ec2800c95bbc90881ae7be6477d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FMT_API void</type>
        <definition>void detail::vprint_mojibake</definition>
        <argsstring>(std::FILE *, string_view, format_args)</argsstring>
        <name>vprint_mojibake</name>
        <param>
          <type>std::FILE *</type>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
        </param>
        <param>
          <type><ref refid="structformat__args" kindref="compound">format_args</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1835" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1835" bodyend="1835" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="1833" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a4eccb6a22a144ce5e778bc73d87ddfbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_FUNC int</type>
        <definition>FMT_FUNC int detail::safe_strerror</definition>
        <argsstring>(int error_code, char *&amp;buffer, size_t buffer_size) FMT_NOEXCEPT</argsstring>
        <name>safe_strerror</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <param>
          <type>char *&amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="82" column="14" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="82" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1ae955438532513067b316fd6082cfcf48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_FUNC void</type>
        <definition>FMT_API void detail::format_error_code</definition>
        <argsstring>(detail::buffer&lt; char &gt; &amp;out, int error_code, string_view message) FMT_NOEXCEPT</argsstring>
        <name>format_error_code</name>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">detail::buffer</ref>&lt; char &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="143" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="143" bodyend="164" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="2897" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a271f000fadb648447286bd14723c7994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_FUNC void</type>
        <definition>FMT_API void detail::report_error</definition>
        <argsstring>(format_func func, int error_code, string_view message) FMT_NOEXCEPT</argsstring>
        <name>report_error</name>
        <param>
          <type>format_func</type>
          <declname>func</declname>
        </param>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="166" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="166" bodyend="173" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="2900" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a3b66b5b8a1ffad04c2b7d751ddb88440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_FUNC void</type>
        <definition>FMT_FUNC void detail::fwrite_fully</definition>
        <argsstring>(const void *ptr, size_t size, size_t count, FILE *stream)</argsstring>
        <name>fwrite_fully</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="176" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1ae70f8485c595d886179b62216ef60b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_FUNC std::string</type>
        <definition>FMT_FUNC std::string detail::grouping_impl</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>grouping_impl</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="196" column="34" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a311631b3d21238e5c40807202a06f24a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_FUNC Char</type>
        <definition>template FMT_API wchar_t detail::thousands_sep_impl</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>thousands_sep_impl</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="199" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a9521a87a39ff8e702160b0447c067fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_FUNC Char</type>
        <definition>template FMT_API wchar_t detail::decimal_point_impl</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>decimal_point_impl</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="203" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="203" bodyend="206" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3477" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a18c290ebecff982f88dd8cef371b0e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>FMT_FUNC int</type>
        <definition>int detail::count_digits&lt; 4 &gt;</definition>
        <argsstring>(detail::fallback_uintptr n)</argsstring>
        <name>count_digits&lt; 4 &gt;</name>
        <param>
          <type><ref refid="structdetail_1_1fallback__uintptr" kindref="compound">detail::fallback_uintptr</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="235" column="21" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="235" bodyend="241" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="837" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a955ad02ade4f07084391a60ed80701bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>SHIFT</declname>
            <defname>SHIFT</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
        <definition>fp detail::normalize</definition>
        <argsstring>(fp value)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="451" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="451" bodyend="464" declfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" declline="354" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1aa603b042d25caa96cdd2e68d95948651" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detail::operator==</definition>
        <argsstring>(fp x, fp y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="466" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="466" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a23e8738bd890a2f6a9e4a7632489cd25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t detail::multiply</definition>
        <argsstring>(uint64_t lhs, uint64_t rhs)</argsstring>
        <name>multiply</name>
        <param>
          <type>uint64_t</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="469" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="469" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a5f2429037339f44b8d88e7ccf7ae6347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
        <definition>fp detail::operator*</definition>
        <argsstring>(fp x, fp y)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="486" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="486" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1aee075ede5e89acf14c73ec7db239026f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
        <definition>fp detail::get_cached_power</definition>
        <argsstring>(int min_exponent, int &amp;pow10_exponent)</argsstring>
        <name>get_cached_power</name>
        <param>
          <type>int</type>
          <declname>min_exponent</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>pow10_exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="490" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="490" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1ade6bfb36da17f5116c0f132ff8641506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>round_direction</type>
        <definition>round_direction detail::get_round_direction</definition>
        <argsstring>(uint64_t divisor, uint64_t remainder, uint64_t error)</argsstring>
        <name>get_round_direction</name>
        <param>
          <type>uint64_t</type>
          <declname>divisor</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>remainder</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="767" column="24" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="767" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a5386c2b66c79473dcd3732bbb45166e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int detail::grisu_count_digits</definition>
        <argsstring>(uint32_t n)</argsstring>
        <name>grisu_count_digits</name>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="792" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="792" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a771174995e96aba3f3fe5fae8fe9a497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>FMT_ALWAYS_INLINE digits::result</type>
        <definition>FMT_ALWAYS_INLINE digits::result detail::grisu_gen_digits</definition>
        <argsstring>(fp value, uint64_t error, int &amp;exp, Handler &amp;handler)</argsstring>
        <name>grisu_gen_digits</name>
        <param>
          <type><ref refid="classdetail_1_1fp" kindref="compound">fp</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>Handler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="809" column="34" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="809" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a56ea0f191e5b4fb83f31eed7470aebe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Double</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::fallback_format</definition>
        <argsstring>(Double d, buffer&lt; char &gt; &amp;buf, int &amp;exp10)</argsstring>
        <name>fallback_format</name>
        <param>
          <type>Double</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>exp10</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="990" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="990" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a1a780acb0dc2858109fcb85cc7ec6e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int detail::format_float</definition>
        <argsstring>(T value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)</argsstring>
        <name>format_float</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="1071" column="5" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="1071" bodyend="1140" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="1218" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1a0377922f56cb72597223fa7bc55545d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int detail::snprintf_float</definition>
        <argsstring>(T value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)</argsstring>
        <name>snprintf_float</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="1143" column="5" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="1143" bodyend="1243" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="1222" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="format-inl_8h_1af48ea3023623f5ab405ac0545276a636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FMT_FUNC char *</type>
        <definition>const FMT_FUNC char* detail::utf8_decode</definition>
        <argsstring>(const char *buf, uint32_t *c, int *e)</argsstring>
        <name>utf8_decode</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format-inl.h" line="1262" column="21" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="1262" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ab90be40a8cb5d677aad6bb4a6dc35fdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Dest</type>
          </param>
          <param>
            <type>typename Source</type>
          </param>
        </templateparamlist>
        <type>Dest</type>
        <definition>Dest detail::bit_cast</definition>
        <argsstring>(const Source &amp;source)</argsstring>
        <name>bit_cast</name>
        <param>
          <type>const Source &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="240" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="240" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a2bd455886f90458e27e2aa30d67b0f9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detail::is_big_endian</definition>
        <argsstring>()</argsstring>
        <name>is_big_endian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="247" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a1e83f1deb8d4267918ea078c1fa8ed0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdetail_1_1fallback__uintptr" kindref="compound">fallback_uintptr</ref></type>
        <definition>fallback_uintptr detail::to_uintptr</definition>
        <argsstring>(const void *p)</argsstring>
        <name>to_uintptr</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="273" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a32ecbd320068f0f120c060b49c3c4f79" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr T</type>
        <definition>constexpr T detail::max_value</definition>
        <argsstring>()</argsstring>
        <name>max_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="280" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a3eaa85344eb6d3ab8127a93f93b7a657" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::num_bits</definition>
        <argsstring>()</argsstring>
        <name>num_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="283" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="283" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad1573ea3290121862b2c2fe0d7a638a5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::num_bits&lt; int128_t &gt;</definition>
        <argsstring>()</argsstring>
        <name>num_bits&lt; int128_t &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="287" column="22" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a511b40f74044a6a882f5f1d0fbf1c8f2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::num_bits&lt; uint128_t &gt;</definition>
        <argsstring>()</argsstring>
        <name>num_bits&lt; uint128_t &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="288" column="22" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aa684dae46e5f256fe1e7b7d58222d835" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::num_bits&lt; fallback_uintptr &gt;</definition>
        <argsstring>()</argsstring>
        <name>num_bits&lt; fallback_uintptr &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="289" column="22" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a208b54c1c61a9bce9df4531a657a0c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_INLINE void</type>
        <definition>FMT_INLINE void detail::assume</definition>
        <argsstring>(bool condition)</argsstring>
        <name>assume</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="294" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1acf9af4b28628e8df4ea2c0a33ae33fe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>Char *</type>
        <definition>Char* detail::get_data</definition>
        <argsstring>(std::basic_string&lt; Char &gt; &amp;s)</argsstring>
        <name>get_data</name>
        <param>
          <type>std::basic_string&lt; Char &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="346" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="346" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a314600e6b77fc5696bb4791338b6246d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>Container::value_type *</type>
        <definition>Container::value_type* detail::get_data</definition>
        <argsstring>(Container &amp;c)</argsstring>
        <name>get_data</name>
        <param>
          <type>Container &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="350" column="39" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a684259137c520c511ace97ef09c743d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* detail::make_checked</definition>
        <argsstring>(T *p, size_t)</argsstring>
        <name>make_checked</name>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="362" column="22" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aaff0d1a865ea4a9292ee42c916466325" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structis__contiguous" kindref="compound">is_contiguous</ref>&lt; Container &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>checked_ptr&lt; typename Container::value_type &gt;</type>
        <definition>checked_ptr&lt;typename Container::value_type&gt; detail::reserve</definition>
        <argsstring>(std::back_insert_iterator&lt; Container &gt; it, size_t n)</argsstring>
        <name>reserve</name>
        <param>
          <type>std::back_insert_iterator&lt; Container &gt;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="370" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="370" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a1c420489636f2a60830ba7661ab708b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>Iterator &amp;</type>
        <definition>Iterator&amp; detail::reserve</definition>
        <argsstring>(Iterator &amp;it, size_t)</argsstring>
        <name>reserve</name>
        <param>
          <type>Iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="377" column="29" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a6733fa8a0738eeda01b788f3ac2fd989" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structis__contiguous" kindref="compound">is_contiguous</ref>&lt; Container &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>std::back_insert_iterator&lt; Container &gt;</type>
        <definition>std::back_insert_iterator&lt;Container&gt; detail::base_iterator</definition>
        <argsstring>(std::back_insert_iterator&lt; Container &gt; &amp;it, checked_ptr&lt; typename Container::value_type &gt;)</argsstring>
        <name>base_iterator</name>
        <param>
          <type>std::back_insert_iterator&lt; Container &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>checked_ptr&lt; typename Container::value_type &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="382" column="34" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="382" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aced5d969d7a0414dd7c02ea19d5975bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>Iterator</type>
        <definition>Iterator detail::base_iterator</definition>
        <argsstring>(Iterator, Iterator it)</argsstring>
        <name>base_iterator</name>
        <param>
          <type>Iterator</type>
        </param>
        <param>
          <type>Iterator</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="389" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a91d98a8b2ead434068e419a8192c9639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t detail::count_code_points</definition>
        <argsstring>(basic_string_view&lt; Char &gt; s)</argsstring>
        <name>count_code_points</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="502" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="502" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a3a5342a7122ff11ccf99cfe7b1805af4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t detail::count_code_points</definition>
        <argsstring>(basic_string_view&lt; char &gt; s)</argsstring>
        <name>count_code_points</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; char &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="507" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="507" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a10e923e5e0b52ca60b97a1126bbfdc88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t detail::count_code_points</definition>
        <argsstring>(basic_string_view&lt; char8_type &gt; s)</argsstring>
        <name>count_code_points</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; char8_type &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="516" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="516" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a8de9c20a0abe6bf38266cb073e645426" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t detail::code_point_index</definition>
        <argsstring>(basic_string_view&lt; Char &gt; s, size_t n)</argsstring>
        <name>code_point_index</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="522" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="522" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1afb60b2e682c8f4b99435f497a18270ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t detail::code_point_index</definition>
        <argsstring>(basic_string_view&lt; char8_type &gt; s, size_t n)</argsstring>
        <name>code_point_index</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; char8_type &gt;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="528" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="528" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a7ba81d8c36707ecb4901aac327ae62ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutChar</type>
          </param>
          <param>
            <type>typename InputIt</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!needs_conversion&lt; InputIt, OutChar &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::copy_str</definition>
        <argsstring>(InputIt begin, InputIt end, OutputIt it)</argsstring>
        <name>copy_str</name>
        <param>
          <type>InputIt</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputIt</type>
          <declname>end</declname>
        </param>
        <param>
          <type>OutputIt</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="547" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="547" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1abf6265bccb02238db2bbdbe3e2f33c55" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool detail::use_grisu</definition>
        <argsstring>()</argsstring>
        <name>use_grisu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="562" column="28" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad1cda2b5818d1c1e6c6d93d824901e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(is_signed&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR bool</type>
        <definition>FMT_CONSTEXPR bool detail::is_negative</definition>
        <argsstring>(T value)</argsstring>
        <name>is_negative</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="735" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="735" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1acf31a6c6f82823e16874ab7fafd0d949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_floating_point&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR bool</type>
        <definition>FMT_CONSTEXPR bool detail::is_supported_floating_point</definition>
        <argsstring>(T)</argsstring>
        <name>is_supported_floating_point</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="744" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="744" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad9019a08e555fdf86f1b8b30fdeb1b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int detail::count_digits</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>count_digits</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="795" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="795" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a77e4aa8e9249fd0df52b4a4e1c33ac4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>BITS</declname>
            <defname>BITS</defname>
          </param>
          <param>
            <type>typename UInt</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int detail::count_digits</definition>
        <argsstring>(UInt n)</argsstring>
        <name>count_digits</name>
        <param>
          <type>UInt</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="829" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="829" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a3897a94b873f1e48f8339fde06ec1da3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int</type>
          </param>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::digits10</definition>
        <argsstring>() FMT_NOEXCEPT</argsstring>
        <name>digits10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="853" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="853" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a32ad17838b93fd4237478dec63c747e8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::digits10&lt; int128_t &gt;</definition>
        <argsstring>() FMT_NOEXCEPT</argsstring>
        <name>digits10&lt; int128_t &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="856" column="22" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="856" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a570145fa17cd9f84b71ce00ba01a8963" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>constexpr int</type>
        <definition>constexpr int detail::digits10&lt; uint128_t &gt;</definition>
        <argsstring>() FMT_NOEXCEPT</argsstring>
        <name>digits10&lt; uint128_t &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="857" column="22" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="857" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a58bec88b79bd2b8ff7f671593ed8a0dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_API std::string</type>
        <definition>FMT_API std::string detail::grouping_impl</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>grouping_impl</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="859" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="196" bodyend="198" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="859" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a6469c7e8cf6db95bd7eaa68a59884cb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string detail::grouping</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>grouping</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="860" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="860" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a7b4522c976f6f620d10458b37b758bc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string detail::grouping&lt; wchar_t &gt;</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>grouping&lt; wchar_t &gt;</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="863" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="863" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a2848512b006868c637f035eeb0ab42bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_API Char</type>
        <definition>FMT_API Char detail::thousands_sep_impl</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>thousands_sep_impl</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="867" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="199" bodyend="202" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="867" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a5cd3ab146c8a93058fbe74da120eb93f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>Char</type>
        <definition>Char detail::thousands_sep</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>thousands_sep</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="868" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="868" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a29321b0380394c083dad14fe263a8b22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>wchar_t</type>
        <definition>wchar_t detail::thousands_sep</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>thousands_sep</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="871" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="871" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ab1f2e24d042f951aef21e6bce7d28230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_API Char</type>
        <definition>FMT_API Char detail::decimal_point_impl</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>decimal_point_impl</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="875" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="203" bodyend="206" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="875" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a6d7bd210ffc0962534dd75f3b0546a88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>Char</type>
        <definition>Char detail::decimal_point</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>decimal_point</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="876" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="876" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a0f6aad1fb80f2a74cb78b07a0e04e93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>wchar_t</type>
        <definition>wchar_t detail::decimal_point</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>decimal_point</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="879" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="879" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1af1b66030d7402e63203ba18b0d28b425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool detail::equal2</definition>
        <argsstring>(const Char *lhs, const char *rhs)</argsstring>
        <name>equal2</name>
        <param>
          <type>const Char *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="884" column="18" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="884" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a0060d1318239ed822921002db1950070" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detail::equal2</definition>
        <argsstring>(const char *lhs, const char *rhs)</argsstring>
        <name>equal2</name>
        <param>
          <type>const char *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="887" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="887" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a030664f0d9a303b1edac592b8dec7494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::copy2</definition>
        <argsstring>(Char *dst, const char *src)</argsstring>
        <name>copy2</name>
        <param>
          <type>Char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="892" column="18" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="892" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aeb74dfa6cc415eceb1c73f90b7943cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void detail::copy2</definition>
        <argsstring>(char *dst, const char *src)</argsstring>
        <name>copy2</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="896" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="896" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a0fb7b772956a74024d9f82629db74e92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename UInt</type>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1format__decimal__result" kindref="compound">format_decimal_result</ref>&lt; Char * &gt;</type>
        <definition>format_decimal_result&lt;Char*&gt; detail::format_decimal</definition>
        <argsstring>(Char *out, UInt value, int size)</argsstring>
        <name>format_decimal</name>
        <param>
          <type>Char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="907" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="907" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a66b55c71f0a4613e4879436758b6b859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename UInt</type>
          </param>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_pointer&lt; remove_cvref_t&lt; Iterator &gt;&gt;::value)</type>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1format__decimal__result" kindref="compound">format_decimal_result</ref>&lt; Iterator &gt;</type>
        <definition>format_decimal_result&lt;Iterator&gt; detail::format_decimal</definition>
        <argsstring>(Iterator out, UInt value, int num_digits)</argsstring>
        <name>format_decimal</name>
        <param>
          <type>Iterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_digits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="931" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="931" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a25b436d3be3c0cdfcd46f60587455d7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>BASE_BITS</declname>
            <defname>BASE_BITS</defname>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename UInt</type>
          </param>
        </templateparamlist>
        <type>Char *</type>
        <definition>Char* detail::format_uint</definition>
        <argsstring>(Char *buffer, UInt value, int num_digits, bool upper=false)</argsstring>
        <name>format_uint</name>
        <param>
          <type>Char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_digits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="941" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="941" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a61e0aa00c8415609dd1f3c9e606cbad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>BASE_BITS</declname>
            <defname>BASE_BITS</defname>
          </param>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>Char *</type>
        <definition>Char* detail::format_uint</definition>
        <argsstring>(Char *buffer, detail::fallback_uintptr n, int num_digits, bool=false)</argsstring>
        <name>format_uint</name>
        <param>
          <type>Char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1fallback__uintptr" kindref="compound">detail::fallback_uintptr</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_digits</declname>
        </param>
        <param>
          <type>bool</type>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="955" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="955" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1af3a724a7fd547c3cd3f65c327b27c40f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>BASE_BITS</declname>
            <defname>BASE_BITS</defname>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename It</type>
          </param>
          <param>
            <type>typename UInt</type>
          </param>
        </templateparamlist>
        <type>It</type>
        <definition>It detail::format_uint</definition>
        <argsstring>(It out, UInt value, int num_digits, bool upper=false)</argsstring>
        <name>format_uint</name>
        <param>
          <type>It</type>
          <declname>out</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_digits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="977" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="977" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a83eda50a4c0e162189989320ed505b09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type>It</type>
        <definition>It detail::write_exponent</definition>
        <argsstring>(int exp, It it)</argsstring>
        <name>write_exponent</name>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>It</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1090" column="18" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1090" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a23167f2a05309fdd698029e5c73282b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T detail::promote_float</definition>
        <argsstring>(T value)</argsstring>
        <name>promote_float</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1225" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1225" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a77cf00079b9653ff5d33d429dd59f98f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double detail::promote_float</definition>
        <argsstring>(float value)</argsstring>
        <name>promote_float</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1226" column="15" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1226" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a95a385f01b9a7846fb17ccb8eda63947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR void</type>
        <definition>FMT_CONSTEXPR void detail::handle_int_type_spec</definition>
        <argsstring>(char spec, Handler &amp;&amp;handler)</argsstring>
        <name>handle_int_type_spec</name>
        <param>
          <type>char</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1229" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1229" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1adf0d8e2968c26d41a673d868c23a2cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ErrorHandler</type>
            <defval>error_handler</defval>
          </param>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
        <definition>FMT_CONSTEXPR float_specs detail::parse_float_type_spec</definition>
        <argsstring>(const basic_format_specs&lt; Char &gt; &amp;specs, ErrorHandler &amp;&amp;eh={})</argsstring>
        <name>parse_float_type_spec</name>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>ErrorHandler &amp;&amp;</type>
          <declname>eh</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1261" column="27" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1261" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a9475e20f5e1a6e1734c8d157419ac76f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR void</type>
        <definition>FMT_CONSTEXPR void detail::handle_char_specs</definition>
        <argsstring>(const basic_format_specs&lt; Char &gt; *specs, Handler &amp;&amp;handler)</argsstring>
        <name>handle_char_specs</name>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; *</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1310" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1310" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a4ced9b3280305a14e4e91ed485f82be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR void</type>
        <definition>FMT_CONSTEXPR void detail::handle_cstring_type_spec</definition>
        <argsstring>(Char spec, Handler &amp;&amp;handler)</argsstring>
        <name>handle_cstring_type_spec</name>
        <param>
          <type>Char</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1320" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1320" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a2376bae6f57f47643a9cead082df1f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename ErrorHandler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR void</type>
        <definition>FMT_CONSTEXPR void detail::check_string_type_spec</definition>
        <argsstring>(Char spec, ErrorHandler &amp;&amp;eh)</argsstring>
        <name>check_string_type_spec</name>
        <param>
          <type>Char</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>ErrorHandler &amp;&amp;</type>
          <declname>eh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1330" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1330" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aee77694020687ae02b382fd99c2184a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename ErrorHandler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR void</type>
        <definition>FMT_CONSTEXPR void detail::check_pointer_type_spec</definition>
        <argsstring>(Char spec, ErrorHandler &amp;&amp;eh)</argsstring>
        <name>check_pointer_type_spec</name>
        <param>
          <type>Char</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>ErrorHandler &amp;&amp;</type>
          <declname>eh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1335" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1335" bodyend="1337"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a3051eb18ec32a280d7212f15e759934e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_NOINLINE OutputIt</type>
        <definition>FMT_NOINLINE OutputIt detail::fill</definition>
        <argsstring>(OutputIt it, size_t n, const fill_t&lt; Char &gt; &amp;fill)</argsstring>
        <name>fill</name>
        <param>
          <type>OutputIt</type>
          <declname>it</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structdetail_1_1fill__t" kindref="compound">fill_t</ref>&lt; Char &gt; &amp;</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1381" column="23" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1381" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a8096c62536dc225cdefb82c7f1dee977" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>align::type</type>
            <declname>align</declname>
            <defname>align</defname>
            <defval>align::left</defval>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_padded</definition>
        <argsstring>(OutputIt out, const basic_format_specs&lt; Char &gt; &amp;specs, size_t size, size_t width, const F &amp;f)</argsstring>
        <name>write_padded</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1393" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1393" bodyend="1407"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1afd999380b80c5637f081a268f34e6bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>align::type</type>
            <declname>align</declname>
            <defname>align</defname>
            <defval>align::left</defval>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_padded</definition>
        <argsstring>(OutputIt out, const basic_format_specs&lt; Char &gt; &amp;specs, size_t size, const F &amp;f)</argsstring>
        <name>write_padded</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1411" column="17" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1411" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aec09c50b903077474c56c57df3198928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_bytes</definition>
        <argsstring>(OutputIt out, string_view bytes, const basic_format_specs&lt; Char &gt; &amp;specs)</argsstring>
        <name>write_bytes</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1418" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1418" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a325a2ee4cf71f5c11e578161f5da87a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_int</definition>
        <argsstring>(OutputIt out, int num_digits, string_view prefix, const basic_format_specs&lt; Char &gt; &amp;specs, F f)</argsstring>
        <name>write_int</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_digits</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1453" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1453" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aaf6607a37012454efb6649e13d81646c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename StrChar</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, basic_string_view&lt; StrChar &gt; s, const basic_format_specs&lt; Char &gt; &amp;specs)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; StrChar &gt;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1466" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1466" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aae6a493ed2d43ce148fdf4c6f7d92e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_nonfinite</definition>
        <argsstring>(OutputIt out, bool isinf, const basic_format_specs&lt; Char &gt; &amp;specs, const float_specs &amp;fspecs)</argsstring>
        <name>write_nonfinite</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isinf</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>const <ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref> &amp;</type>
          <declname>fspecs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1616" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1616" bodyend="1629"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ab9571f272a246b60afa29dcf6ba43365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_floating_point&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, T value, basic_format_specs&lt; Char &gt; specs, locale_ref loc={})</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1633" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1633" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1addfb1cbe9d72dfe8c4a8b6a68c0c3180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_floating_point&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, T value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1682" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1682" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad1d9f060a96b8cfe1814271f08219e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_char</definition>
        <argsstring>(OutputIt out, Char value, const basic_format_specs&lt; Char &gt; &amp;specs)</argsstring>
        <name>write_char</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; &amp;</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1706" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1706" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a065b0a90493a51ca4c74cd5e7f818623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename UIntPtr</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write_ptr</definition>
        <argsstring>(OutputIt out, UIntPtr value, const basic_format_specs&lt; Char &gt; *specs)</argsstring>
        <name>write_ptr</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>UIntPtr</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structbasic__format__specs" kindref="compound">basic_format_specs</ref>&lt; Char &gt; *</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1716" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1716" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a195ada4a0982dc9817b6386c9efa9f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, monostate)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structmonostate" kindref="compound">monostate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1735" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1735" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a05851b470be7b954866c391a975f1bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_same&lt; Char, char &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, string_view value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1742" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1742" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a194a8dad9dd2c1ee35aaacf7472df3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, basic_string_view&lt; Char &gt; value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1749" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1749" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad946dc05da4b8809e41b8235287838cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, bool value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1772" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1772" bodyend="1774"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1af6c97c705d043f952fc0e5793cc922d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, Char value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Char</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1777" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1777" bodyend="1781"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a40c29a6aa4c3e8a80ddd6a81ebb54ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, const Char *value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1784" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1784" bodyend="1792"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad1b3fa8cba0ba0e7f22dcca74151e092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt detail::write</definition>
        <argsstring>(OutputIt out, const void *value)</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1795" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1795" bodyend="1797"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1acf1e3b65a4f8b38dd008fd22c74cd260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto detail::write</definition>
        <argsstring>(OutputIt out, const T &amp;value) -&gt; typename std::enable_if&lt; mapped_type_constant&lt; T, basic_format_context&lt; OutputIt, Char &gt;&gt;::value==type::custom_type, OutputIt &gt;::type</argsstring>
        <name>write</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="1800" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="1800" bodyend="1806"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a5166b83d5415dbfaa347d968d14f0631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR bool</type>
        <definition>FMT_CONSTEXPR bool detail::is_name_start</definition>
        <argsstring>(Char c)</argsstring>
        <name>is_name_start</name>
        <param>
          <type>Char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2011" column="32" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2011" bodyend="2013"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad2d9cdfb674145cf1dc14df637e81130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename ErrorHandler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR int</type>
        <definition>FMT_CONSTEXPR int detail::parse_nonnegative_int</definition>
        <argsstring>(const Char *&amp;begin, const Char *end, ErrorHandler &amp;&amp;eh)</argsstring>
        <name>parse_nonnegative_int</name>
        <param>
          <type>const Char *&amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>ErrorHandler &amp;&amp;</type>
          <declname>eh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2018" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2018" bodyend="2036"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a97264f9ab217cda21d289ca6747294f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; class</type>
            <declname>Handler</declname>
            <defname>Handler</defname>
          </param>
          <param>
            <type>typename FormatArg</type>
          </param>
          <param>
            <type>typename ErrorHandler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR int</type>
        <definition>FMT_CONSTEXPR int detail::get_dynamic_spec</definition>
        <argsstring>(FormatArg arg, ErrorHandler eh)</argsstring>
        <name>get_dynamic_spec</name>
        <param>
          <type>FormatArg</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>ErrorHandler</type>
          <declname>eh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2220" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2220" bodyend="2224"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a9823c1a29b14035e5e25b32d730c6801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>typename ID</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR Context::format_arg</type>
        <definition>FMT_CONSTEXPR Context::format_arg detail::get_arg</definition>
        <argsstring>(Context &amp;ctx, ID id)</argsstring>
        <name>get_arg</name>
        <param>
          <type>Context &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>ID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2229" column="44" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2229" bodyend="2233"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a7dd1e0fb83f8a9f30d0e353a79bbe603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename IDHandler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_arg_id</definition>
        <argsstring>(const Char *begin, const Char *end, IDHandler &amp;&amp;handler)</argsstring>
        <name>parse_arg_id</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>IDHandler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2370" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2370" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a665fbf222701b9ff0389377437161b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::next_code_point</definition>
        <argsstring>(const Char *begin, const Char *end)</argsstring>
        <name>next_code_point</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2437" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2437" bodyend="2443"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a39676b26f4d7d7cdac62796421a083aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_align</definition>
        <argsstring>(const Char *begin, const Char *end, Handler &amp;&amp;handler)</argsstring>
        <name>parse_align</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2447" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2447" bodyend="2487"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a516fdd51ec74ad4ca62ee2add99aecb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_width</definition>
        <argsstring>(const Char *begin, const Char *end, Handler &amp;&amp;handler)</argsstring>
        <name>parse_width</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2490" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2490" bodyend="2504"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a073cd5cd2bfef34c303137d7b4e5040a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_precision</definition>
        <argsstring>(const Char *begin, const Char *end, Handler &amp;&amp;handler)</argsstring>
        <name>parse_precision</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2507" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2507" bodyend="2526"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a4d08403d200a94aa38c8e48eae243eed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename SpecHandler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_format_specs</definition>
        <argsstring>(const Char *begin, const Char *end, SpecHandler &amp;&amp;handler)</argsstring>
        <name>parse_format_specs</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>SpecHandler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2531" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2531" bodyend="2577"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ad06b74f7502b63cbab323bba1ca3f72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>IS_CONSTEXPR</declname>
            <defname>IS_CONSTEXPR</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Ptr</type>
            <defval>const T*</defval>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR bool</type>
        <definition>FMT_CONSTEXPR bool detail::find</definition>
        <argsstring>(Ptr first, Ptr last, T value, Ptr &amp;out)</argsstring>
        <name>find</name>
        <param>
          <type>Ptr</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Ptr</type>
          <declname>last</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Ptr &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2581" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2581" bodyend="2586"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a453559ec1413fa2b4b07b320662d6c99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool detail::find&lt; false, char &gt;</definition>
        <argsstring>(const char *first, const char *last, char value, const char *&amp;out)</argsstring>
        <name>find&lt; false, char &gt;</name>
        <param>
          <type>const char *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>last</declname>
        </param>
        <param>
          <type>char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *&amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2589" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2589" bodyend="2594"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a29c37bbc85a527e8b34a0156c834dc1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR Char *</type>
        <definition>const FMT_CONSTEXPR Char* detail::parse_replacement_field</definition>
        <argsstring>(const Char *begin, const Char *end, Handler &amp;&amp;handler)</argsstring>
        <name>parse_replacement_field</name>
        <param>
          <type>const Char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2611" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2611" bodyend="2635"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1afdc0d7b145d58d8d40beb9cefccd8d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>IS_CONSTEXPR</declname>
            <defname>IS_CONSTEXPR</defname>
          </param>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Handler</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR_DECL FMT_INLINE void</type>
        <definition>FMT_CONSTEXPR_DECL FMT_INLINE void detail::parse_format_string</definition>
        <argsstring>(basic_string_view&lt; Char &gt; format_str, Handler &amp;&amp;handler)</argsstring>
        <name>parse_format_string</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>Handler &amp;&amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2638" column="36" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2638" bodyend="2685"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ace91039e6026ef7920cb676c9be58f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ParseContext</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR ParseContext::char_type *</type>
        <definition>const FMT_CONSTEXPR ParseContext::char_type* detail::parse_format_specs</definition>
        <argsstring>(ParseContext &amp;ctx)</argsstring>
        <name>parse_format_specs</name>
        <param>
          <type>ParseContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2688" column="54" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2688" bodyend="2700"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ac4bb25e0bfdcac5557fed16e60402ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        <definition>FMT_CONSTEXPR basic_string_view&lt;Char&gt; detail::compile_string_to_view</definition>
        <argsstring>(const Char(&amp;s)[N])</argsstring>
        <name>compile_string_to_view</name>
        <param>
          <type>const Char(&amp;)</type>
          <declname>s</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2827" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2827" bodyend="2833"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ac4d86c5a8739a50935c18006a0e93c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        <definition>FMT_CONSTEXPR basic_string_view&lt;Char&gt; detail::compile_string_to_view</definition>
        <argsstring>(const std_string_view&lt; Char &gt; &amp;s)</argsstring>
        <name>compile_string_to_view</name>
        <param>
          <type>const <ref refid="structdetail_1_1std__string__view" kindref="compound">std_string_view</ref>&lt; Char &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2837" column="33" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2837" bodyend="2840"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aec99155f9b82186a6e95cdcd5bd28d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; class</type>
            <declname>Handler</declname>
            <defname>Handler</defname>
          </param>
          <param>
            <type>typename Context</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::handle_dynamic_spec</definition>
        <argsstring>(int &amp;value, arg_ref&lt; typename Context::char_type &gt; ref, Context &amp;ctx)</argsstring>
        <name>handle_dynamic_spec</name>
        <param>
          <type>int &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1arg__ref" kindref="compound">arg_ref</ref>&lt; typename Context::char_type &gt;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>Context &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="2879" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="2879" bodyend="2893"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a66f1af158396d9f8bf22e42eb379ae86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template FMT_API std::string</type>
        <definition>template FMT_API std::string detail::grouping_impl&lt; char &gt;</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>grouping_impl&lt; char &gt;</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3472" column="25" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3472" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a60c7a4978f3e1967e5cf76ebd75be2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template FMT_API std::string</type>
        <definition>template FMT_API std::string detail::grouping_impl&lt; wchar_t &gt;</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>grouping_impl&lt; wchar_t &gt;</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3473" column="25" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3473" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a77bcbe73d07efaf41d4d50764f5db555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template FMT_API char</type>
        <definition>template FMT_API char detail::thousands_sep_impl&lt; char &gt;</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>thousands_sep_impl&lt; char &gt;</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3474" column="25" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3474" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1aee1b3b47127f80b1a1508539cc83d937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template FMT_API wchar_t</type>
        <definition>template FMT_API wchar_t detail::thousands_sep_impl&lt; wchar_t &gt;</definition>
        <argsstring>(locale_ref loc)</argsstring>
        <name>thousands_sep_impl&lt; wchar_t &gt;</name>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3475" column="25" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3475" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a398176f5e0f1c184f0497e4cdd1a00b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template int</type>
        <definition>template int detail::format_float&lt; double &gt;</definition>
        <argsstring>(double value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)</argsstring>
        <name>format_float&lt; double &gt;</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3478" column="17" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3478" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ac0fe391c8d3c0a3a66ea8a7fbabd32b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template int</type>
        <definition>template int detail::format_float&lt; long double &gt;</definition>
        <argsstring>(long double value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)</argsstring>
        <name>format_float&lt; long double &gt;</name>
        <param>
          <type>long double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3480" column="17" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3480" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1ac48b151679acc0a670246a8b564d7d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int detail::snprintf_float</definition>
        <argsstring>(float value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)=delete</argsstring>
        <name>snprintf_float</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3483" column="5" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3483" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a228d20c6f5177f877c9a3178a55c8732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template int</type>
        <definition>template int detail::snprintf_float&lt; double &gt;</definition>
        <argsstring>(double value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)</argsstring>
        <name>snprintf_float&lt; double &gt;</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3485" column="17" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3485" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="format_8h_1a0d8ba35c77308dbea0f638f6c0bb6fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template int</type>
        <definition>template int detail::snprintf_float&lt; long double &gt;</definition>
        <argsstring>(long double value, int precision, float_specs specs, buffer&lt; char &gt; &amp;buf)</argsstring>
        <name>snprintf_float&lt; long double &gt;</name>
        <param>
          <type>long double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="structdetail_1_1float__specs" kindref="compound">float_specs</ref></type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="3488" column="17" declfile="include/srsgnb/srslog/bundled/fmt/format.h" declline="3488" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="locale_8h_1a0cbe7945f0c7682decfc9cefb51ed9cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; Char &gt;::iterator</type>
        <definition>buffer_context&lt;Char&gt;::iterator detail::vformat_to</definition>
        <argsstring>(const std::locale &amp;loc, buffer&lt; Char &gt; &amp;buf, basic_string_view&lt; Char &gt; format_str, basic_format_args&lt; buffer_context&lt; type_identity_t&lt; Char &gt;&gt;&gt; args)</argsstring>
        <name>vformat_to</name>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; type_identity_t&lt; Char &gt;&gt;&gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/locale.h" line="19" column="36" bodyfile="include/srsgnb/srslog/bundled/fmt/locale.h" bodystart="19" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="locale_8h_1ad223570a937bf0acf75bb9afab12b0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>std::basic_string&lt; Char &gt;</type>
        <definition>std::basic_string&lt;Char&gt; detail::vformat</definition>
        <argsstring>(const std::locale &amp;loc, basic_string_view&lt; Char &gt; format_str, basic_format_args&lt; buffer_context&lt; type_identity_t&lt; Char &gt;&gt;&gt; args)</argsstring>
        <name>vformat</name>
        <param>
          <type>const std::locale &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; type_identity_t&lt; Char &gt;&gt;&gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/locale.h" line="29" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/locale.h" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="ostream_8h_1ab774ebdb3565689cdc79ab10b0cb16ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::write_buffer</definition>
        <argsstring>(std::basic_ostream&lt; Char &gt; &amp;os, buffer&lt; Char &gt; &amp;buf)</argsstring>
        <name>write_buffer</name>
        <param>
          <type>std::basic_ostream&lt; Char &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ostream.h" line="83" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/ostream.h" bodystart="83" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="ostream_8h_1a7168f947aaf3559a87c031d4cc60d242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::format_value</definition>
        <argsstring>(buffer&lt; Char &gt; &amp;buf, const T &amp;value, locale_ref loc=locale_ref())</argsstring>
        <name>format_value</name>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref></type>
          <declname>loc</declname>
          <defval><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ostream.h" line="97" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/ostream.h" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="printf_8h_1a03c11572c9a664266d6925f327dec7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::convert_arg</definition>
        <argsstring>(basic_format_arg&lt; Context &gt; &amp;arg, Char type)</argsstring>
        <name>convert_arg</name>
        <param>
          <type><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; Context &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>Char</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="122" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="printf_8h_1a1c8c2218e4c822aa8f743fb9c573717f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::vprintf</definition>
        <argsstring>(buffer&lt; Char &gt; &amp;buf, basic_string_view&lt; Char &gt; format, basic_format_args&lt; Context &gt; args)</argsstring>
        <name>vprintf</name>
        <param>
          <type><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt; Char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; Context &gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="182" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1a613a357694355883872e8a7e90acf846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RangeT</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator detail::copy</definition>
        <argsstring>(const RangeT &amp;range, OutputIterator out)</argsstring>
        <name>copy</name>
        <param>
          <type>const RangeT &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="60" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1a599d5321ed71a7ef9a5ce331f1330f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator detail::copy</definition>
        <argsstring>(const char *str, OutputIterator out)</argsstring>
        <name>copy</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="67" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1a592882223e90d683243d73997b4cee8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator detail::copy</definition>
        <argsstring>(char ch, OutputIterator out)</argsstring>
        <name>copy</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="73" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1af87c5091ddcbda12ab6fac7093c65e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tuple</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::for_each</definition>
        <argsstring>(index_sequence&lt; Is... &gt;, Tuple &amp;&amp;tup, F &amp;&amp;f) FMT_NOEXCEPT</argsstring>
        <name>for_each</name>
        <param>
          <type><ref refid="structdetail_1_1integer__sequence" kindref="compound">index_sequence</ref>&lt; Is... &gt;</type>
        </param>
        <param>
          <type>Tuple &amp;&amp;</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="142" column="6" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1af40c57ba5aa495b0f613b5627987331f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR <ref refid="structdetail_1_1make__integer__sequence" kindref="compound">make_index_sequence</ref>&lt; std::tuple_size&lt; T &gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref> &gt;</type>
        <definition>FMT_CONSTEXPR make_index_sequence&lt;std::tuple_size&lt;T&gt;::value&gt; detail::get_indexes</definition>
        <argsstring>(T const &amp;)</argsstring>
        <name>get_indexes</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="150" column="36" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1a740185868c4e97a6e659d7e875a2e4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tuple</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void detail::for_each</definition>
        <argsstring>(Tuple &amp;&amp;tup, F &amp;&amp;f)</argsstring>
        <name>for_each</name>
        <param>
          <type>Tuple &amp;&amp;</type>
          <declname>tup</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="155" column="20" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1a8d63f9885e75074b460faa7ba354815a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!is_like_std_string&lt; typename std::decay&lt; Arg &gt;::type &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char * detail::format_str_quoted</definition>
        <argsstring>(bool add_space, const Arg &amp;)</argsstring>
        <name>format_str_quoted</name>
        <param>
          <type>bool</type>
          <declname>add_space</declname>
        </param>
        <param>
          <type>const Arg &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="162" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1ae1e7ba212d7096a2c3e78265f9b5e0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::format_str_quoted</definition>
        <argsstring>(bool add_space, const char *)</argsstring>
        <name>format_str_quoted</name>
        <param>
          <type>bool</type>
          <declname>add_space</declname>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="172" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1afb3fea326a30685a7d7615e7b3f06376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FMT_CONSTEXPR wchar_t *</type>
        <definition>const FMT_CONSTEXPR wchar_t* detail::format_str_quoted</definition>
        <argsstring>(bool add_space, const wchar_t *)</argsstring>
        <name>format_str_quoted</name>
        <param>
          <type>bool</type>
          <declname>add_space</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="175" column="29" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1a005e07bba8e0ff05f09a9b7f839aa5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FMT_CONSTEXPR char *</type>
        <definition>const FMT_CONSTEXPR char* detail::format_str_quoted</definition>
        <argsstring>(bool add_space, const char)</argsstring>
        <name>format_str_quoted</name>
        <param>
          <type>bool</type>
          <declname>add_space</declname>
        </param>
        <param>
          <type>const char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="179" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="ranges_8h_1aadf54b16ccd23007eca84d94c5fa91c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FMT_CONSTEXPR wchar_t *</type>
        <definition>const FMT_CONSTEXPR wchar_t* detail::format_str_quoted</definition>
        <argsstring>(bool add_space, const wchar_t)</argsstring>
        <name>format_str_quoted</name>
        <param>
          <type>bool</type>
          <declname>add_space</declname>
        </param>
        <param>
          <type>const</type>
          <declname>wchar_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/ranges.h" line="182" column="29" bodyfile="include/srsgnb/srslog/bundled/fmt/ranges.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="format_8cc_1aa6c7f232657c83f4e976f9af21f12dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int detail::format_float</definition>
        <argsstring>(char *buf, std::size_t size, const char *format, int precision, T value)</argsstring>
        <name>format_float</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>precision</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/bundled/fmt/format.cc" line="15" column="5" bodyfile="lib/srslog/bundled/fmt/format.cc" bodystart="15" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/srsgnb/srslog/bundled/fmt/chrono.h" line="310" column="16"/>
  </compounddef>
</doxygen>
