<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="core_8h" kind="file" language="C++">
    <compoundname>core.h</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstring</includes>
    <includes local="no">functional</includes>
    <includes local="no">iterator</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">vector</includes>
    <includedby refid="format_8h" local="yes">include/srsgnb/srslog/bundled/fmt/format.h</includedby>
    <includedby refid="log__backend_8h" local="yes">include/srsgnb/srslog/detail/log_backend.h</includedby>
    <includedby refid="dyn__arg__store__pool_8h" local="yes">include/srsgnb/srslog/detail/support/dyn_arg_store_pool.h</includedby>
    <includedby refid="ofdm__modulator__factory_8cpp" local="yes">lib/phy/lower/modulation/ofdm_modulator_factory.cpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>cstring</label>
      </node>
      <node id="1">
        <label>include/srsgnb/srslog/bundled/fmt/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="317">
        <label>include/srsgnb/phy/upper/sequence_generators/low_papr_sequence_collection.h</label>
        <link refid="low__papr__sequence__collection_8h_source"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="273">
        <label>include/srsgnb/phy/lower/modulation/ofdm_demodulator.h</label>
        <link refid="ofdm__demodulator_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="439">
        <label>include/srsgnb/srslog/bundled/fmt/locale.h</label>
        <link refid="locale_8h_source"/>
        <childnode refid="438" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>include/srsgnb/fapi_adaptor/phy/phy_fapi_adaptor_factory.h</label>
        <link refid="phy__fapi__adaptor__factory_8h_source"/>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>include/srsgnb/rlc/rlc_config_messages.h</label>
        <link refid="rlc__config__messages_8h_source"/>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>include/srsgnb/adt/unique_function.h</label>
        <link refid="unique__function_8h_source"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="336">
        <label>lib/radio/zmq/radio_zmq_rx_stream.h</label>
        <link refid="radio__zmq__rx__stream_8h_source"/>
        <childnode refid="332" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>include/srsgnb/ran/resource_allocation/rb_interval.h</label>
        <link refid="rb__interval_8h_source"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>lib/du_manager/adapters/mac_adapters.h</label>
        <link refid="mac__adapters_8h_source"/>
      </node>
      <node id="482">
        <label>lib/f1_interface/cu/procedures/f1ap_cu_event_manager.h</label>
        <link refid="f1ap__cu__event__manager_8h_source"/>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="376">
        <label>lib/phy/upper/signal_processors/pucch/pucch_orthogonal_sequence.h</label>
        <link refid="pucch__orthogonal__sequence_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>lib/mac/mac_ctrl/srs_sched_config_adapter.h</label>
        <link refid="srs__sched__config__adapter_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>lib/phy/upper/signal_processors/dmrs_pdsch_processor_impl.h</label>
        <link refid="dmrs__pdsch__processor__impl_8h_source"/>
      </node>
      <node id="3">
        <label>include/srsgnb/adt/bounded_bitset.h</label>
        <link refid="bounded__bitset_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>include/srsgnb/adt/circular_map.h</label>
        <link refid="circular__map_8h_source"/>
        <childnode refid="481" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>include/srsgnb/scheduler/scheduler_factory.h</label>
        <link refid="scheduler__factory_8h_source"/>
      </node>
      <node id="495">
        <label>include/srsgnb/ran/subcarrier_spacing.h</label>
        <link refid="subcarrier__spacing_8h_source"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>lib/fapi_adaptor/phy/phy_to_fapi_time_event_translator.h</label>
        <link refid="phy__to__fapi__time__event__translator_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>include/srsgnb/du/du_cell_config_validation.h</label>
        <link refid="du__cell__config__validation_8h_source"/>
      </node>
      <node id="362">
        <label>lib/phy/upper/rx_softbuffer_pool_impl.h</label>
        <link refid="rx__softbuffer__pool__impl_8h_source"/>
      </node>
      <node id="508">
        <label>include/srsgnb/support/async/execute_on.h</label>
        <link refid="execute__on_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>include/srsgnb/phy/upper/upper_phy_factories.h</label>
        <link refid="upper__phy__factories_8h_source"/>
      </node>
      <node id="47">
        <label>lib/phy/upper/signal_processors/dmrs_pusch_estimator_impl.h</label>
        <link refid="dmrs__pusch__estimator__impl_8h"/>
      </node>
      <node id="173">
        <label>include/srsgnb/rlc/rlc_entity.h</label>
        <link refid="rlc__entity_8h_source"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lib/du_manager/procedures/ue_creation_procedure.h</label>
        <link refid="du__manager_2procedures_2ue__creation__procedure_8h_source"/>
      </node>
      <node id="210">
        <label>lib/rrc/ue/procedures/rrc_setup_procedure.h</label>
        <link refid="rrc__setup__procedure_8h_source"/>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>lib/du_manager/adapters/rlc_adapters.h</label>
        <link refid="rlc__adapters_8h_source"/>
      </node>
      <node id="327">
        <label>include/srsgnb/radio/radio_session.h</label>
        <link refid="radio__session_8h_source"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>include/srsgnb/phy/upper/channel_processors/prach_generator.h</label>
        <link refid="prach__generator_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/du_high/du_high.h</label>
        <link refid="du__high_8h_source"/>
      </node>
      <node id="331">
        <label>lib/radio/uhd/radio_uhd_device.h</label>
        <link refid="radio__uhd__device_8h_source"/>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>include/srsgnb/ran/pdcch/cce_to_prb_mapping.h</label>
        <link refid="cce__to__prb__mapping_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>lib/f1_interface/du/handlers/f1c_du_packet_handler.h</label>
        <link refid="f1c__du__packet__handler_8h_source"/>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>include/srsgnb/phy/upper/upper_phy_rx_results_notifier.h</label>
        <link refid="upper__phy__rx__results__notifier_8h"/>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>include/srsgnb/pdcp/pdcp_factory.h</label>
        <link refid="pdcp__factory_8h_source"/>
      </node>
      <node id="152">
        <label>lib/phy/upper/signal_processors/dmrs_helper.h</label>
        <link refid="dmrs__helper_8h_source"/>
      </node>
      <node id="302">
        <label>include/srsgnb/phy/upper/upper_phy_rg_gateway.h</label>
        <link refid="upper__phy__rg__gateway_8h_source"/>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>include/srsgnb/phy/lower/lower_phy_configuration.h</label>
        <link refid="lower__phy__configuration_8h_source"/>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="289">
        <label>include/srsgnb/phy/upper/channel_processors/prach_detector.h</label>
        <link refid="prach__detector_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>lib/phy/upper/channel_processors/pbch_encoder_impl.h</label>
        <link refid="pbch__encoder__impl_8h_source"/>
      </node>
      <node id="268">
        <label>lib/phy/generic_functions/dft_processor_generic_impl.h</label>
        <link refid="dft__processor__generic__impl_8h_source"/>
      </node>
      <node id="168">
        <label>include/srsgnb/adt/byte_buffer_slice_chain.h</label>
        <link refid="byte__buffer__slice__chain_8h_source"/>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>lib/mac/mac_dl/mac_dl_processor.h</label>
        <link refid="mac__dl__processor_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="428">
        <label>lib/phy/upper/channel_coding/short/short_block_encoder_impl.h</label>
        <link refid="short__block__encoder__impl_8h"/>
      </node>
      <node id="350">
        <label>lib/phy/upper/channel_processors/pdsch_encoder_impl.h</label>
        <link refid="pdsch__encoder__impl_8h"/>
      </node>
      <node id="120">
        <label>lib/scheduler/ue_scheduling/ue_scheduler_impl.h</label>
        <link refid="ue__scheduler__impl_8h_source"/>
      </node>
      <node id="41">
        <label>include/srsgnb/phy/upper/channel_processors/channel_processor_factories.h</label>
        <link refid="channel__processor__factories_8h_source"/>
      </node>
      <node id="216">
        <label>include/srsgnb/f1_interface/cu/f1ap_cu_factory.h</label>
        <link refid="f1ap__cu__factory_8h_source"/>
      </node>
      <node id="383">
        <label>include/srsgnb/mac/mac_cell_control_information_handler.h</label>
        <link refid="mac__cell__control__information__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>include/srsgnb/phy/adapters/phy_error_adapter.h</label>
        <link refid="phy__error__adapter_8h_source"/>
      </node>
      <node id="513">
        <label>include/srsgnb/support/async/event_signal.h</label>
        <link refid="event__signal_8h_source"/>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
      <node id="330">
        <label>lib/radio/zmq/radio_factory_zmq_impl.h</label>
        <link refid="radio__factory__zmq__impl_8h_source"/>
      </node>
      <node id="174">
        <label>include/srsgnb/rlc/rlc_factory.h</label>
        <link refid="rlc__factory_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>lib/phy/upper/resource_grid_helpers.h</label>
        <link refid="resource__grid__helpers_8h_source"/>
      </node>
      <node id="269">
        <label>lib/phy/lower/modulation/ofdm_demodulator_impl.h</label>
        <link refid="ofdm__demodulator__impl_8h_source"/>
      </node>
      <node id="9">
        <label>lib/du_high/adapters.h</label>
        <link refid="adapters_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>lib/cu_cp/du_processor.h</label>
        <link refid="lib_2cu__cp_2du__processor_8h_source"/>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="267">
        <label>lib/phy/generic_functions/dft_processor_fftx_impl.h</label>
        <link refid="dft__processor__fftx__impl_8h_source"/>
      </node>
      <node id="98">
        <label>include/srsgnb/du/du_cell_config_helpers.h</label>
        <link refid="du__cell__config__helpers_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>include/srsgnb/phy/upper/channel_processors/pbch_encoder.h</label>
        <link refid="pbch__encoder_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>include/srsgnb/pdcp/pdcp_rx.h</label>
        <link refid="pdcp__rx_8h_source"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>include/srsgnb/phy/generic_functions/dft_processor.h</label>
        <link refid="dft__processor_8h_source"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="443">
        <label>include/srsgnb/srslog/bundled/fmt/os.h</label>
        <link refid="os_8h_source"/>
        <childnode refid="444" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>lib/phy/generic_functions/dft_processor_fftw_impl.h</label>
        <link refid="dft__processor__fftw__impl_8h_source"/>
      </node>
      <node id="52">
        <label>include/srsgnb/phy/upper/signal_processors/signal_processor_factories.h</label>
        <link refid="signal__processor__factories_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>include/srsgnb/srslog/bundled/fmt/chrono.h</label>
        <link refid="chrono_8h_source"/>
      </node>
      <node id="276">
        <label>include/srsgnb/phy/lower/modulation/ofdm_modulator.h</label>
        <link refid="ofdm__modulator_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>lib/du_manager/du_manager_interfaces.h</label>
        <link refid="du__manager__interfaces_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>lib/scheduler/cell/scheduler_prb.h</label>
        <link refid="scheduler__prb_8h_source"/>
      </node>
      <node id="54">
        <label>lib/phy/upper/channel_processors/pdcch_modulator_impl.h</label>
        <link refid="pdcch__modulator__impl_8h_source"/>
      </node>
      <node id="199">
        <label>include/srsgnb/cu_cp/cu_cp.h</label>
        <link refid="include_2srsgnb_2cu__cp_2cu__cp_8h_source"/>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="297">
        <label>include/srsgnb/phy/lower/lower_phy_rg_handler.h</label>
        <link refid="lower__phy__rg__handler_8h_source"/>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>lib/scheduler/common_scheduling/sib_scheduler.h</label>
        <link refid="sib__scheduler_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="481">
        <label>lib/rlc/rlc_pdu_window.h</label>
        <link refid="rlc__pdu__window_8h_source"/>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>include/srsgnb/support/unique_thread.h</label>
        <link refid="unique__thread_8h_source"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>include/srsgnb/du_high/du_high_configuration.h</label>
        <link refid="du__high__configuration_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="464">
        <label>include/srsgnb/support/executors/manual_task_worker.h</label>
        <link refid="manual__task__worker_8h_source"/>
      </node>
      <node id="512">
        <label>include/srsgnb/support/async/detail/event_impl.h</label>
        <link refid="event__impl_8h_source"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="427">
        <label>include/srsgnb/phy/upper/channel_coding/short/short_block_encoder.h</label>
        <link refid="short__block__encoder_8h"/>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>include/srsgnb/du/du_cell_config.h</label>
        <link refid="du__cell__config_8h_source"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>lib/scheduler/support/rb_find_algorithm.h</label>
        <link refid="rb__find__algorithm_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="309">
        <label>lib/phy/upper/signal_processors/sss_processor_impl.h</label>
        <link refid="sss__processor__impl_8h_source"/>
      </node>
      <node id="281">
        <label>include/srsgnb/phy/lower/lower_phy_request_handler.h</label>
        <link refid="lower__phy__request__handler_8h_source"/>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>include/srsgnb/fapi_adaptor/mac/mac_fapi_adaptor_factory.h</label>
        <link refid="mac__fapi__adaptor__factory_8h_source"/>
        <childnode refid="497" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>lib/rrc/ue/rrc_asn1_helpers.h</label>
        <link refid="rrc__asn1__helpers_8h_source"/>
      </node>
      <node id="490">
        <label>lib/scheduler/support/pdcch/pdcch_type0_css_occasions.h</label>
        <link refid="pdcch__type0__css__occasions_8h_source"/>
      </node>
      <node id="392">
        <label>include/srsgnb/phy/upper/upper_phy_timing_notifier.h</label>
        <link refid="upper__phy__timing__notifier_8h_source"/>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>include/srsgnb/support/async/eager_async_task.h</label>
        <link refid="eager__async__task_8h_source"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>lib/phy/upper/channel_processors/prach_generator_impl.h</label>
        <link refid="prach__generator__impl_8h_source"/>
      </node>
      <node id="39">
        <label>include/srsgnb/phy/upper/channel_estimation.h</label>
        <link refid="channel__estimation_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="406">
        <label>include/srsgnb/phy/upper/channel_coding/crc_calculator.h</label>
        <link refid="crc__calculator_8h_source"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>include/srsgnb/rlc/rlc.h</label>
        <link refid="rlc_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>include/srsgnb/srslog/bundled/fmt/format-inl.h</label>
        <link refid="format-inl_8h_source"/>
      </node>
      <node id="229">
        <label>include/srsgnb/pdcp/pdcp_entity.h</label>
        <link refid="pdcp__entity_8h_source"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="492">
        <label>include/srsgnb/ran/prach/prach_subcarrier_spacing.h</label>
        <link refid="prach__subcarrier__spacing_8h_source"/>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>lib/srslog/log_backend_impl.h</label>
        <link refid="log__backend__impl_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>lib/scheduler/support/pdsch/pdsch_default_time_allocation.h</label>
        <link refid="pdsch__default__time__allocation_8h_source"/>
      </node>
      <node id="456">
        <label>include/srsgnb/support/error_handling.h</label>
        <link refid="error__handling_8h_source"/>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>lib/rlc/rlc_rx_am_entity.h</label>
        <link refid="rlc__rx__am__entity_8h_source"/>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>lib/srslog/sinks/buffered_file_sink.h</label>
        <link refid="buffered__file__sink_8h_source"/>
      </node>
      <node id="129">
        <label>include/srsgnb/scheduler/scheduler_slot_handler.h</label>
        <link refid="scheduler__slot__handler_8h_source"/>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>include/srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>include/srsgnb/fapi_adaptor/mac/messages/pdsch.h</label>
        <link refid="mac_2messages_2pdsch_8h_source"/>
      </node>
      <node id="321">
        <label>include/srsgnb/srsvec/add.h</label>
        <link refid="add_8h_source"/>
      </node>
      <node id="89">
        <label>include/srsgnb/fapi/message_validators.h</label>
        <link refid="message__validators_8h_source"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>lib/rrc/ue/procedures/rrc_ue_event_manager.h</label>
        <link refid="rrc__ue__event__manager_8h_source"/>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>lib/phy/support/resource_grid_pool_impl.h</label>
        <link refid="resource__grid__pool__impl_8h_source"/>
      </node>
      <node id="213">
        <label>lib/rrc/ue/rrc_ue_context.h</label>
        <link refid="rrc__ue__context_8h_source"/>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>lib/fapi/validators/dl_pdcch_pdu.h</label>
        <link refid="dl__pdcch__pdu_8h_source"/>
      </node>
      <node id="30">
        <label>lib/mac/mac_config_interfaces.h</label>
        <link refid="mac__config__interfaces_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>lib/scheduler/support/slot_sync_point.h</label>
        <link refid="slot__sync__point_8h_source"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>include/srsgnb/ran/nr_up_protocol.h</label>
        <link refid="nr__up__protocol_8h_source"/>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>lib/phy/lower/lower_phy_impl.h</label>
        <link refid="lower__phy__impl_8h_source"/>
      </node>
      <node id="501">
        <label>lib/fapi_adaptor/mac/fapi_to_mac_time_msg_translator.h</label>
        <link refid="fapi__to__mac__time__msg__translator_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>lib/rlc/rlc_tx_am_entity.h</label>
        <link refid="rlc__tx__am__entity_8h_source"/>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>include/srsgnb/scheduler/scheduler_configurator.h</label>
        <link refid="scheduler__configurator_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="477">
        <label>lib/srslog/srslog_instance.h</label>
        <link refid="srslog__instance_8h_source"/>
      </node>
      <node id="36">
        <label>include/srsgnb/mac/mac_configuration_helpers.h</label>
        <link refid="mac__configuration__helpers_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>lib/srslog/backend_worker.h</label>
        <link refid="backend__worker_8h_source"/>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>lib/phy/upper/processor_pool_helpers.h</label>
        <link refid="processor__pool__helpers_8h_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>lib/scheduler/cell/resource_grid.h</label>
        <link refid="lib_2scheduler_2cell_2resource__grid_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>include/srsgnb/pdcp/pdcp_tx.h</label>
        <link refid="pdcp__tx_8h_source"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>include/srsgnb/du_high/du_l2_ul_executor_mapper.h</label>
        <link refid="du__l2__ul__executor__mapper_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="347">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_segmenter_impl.h</label>
        <link refid="ldpc__segmenter__impl_8h"/>
      </node>
      <node id="280">
        <label>include/srsgnb/phy/support/prach_buffer.h</label>
        <link refid="prach__buffer_8h_source"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>lib/phy/lower/processors/adaptors/processor_notifier_adaptor.h</label>
        <link refid="processor__notifier__adaptor_8h_source"/>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>include/srsgnb/scheduler/dmrs.h</label>
        <link refid="dmrs_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="471">
        <label>include/srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="345">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc_segmenter_rx.h</label>
        <link refid="ldpc__segmenter__rx_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lib/fapi_adaptor/phy/phy_fapi_adaptor_impl.h</label>
        <link refid="phy__fapi__adaptor__impl_8h_source"/>
      </node>
      <node id="193">
        <label>lib/f1_interface/du/f1ap_du_context.h</label>
        <link refid="f1ap__du__context_8h_source"/>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>lib/phy/upper/signal_processors/dmrs_pdcch_processor_impl.h</label>
        <link refid="dmrs__pdcch__processor__impl_8h_source"/>
      </node>
      <node id="403">
        <label>include/srsgnb/pcap/e1ap_pcap.h</label>
        <link refid="e1ap__pcap_8h_source"/>
      </node>
      <node id="277">
        <label>include/srsgnb/phy/lower/processors/prach/prach_processor_baseband.h</label>
        <link refid="prach__processor__baseband_8h_source"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="493">
        <label>include/srsgnb/ran/prach/prach_cyclic_shifts.h</label>
        <link refid="prach__cyclic__shifts_8h_source"/>
      </node>
      <node id="377">
        <label>lib/scheduler/support/prbs_calculator.h</label>
        <link refid="prbs__calculator_8h_source"/>
      </node>
      <node id="367">
        <label>lib/phy/lower/modulation/phase_compensation_lut.h</label>
        <link refid="phase__compensation__lut_8h_source"/>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>lib/gateways/sctp_network_gateway.h</label>
        <link refid="sctp__network__gateway_8h_source"/>
      </node>
      <node id="130">
        <label>include/srsgnb/mac/mac_cell_result.h</label>
        <link refid="mac__cell__result_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>lib/scheduler/pdcch_scheduling/pdcch_scheduler.h</label>
        <link refid="pdcch__scheduler_8h_source"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>include/srsgnb/ran/ssb_properties.h</label>
        <link refid="ssb__properties_8h_source"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="298">
        <label>include/srsgnb/phy/adapters/phy_rg_gateway_adapter.h</label>
        <link refid="phy__rg__gateway__adapter_8h_source"/>
      </node>
      <node id="419">
        <label>lib/phy/upper/channel_coding/polar/polar_rate_matcher_impl.h</label>
        <link refid="polar__rate__matcher__impl_8h_source"/>
      </node>
      <node id="516">
        <label>include/srsgnb/support/test_utils.h</label>
        <link refid="test__utils_8h_source"/>
      </node>
      <node id="102">
        <label>lib/du_manager/converters/ssb_coreset0_freq_pos_generator.h</label>
        <link refid="ssb__coreset0__freq__pos__generator_8h_source"/>
      </node>
      <node id="314">
        <label>include/srsgnb/phy/upper/channel_modulation/modulation_mapper.h</label>
        <link refid="modulation__mapper_8h_source"/>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>lib/fapi_adaptor/phy/fapi_to_phy_translator.h</label>
        <link refid="fapi__to__phy__translator_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>lib/scheduler/ue_scheduling/harq_process.h</label>
        <link refid="harq__process_8h_source"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>include/srsgnb/phy/upper/equalization/channel_equalizer.h</label>
        <link refid="channel__equalizer_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>include/srsgnb/phy/upper/rb_allocation.h</label>
        <link refid="rb__allocation_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>include/srsgnb/f1_interface/du/f1ap_du_factory.h</label>
        <link refid="f1ap__du__factory_8h_source"/>
      </node>
      <node id="46">
        <label>include/srsgnb/phy/upper/port_channel_estimator.h</label>
        <link refid="port__channel__estimator_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>include/srsgnb/fapi/message_builders.h</label>
        <link refid="message__builders_8h_source"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="312">
        <label>include/srsgnb/phy/upper/channel_modulation/channel_modulation_factories.h</label>
        <link refid="channel__modulation__factories_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="296">
        <label>include/srsgnb/phy/support/resource_grid.h</label>
        <link refid="include_2srsgnb_2phy_2support_2resource__grid_8h_source"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>include/srsgnb/ran/bearer_logger.h</label>
        <link refid="bearer__logger_8h_source"/>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="401">
        <label>lib/cu_cp/f1c_asn1_helpers.h</label>
        <link refid="f1c__asn1__helpers_8h_source"/>
      </node>
      <node id="370">
        <label>include/srsgnb/phy/upper/channel_processors/prach_detection_result.h</label>
        <link refid="prach__detection__result_8h_source"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>lib/mac/mac_ul/ul_bsr.h</label>
        <link refid="ul__bsr_8h_source"/>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="404">
        <label>include/srsgnb/pcap/f1ap_pcap.h</label>
        <link refid="f1ap__pcap_8h_source"/>
      </node>
      <node id="215">
        <label>lib/cu_cp/adapters/rrc_ue_adapters.h</label>
        <link refid="rrc__ue__adapters_8h_source"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>include/srsgnb/rrc/rrc_ue_entity_interface.h</label>
        <link refid="rrc__ue__entity__interface_8h_source"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>lib/phy/upper/channel_processors/pusch_processor_impl.h</label>
        <link refid="pusch__processor__impl_8h_source"/>
      </node>
      <node id="304">
        <label>include/srsgnb/phy/upper/signal_processors/csi_rs_processor.h</label>
        <link refid="csi__rs__processor_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>lib/phy/upper/channel_coding/short/short_block_detector_impl.h</label>
        <link refid="short__block__detector__impl_8h"/>
      </node>
      <node id="510">
        <label>include/srsgnb/support/async/detail/unique_coroutine.h</label>
        <link refid="unique__coroutine_8h_source"/>
        <childnode refid="505" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>lib/phy/lower/modulation/ofdm_modulator_impl.h</label>
        <link refid="ofdm__modulator__impl_8h_source"/>
        <childnode refid="271" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>lib/scheduler/cell/cell_configuration.h</label>
        <link refid="lib_2scheduler_2cell_2cell__configuration_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>include/srsgnb/srsvec/dot_prod.h</label>
        <link refid="dot__prod_8h"/>
      </node>
      <node id="228">
        <label>include/srsgnb/mac/mac_pdu_handler.h</label>
        <link refid="mac__pdu__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>include/srsgnb/cu_cp/cu_cp_configuration.h</label>
        <link refid="cu__cp__configuration_8h_source"/>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="262">
        <label>include/srsgnb/phy/generic_functions/generic_functions_factories.h</label>
        <link refid="generic__functions__factories_8h_source"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="322">
        <label>include/srsgnb/srsvec/binary.h</label>
        <link refid="binary_8h_source"/>
      </node>
      <node id="465">
        <label>include/srsgnb/support/timers.h</label>
        <link refid="timers_8h_source"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="358">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc_rate_matcher.h</label>
        <link refid="ldpc__rate__matcher_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_code.h</label>
        <link refid="polar__code_8h_source"/>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>include/srsgnb/srslog/bundled/fmt/ostream.h</label>
        <link refid="ostream_8h_source"/>
        <childnode refid="446" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>include/srsgnb/rlc/rlc_config.h</label>
        <link refid="rlc__config_8h_source"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>include/srsgnb/phy/lower/lower_phy_factory.h</label>
        <link refid="lower__phy__factory_8h_source"/>
      </node>
      <node id="71">
        <label>include/srsgnb/phy/upper/channel_processors/pusch_processor.h</label>
        <link refid="pusch__processor_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>include/srsgnb/phy/adapters/phy_rx_symbol_adapter.h</label>
        <link refid="phy__rx__symbol__adapter_8h_source"/>
      </node>
      <node id="51">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pusch_estimator.h</label>
        <link refid="dmrs__pusch__estimator_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="483">
        <label>include/srsgnb/adt/filter_view.h</label>
        <link refid="filter__view_8h_source"/>
      </node>
      <node id="28">
        <label>lib/mac/mac_ul/mac_ul_ue_manager.h</label>
        <link refid="mac__ul__ue__manager_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>lib/phy/upper/channel_processors/pusch_demodulator_impl.h</label>
        <link refid="pusch__demodulator__impl_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>lib/phy/support/prach_buffer_pool_impl.h</label>
        <link refid="prach__buffer__pool__impl_8h_source"/>
      </node>
      <node id="218">
        <label>lib/f1_interface/cu/f1ap_cu_impl.h</label>
        <link refid="f1ap__cu__impl_8h_source"/>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>include/srsgnb/ran/ssb_configuration.h</label>
        <link refid="ssb__configuration_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="349">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc_segmenter_tx.h</label>
        <link refid="ldpc__segmenter__tx_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
      </node>
      <node id="354">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc_encoder.h</label>
        <link refid="ldpc__encoder_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_decoder.h</label>
        <link refid="polar__decoder_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>lib/fapi/validators/helpers.h</label>
        <link refid="helpers_8h_source"/>
      </node>
      <node id="224">
        <label>lib/f1_interface/common/remote_message_handler.h</label>
        <link refid="remote__message__handler_8h_source"/>
      </node>
      <node id="231">
        <label>lib/pdcp/pdcp_packet_procedures_impl.h</label>
        <link refid="pdcp__packet__procedures__impl_8h_source"/>
      </node>
      <node id="307">
        <label>lib/phy/upper/signal_processors/pss_processor_impl.h</label>
        <link refid="pss__processor__impl_8h_source"/>
      </node>
      <node id="142">
        <label>include/srsgnb/scheduler/prb_grant.h</label>
        <link refid="prb__grant_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>lib/du_manager/procedures/initial_du_setup_procedure.h</label>
        <link refid="initial__du__setup__procedure_8h_source"/>
      </node>
      <node id="421">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_encoder.h</label>
        <link refid="polar__encoder_8h_source"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>include/srsgnb/radio/radio_factory.h</label>
        <link refid="radio__factory_8h_source"/>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/srsgnb/mac/mac_factory.h</label>
        <link refid="mac__factory_8h_source"/>
      </node>
      <node id="253">
        <label>include/srsgnb/sdap/sdap_packet_procedures.h</label>
        <link refid="sdap__packet__procedures_8h_source"/>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>lib/phy/upper/channel_processors/pdsch_modulator_impl.h</label>
        <link refid="pdsch__modulator__impl_8h_source"/>
      </node>
      <node id="38">
        <label>lib/mac/mac_dl/ssb_assembler.h</label>
        <link refid="ssb__assembler_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>lib/mac/mac_ul/mac_ul_sch_pdu.h</label>
        <link refid="mac__ul__sch__pdu_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="497">
        <label>lib/fapi_adaptor/mac/mac_fapi_adaptor_factory_impl.h</label>
        <link refid="mac__fapi__adaptor__factory__impl_8h_source"/>
      </node>
      <node id="411">
        <label>lib/phy/upper/channel_coding/polar/polar_allocator_impl.h</label>
        <link refid="polar__allocator__impl_8h_source"/>
      </node>
      <node id="348">
        <label>lib/phy/upper/channel_processors/pusch_decoder_impl.h</label>
        <link refid="pusch__decoder__impl_8h_source"/>
      </node>
      <node id="373">
        <label>lib/phy/upper/upper_phy_rx_results_notifier_proxy.h</label>
        <link refid="upper__phy__rx__results__notifier__proxy_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>include/srsgnb/ran/slot_point.h</label>
        <link refid="slot__point_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>include/srsgnb/ran/pdcch/coreset.h</label>
        <link refid="coreset_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>lib/pdcp/pdcp_entity_impl.h</label>
        <link refid="pdcp__entity__impl_8h_source"/>
      </node>
      <node id="68">
        <label>include/srsgnb/fapi_adaptor/phy/messages/pdsch.h</label>
        <link refid="phy_2messages_2pdsch_8h_source"/>
      </node>
      <node id="159">
        <label>include/srsgnb/ran/pusch/pusch_mcs.h</label>
        <link refid="pusch__mcs_8h_source"/>
      </node>
      <node id="158">
        <label>include/srsgnb/ran/pdsch/pdsch_mcs.h</label>
        <link refid="pdsch__mcs_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>lib/fapi_adaptor/mac/mac_to_fapi_translator.h</label>
        <link refid="mac__to__fapi__translator_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="472">
        <label>include/srsgnb/adt/bitmap_utils.h</label>
        <link refid="bitmap__utils_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>include/srsgnb/scheduler/mac_scheduler.h</label>
        <link refid="mac__scheduler_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="337">
        <label>lib/radio/zmq/radio_zmq_tx_channel.h</label>
        <link refid="radio__zmq__tx__channel_8h_source"/>
        <childnode refid="338" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>include/srsgnb/fapi_adaptor/mac/messages/pdcch.h</label>
        <link refid="mac_2messages_2pdcch_8h_source"/>
      </node>
      <node id="34">
        <label>lib/mac/rach_handler.h</label>
        <link refid="rach__handler_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>lib/scheduler/common_scheduling/ssb_scheduler.h</label>
        <link refid="ssb__scheduler_8h_source"/>
      </node>
      <node id="44">
        <label>lib/phy/upper/channel_processors/pusch_demodulator_impl.cpp</label>
        <link refid="pusch__demodulator__impl_8cpp"/>
      </node>
      <node id="19">
        <label>lib/mac/mac_config.h</label>
        <link refid="mac__config_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>include/srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>lib/f1_interface/common/f1ap_asn1_packer.h</label>
        <link refid="f1ap__asn1__packer_8h_source"/>
      </node>
      <node id="488">
        <label>include/srsgnb/radio/radio_configuration.h</label>
        <link refid="radio__configuration_8h_source"/>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>lib/pdcp/pdcp_entity_rx.h</label>
        <link refid="pdcp__entity__rx_8h_source"/>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>include/srsgnb/support/executors/task_executor.h</label>
        <link refid="task__executor_8h_source"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
      </node>
      <node id="391">
        <label>include/srsgnb/phy/upper/upper_phy_rx_symbol_handler.h</label>
        <link refid="upper__phy__rx__symbol__handler_8h"/>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>include/srsgnb/phy/upper/sequence_generators/pseudo_random_generator.h</label>
        <link refid="pseudo__random__generator_8h"/>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>lib/cu_cp/adapters/f1ap_adapters.h</label>
        <link refid="f1ap__adapters_8h_source"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>lib/rlc/rlc_sdu_queue.h</label>
        <link refid="rlc__sdu__queue_8h_source"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="315">
        <label>lib/phy/upper/channel_modulation/modulation_mapper_impl.h</label>
        <link refid="modulation__mapper__impl_8h_source"/>
      </node>
      <node id="434">
        <label>include/srsgnb/srsvec/detail/traits.h</label>
        <link refid="traits_8h_source"/>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>lib/phy/upper/channel_processors/prach_detector_simple_impl.h</label>
        <link refid="prach__detector__simple__impl_8h_source"/>
      </node>
      <node id="463">
        <label>include/srsgnb/support/executors/blocking_task_worker.h</label>
        <link refid="blocking__task__worker_8h_source"/>
      </node>
      <node id="387">
        <label>include/srsgnb/phy/lower/lower_phy_timing_notifier.h</label>
        <link refid="lower__phy__timing__notifier_8h_source"/>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>lib/f1_interface/du/f1ap_du_impl.h</label>
        <link refid="f1ap__du__impl_8h_source"/>
      </node>
      <node id="485">
        <label>include/srsgnb/support/async/async_test_utils.h</label>
        <link refid="async__test__utils_8h_source"/>
      </node>
      <node id="257">
        <label>lib/rlc/rlc_retx_queue.h</label>
        <link refid="rlc__retx__queue_8h_source"/>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>lib/mac/mac_ctrl/mac_scheduler_configurator.h</label>
        <link refid="mac__scheduler__configurator_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="523">
        <label>include/srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_graph_impl.h</label>
        <link refid="ldpc__graph__impl_8h"/>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="423">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_interleaver.h</label>
        <link refid="polar__interleaver_8h_source"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>lib/rrc/ue/rrc_ue_entity.h</label>
        <link refid="rrc__ue__entity_8h_source"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="239">
        <label>lib/phy/upper/signal_processors/pucch/pucch_helper.h</label>
        <link refid="pucch__helper_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>include/srsgnb/ran/pdcch/dci_packing.h</label>
        <link refid="dci__packing_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>lib/du_manager/du_manager_impl.h</label>
        <link refid="du__manager__impl_8h_source"/>
      </node>
      <node id="343">
        <label>include/srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>lib/scheduler/ue_scheduling/ue.h</label>
        <link refid="ue_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="518">
        <label>lib/mac/du_rnti_table.h</label>
        <link refid="du__rnti__table_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>lib/phy/lower/modulation/ofdm_modulator_factory_impl.h</label>
        <link refid="ofdm__modulator__factory__impl_8h_source"/>
      </node>
      <node id="35">
        <label>lib/mac/mac_dl/sib_pdu_assembler.h</label>
        <link refid="sib__pdu__assembler_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>include/srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
      </node>
      <node id="412">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_deallocator.h</label>
        <link refid="polar__deallocator_8h_source"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>include/srsgnb/cu_cp/du_processor.h</label>
        <link refid="include_2srsgnb_2cu__cp_2du__processor_8h_source"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>lib/phy/upper/downlink_processor_single_executor_impl.h</label>
        <link refid="downlink__processor__single__executor__impl_8h_source"/>
      </node>
      <node id="520">
        <label>lib/cu_cp/log_format.h</label>
        <link refid="log__format_8h_source"/>
      </node>
      <node id="489">
        <label>include/srsgnb/ran/pdcch/pdcch_candidates.h</label>
        <link refid="pdcch__candidates_8h_source"/>
      </node>
      <node id="165">
        <label>include/srsgnb/ran/ssb_mapping.h</label>
        <link refid="ssb__mapping_8h_source"/>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>lib/scheduler/ue_scheduling/ue_event_manager.h</label>
        <link refid="ue__event__manager_8h_source"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="244">
        <label>include/srsgnb/rrc/rrc.h</label>
        <link refid="rrc_8h_source"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>include/srsgnb/fapi/validator_report.h</label>
        <link refid="validator__report_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>include/srsgnb/phy/lower/lower_phy_rx_symbol_notifier.h</label>
        <link refid="lower__phy__rx__symbol__notifier_8h_source"/>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>lib/phy/upper/channel_coding/polar/polar_deallocator_impl.h</label>
        <link refid="polar__deallocator__impl_8h_source"/>
      </node>
      <node id="40">
        <label>include/srsgnb/phy/upper/channel_processors/pusch_demodulator.h</label>
        <link refid="pusch__demodulator_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/srsgnb/du_manager/du_manager_factory.h</label>
        <link refid="du__manager__factory_8h_source"/>
      </node>
      <node id="14">
        <label>lib/du_manager/du_cell_manager.h</label>
        <link refid="du__cell__manager_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>include/srsgnb/adt/expected.h</label>
        <link refid="expected_8h_source"/>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="408">
        <label>lib/phy/upper/channel_processors/pdcch_encoder_impl.h</label>
        <link refid="pdcch__encoder__impl_8h_source"/>
      </node>
      <node id="357">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_rate_dematcher_impl.h</label>
        <link refid="ldpc__rate__dematcher__impl_8h"/>
      </node>
      <node id="365">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.cpp</label>
        <link refid="ldpc__luts__impl_8cpp"/>
      </node>
      <node id="18">
        <label>lib/du_manager/procedures/ue_deletion_procedure.h</label>
        <link refid="ue__deletion__procedure_8h_source"/>
      </node>
      <node id="176">
        <label>lib/rlc/rlc_base_entity.h</label>
        <link refid="rlc__base__entity_8h_source"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>lib/mac/mac_dl/mac_cell_processor.h</label>
        <link refid="mac__cell__processor_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>lib/phy/upper/upper_phy_rx_symbol_handler_impl.h</label>
        <link refid="upper__phy__rx__symbol__handler__impl_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>include/srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="346">
        <label>include/srsgnb/phy/upper/channel_coding/channel_coding_factories.h</label>
        <link refid="channel__coding__factories_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_rate_matcher.h</label>
        <link refid="polar__rate__matcher_8h_source"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="319">
        <label>include/srsgnb/srsvec/conversion.h</label>
        <link refid="conversion_8h_source"/>
      </node>
      <node id="180">
        <label>lib/rlc/rlc_rx_entity.h</label>
        <link refid="rlc__rx__entity_8h_source"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="527">
        <label>lib/srslog/sinks/syslog_sink.h</label>
        <link refid="syslog__sink_8h_source"/>
      </node>
      <node id="238">
        <label>lib/phy/upper/signal_processors/dmrs_pbch_processor_impl.h</label>
        <link refid="dmrs__pbch__processor__impl_8h_source"/>
      </node>
      <node id="171">
        <label>lib/du_manager/du_ue_context.h</label>
        <link refid="du__ue__context_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>lib/mac/mac_dl/mac_dl_ue_manager.h</label>
        <link refid="mac__dl__ue__manager_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>lib/rlc/rlc_um_pdu.h</label>
        <link refid="rlc__um__pdu_8h_source"/>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>lib/du_manager/du_ue_manager.h</label>
        <link refid="du__ue__manager_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>lib/pdcp/pdcp_entity_tx.h</label>
        <link refid="pdcp__entity__tx_8h_source"/>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>lib/phy/upper/channel_processors/pbch_modulator_impl.h</label>
        <link refid="pbch__modulator__impl_8h_source"/>
      </node>
      <node id="94">
        <label>lib/fapi_adaptor/phy/phy_fapi_adaptor_factory_impl.h</label>
        <link refid="phy__fapi__adaptor__factory__impl_8h_source"/>
      </node>
      <node id="455">
        <label>include/srsgnb/rrc/rrc_config.h</label>
        <link refid="rrc__config_8h_source"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>lib/phy/upper/uplink_processor_single_executor_impl.h</label>
        <link refid="uplink__processor__single__executor__impl_8h_source"/>
      </node>
      <node id="283">
        <label>include/srsgnb/phy/lower/lower_phy.h</label>
        <link refid="lower__phy_8h_source"/>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>lib/rlc/rlc_rx_tm_entity.h</label>
        <link refid="rlc__rx__tm__entity_8h_source"/>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>include/srsgnb/support/async/awaiter_memory_storage.h</label>
        <link refid="awaiter__memory__storage_8h_source"/>
        <childnode refid="504" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pdcch_processor.h</label>
        <link refid="dmrs__pdcch__processor_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="303">
        <label>include/srsgnb/phy/upper/channel_processors/pbch_modulator.h</label>
        <link refid="pbch__modulator_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>lib/scheduler/ue_scheduling/ue_configuration.h</label>
        <link refid="ue__configuration_8h_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>include/srsgnb/scheduler/scheduler_feedback_handler.h</label>
        <link refid="scheduler__feedback__handler_8h_source"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>lib/mac/mac_ul/mac_ul_processor.h</label>
        <link refid="mac__ul__processor_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>lib/mac/mac_ctrl/sched_config_helpers.h</label>
        <link refid="sched__config__helpers_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="355">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h</label>
        <link refid="ldpc__encoder__impl_8h"/>
      </node>
      <node id="394">
        <label>include/srsgnb/ran/prach/prach_configuration.h</label>
        <link refid="prach__configuration_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>include/srsgnb/support/async/coroutine.h</label>
        <link refid="coroutine_8h_source"/>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>lib/f1_interface/common/f1ap_packet_procedures_impl.h</label>
        <link refid="f1ap__packet__procedures__impl_8h_source"/>
      </node>
      <node id="366">
        <label>include/srsgnb/ran/cyclic_prefix.h</label>
        <link refid="cyclic__prefix_8h"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>lib/radio/uhd/radio_uhd_tx_stream.h</label>
        <link refid="radio__uhd__tx__stream_8h_source"/>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>lib/rlc/rlc_tx_tm_entity.h</label>
        <link refid="rlc__tx__tm__entity_8h_source"/>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="385">
        <label>include/srsgnb/phy/lower/lower_phy_error_notifier.h</label>
        <link refid="lower__phy__error__notifier_8h_source"/>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>lib/scheduler/ue_scheduling/ue_cell_grid_allocator.h</label>
        <link refid="ue__cell__grid__allocator_8h_source"/>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>lib/phy/upper/signal_processors/csi_rs_processor_impl.h</label>
        <link refid="csi__rs__processor__impl_8h_source"/>
      </node>
      <node id="21">
        <label>lib/mac/mac_impl.h</label>
        <link refid="mac__impl_8h_source"/>
      </node>
      <node id="166">
        <label>include/srsgnb/phy/upper/channel_processors/ssb_processor.h</label>
        <link refid="ssb__processor_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>include/srsgnb/phy/upper/dmrs_mapping.h</label>
        <link refid="dmrs__mapping_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>include/srsgnb/phy/support/support_factories.h</label>
        <link refid="support__factories_8h_source"/>
      </node>
      <node id="410">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_allocator.h</label>
        <link refid="polar__allocator_8h_source"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>lib/rlc/rlc_rx_um_entity.h</label>
        <link refid="rlc__rx__um__entity_8h_source"/>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="441">
        <label>include/srsgnb/srslog/bundled/fmt/compile.h</label>
        <link refid="compile_8h_source"/>
      </node>
      <node id="323">
        <label>include/srsgnb/srsvec/compare.h</label>
        <link refid="compare_8h_source"/>
      </node>
      <node id="389">
        <label>include/srsgnb/phy/support/prach_buffer_context.h</label>
        <link refid="prach__buffer__context_8h_source"/>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="311">
        <label>include/srsgnb/phy/upper/channel_modulation/demodulation_mapper.h</label>
        <link refid="demodulation__mapper_8h"/>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>lib/radio/uhd/radio_uhd_impl.h</label>
        <link refid="radio__uhd__impl_8h_source"/>
      </node>
      <node id="494">
        <label>include/srsgnb/ran/prach/prach_frequency_mapping.h</label>
        <link refid="prach__frequency__mapping_8h_source"/>
      </node>
      <node id="184">
        <label>lib/rlc/rlc_tx_entity.h</label>
        <link refid="rlc__tx__entity_8h_source"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="491">
        <label>include/srsgnb/phy/lower/sampling_rate.h</label>
        <link refid="sampling__rate_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>include/srsgnb/fapi_adaptor/phy/messages/pdcch.h</label>
        <link refid="phy_2messages_2pdcch_8h_source"/>
      </node>
      <node id="306">
        <label>include/srsgnb/phy/upper/signal_processors/pss_processor.h</label>
        <link refid="pss__processor_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>include/srsgnb/phy/upper/re_pattern.h</label>
        <link refid="re__pattern_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>include/srsgnb/support/async/async_queue.h</label>
        <link refid="async__queue_8h_source"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>lib/du_high/du_high_executor_strategies.h</label>
        <link refid="du__high__executor__strategies_8h_source"/>
      </node>
      <node id="179">
        <label>lib/rlc/rlc_um_entity.h</label>
        <link refid="rlc__um__entity_8h_source"/>
      </node>
      <node id="20">
        <label>lib/mac/mac_ctrl/mac_controller.h</label>
        <link refid="mac__controller_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>lib/rlc/rlc_tx_um_entity.h</label>
        <link refid="rlc__tx__um__entity_8h_source"/>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="305">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pbch_processor.h</label>
        <link refid="dmrs__pbch__processor_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="249">
        <label>lib/sdap/sdap_packet_procedures_impl.h</label>
        <link refid="sdap__packet__procedures__impl_8h_source"/>
      </node>
      <node id="278">
        <label>lib/phy/lower/processors/prach/prach_processor_worker.h</label>
        <link refid="prach__processor__worker_8h_source"/>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>lib/scheduler/policy/ue_allocator.h</label>
        <link refid="ue__allocator_8h_source"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>include/srsgnb/support/async/manual_event.h</label>
        <link refid="manual__event_8h_source"/>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="416">
        <label>include/srsgnb/phy/upper/channel_coding/polar/polar_rate_dematcher.h</label>
        <link refid="polar__rate__dematcher_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>include/srsgnb/f1_interface/cu/f1ap_cu.h</label>
        <link refid="f1ap__cu_8h_source"/>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>include/srsgnb/fapi_adaptor/mac/messages/ssb.h</label>
        <link refid="mac_2messages_2ssb_8h_source"/>
      </node>
      <node id="525">
        <label>lib/srslog/sinks/file_sink.h</label>
        <link refid="lib_2srslog_2sinks_2file__sink_8h_source"/>
      </node>
      <node id="500">
        <label>include/srsgnb/scheduler/sched_consts.h</label>
        <link refid="sched__consts_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>include/srsgnb/support/async/async_task.h</label>
        <link refid="async__task_8h_source"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="400">
        <label>lib/cu_cp/du_context.h</label>
        <link refid="du__context_8h_source"/>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>lib/cu_cp/ue_manager.h</label>
        <link refid="ue__manager_8h_source"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>include/srsgnb/fapi_adaptor/phy/messages/ssb.h</label>
        <link refid="phy_2messages_2ssb_8h_source"/>
      </node>
      <node id="23">
        <label>lib/mac/mac_ctrl/ue_delete_procedure.h</label>
        <link refid="ue__delete__procedure_8h_source"/>
      </node>
      <node id="517">
        <label>lib/asn1/asn1_diff_utils.h</label>
        <link refid="asn1__diff__utils_8h_source"/>
      </node>
      <node id="247">
        <label>include/srsgnb/sdap/sdap_factory.h</label>
        <link refid="sdap__factory_8h_source"/>
      </node>
      <node id="118">
        <label>lib/scheduler/policy/scheduler_policy_factory.h</label>
        <link refid="scheduler__policy__factory_8h_source"/>
      </node>
      <node id="437">
        <label>lib/scheduler/support/slot_event_list.h</label>
        <link refid="slot__event__list_8h_source"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>include/srsgnb/adt/interval.h</label>
        <link refid="interval_8h_source"/>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>include/srsgnb/ran/prach/prach_preamble_information.h</label>
        <link refid="prach__preamble__information_8h_source"/>
      </node>
      <node id="141">
        <label>include/srsgnb/scheduler/resource_block_group.h</label>
        <link refid="resource__block__group_8h_source"/>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="310">
        <label>lib/phy/support/resource_grid_impl.h</label>
        <link refid="resource__grid__impl_8h_source"/>
      </node>
      <node id="486">
        <label>include/srsgnb/adt/static_vector.h</label>
        <link refid="static__vector_8h_source"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="390">
        <label>include/srsgnb/phy/upper/rx_softbuffer_pool.h</label>
        <link refid="rx__softbuffer__pool_8h_source"/>
        <childnode refid="362" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>lib/radio/uhd/radio_uhd_rx_stream.h</label>
        <link refid="radio__uhd__rx__stream_8h_source"/>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>lib/rlc/rlc_tm_entity.h</label>
        <link refid="rlc__tm__entity_8h_source"/>
      </node>
      <node id="112">
        <label>lib/scheduler/common_scheduling/ra_scheduler.h</label>
        <link refid="ra__scheduler_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>include/srsgnb/support/async/async_procedure.h</label>
        <link refid="async__procedure_8h_source"/>
      </node>
      <node id="422">
        <label>lib/phy/upper/channel_coding/polar/polar_encoder_impl.h</label>
        <link refid="polar__encoder__impl_8h_source"/>
      </node>
      <node id="405">
        <label>include/srsgnb/pcap/ngap_pcap.h</label>
        <link refid="ngap__pcap_8h_source"/>
      </node>
      <node id="246">
        <label>include/srsgnb/sdap/sdap.h</label>
        <link refid="sdap_8h_source"/>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="351">
        <label>include/srsgnb/phy/upper/codeblock_metadata.h</label>
        <link refid="codeblock__metadata_8h"/>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
      </node>
      <node id="254">
        <label>include/srsgnb/support/bit_encoding.h</label>
        <link refid="bit__encoding_8h_source"/>
      </node>
      <node id="11">
        <label>lib/du_manager/du_manager_config.h</label>
        <link refid="du__manager__config_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="325">
        <label>include/srsgnb/gateways/baseband/baseband_gateway_buffer.h</label>
        <link refid="baseband__gateway__buffer_8h_source"/>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>include/srsgnb/phy/upper/downlink_processor.h</label>
        <link refid="downlink__processor_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="420">
        <label>lib/phy/upper/channel_coding/polar/polar_code_impl.h</label>
        <link refid="polar__code__impl_8h_source"/>
      </node>
      <node id="402">
        <label>include/srsgnb/pcap/pcap.h</label>
        <link refid="pcap_8h_source"/>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>include/srsgnb/mac/mac_sdu_handler.h</label>
        <link refid="mac__sdu__handler_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>lib/phy/upper/channel_processors/pdcch_processor_impl.h</label>
        <link refid="pdcch__processor__impl_8h_source"/>
      </node>
      <node id="397">
        <label>include/srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
      </node>
      <node id="435">
        <label>include/srsgnb/support/file_sink.h</label>
        <link refid="include_2srsgnb_2support_2file__sink_8h_source"/>
      </node>
      <node id="202">
        <label>lib/cu_cp/du_processor_config.h</label>
        <link refid="du__processor__config_8h_source"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="466">
        <label>include/srsgnb/support/async/protocol_transaction_manager.h</label>
        <link refid="protocol__transaction__manager_8h_source"/>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>include/srsgnb/fapi/messages.h</label>
        <link refid="messages_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>lib/radio/zmq/radio_session_zmq_impl.h</label>
        <link refid="radio__session__zmq__impl_8h_source"/>
      </node>
      <node id="177">
        <label>lib/rlc/rlc_am_entity.h</label>
        <link refid="rlc__am__entity_8h_source"/>
      </node>
      <node id="519">
        <label>lib/mac/mac_ul/lcid_ul_sch.h</label>
        <link refid="lcid__ul__sch_8h_source"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="326">
        <label>include/srsgnb/gateways/baseband/baseband_gateway.h</label>
        <link refid="baseband__gateway_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>lib/scheduler/policy/scheduler_policy.h</label>
        <link refid="scheduler__policy_8h_source"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="237">
        <label>lib/phy/upper/sequence_generators/pseudo_random_generator_impl.h</label>
        <link refid="pseudo__random__generator__impl_8h"/>
      </node>
      <node id="359">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_rate_matcher_impl.h</label>
        <link refid="ldpc__rate__matcher__impl_8h"/>
      </node>
      <node id="104">
        <label>include/srsgnb/mac/mac_ue_configurator.h</label>
        <link refid="mac__ue__configurator_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>lib/scheduler/support/dmrs_helpers.h</label>
        <link refid="dmrs__helpers_8h_source"/>
      </node>
      <node id="209">
        <label>lib/rrc/rrc_entity.h</label>
        <link refid="rrc__entity_8h_source"/>
      </node>
      <node id="123">
        <label>lib/scheduler/ue_scheduling/ue_scheduler.h</label>
        <link refid="ue__scheduler_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>include/srsgnb/scheduler/bwp_configuration.h</label>
        <link refid="bwp__configuration_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>include/srsgnb/support/executors/task_worker.h</label>
        <link refid="task__worker_8h_source"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>include/srsgnb/cu_cp/ue_context.h</label>
        <link refid="ue__context_8h_source"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>lib/phy/upper/channel_processors/ssb_processor_impl.h</label>
        <link refid="ssb__processor__impl_8h_source"/>
      </node>
      <node id="74">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pdsch_processor.h</label>
        <link refid="dmrs__pdsch__processor_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="290">
        <label>include/srsgnb/phy/upper/uplink_processor.h</label>
        <link refid="uplink__processor_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>include/srsgnb/srslog/detail/support/work_queue.h</label>
        <link refid="work__queue_8h_source"/>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>include/srsgnb/srsvec/bit.h</label>
        <link refid="bit_8h_source"/>
      </node>
      <node id="514">
        <label>include/srsgnb/support/async/detail/promise_data.h</label>
        <link refid="promise__data_8h_source"/>
        <childnode refid="505" relation="include">
        </childnode>
      </node>
      <node id="352">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc_decoder.h</label>
        <link refid="ldpc__decoder_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>lib/srslog/sinks/file_utils.h</label>
        <link refid="file__utils_8h_source"/>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>lib/phy/upper/channel_processors/pdsch_processor_impl.h</label>
        <link refid="pdsch__processor__impl_8h_source"/>
      </node>
      <node id="417">
        <label>lib/phy/upper/channel_coding/polar/polar_rate_dematcher_impl.h</label>
        <link refid="polar__rate__dematcher__impl_8h"/>
      </node>
      <node id="265">
        <label>include/srsgnb/phy/lower/processors/prach/prach_processor_factories.h</label>
        <link refid="prach__processor__factories_8h_source"/>
        <childnode refid="264" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>include/srsgnb/phy/upper/channel_processors/pdsch_modulator.h</label>
        <link refid="pdsch__modulator_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="342">
        <label>include/srsgnb/srsvec/zero.h</label>
        <link refid="zero_8h_source"/>
      </node>
      <node id="6">
        <label>include/srsgnb/mac/mac.h</label>
        <link refid="mac_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>lib/ran/gnb_format.h</label>
        <link refid="gnb__format_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>include/srsgnb/rrc/rrc_factory.h</label>
        <link refid="rrc__factory_8h_source"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>include/srsgnb/gateways/network_gateway.h</label>
        <link refid="network__gateway_8h_source"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>include/srsgnb/du_manager/du_manager.h</label>
        <link refid="du__manager_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>lib/phy/upper/downlink_processor_pool_impl.h</label>
        <link refid="downlink__processor__pool__impl_8h_source"/>
      </node>
      <node id="361">
        <label>include/srsgnb/phy/upper/channel_processors/pusch_decoder.h</label>
        <link refid="pusch__decoder_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>include/srsgnb/adt/circular_buffer.h</label>
        <link refid="circular__buffer_8h_source"/>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>include/srsgnb/ran/du_ue_list.h</label>
        <link refid="du__ue__list_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>include/srsgnb/f1_interface/cu/f1u_cu.h</label>
        <link refid="f1u__cu_8h_source"/>
      </node>
      <node id="134">
        <label>lib/scheduler/support/config_helpers.h</label>
        <link refid="config__helpers_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="444">
        <label>include/srsgnb/srslog/bundled/fmt/posix.h</label>
        <link refid="posix_8h_source"/>
      </node>
      <node id="153">
        <label>include/srsgnb/adt/bounded_integer.h</label>
        <link refid="bounded__integer_8h_source"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>lib/f1_interface/common/f1ap_asn1_utils.h</label>
        <link refid="f1ap__asn1__utils_8h_source"/>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="272">
        <label>lib/phy/lower/modulation/ofdm_prach_demodulator_impl.h</label>
        <link refid="ofdm__prach__demodulator__impl_8h_source"/>
      </node>
      <node id="532">
        <label>include/srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>lib/du_manager/converters/f1c_configuration_helpers.h</label>
        <link refid="f1c__configuration__helpers_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>include/srsgnb/phy/upper/signal_processors/dmrs_pucch_processor.h</label>
        <link refid="dmrs__pucch__processor_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>include/srsgnb/phy/adapters/phy_rx_symbol_request_adapter.h</label>
        <link refid="phy__rx__symbol__request__adapter_8h_source"/>
      </node>
      <node id="242">
        <label>include/srsgnb/f1_interface/du/f1u_du.h</label>
        <link refid="f1u__du_8h_source"/>
      </node>
      <node id="5">
        <label>include/srsgnb/mac/mac_cell_manager.h</label>
        <link refid="mac__cell__manager_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="484">
        <label>include/srsgnb/adt/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>include/srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>lib/scheduler/support/pdsch/pdsch_dmrs_symbol_mask.h</label>
        <link refid="pdsch__dmrs__symbol__mask_8h_source"/>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>include/srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>lib/du_manager/converters/mac_cell_configuration_helpers.h</label>
        <link refid="mac__cell__configuration__helpers_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>include/srsgnb/phy/adapters/phy_timing_adapter.h</label>
        <link refid="phy__timing__adapter_8h_source"/>
      </node>
      <node id="462">
        <label>include/srsgnb/phy/lower/lower_phy_controller.h</label>
        <link refid="lower__phy__controller_8h_source"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>lib/phy/upper/uplink_processor_pool_impl.h</label>
        <link refid="uplink__processor__pool__impl_8h_source"/>
      </node>
      <node id="110">
        <label>lib/scheduler/cell/scheduler_cell_manager.h</label>
        <link refid="scheduler__cell__manager_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="356">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc_rate_dematcher.h</label>
        <link refid="ldpc__rate__dematcher_8h"/>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>lib/cu_cp/ue_manager_interfaces.h</label>
        <link refid="ue__manager__interfaces_8h_source"/>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="528">
        <label>lib/srslog/formatters/json_formatter.h</label>
        <link refid="json__formatter_8h_source"/>
      </node>
      <node id="67">
        <label>include/srsgnb/phy/upper/channel_processors/pdsch_processor.h</label>
        <link refid="pdsch__processor_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>include/srsgnb/support/srsgnb_test.h</label>
        <link refid="srsgnb__test_8h_source"/>
        <childnode refid="516" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>lib/mac/mac_dl/rar_pdu_assembler.h</label>
        <link refid="rar__pdu__assembler_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>include/srsgnb/phy/upper/channel_processors/pdcch_modulator.h</label>
        <link refid="pdcch__modulator_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>include/srsgnb/phy/upper/sequence_generators/low_papr_sequence_generator.h</label>
        <link refid="low__papr__sequence__generator_8h_source"/>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="452">
        <label>include/srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="248">
        <label>lib/sdap/sdap_impl.h</label>
        <link refid="sdap__impl_8h_source"/>
      </node>
      <node id="256">
        <label>lib/rlc/rlc_am_interconnect.h</label>
        <link refid="rlc__am__interconnect_8h_source"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>include/srsgnb/fapi_adaptor/mac/messages/prach.h</label>
        <link refid="mac_2messages_2prach_8h_source"/>
      </node>
      <node id="380">
        <label>include/srsgnb/ran/ofdm_symbol_range.h</label>
        <link refid="ofdm__symbol__range_8h_source"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="344">
        <label>include/srsgnb/phy/upper/channel_coding/ldpc/ldpc.h</label>
        <link refid="ldpc_8h"/>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
      </node>
      <node id="341">
        <label>include/srsgnb/srsvec/sc_prod.h</label>
        <link refid="sc__prod_8h_source"/>
      </node>
      <node id="294">
        <label>lib/phy/support/prach_buffer_impl.h</label>
        <link refid="prach__buffer__impl_8h_source"/>
      </node>
      <node id="407">
        <label>lib/phy/upper/channel_coding/crc_calculator_impl.h</label>
        <link refid="crc__calculator__impl_8h_source"/>
      </node>
      <node id="374">
        <label>include/srsgnb/ran/prach/prach_constants.h</label>
        <link refid="prach__constants_8h_source"/>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>lib/mac/mac_ul/pdu_rx_handler.h</label>
        <link refid="pdu__rx__handler_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>include/srsgnb/mac/mac_cell_rach_handler.h</label>
        <link refid="mac__cell__rach__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>lib/srsvec/simd.h</label>
        <link refid="simd_8h_source"/>
      </node>
      <node id="499">
        <label>include/srsgnb/ran/resource_block.h</label>
        <link refid="resource__block_8h_source"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
      </node>
      <node id="320">
        <label>include/srsgnb/srsvec/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>lib/mac/mac_ctrl/ue_creation_procedure.h</label>
        <link refid="mac_2mac__ctrl_2ue__creation__procedure_8h_source"/>
      </node>
      <node id="505">
        <label>include/srsgnb/support/async/detail/base_task.h</label>
        <link refid="base__task_8h_source"/>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>lib/scheduler/pdcch_scheduling/pdcch_config_helpers.h</label>
        <link refid="pdcch__config__helpers_8h_source"/>
      </node>
      <node id="368">
        <label>include/srsgnb/ran/phy_time_unit.h</label>
        <link refid="phy__time__unit_8h_source"/>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="340">
        <label>include/srsgnb/srsvec/prod.h</label>
        <link refid="prod_8h_source"/>
      </node>
      <node id="62">
        <label>lib/phy/upper/upper_phy_impl.h</label>
        <link refid="upper__phy__impl_8h_source"/>
      </node>
      <node id="372">
        <label>lib/fapi_adaptor/phy/phy_to_fapi_results_event_translator.h</label>
        <link refid="phy__to__fapi__results__event__translator_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="533">
        <label>include/srsgnb/srslog/detail/support/dyn_arg_store_pool.h</label>
        <link refid="dyn__arg__store__pool_8h_source"/>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="335">
        <label>lib/radio/zmq/radio_zmq_rx_channel.h</label>
        <link refid="radio__zmq__rx__channel_8h_source"/>
        <childnode refid="336" relation="include">
        </childnode>
      </node>
      <node id="255">
        <label>lib/rlc/rlc_am_pdu.h</label>
        <link refid="rlc__am__pdu_8h_source"/>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>lib/cu_cp/cu_cp.h</label>
        <link refid="lib_2cu__cp_2cu__cp_8h_source"/>
      </node>
      <node id="529">
        <label>lib/srslog/formatters/text_formatter.h</label>
        <link refid="text__formatter_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>include/srsgnb/support/async/async_task_loop.h</label>
        <link refid="async__task__loop_8h_source"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>lib/f1_interface/common/colocated_message_handler.h</label>
        <link refid="colocated__message__handler_8h_source"/>
      </node>
      <node id="353">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_decoder_impl.h</label>
        <link refid="ldpc__decoder__impl_8h"/>
      </node>
      <node id="132">
        <label>lib/fapi_adaptor/mac/mac_fapi_adaptor_impl.h</label>
        <link refid="mac__fapi__adaptor__impl_8h_source"/>
      </node>
      <node id="454">
        <label>include/srsgnb/rrc/rrc_ue_config.h</label>
        <link refid="rrc__ue__config_8h_source"/>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>lib/scheduler/common_scheduling/prach_scheduler.h</label>
        <link refid="prach__scheduler_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>lib/sdap/sdap_entity_impl.h</label>
        <link refid="sdap__entity__impl_8h_source"/>
      </node>
      <node id="487">
        <label>include/srsgnb/phy/upper/vrb_to_prb_mapper.h</label>
        <link refid="vrb__to__prb__mapper_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>include/srsgnb/phy/upper/rx_softbuffer.h</label>
        <link refid="rx__softbuffer_8h_source"/>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>lib/scheduler/scheduler_impl.h</label>
        <link refid="scheduler__impl_8h_source"/>
      </node>
      <node id="279">
        <label>lib/phy/lower/processors/prach/prach_processor_impl.h</label>
        <link refid="prach__processor__impl_8h_source"/>
      </node>
      <node id="364">
        <label>lib/phy/upper/channel_coding/ldpc/ldpc_luts_impl.h</label>
        <link refid="ldpc__luts__impl_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="429">
        <label>include/srsgnb/phy/upper/channel_processors/pdcch_encoder.h</label>
        <link refid="pdcch__encoder_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="338">
        <label>lib/radio/zmq/radio_zmq_tx_stream.h</label>
        <link refid="radio__zmq__tx__stream_8h_source"/>
        <childnode refid="332" relation="include">
        </childnode>
      </node>
      <node id="313">
        <label>lib/phy/upper/channel_modulation/demodulation_mapper_impl.h</label>
        <link refid="demodulation__mapper__impl_8h"/>
      </node>
      <node id="526">
        <label>lib/srslog/sinks/stream_sink.h</label>
        <link refid="stream__sink_8h_source"/>
        <childnode refid="477" relation="include">
        </childnode>
      </node>
      <node id="287">
        <label>include/srsgnb/phy/lower/modulation/ofdm_prach_demodulator.h</label>
        <link refid="ofdm__prach__demodulator_8h_source"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>include/srsgnb/phy/lower/modulation/modulation_factories.h</label>
        <link refid="modulation__factories_8h_source"/>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>lib/scheduler/support/bwp_helpers.h</label>
        <link refid="bwp__helpers_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>include/srsgnb/rrc/rrc_entity_interface.h</label>
        <link refid="rrc__entity__interface_8h_source"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>include/srsgnb/ran/sch_mcs.h</label>
        <link refid="sch__mcs_8h_source"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="308">
        <label>include/srsgnb/phy/upper/signal_processors/sss_processor.h</label>
        <link refid="sss__processor_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>lib/scheduler/policy/scheduler_time_rr.h</label>
        <link refid="scheduler__time__rr_8h_source"/>
      </node>
      <node id="360">
        <label>include/srsgnb/phy/upper/channel_processors/pdsch_encoder.h</label>
        <link refid="pdsch__encoder_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="530">
        <label>include/srsgnb/support/format_utils.h</label>
        <link refid="format__utils_8h_source"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>include/srsgnb/du_high/du_l2_dl_executor_mapper.h</label>
        <link refid="du__l2__dl__executor__mapper_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>lib/f1_interface/du/procedures/f1ap_du_setup_procedure.h</label>
        <link refid="f1ap__du__setup__procedure_8h_source"/>
      </node>
      <node id="195">
        <label>include/srsgnb/f1_interface/common/f1ap_packet_procedures.h</label>
        <link refid="f1ap__packet__procedures_8h_source"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="430">
        <label>include/srsgnb/phy/upper/log_likelihood_ratio.h</label>
        <link refid="log__likelihood__ratio_8h"/>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="425">
        <label>include/srsgnb/phy/upper/channel_coding/short/short_block_detector.h</label>
        <link refid="short__block__detector_8h"/>
        <childnode refid="426" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>lib/cu_cp/adapters/pdcp_adapters.h</label>
        <link refid="pdcp__adapters_8h_source"/>
      </node>
      <node id="318">
        <label>lib/phy/upper/sequence_generators/low_papr_sequence_generator_impl.h</label>
        <link refid="low__papr__sequence__generator__impl_8h_source"/>
      </node>
      <node id="498">
        <label>include/srsgnb/ran/pdcch/pdcch_type0_css_coreset_config.h</label>
        <link refid="pdcch__type0__css__coreset__config_8h_source"/>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="522">
        <label>include/srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="432">
        <label>include/srsgnb/srsvec/aligned_vec.h</label>
        <link refid="aligned__vec_8h_source"/>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="250">
        <label>include/srsgnb/sdap/sdap_entity.h</label>
        <link refid="sdap__entity_8h_source"/>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>lib/scheduler/pdcch_scheduling/pdcch_scheduler_impl.h</label>
        <link refid="pdcch__scheduler__impl_8h_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>lib/phy/upper/signal_processors/pucch/dmrs_pucch_processor_format1_impl.h</label>
        <link refid="dmrs__pucch__processor__format1__impl_8h_source"/>
      </node>
      <node id="1">
        <label>include/srsgnb/srslog/bundled/fmt/core.h</label>
        <link refid="core_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
      </node>
      <node id="467">
        <label>lib/f1_interface/du/procedures/f1ap_du_event_manager.h</label>
        <link refid="f1ap__du__event__manager_8h_source"/>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>lib/mac/mac_ctrl/ue_reconfiguration_procedure.h</label>
        <link refid="ue__reconfiguration__procedure_8h_source"/>
      </node>
      <node id="137">
        <label>include/srsgnb/scheduler/scheduler_dci.h</label>
        <link refid="scheduler__dci_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>include/srsgnb/fapi_adaptor/phy/messages/prach.h</label>
        <link refid="phy_2messages_2prach_8h_source"/>
      </node>
      <node id="415">
        <label>lib/phy/upper/channel_coding/polar/polar_decoder_impl.h</label>
        <link refid="polar__decoder__impl_8h"/>
      </node>
      <node id="424">
        <label>lib/phy/upper/channel_coding/polar/polar_interleaver_impl.h</label>
        <link refid="polar__interleaver__impl_8h_source"/>
      </node>
      <node id="217">
        <label>lib/f1_interface/cu/procedures/f1ap_ue_context_release_procedure.h</label>
        <link refid="f1ap__ue__context__release__procedure_8h_source"/>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/srsgnb/mac/cell_configuration.h</label>
        <link refid="include_2srsgnb_2mac_2cell__configuration_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="299">
        <label>include/srsgnb/phy/support/resource_grid_context.h</label>
        <link refid="resource__grid__context_8h_source"/>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>include/srsgnb/f1_interface/du/f1ap_du.h</label>
        <link refid="f1ap__du_8h_source"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>include/srsgnb/phy/upper/channel_processors/pdcch_processor.h</label>
        <link refid="pdcch__processor_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>include/srsgnb/sdap/sdap_entity_factory.h</label>
        <link refid="sdap__entity__factory_8h_source"/>
      </node>
      <node id="446">
        <label>include/srsgnb/srslog/bundled/fmt/printf.h</label>
        <link refid="printf_8h_source"/>
      </node>
      <node id="50">
        <label>lib/phy/upper/signal_processors/pucch/dmrs_pucch_processor_format2_impl.h</label>
        <link refid="dmrs__pucch__processor__format2__impl_8h_source"/>
      </node>
      <node id="324">
        <label>include/srsgnb/srsvec/copy.h</label>
        <link refid="copy_8h_source"/>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="384">
        <label>include/srsgnb/mac/mac_cell_slot_handler.h</label>
        <link refid="mac__cell__slot__handler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="447">
        <label>include/srsgnb/srslog/bundled/fmt/ranges.h</label>
        <link refid="ranges_8h_source"/>
      </node>
      <node id="235">
        <label>include/srsgnb/phy/upper/sequence_generators/sequence_generator_factories.h</label>
        <link refid="sequence__generator__factories_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="398">
        <label>include/srsgnb/adt/slot_array.h</label>
        <link refid="slot__array_8h_source"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="440">
        <label>include/srsgnb/srslog/bundled/fmt/color.h</label>
        <link refid="color_8h_source"/>
      </node>
      <node id="300">
        <label>include/srsgnb/phy/support/resource_grid_pool.h</label>
        <link refid="resource__grid__pool_8h_source"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="470">
        <label>lib/ngap/ngap_asn1_utils.h</label>
        <link refid="ngap__asn1__utils_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtype__identity" prot="public">type_identity</innerclass>
    <innerclass refid="structmonostate" prot="public">monostate</innerclass>
    <innerclass refid="structdetail_1_1std__string__view" prot="public">detail::std_string_view</innerclass>
    <innerclass refid="structdetail_1_1int128__t" prot="public">detail::int128_t</innerclass>
    <innerclass refid="structdetail_1_1uint128__t" prot="public">detail::uint128_t</innerclass>
    <innerclass refid="classbasic__string__view" prot="public">basic_string_view</innerclass>
    <innerclass refid="structis__char" prot="public">is_char</innerclass>
    <innerclass refid="structis__char_3_01char_01_4" prot="public">is_char&lt; char &gt;</innerclass>
    <innerclass refid="structis__char_3_01wchar__t_01_4" prot="public">is_char&lt; wchar_t &gt;</innerclass>
    <innerclass refid="structis__char_3_01detail_1_1char8__type_01_4" prot="public">is_char&lt; detail::char8_type &gt;</innerclass>
    <innerclass refid="structis__char_3_01char16__t_01_4" prot="public">is_char&lt; char16_t &gt;</innerclass>
    <innerclass refid="structis__char_3_01char32__t_01_4" prot="public">is_char&lt; char32_t &gt;</innerclass>
    <innerclass refid="structcompile__string" prot="public">compile_string</innerclass>
    <innerclass refid="structis__compile__string" prot="public">is_compile_string</innerclass>
    <innerclass refid="structdetail_1_1is__string" prot="public">detail::is_string</innerclass>
    <innerclass refid="structdetail_1_1char__t__impl" prot="public">detail::char_t_impl</innerclass>
    <innerclass refid="structdetail_1_1char__t__impl_3_01S_00_01enable__if__t_3_01is__string_3_01S_01_4_1_1value_01_4_01_4" prot="public">detail::char_t_impl&lt; S, enable_if_t&lt; is_string&lt; S &gt;::value &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1error__handler" prot="public">detail::error_handler</innerclass>
    <innerclass refid="classbasic__format__parse__context" prot="public">basic_format_parse_context</innerclass>
    <innerclass refid="classbasic__format__arg" prot="public">basic_format_arg</innerclass>
    <innerclass refid="classbasic__format__args" prot="public">basic_format_args</innerclass>
    <innerclass refid="classdynamic__format__arg__store" prot="public">dynamic_format_arg_store</innerclass>
    <innerclass refid="structformatter" prot="public">formatter</innerclass>
    <innerclass refid="classdetail_1_1buffer" prot="public">detail::buffer</innerclass>
    <innerclass refid="classdetail_1_1container__buffer" prot="public">detail::container_buffer</innerclass>
    <innerclass refid="structdetail_1_1fallback__formatter" prot="public">detail::fallback_formatter</innerclass>
    <innerclass refid="structdetail_1_1view" prot="public">detail::view</innerclass>
    <innerclass refid="structdetail_1_1named__arg" prot="public">detail::named_arg</innerclass>
    <innerclass refid="structdetail_1_1named__arg__info" prot="public">detail::named_arg_info</innerclass>
    <innerclass refid="structdetail_1_1arg__data" prot="public">detail::arg_data</innerclass>
    <innerclass refid="structdetail_1_1arg__data_3_01T_00_01Char_00_01NUM__ARGS_00_010_01_4" prot="public">detail::arg_data&lt; T, Char, NUM_ARGS, 0 &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__named__arg" prot="public">detail::is_named_arg</innerclass>
    <innerclass refid="structdetail_1_1is__named__arg_3_01named__arg_3_01Char_00_01T_01_4_01_4" prot="public">detail::is_named_arg&lt; named_arg&lt; Char, T &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1type__constant" prot="public">detail::type_constant</innerclass>
    <innerclass refid="structdetail_1_1string__value" prot="public">detail::string_value</innerclass>
    <innerclass refid="structdetail_1_1named__arg__value" prot="public">detail::named_arg_value</innerclass>
    <innerclass refid="structdetail_1_1custom__value" prot="public">detail::custom_value</innerclass>
    <innerclass refid="classdetail_1_1value" prot="public">detail::value</innerclass>
    <innerclass refid="structdetail_1_1arg__mapper" prot="public">detail::arg_mapper</innerclass>
    <innerclass refid="classbasic__format__arg" prot="public">basic_format_arg</innerclass>
    <innerclass refid="classbasic__format__arg_1_1handle" prot="public">basic_format_arg::handle</innerclass>
    <innerclass refid="structis__contiguous" prot="public">is_contiguous</innerclass>
    <innerclass refid="structis__contiguous_3_01std_1_1basic__string_3_01Char_01_4_01_4" prot="public">is_contiguous&lt; std::basic_string&lt; Char &gt; &gt;</innerclass>
    <innerclass refid="structis__contiguous_3_01detail_1_1buffer_3_01Char_01_4_01_4" prot="public">is_contiguous&lt; detail::buffer&lt; Char &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__back__insert__iterator" prot="public">detail::is_back_insert_iterator</innerclass>
    <innerclass refid="structdetail_1_1is__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" prot="public">detail::is_back_insert_iterator&lt; std::back_insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="structdetail_1_1is__contiguous__back__insert__iterator" prot="public">detail::is_contiguous_back_insert_iterator</innerclass>
    <innerclass refid="structdetail_1_1is__contiguous__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" prot="public">detail::is_contiguous_back_insert_iterator&lt; std::back_insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1locale__ref" prot="public">detail::locale_ref</innerclass>
    <innerclass refid="structdetail_1_1is__reference__wrapper" prot="public">detail::is_reference_wrapper</innerclass>
    <innerclass refid="structdetail_1_1is__reference__wrapper_3_01std_1_1reference__wrapper_3_01T_01_4_01_4" prot="public">detail::is_reference_wrapper&lt; std::reference_wrapper&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classdetail_1_1dynamic__arg__list" prot="public">detail::dynamic_arg_list</innerclass>
    <innerclass refid="structdetail_1_1dynamic__arg__list_1_1node" prot="private">detail::dynamic_arg_list::node</innerclass>
    <innerclass refid="structdetail_1_1dynamic__arg__list_1_1typed__node" prot="private">detail::dynamic_arg_list::typed_node</innerclass>
    <innerclass refid="structdetail_1_1dynamic__arg__list_1_1pooled__node" prot="private">detail::dynamic_arg_list::pooled_node</innerclass>
    <innerclass refid="classbasic__format__context" prot="public">basic_format_context</innerclass>
    <innerclass refid="classformat__arg__store" prot="public">format_arg_store</innerclass>
    <innerclass refid="classdynamic__format__arg__store" prot="public">dynamic_format_arg_store</innerclass>
    <innerclass refid="structdynamic__format__arg__store_1_1need__copy" prot="private">dynamic_format_arg_store::need_copy</innerclass>
    <innerclass refid="classbasic__format__args" prot="public">basic_format_args</innerclass>
    <innerclass refid="structformat__args" prot="public">format_args</innerclass>
    <innerclass refid="structwformat__args" prot="public">wformat_args</innerclass>
    <innernamespace refid="namespacedetail">detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="core_8h_1a1a322107307b020b6eac933958da94f6" prot="public" static="no">
        <name>FMT_VERSION</name>
        <initializer>70003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="22" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a058e2c3eea88d232a1056a0bc6487e37" prot="public" static="no">
        <name>FMT_CLANG_VERSION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="27" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a4f5db4f97e31a127b1236d1ff412bb0c" prot="public" static="no">
        <name>FMT_GCC_VERSION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="33" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a061a90c1c2008acd7b0161cde41c1a11" prot="public" static="no">
        <name>FMT_ICC_VERSION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="39" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a1e3ffe834c427bc295b6880efcd17976" prot="public" static="no">
        <name>FMT_HAS_GXX_CXX11</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="45" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a52376c1ced87b19c8b3ece64cc64f22e" prot="public" static="no">
        <name>FMT_NVCC</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="51" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a363cb0623e6975ff2b357a52a03e4728" prot="public" static="no">
        <name>FMT_MSC_VER</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="58" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a7f88370a5ce71a566f72a5837a0571da" prot="public" static="no">
        <name>FMT_SUPPRESS_MSC_WARNING</name>
        <param><defname>n</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="59" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a749169f277bb21ccf12b1c665e68e88a" prot="public" static="no">
        <name>FMT_HAS_FEATURE</name>
        <param><defname>x</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="64" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1afa144e698f8df527d6e51688eb9abbd1" prot="public" static="no">
        <name>FMT_HAS_INCLUDE</name>
        <param><defname>x</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="71" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a55d7b78b0300ddda018f77208e80f3e9" prot="public" static="no">
        <name>FMT_HAS_CPP_ATTRIBUTE</name>
        <param><defname>x</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="77" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a2766aa9d7506047bc81bd56a766f3ab3" prot="public" static="no">
        <name>FMT_HAS_CPP14_ATTRIBUTE</name>
        <param><defname>attribute</defname></param>
        <initializer>(__cplusplus &gt;= 201402L &amp;&amp; FMT_HAS_CPP_ATTRIBUTE(attribute))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="80" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a8f0f9ef09a5242ac73edf22e57578edf" prot="public" static="no">
        <name>FMT_HAS_CPP17_ATTRIBUTE</name>
        <param><defname>attribute</defname></param>
        <initializer>(__cplusplus &gt;= 201703L &amp;&amp; FMT_HAS_CPP_ATTRIBUTE(attribute))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="83" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a739a7ff96b6dfd65a4de8fe003f5b233" prot="public" static="no">
        <name>FMT_USE_CONSTEXPR</name>
        <initializer>    (FMT_HAS_FEATURE(cxx_relaxed_constexpr) || FMT_MSC_VER &gt;= 1910 || \
     (FMT_GCC_VERSION &gt;= 600 &amp;&amp; __cplusplus &gt;= 201402L)) &amp;&amp;           \
        !FMT_NVCC &amp;&amp; !FMT_ICC_VERSION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="89" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a69201cb276383873487bf68b4ef8b4cd" prot="public" static="no">
        <name>FMT_CONSTEXPR</name>
        <initializer>inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="98" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1af4388801466a5994a363d6005616371a" prot="public" static="no">
        <name>FMT_CONSTEXPR_DECL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="99" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a023c6c178e254d81d578b90921804b1c" prot="public" static="no">
        <name>FMT_OVERRIDE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="108" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a5d3b416a99857b69e3b7de8e88c71ff3" prot="public" static="no">
        <name>FMT_EXCEPTIONS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="118" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a65490b89e8bd22fd0b8ae4491643d60c" prot="public" static="no">
        <name>FMT_USE_NOEXCEPT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="124" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a809ce36bdf78b55c536fbca340bfec9c" prot="public" static="no">
        <name>FMT_DETECTED_NOEXCEPT</name>
        <initializer>throw()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="132" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a8e7a33185c7fc32dd026773a8ece00b8" prot="public" static="no">
        <name>FMT_HAS_CXX11_NOEXCEPT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="133" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1aef128913e8400683b1cbd1a3a2e11df3" prot="public" static="no">
        <name>FMT_NOEXCEPT</name>
        <initializer>FMT_DETECTED_NOEXCEPT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="138" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1ac9411ed6305aee71472718fa55fcc352" prot="public" static="no">
        <name>FMT_NORETURN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="150" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a8aba8a78c514e176e0dd0a159de7a369" prot="public" static="no">
        <name>FMT_DEPRECATED</name>
        <initializer>/* deprecated */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="162" column="23" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a2b6d307802175823274f07475e458a34" prot="public" static="no">
        <name>FMT_DEPRECATED_ALIAS</name>
        <initializer>FMT_DEPRECATED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="171" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1aba4c375a41fe80858992762b3bc5c75e" prot="public" static="no">
        <name>FMT_INLINE</name>
        <initializer>inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="178" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a750d1276ba35fb73b8f2998389a5f8c6" prot="public" static="no">
        <name>FMT_INLINE_NAMESPACE</name>
        <initializer>namespace</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="190" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1ae0d2fbdf031547a949fc7e1c0b3c97f1" prot="public" static="no">
        <name>FMT_END_NAMESPACE</name>
        <initializer>      }                       \
      using namespace v7;     \
      }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="191" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a887c191adf8cfaf06ed40b5c4d487343" prot="public" static="no">
        <name>FMT_BEGIN_NAMESPACE</name>
        <initializer>    namespace fmt {           \
    FMT_INLINE_NAMESPACE v7 {</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="196" column="14" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a60c618bb53b658cf4c0cb959b69d67ba" prot="public" static="no">
        <name>FMT_CLASS_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="212" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a9a4960b70582ed2620911a0b75dce0b5" prot="public" static="no">
        <name>FMT_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="215" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1ac2dae898017bb434b6cffd0df3c5fc0c" prot="public" static="no">
        <name>FMT_EXTERN_TEMPLATE_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="218" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1ad51401dbd7daa24210fffbf5192e8904" prot="public" static="no">
        <name>FMT_INSTANTIATION_DEF_API</name>
        <initializer>FMT_API</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="221" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a3823320bf1dc3274b4352b910a679e4f" prot="public" static="no">
        <name>FMT_EXTERN</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="225" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a24004c4d3ba31dd35664e85862d20061" prot="public" static="no">
        <name>FMT_UNICODE</name>
        <initializer>!FMT_MSC_VER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="242" column="11" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1ab02671eb0d43965fe2957e844f427451" prot="public" static="no">
        <name>FMT_ENABLE_IF</name>
        <param><defname>...</defname></param>
        <initializer>enable_if_t&lt;(__VA_ARGS__), int&gt; = 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="270" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a03e7ee720f43adc7d83c652a6a5dd5f8" prot="public" static="no">
        <name>FMT_ASSERT</name>
        <param><defname>condition</defname></param>
        <param><defname>message</defname></param>
        <initializer>      ((condition) /* void() fails with -Winvalid-constexpr on clang 4.0.1 */ \
           ? (void)0                                                          \
           : ::fmt::detail::assert_fail(__FILE__, __LINE__, (message)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="286" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a13e53e6202856108f878beff6278417b" prot="public" static="no">
        <name>FMT_USE_INT128</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="309" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1a1b33b94a68ab12b7b4e7051da8a361f5" prot="public" static="no">
        <name>FMT_TYPE_CONSTANT</name>
        <param><defname>Type</defname></param>
        <param><defname>constant</defname></param>
        <initializer>  template &lt;typename Char&gt;                \
  struct type_constant&lt;Type, Char&gt;        \
      : std::integral_constant&lt;type, type::constant&gt; {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="846" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="core_8h_1aa62d290f1ebdec389e706cd0a9db66af" prot="public" static="no">
        <name>FMT_BUFFER_CONTEXT</name>
        <param><defname>Char</defname></param>
        <initializer><ref refid="classbasic__format__context" kindref="compound">basic_format_context</ref>&lt;std::back_insert_iterator&lt;<ref refid="classdetail_1_1buffer" kindref="compound">detail::buffer</ref>&lt;Char&gt;&gt;, Char&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1401" column="9" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="core_8h_1a012819c9e8b5e04872a271f50f8b8196" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>class T</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>typename std::enable_if&lt; B, T &gt;::type</type>
        <definition>using enable_if_t =  typename std::enable_if&lt;B, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="252" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1acdb0eff728aec08ed6fff07d2885ea9d" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>typename std::conditional&lt; B, T, F &gt;::type</type>
        <definition>using conditional_t =  typename std::conditional&lt;B, T, F&gt;::type</definition>
        <argsstring></argsstring>
        <name>conditional_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="254" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a0d337b508cc2fb5a92d8e72db201e53b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, B &gt;</type>
        <definition>using bool_constant =  std::integral_constant&lt;bool, B&gt;</definition>
        <argsstring></argsstring>
        <name>bool_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="255" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a3a08cea569e6926ac8d7d74dd7178b5f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename std::remove_reference&lt; T &gt;::type</type>
        <definition>using remove_reference_t =  typename std::remove_reference&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_reference_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="257" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a31ee6e9231fa50c7fdd7292f0c45f13e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename std::remove_const&lt; T &gt;::type</type>
        <definition>using remove_const_t =  typename std::remove_const&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_const_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="259" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1ada5b2a956a74d40f6afec72d7d0adc27" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename std::remove_cv&lt; remove_reference_t&lt; T &gt; &gt;::type</type>
        <definition>using remove_cvref_t =  typename std::remove_cv&lt;remove_reference_t&lt;T&gt; &gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_cvref_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="261" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1aca42c1976d1b12998afcabf8f39e8c23" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structtype__identity" kindref="compound">type_identity</ref>&lt; T &gt;::type</type>
        <definition>using type_identity_t =  typename type_identity&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>type_identity_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="263" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a204ca715c2febee035464fa53dfc50c4" prot="public" static="no">
        <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; char &gt;</type>
        <definition>using string_view =  basic_string_view&lt;char&gt;</definition>
        <argsstring></argsstring>
        <name>string_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="433" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a5164ea4aed26e7700ce4a006d1d32475" prot="public" static="no">
        <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; wchar_t &gt;</type>
        <definition>using wstring_view =  basic_string_view&lt;wchar_t&gt;</definition>
        <argsstring></argsstring>
        <name>wstring_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="434" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a3c674f92fe25aa74e8d3d5449ec85efb" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structdetail_1_1char__t__impl" kindref="compound">detail::char_t_impl</ref>&lt; S &gt;::type</type>
        <definition>using char_t =  typename detail::char_t_impl&lt;S&gt;::type</definition>
        <argsstring></argsstring>
        <name>char_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>String&apos;s character type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="522" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a7f31f076b2eb408741895533f9222baa" prot="public" static="no">
        <type><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context</ref>&lt; char &gt;</type>
        <definition>using format_parse_context =  basic_format_parse_context&lt;char&gt;</definition>
        <argsstring></argsstring>
        <name>format_parse_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="602" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a9a60587ace165efab2fc40bddf69c89c" prot="public" static="no">
        <type><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context</ref>&lt; wchar_t &gt;</type>
        <definition>using wformat_parse_context =  basic_format_parse_context&lt;wchar_t&gt;</definition>
        <argsstring></argsstring>
        <name>wformat_parse_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="603" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a74c7602dbb427c519ab26d4feecf9149" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
        </templateparamlist>
        <type>std::is_constructible&lt; typename Context::template formatter_type&lt; T &gt; &gt;</type>
        <definition>using has_formatter =  std::is_constructible&lt;typename Context::template formatter_type&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>has_formatter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="619" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a472001c0c3cd4ab682a215d775ac96d3" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__format__context" kindref="compound">basic_format_context</ref>&lt; std::back_insert_iterator&lt; <ref refid="classdetail_1_1buffer" kindref="compound">detail::buffer</ref>&lt; Char &gt; &gt;, Char &gt;</type>
        <definition>using buffer_context =  basic_format_context&lt;std::back_insert_iterator&lt;detail::buffer&lt;Char&gt; &gt;, Char&gt;</definition>
        <argsstring></argsstring>
        <name>buffer_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1395" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1a3e6224930832371a8c75d3e519873a9e" prot="public" static="no">
        <type><ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; char &gt;</type>
        <definition>using format_context =  buffer_context&lt;char&gt;</definition>
        <argsstring></argsstring>
        <name>format_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1397" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="core_8h_1afaf716eff630583a20315ab7e4f0f8d0" prot="public" static="no">
        <type><ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; wchar_t &gt;</type>
        <definition>using wformat_context =  buffer_context&lt;wchar_t&gt;</definition>
        <argsstring></argsstring>
        <name>wformat_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1398" column="1" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1398" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="core_8h_1af3e39e59608f2c7d23f4236f750dd3cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structis__char" kindref="compound">is_char</ref>&lt; Char &gt;::value)</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        <definition>basic_string_view&lt;Char&gt; to_string_view</definition>
        <argsstring>(const Char *s)</argsstring>
        <name>to_string_view</name>
        <param>
          <type>const Char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Returns a string view of <computeroutput>s</computeroutput>. In order to add custom string type support to {fmt} provide an overload of <computeroutput>to_string_view</computeroutput> for it in the same namespace as the type for the argument-dependent lookup to work.</para>
<para>Example**::</para>
<para>namespace my_ns { inline string_view to_string_view(const my_string&amp; s) { return {s.data(), s.length()}; } } std::string message = fmt::format(my_string(&quot;The answer is {}&quot;), 42); \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="461" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a2cd9125effaccc8f60d8ef811f8e1c0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename Alloc</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        <definition>basic_string_view&lt;Char&gt; to_string_view</definition>
        <argsstring>(const std::basic_string&lt; Char, Traits, Alloc &gt; &amp;s)</argsstring>
        <name>to_string_view</name>
        <param>
          <type>const std::basic_string&lt; Char, Traits, Alloc &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="466" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="466" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a7398d2d94b617a6b15101ba73a34504b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        <definition>basic_string_view&lt;Char&gt; to_string_view</definition>
        <argsstring>(basic_string_view&lt; Char &gt; s)</argsstring>
        <name>to_string_view</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="472" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="472" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a0f2cc15b65a7f111a9dffddc64baa045" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(!std::is_empty&lt; <ref refid="structdetail_1_1std__string__view" kindref="compound">detail::std_string_view</ref>&lt; Char &gt;&gt;::value)</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; Char &gt;</type>
        <definition>basic_string_view&lt;Char&gt; to_string_view</definition>
        <argsstring>(detail::std_string_view&lt; Char &gt; s)</argsstring>
        <name>to_string_view</name>
        <param>
          <type><ref refid="structdetail_1_1std__string__view" kindref="compound">detail::std_string_view</ref>&lt; Char &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="478" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="478" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a402d188d90d22d31c4ca3defcf31950c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structis__compile__string" kindref="compound">is_compile_string</ref>&lt; S &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; typename S::char_type &gt;</type>
        <definition>constexpr basic_string_view&lt;typename S::char_type&gt; to_string_view</definition>
        <argsstring>(const S &amp;s)</argsstring>
        <name>to_string_view</name>
        <param>
          <type>const S &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="490" column="29" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="490" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1acbc33ac76947eb0971fc4c0b9ace322e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Visitor</type>
          </param>
          <param>
            <type>typename Context</type>
          </param>
        </templateparamlist>
        <type>FMT_CONSTEXPR_DECL FMT_INLINE auto</type>
        <definition>FMT_CONSTEXPR_DECL FMT_INLINE auto visit_format_arg</definition>
        <argsstring>(Visitor &amp;&amp;vis, const basic_format_arg&lt; Context &gt; &amp;arg) -&gt; decltype(vis(0))</argsstring>
        <name>visit_format_arg</name>
        <param>
          <type>Visitor &amp;&amp;</type>
          <declname>vis</declname>
        </param>
        <param>
          <type>const <ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; Context &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Visits an argument dispatching to the appropriate visit method based on the argument type. For example, if the argument type is <computeroutput>double</computeroutput> then <computeroutput>vis(value)</computeroutput> will be called with the value of type <computeroutput>double</computeroutput>. \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1158" column="36" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1158" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a0983d26695aca5689c498c766187223d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Context</type>
            <defval><ref refid="classbasic__format__context" kindref="compound">format_context</ref></defval>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classformat__arg__store" kindref="compound">format_arg_store</ref>&lt; Context, Args... &gt;</type>
        <definition>format_arg_store&lt;Context, Args...&gt; make_format_args</definition>
        <argsstring>(const Args &amp;... args)</argsstring>
        <name>make_format_args</name>
        <param>
          <type>const Args &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Constructs an <computeroutput>~fmt<ref refid="classformat__arg__store" kindref="compound">format_arg_store</ref></computeroutput> object that contains references to arguments and can be implicitly converted to <computeroutput>~fmt<ref refid="structformat__args" kindref="compound">format_args</ref></computeroutput>. <computeroutput>Context</computeroutput> can be omitted in which case it defaults to <computeroutput>~fmt::context</computeroutput>. See <computeroutput>~fmt::arg</computeroutput> for lifetime considerations. \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1461" column="25" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1461" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a488731e44fb25c8aadaf1c02b7630eb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Char</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structdetail_1_1named__arg" kindref="compound">detail::named_arg</ref>&lt; Char, T &gt;</type>
        <definition>detail::named_arg&lt;Char, T&gt; arg</definition>
        <argsstring>(const Char *name, const T &amp;arg)</argsstring>
        <name>arg</name>
        <param>
          <type>const Char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Returns a named argument to be used in a formatting function. It should only be used in a call to a formatting function.</para>
<para>Example**::</para>
<para>fmt::print(&quot;Elapsed time: {s:.2f} seconds&quot;, fmt::arg(&quot;s&quot;, 1.23)); \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1477" column="26" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1477" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a7de5ecebaed9cc23b2def6aa223e543d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIt</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename Char</type>
            <defval>char_t&lt;S&gt;</defval>
          </param>
          <param>
            <type>FMT_ENABLE_IF(<ref refid="structdetail_1_1is__contiguous__back__insert__iterator" kindref="compound">detail::is_contiguous_back_insert_iterator</ref>&lt; OutputIt &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>OutputIt</type>
        <definition>OutputIt vformat_to</definition>
        <argsstring>(OutputIt out, const S &amp;format_str, basic_format_args&lt; buffer_context&lt; type_identity_t&lt; Char &gt;&gt;&gt; args)</argsstring>
        <name>vformat_to</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; type_identity_t&lt; Char &gt;&gt;&gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats a string and writes the output to <computeroutput>out</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1845" column="10" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1845" bodyend="1852"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a907798b1c663c37f4f15bd6a40b1bb64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>FMT_ENABLE_IF( <ref refid="structis__contiguous" kindref="compound">is_contiguous</ref>&lt; Container &gt;::value &amp;&amp;<ref refid="structdetail_1_1is__string" kindref="compound">detail::is_string</ref>&lt; S &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>std::back_insert_iterator&lt; Container &gt;</type>
        <definition>std::back_insert_iterator&lt;Container&gt; format_to</definition>
        <argsstring>(std::back_insert_iterator&lt; Container &gt; out, const S &amp;format_str, Args &amp;&amp;... args)</argsstring>
        <name>format_to</name>
        <param>
          <type>std::back_insert_iterator&lt; Container &gt;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1857" column="34" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1857" bodyend="1862"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1ad225faa7ff74d8f59ad6cae4c96c88d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename Char</type>
            <defval>char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>FMT_INLINE std::basic_string&lt; Char &gt;</type>
        <definition>FMT_INLINE std::basic_string&lt;Char&gt; vformat</definition>
        <argsstring>(const S &amp;format_str, basic_format_args&lt; buffer_context&lt; type_identity_t&lt; Char &gt;&gt;&gt; args)</argsstring>
        <name>vformat</name>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt; <ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt; type_identity_t&lt; Char &gt;&gt;&gt;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1865" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1865" bodyend="1869"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a4893df54b35e3a5444f5ce38476b7bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>FMT_INLINE std::basic_string&lt; Char &gt;</type>
        <definition>FMT_INLINE std::basic_string&lt;Char&gt; format</definition>
        <argsstring>(const S &amp;format_str, Args &amp;&amp;... args)</argsstring>
        <name>format</name>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Formats arguments and returns the result as a string.</para>
<para>Example**::</para>
<para>#include &lt;<ref refid="core_8h_source" kindref="compound">fmt/core.h</ref>&gt; std::string message = fmt::format(&quot;The answer is {}&quot;, 42); \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1884" column="30" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1884" bodyend="1887"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a0a83ca911e871aa9a4993c402fd408b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_API void</type>
        <definition>FMT_API void vprint</definition>
        <argsstring>(string_view, format_args)</argsstring>
        <name>vprint</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
        </param>
        <param>
          <type><ref refid="structformat__args" kindref="compound">format_args</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1889" column="14" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="1443" bodyend="1445" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="1889" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a4dc5007c98329a75269d3f501f142b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FMT_API void</type>
        <definition>FMT_API void vprint</definition>
        <argsstring>(std::FILE *, string_view, format_args)</argsstring>
        <name>vprint</name>
        <param>
          <type>std::FILE *</type>
        </param>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">string_view</ref></type>
        </param>
        <param>
          <type><ref refid="structformat__args" kindref="compound">format_args</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1890" column="14" bodyfile="include/srsgnb/srslog/bundled/fmt/format-inl.h" bodystart="1412" bodyend="1430" declfile="include/srsgnb/srslog/bundled/fmt/core.h" declline="1890" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1aca60575307694c3ee418f220fd0c5c57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(std::FILE *f, const S &amp;format_str, Args &amp;&amp;... args)</argsstring>
        <name>print</name>
        <param>
          <type>std::FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Formats <computeroutput>args</computeroutput> according to specifications in <computeroutput>format_str</computeroutput> and writes the output to the file <computeroutput>f</computeroutput>. Strings are assumed to be Unicode-encoded unless the <computeroutput>FMT_UNICODE</computeroutput> macro is set to 0.</para>
<para>Example**::</para>
<para>fmt::print(stderr, &quot;Don&apos;t {}!&quot;, &quot;panic&quot;); \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1904" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1904" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="core_8h_1a1fa930f7d34e2e37e9770e2bd7d892b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename Char</type>
            <defval>char_t&lt;S&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void print</definition>
        <argsstring>(const S &amp;format_str, Args &amp;&amp;... args)</argsstring>
        <name>print</name>
        <param>
          <type>const S &amp;</type>
          <declname>format_str</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Formats <computeroutput>args</computeroutput> according to specifications in <computeroutput>format_str</computeroutput> and writes the output to <computeroutput>stdout</computeroutput>. Strings are assumed to be Unicode-encoded unless the <computeroutput>FMT_UNICODE</computeroutput> macro is set to 0.</para>
<para>Example**::</para>
<para>fmt::print(&quot;Elapsed time: {0:.2f} seconds&quot;, 1.23); \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/core.h" line="1923" column="13" bodyfile="include/srsgnb/srslog/bundled/fmt/core.h" bodystart="1923" bodyend="1929"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Formatting<sp/>library<sp/>for<sp/>C++<sp/>-<sp/>the<sp/>core<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>-<sp/>present,<sp/>Victor<sp/>Zverovich</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>license<sp/>information<sp/>refer<sp/>to<sp/>format.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_CORE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_CORE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>fmt<sp/>library<sp/>version<sp/>in<sp/>the<sp/>form<sp/>major<sp/>*<sp/>10000<sp/>+<sp/>minor<sp/>*<sp/>100<sp/>+<sp/>patch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_VERSION<sp/>70003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__clang__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CLANG_VERSION<sp/>(__clang_major__<sp/>*<sp/>100<sp/>+<sp/>__clang_minor__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CLANG_VERSION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_GCC_VERSION<sp/>(__GNUC__<sp/>*<sp/>100<sp/>+<sp/>__GNUC_MINOR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_GCC_VERSION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_ICC_VERSION<sp/>__INTEL_COMPILER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_ICC_VERSION<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;=<sp/>201103L<sp/>||<sp/>defined(__GXX_EXPERIMENTAL_CXX0X__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_GXX_CXX11<sp/>FMT_GCC_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_GXX_CXX11<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__NVCC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_NVCC<sp/>__NVCC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_NVCC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_MSC_VER<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_SUPPRESS_MSC_WARNING(n)<sp/>__pragma(warning(suppress<sp/>:<sp/>n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_MSC_VER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_SUPPRESS_MSC_WARNING(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__has_feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_FEATURE(x)<sp/>__has_feature(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_FEATURE(x)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__has_include)<sp/>&amp;&amp;<sp/>!defined(__INTELLISENSE__)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!(FMT_ICC_VERSION<sp/>&amp;&amp;<sp/>FMT_ICC_VERSION<sp/>&lt;<sp/>1600)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_INCLUDE(x)<sp/>__has_include(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_INCLUDE(x)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__has_cpp_attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_CPP_ATTRIBUTE(x)<sp/>__has_cpp_attribute(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_CPP_ATTRIBUTE(x)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_HAS_CPP14_ATTRIBUTE(attribute)<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/>(__cplusplus<sp/>&gt;=<sp/>201402L<sp/>&amp;&amp;<sp/>FMT_HAS_CPP_ATTRIBUTE(attribute))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_HAS_CPP17_ATTRIBUTE(attribute)<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/>(__cplusplus<sp/>&gt;=<sp/>201703L<sp/>&amp;&amp;<sp/>FMT_HAS_CPP_ATTRIBUTE(attribute))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>relaxed<sp/>C++14<sp/>constexpr<sp/>is<sp/>supported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GCC<sp/>doesn&apos;t<sp/>allow<sp/>throw<sp/>in<sp/>constexpr<sp/>until<sp/>version<sp/>6<sp/>(bug<sp/>67371).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_USE_CONSTEXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_USE_CONSTEXPR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(FMT_HAS_FEATURE(cxx_relaxed_constexpr)<sp/>||<sp/>FMT_MSC_VER<sp/>&gt;=<sp/>1910<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(FMT_GCC_VERSION<sp/>&gt;=<sp/>600<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201402L))<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!FMT_NVCC<sp/>&amp;&amp;<sp/>!FMT_ICC_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_USE_CONSTEXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CONSTEXPR<sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CONSTEXPR_DECL<sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CONSTEXPR<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CONSTEXPR_DECL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_OVERRIDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>FMT_HAS_FEATURE(cxx_override)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(FMT_GCC_VERSION<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>FMT_HAS_GXX_CXX11)<sp/>||<sp/>FMT_MSC_VER<sp/>&gt;=<sp/>1900<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>FMT_CLANG_VERSION<sp/>&gt;<sp/>600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_OVERRIDE<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_OVERRIDE<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>exceptions<sp/>are<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__EXCEPTIONS))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>FMT_MSC_VER<sp/>&amp;&amp;<sp/>!_HAS_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_EXCEPTIONS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_EXCEPTIONS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>FMT_USE_NOEXCEPT<sp/>to<sp/>make<sp/>fmt<sp/>use<sp/>noexcept<sp/>(C++11<sp/>feature).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_USE_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_USE_NOEXCEPT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_USE_NOEXCEPT<sp/>||<sp/>FMT_HAS_FEATURE(cxx_noexcept)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(FMT_GCC_VERSION<sp/>&gt;=<sp/>408<sp/>&amp;&amp;<sp/>FMT_HAS_GXX_CXX11)<sp/>||<sp/>FMT_MSC_VER<sp/>&gt;=<sp/>1900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_DETECTED_NOEXCEPT<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_CXX11_NOEXCEPT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_DETECTED_NOEXCEPT<sp/>throw()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_HAS_CXX11_NOEXCEPT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>FMT_EXCEPTIONS<sp/>||<sp/>FMT_HAS_CXX11_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_NOEXCEPT<sp/>FMT_DETECTED_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[[noreturn]]<sp/>is<sp/>disabled<sp/>on<sp/>MSVC<sp/>and<sp/>NVCC<sp/>because<sp/>of<sp/>bogus<sp/>unreachable<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_EXCEPTIONS<sp/>&amp;&amp;<sp/>FMT_HAS_CPP_ATTRIBUTE(noreturn)<sp/>&amp;&amp;<sp/>!FMT_MSC_VER<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>!FMT_NVCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_NORETURN<sp/>[[noreturn]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_NORETURN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>FMT_HAS_CPP14_ATTRIBUTE(deprecated)<sp/>||<sp/>FMT_MSC_VER<sp/>&gt;=<sp/>1900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_DEPRECATED<sp/>[[deprecated]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FMT_DEPRECATED<sp/>__attribute__((deprecated))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>elif<sp/>FMT_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FMT_DEPRECATED<sp/>__declspec(deprecated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>FMT_DEPRECATED<sp/></highlight><highlight class="comment">/*<sp/>deprecated<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Workaround<sp/>broken<sp/>[[deprecated]]<sp/>in<sp/>the<sp/>Intel,<sp/>PGI<sp/>and<sp/>NVCC<sp/>compilers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_ICC_VERSION<sp/>||<sp/>defined(__PGI)<sp/>||<sp/>FMT_NVCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_DEPRECATED_ALIAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_DEPRECATED_ALIAS<sp/>FMT_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>FMT_GCC_VERSION<sp/>||<sp/>FMT_CLANG_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_INLINE<sp/>inline<sp/>__attribute__((always_inline))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_INLINE<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_BEGIN_NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>FMT_HAS_FEATURE(cxx_inline_namespaces)<sp/>||<sp/>FMT_GCC_VERSION<sp/>&gt;=<sp/>404<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>FMT_MSC_VER<sp/>&gt;=<sp/>1900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_INLINE_NAMESPACE<sp/>inline<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_END_NAMESPACE<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_INLINE_NAMESPACE<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_END_NAMESPACE<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>v7;<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_BEGIN_NAMESPACE<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>fmt<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FMT_INLINE_NAMESPACE<sp/>v7<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(FMT_HEADER_ONLY)<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CLASS_API<sp/>FMT_SUPPRESS_MSC_WARNING(4275)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>FMT_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_API<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_EXTERN_TEMPLATE_API<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_EXPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>elif<sp/>defined(FMT_SHARED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_API<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_EXTERN_TEMPLATE_API<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_CLASS_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_EXTERN_TEMPLATE_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_EXTERN_TEMPLATE_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_INSTANTIATION_DEF_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_INSTANTIATION_DEF_API<sp/>FMT_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_HEADER_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_EXTERN<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_EXTERN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>libc++<sp/>supports<sp/>string_view<sp/>in<sp/>pre-c++17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(FMT_HAS_INCLUDE(&lt;string_view&gt;)<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(__cplusplus<sp/>&gt;<sp/>201402L<sp/>||<sp/>defined(_LIBCPP_VERSION)))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(_MSVC_LANG)<sp/>&amp;&amp;<sp/>_MSVC_LANG<sp/>&gt;<sp/>201402L<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1910)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_USE_STRING_VIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>FMT_HAS_INCLUDE(&quot;experimental/string_view&quot;)<sp/>&amp;&amp;<sp/>__cplusplus<sp/>&gt;=<sp/>201402L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;experimental/string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_USE_EXPERIMENTAL_STRING_VIEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_UNICODE<sp/>!FMT_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_UNICODE<sp/>&amp;&amp;<sp/>FMT_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>execution_character_set(&quot;utf-8&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">FMT_BEGIN_NAMESPACE</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implementations<sp/>of<sp/>enable_if_t<sp/>and<sp/>other<sp/>metafunctions<sp/>for<sp/>older<sp/>systems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>enable_if_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;B,<sp/>T&gt;::type;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>conditional_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;B,<sp/>T,<sp/>F&gt;::type;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>bool_constant<sp/>=<sp/>std::integral_constant&lt;bool,<sp/>B&gt;;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>remove_reference_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_reference&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>remove_const_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_const&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>remove_cvref_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_cv&lt;remove_reference_t&lt;T&gt;&gt;::type;</highlight></codeline>
<codeline lineno="262" refid="structtype__identity" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtype__identity" kindref="compound">type_identity</ref><sp/>{<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>T;<sp/>};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type_identity_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>type_identity&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="structmonostate" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmonostate" kindref="compound">monostate</ref><sp/>{};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>enable_if<sp/>helper<sp/>to<sp/>be<sp/>used<sp/>in<sp/>template<sp/>parameters<sp/>which<sp/>results<sp/>in<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shorter<sp/>symbols:<sp/>https://godbolt.org/z/sWw4vP.<sp/>Extra<sp/>parentheses<sp/>are<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>workaround<sp/>a<sp/>bug<sp/>in<sp/>MSVC<sp/>2019<sp/>(see<sp/>#1140<sp/>and<sp/>#1186).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_ENABLE_IF(...)<sp/>enable_if_t&lt;(__VA_ARGS__),<sp/>int&gt;<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>function<sp/>to<sp/>suppress<sp/>bogus<sp/>&quot;conditional<sp/>expression<sp/>is<sp/>constant&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>constexpr<sp/>T<sp/>const_check(T<sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">FMT_NORETURN<sp/>FMT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assert_fail(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FMT_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FMT_ASSERT<sp/>is<sp/>not<sp/>empty<sp/>to<sp/>avoid<sp/>-Werror=empty-body.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_ASSERT(condition,<sp/>message)<sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>FMT_ASSERT(condition,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>((condition)<sp/></highlight><highlight class="comment">/*<sp/>void()<sp/>fails<sp/>with<sp/>-Winvalid-constexpr<sp/>on<sp/>clang<sp/>4.0.1<sp/>*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(void)0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>::fmt::detail::assert_fail(__FILE__,<sp/>__LINE__,<sp/>(message)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FMT_USE_STRING_VIEW)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std_string_view<sp/>=<sp/>std::basic_string_view&lt;Char&gt;;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(FMT_USE_EXPERIMENTAL_STRING_VIEW)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std_string_view<sp/>=<sp/>std::experimental::basic_string_view&lt;Char&gt;;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="structdetail_1_1std__string__view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1std__string__view" kindref="compound">std_string_view</ref><sp/>{};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FMT_USE_INT128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__SIZEOF_INT128__)<sp/>&amp;&amp;<sp/>!FMT_NVCC<sp/>&amp;&amp;<sp/>!(FMT_CLANG_VERSION<sp/>&amp;&amp;<sp/>FMT_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_USE_INT128<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref><sp/>=<sp/>__int128_t;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref><sp/>=<sp/>__uint128_t;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>FMT_USE_INT128<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!FMT_USE_INT128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="structdetail_1_1int128__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref><sp/>{};</highlight></codeline>
<codeline lineno="313" refid="structdetail_1_1uint128__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref><sp/>{};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Casts<sp/>a<sp/>nonnegative<sp/>integer<sp/>to<sp/>unsigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Int&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::make_unsigned&lt;Int&gt;::type<sp/>to_unsigned(Int<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>FMT_ASSERT(<ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;negative<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>std::make_unsigned&lt;Int&gt;::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classdetail_1_1value" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">FMT_SUPPRESS_MSC_WARNING(4566)<sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>micro[]<sp/>=<sp/>&quot;\u00B5&quot;;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">template<sp/>&lt;typename<sp/>Char&gt;<sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_unicode()<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FMT_UNICODE<sp/>||<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Char)<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(micro)<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>micro[0]<sp/>==<sp/>0xC2<sp/>&amp;&amp;<sp/>micro[1]<sp/>==<sp/>0xB5);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpp_char8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char8_type<sp/>=<sp/>char8_t;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>char8_type<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FMT_USE_INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>=<sp/>detail;<sp/><sp/></highlight><highlight class="comment">//<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classbasic__string__view" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>data_;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>Char;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>()<sp/>FMT_NOEXCEPT<sp/>:<sp/>data_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>size_(0)<sp/>{}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classbasic__string__view_1a034a8a79389ecc31954bdf773c680de7" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classbasic__string__view_1a034a8a79389ecc31954bdf773c680de7" kindref="member">basic_string_view</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)<sp/>FMT_NOEXCEPT</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(s),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_(count)<sp/>{}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;=<sp/>201703L<sp/><sp/>//<sp/>C++17&apos;s<sp/>char_traits::length()<sp/>is<sp/>constexpr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classbasic__string__view_1a84823e4cf3eadc6bbe4ecd18e7685ffd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbasic__string__view_1a84823e4cf3eadc6bbe4ecd18e7685ffd" kindref="member">basic_string_view</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>s)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(s),<sp/>size_(std::char_traits&lt;Char&gt;::length(s))<sp/>{}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Alloc&gt;</highlight></codeline>
<codeline lineno="378" refid="classbasic__string__view_1a1e4a7e97cbd0ebcd9ca924714d33319c" refkind="member"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="classbasic__string__view_1a1e4a7e97cbd0ebcd9ca924714d33319c" kindref="member">basic_string_view</ref>(</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Char,<sp/>Traits,<sp/>Alloc&gt;&amp;<sp/>s)<sp/>FMT_NOEXCEPT</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>data_(s.data()),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_(s.size())<sp/>{}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/>FMT_ENABLE_IF(std::is_same&lt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S,<sp/><ref refid="structdetail_1_1std__string__view" kindref="compound">detail::std_string_view&lt;Char&gt;</ref>&gt;::value)&gt;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>(S<sp/>s)<sp/>FMT_NOEXCEPT<sp/>:<sp/>data_(s.data()),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_(s.size())<sp/>{}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="classbasic__string__view_1adb4ff9b1829cfa037f579b09da4af32f" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/><ref refid="classbasic__string__view_1adb4ff9b1829cfa037f579b09da4af32f" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="classbasic__string__view_1af8b4574d3a39883f409c858fc1006664" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view_1af8b4574d3a39883f409c858fc1006664" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>constexpr<sp/>iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>constexpr<sp/>iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>+<sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[pos];<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>remove_prefix(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>size_<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lexicographically<sp/>compare<sp/>this<sp/>string<sp/>reference<sp/>to<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>str_size<sp/>=<sp/>size_<sp/>&lt;<sp/>other.size_<sp/>?<sp/>size_<sp/>:<sp/>other.size_;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>std::char_traits&lt;Char&gt;::compare(data_,<sp/>other.data_,<sp/>str_size);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>size_<sp/>==<sp/>other.size_<sp/>?<sp/>0<sp/>:<sp/>(size_<sp/>&lt;<sp/>other.size_<sp/>?<sp/>-1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>lhs,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.compare(rhs)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>lhs,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.compare(rhs)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>lhs,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.compare(rhs)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>lhs,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.compare(rhs)<sp/>&lt;=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>lhs,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.compare(rhs)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(<ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>lhs,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.compare(rhs)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal">};</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">string_view</ref><sp/>=<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char&gt;</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">wstring_view</ref><sp/>=<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;wchar_t&gt;</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="structis__char" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__char" kindref="compound">is_char</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="438" refid="structis__char_3_01char_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__char" kindref="compound">is_char</ref>&lt;char&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="439" refid="structis__char_3_01wchar__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__char" kindref="compound">is_char</ref>&lt;wchar_t&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="440" refid="structis__char_3_01detail_1_1char8__type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__char" kindref="compound">is_char</ref>&lt;detail::char8_type&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="441" refid="structis__char_3_01char16__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__char" kindref="compound">is_char</ref>&lt;char16_t&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="442" refid="structis__char_3_01char32__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__char" kindref="compound">is_char</ref>&lt;char32_t&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/>FMT_ENABLE_IF(is_</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&lt;Char&gt;::value)&gt;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>to_string_view(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Traits,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Alloc&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>to_string_view(</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::basic_string&lt;Char,<sp/>Traits,<sp/>Alloc&gt;&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>to_string_view(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(!std::is_empty&lt;<ref refid="structdetail_1_1std__string__view" kindref="compound">detail::std_string_view&lt;Char&gt;</ref>&gt;::value)&gt;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>to_string_view(<ref refid="structdetail_1_1std__string__view" kindref="compound">detail::std_string_view&lt;Char&gt;</ref><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>base<sp/>class<sp/>for<sp/>compile-time<sp/>strings.<sp/>It<sp/>is<sp/>defined<sp/>in<sp/>the<sp/>fmt<sp/>namespace<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>formatting<sp/>functions<sp/>visible<sp/>via<sp/>ADL,<sp/>e.g.<sp/>format(FMT_STRING(&quot;{}&quot;),<sp/>42).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="structcompile__string" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcompile__string" kindref="compound">compile_string</ref><sp/>{};</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="487" refid="structis__compile__string" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__compile__string" kindref="compound">is_compile_string</ref><sp/>:<sp/>std::is_base_of&lt;compile_string,<sp/>S&gt;<sp/>{};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/>FMT_ENABLE_IF(is_compile_</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&lt;S&gt;::value)&gt;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">constexpr<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;typename S::char_type&gt;</ref><sp/>to_string_view(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>to_string_view(...);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>fmt::v7::to_string_view;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specifies<sp/>whether<sp/>S<sp/>is<sp/>a<sp/>string<sp/>type<sp/>convertible<sp/>to<sp/>fmt::basic_string_view.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>be<sp/>a<sp/>constexpr<sp/>function<sp/>but<sp/>MSVC<sp/>2017<sp/>fails<sp/>to<sp/>compile<sp/>it<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enable_if<sp/>and<sp/>MSVC<sp/>2015<sp/>fails<sp/>to<sp/>compile<sp/>it<sp/>as<sp/>an<sp/>alias<sp/>template.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="502" refid="structdetail_1_1is__string" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__string" kindref="compound">is_string</ref><sp/>:<sp/>std::is_class&lt;decltype(to_string_view(std::declval&lt;S&gt;()))&gt;<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal">};</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="structdetail_1_1char__t__impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1char__t__impl" kindref="compound">char_t_impl</ref><sp/>{};</highlight></codeline>
<codeline lineno="506" refid="structdetail_1_1char__t__impl_3_01S_00_01enable__if__t_3_01is__string_3_01S_01_4_1_1value_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1char__t__impl" kindref="compound">char_t_impl</ref>&lt;S,<sp/>enable_if_t&lt;<ref refid="structdetail_1_1is__string" kindref="compound">is_string</ref>&lt;S&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref>&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>decltype(to_string_view(std::declval&lt;S&gt;()));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>result::value_type;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="structdetail_1_1error__handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1error__handler" kindref="compound">error_handler</ref><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="structdetail_1_1error__handler" kindref="compound">error_handler</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="structdetail_1_1error__handler" kindref="compound">error_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1error__handler" kindref="compound">error_handler</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1error__handler" kindref="compound">error_handler</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1error__handler" kindref="compound">error_handler</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>intentionally<sp/>not<sp/>constexpr<sp/>to<sp/>give<sp/>a<sp/>compile-time<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>FMT_NORETURN<sp/>FMT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">};</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1char__t__impl" kindref="compound">detail::char_t_impl&lt;S&gt;::type</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ErrorHandler<sp/>=<sp/>detail::error_handler&gt;</highlight></codeline>
<codeline lineno="541" refid="classbasic__format__parse__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context</ref><sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>ErrorHandler<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>format_str_;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_arg_id_;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_type<sp/>=<sp/>Char;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>basic_string_view&lt;Char&gt;::iterator;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context</ref>(</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>format_str,<sp/>ErrorHandler<sp/>eh<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ErrorHandler(eh),<sp/>format_str_(format_str),<sp/>next_arg_id_(0)<sp/>{}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="classbasic__format__parse__context_1a3aedbd66520975bb680d427778f636a5" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/>iterator<sp/><ref refid="classbasic__format__parse__context_1a3aedbd66520975bb680d427778f636a5" kindref="member">begin</ref>()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_str_.begin();<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="classbasic__format__parse__context_1a9d4a735fcc467d31d25a3ca537461d1d" refkind="member"><highlight class="normal"><sp/><sp/>constexpr<sp/>iterator<sp/><ref refid="classbasic__format__parse__context_1a9d4a735fcc467d31d25a3ca537461d1d" kindref="member">end</ref>()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_str_.end();<sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="classbasic__format__parse__context_1ac123ab6c1c6e58db3ab0a917def4add8" refkind="member"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context_1ac123ab6c1c6e58db3ab0a917def4add8" kindref="member">advance_to</ref>(iterator<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>format_str_.remove_prefix(detail::to_unsigned(it<sp/>-<sp/><ref refid="classbasic__format__parse__context_1a3aedbd66520975bb680d427778f636a5" kindref="member">begin</ref>()));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="classbasic__format__parse__context_1a75c83556b48d6b5ee7b4866296888727" refkind="member"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context_1a75c83556b48d6b5ee7b4866296888727" kindref="member">next_arg_id</ref>()<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>check<sp/>if<sp/>the<sp/>argument<sp/>id<sp/>is<sp/>valid<sp/>to<sp/>avoid<sp/>overhead<sp/>and<sp/>because<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>checked<sp/>during<sp/>formatting<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_arg_id_<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_arg_id_++;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>on_error(</highlight><highlight class="stringliteral">&quot;cannot<sp/>switch<sp/>from<sp/>manual<sp/>to<sp/>automatic<sp/>argument<sp/>indexing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="classbasic__format__parse__context_1a7a548535000cbd315a9ac35996950eec" refkind="member"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context_1a7a548535000cbd315a9ac35996950eec" kindref="member">check_arg_id</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_arg_id_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>on_error(</highlight><highlight class="stringliteral">&quot;cannot<sp/>switch<sp/>from<sp/>automatic<sp/>to<sp/>manual<sp/>argument<sp/>indexing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_arg_id_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context_1a7a548535000cbd315a9ac35996950eec" kindref="member">check_arg_id</ref>(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>ErrorHandler::on_error(message);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>constexpr<sp/>ErrorHandler<sp/>error_handler()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal">};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context" kindref="compound">format_parse_context</ref><sp/>=<sp/><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context&lt;char&gt;</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context" kindref="compound">wformat_parse_context</ref><sp/>=<sp/><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context&lt;wchar_t&gt;</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="classbasic__format__arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>;</highlight></codeline>
<codeline lineno="606" refid="classbasic__format__args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>;</highlight></codeline>
<codeline lineno="607" refid="classdynamic__format__arg__store" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdynamic__format__arg__store" kindref="compound">dynamic_format_arg_store</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>formatter<sp/>for<sp/>objects<sp/>of<sp/>type<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="611" refid="structformatter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>deleted<sp/>default<sp/>constructor<sp/>indicates<sp/>a<sp/>disabled<sp/>formatter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="structformatter" kindref="compound">formatter</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">};</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specifies<sp/>if<sp/>T<sp/>has<sp/>an<sp/>enabled<sp/>formatter<sp/>specialization.<sp/>A<sp/>type<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>formattable<sp/>even<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>formatter<sp/>e.g.<sp/>via<sp/>a<sp/>conversion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_formatter<sp/>=</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_constructible&lt;typename<sp/>Context::template<sp/>formatter_type&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="classdetail_1_1buffer" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>T*<sp/>ptr_;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity_;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>initialize<sp/>ptr_<sp/>since<sp/>it<sp/>is<sp/>not<sp/>accessed<sp/>to<sp/>save<sp/>a<sp/>few<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>FMT_SUPPRESS_MSC_WARNING(26495)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/>FMT_NOEXCEPT<sp/>:<sp/>size_(sz),<sp/>capacity_(sz)<sp/>{}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>(T*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cap<sp/>=<sp/>0)<sp/>FMT_NOEXCEPT</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ptr_(p),</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_(sz),</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capacity_(cap)<sp/>{}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="classdetail_1_1buffer_1acc307472f22f2e050f7b424dcafa5c8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1acc307472f22f2e050f7b424dcafa5c8a" kindref="member">set</ref>(T*<sp/>buf_data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_capacity)<sp/>FMT_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr_<sp/>=<sp/>buf_data;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>capacity_<sp/>=<sp/>buf_capacity;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a4dd3931e4cbfa55ae6ed369741125221" kindref="member">grow</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a052710e423be8292ca133c6fc1acce94" kindref="member">capacity</ref>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_reference<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>T*<sp/>begin()<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;<sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>T*<sp/>end()<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_<sp/>+<sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>begin()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;<sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>end()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_<sp/>+<sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="classdetail_1_1buffer_1ac72e23b3cef99b3e4b6a13f7cf86a421" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1ac72e23b3cef99b3e4b6a13f7cf86a421" kindref="member">size</ref>()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="classdetail_1_1buffer_1a052710e423be8292ca133c6fc1acce94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a052710e423be8292ca133c6fc1acce94" kindref="member">capacity</ref>()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>capacity_;<sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classdetail_1_1buffer_1a52d7284e9aa8d16cf6dc01c3be11a4f7" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classdetail_1_1buffer_1a52d7284e9aa8d16cf6dc01c3be11a4f7" kindref="member">data</ref>()<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;<sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="classdetail_1_1buffer_1a6b39441768f2062ecc279c766cb7ae32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classdetail_1_1buffer_1a6b39441768f2062ecc279c766cb7ae32" kindref="member">data</ref>()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;<sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="classdetail_1_1buffer_1a047b15e5092d670624e39b98348725ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a047b15e5092d670624e39b98348725ce" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdetail_1_1buffer_1aac32786dc8067500882d17ab2bdcc691" kindref="member">reserve</ref>(new_size);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="classdetail_1_1buffer_1a8174757a0d86698229670044730dc59b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a8174757a0d86698229670044730dc59b" kindref="member">clear</ref>()<sp/>{<sp/>size_<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="classdetail_1_1buffer_1aac32786dc8067500882d17ab2bdcc691" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1aac32786dc8067500882d17ab2bdcc691" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_capacity)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_capacity<sp/>&gt;<sp/>capacity_)<sp/><ref refid="classdetail_1_1buffer_1a4dd3931e4cbfa55ae6ed369741125221" kindref="member">grow</ref>(new_capacity);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdetail_1_1buffer_1aac32786dc8067500882d17ab2bdcc691" kindref="member">reserve</ref>(size_<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr_[size_++]<sp/>=<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a28f51acf32e61f37558f6c7b8d200c05" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U*<sp/>begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U*<sp/>end);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;<sp/>T&amp;<sp/>operator[](I<sp/>index)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_[index];<sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator[](I<sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_[index];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal">};</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>container-backed<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="713" refid="classdetail_1_1container__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1container__buffer" kindref="compound">container_buffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt;typename<sp/>Container::value_type&gt;<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>Container&amp;<sp/>container_;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="718" refid="classdetail_1_1container__buffer_1ac5100b0094cbb7c1dc8d85694807b6e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1container__buffer_1ac5100b0094cbb7c1dc8d85694807b6e5" kindref="member">grow</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1buffer_1a052710e423be8292ca133c6fc1acce94" kindref="member">capacity</ref>)<sp/>FMT_OVERRIDE<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>container_.resize(<ref refid="classdetail_1_1buffer_1a052710e423be8292ca133c6fc1acce94" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classdetail_1_1buffer_1acc307472f22f2e050f7b424dcafa5c8a" kindref="member">set</ref>(&amp;container_[0],<sp/><ref refid="classdetail_1_1buffer_1a052710e423be8292ca133c6fc1acce94" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1container__buffer" kindref="compound">container_buffer</ref>(Container&amp;<sp/>c)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classdetail_1_1buffer" kindref="compound">buffer</ref>&lt;typename<sp/>Container::value_type&gt;(c.<ref refid="classdetail_1_1buffer_1ac72e23b3cef99b3e4b6a13f7cf86a421" kindref="member">size</ref>()),<sp/>container_(c)<sp/>{}</highlight></codeline>
<codeline lineno="726"><highlight class="normal">};</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extracts<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>container<sp/>from<sp/>back_insert_iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Container&amp;<sp/>get_container(std::back_insert_iterator&lt;Container&gt;<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>bi_iterator<sp/>=<sp/>std::back_insert_iterator&lt;Container&gt;;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">accessor<sp/>:<sp/>bi_iterator<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>accessor(bi_iterator<sp/>iter)<sp/>:<sp/>bi_iterator(iter)<sp/>{}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>bi_iterator::container;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*accessor(it).container;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="740" refid="structdetail_1_1fallback__formatter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1fallback__formatter" kindref="compound">fallback_formatter</ref><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1fallback__formatter" kindref="compound">fallback_formatter</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">};</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specifies<sp/>if<sp/>T<sp/>has<sp/>an<sp/>enabled<sp/>fallback_formatter<sp/>specialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_fallback_formatter<sp/>=</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>std::is_constructible&lt;fallback_formatter&lt;T,<sp/>typename<sp/>Context::char_type&gt;&gt;;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749" refid="structdetail_1_1view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1view" kindref="compound">view</ref><sp/>{};</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="structdetail_1_1named__arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1named__arg" kindref="compound">named_arg</ref><sp/>:<sp/><ref refid="structdetail_1_1view" kindref="compound">view</ref><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>name;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1named__arg" kindref="compound">named_arg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v)<sp/>:<sp/>name(n),<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(v)<sp/>{}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">};</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="structdetail_1_1named__arg__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info</ref><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>name;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">};</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_ARGS,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_NAMED_ARGS&gt;</highlight></codeline>
<codeline lineno="763" refid="structdetail_1_1arg__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1arg__data" kindref="compound">arg_data</ref><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>args_[0].named_args<sp/>points<sp/>to<sp/>named_args_<sp/>to<sp/>avoid<sp/>bloating<sp/>format_args.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>T<sp/>args_[1<sp/>+<sp/>(NUM_ARGS<sp/>!=<sp/>0<sp/>?<sp/>NUM_ARGS<sp/>:<sp/>1)];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info&lt;Char&gt;</ref><sp/>named_args_[NUM_NAMED_ARGS];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>U&gt;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1arg__data" kindref="compound">arg_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;...<sp/>init)<sp/>:<sp/>args_{T(named_args_,<sp/>NUM_NAMED_ARGS),<sp/>init...}<sp/>{}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1arg__data" kindref="compound">arg_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1arg__data" kindref="compound">arg_data</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>args()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_<sp/>+<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info&lt;Char&gt;</ref>*<sp/>named_args()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>named_args_;<sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal">};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_ARGS&gt;</highlight></codeline>
<codeline lineno="776" refid="structdetail_1_1arg__data_3_01T_00_01Char_00_01NUM__ARGS_00_010_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1arg__data" kindref="compound">arg_data</ref>&lt;T,<sp/>Char,<sp/>NUM_ARGS,<sp/>0&gt;<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>T<sp/>args_[NUM_ARGS<sp/>!=<sp/>0<sp/>?<sp/>NUM_ARGS<sp/>:<sp/>1];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>U&gt;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="structdetail_1_1arg__data" kindref="compound">arg_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;...<sp/>init)<sp/>:<sp/>args_{init...}<sp/>{}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>args()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_;<sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/>std::nullptr_t<sp/>named_args()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal">};</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_named_args(<ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info&lt;Char&gt;</ref>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Tail&gt;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_named_args(named_arg_info&lt;Char&gt;*<sp/>named_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_count,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>named_arg_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tail&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>init_named_args(named_args,<sp/>arg_count<sp/>+<sp/>1,<sp/>named_arg_count,<sp/>args...);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Tail&gt;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_named_args(named_arg_info&lt;Char&gt;*<sp/>named_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_count,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>named_arg_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>named_arg&lt;Char,<sp/>T&gt;&amp;<sp/>arg,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tail&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>named_args[named_arg_count++]<sp/>=<sp/>{arg.name,<sp/>arg_count};</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>init_named_args(named_args,<sp/>arg_count<sp/>+<sp/>1,<sp/>named_arg_count,<sp/>args...);</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">FMT_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_named_args(std::nullptr_t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...)<sp/>{}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="structdetail_1_1is__named__arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__named__arg" kindref="compound">is_named_arg</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="808" refid="structdetail_1_1is__named__arg_3_01named__arg_3_01Char_00_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__named__arg" kindref="compound">is_named_arg</ref>&lt;<ref refid="structdetail_1_1named__arg" kindref="compound">named_arg</ref>&lt;Char,<sp/>T&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B<sp/>=<sp/>false&gt;<sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B<sp/>?<sp/>1<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">...<sp/>Tail&gt;<sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count()<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(B1<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>+<sp/>count&lt;B2,<sp/>Tail...&gt;();</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;<sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count_named_args()<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count&lt;is_named_arg&lt;Args&gt;::value...&gt;();</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>type<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>none_type,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Integer<sp/>types<sp/>should<sp/>go<sp/>first,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>int_type,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>uint_type,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>long_long_type,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>ulong_long_type,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>int128_type,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>uint128_type,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>bool_type,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>char_type,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>last_integer_type<sp/>=<sp/>char_type,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>followed<sp/>by<sp/>floating-point<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>float_type,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>double_type,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>long_double_type,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>last_numeric_type<sp/>=<sp/>long_double_type,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>cstring_type,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>string_type,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>pointer_type,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>custom_type</highlight></codeline>
<codeline lineno="840"><highlight class="normal">};</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maps<sp/>core<sp/>type<sp/>T<sp/>to<sp/>the<sp/>corresponding<sp/>type<sp/>enum<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="844" refid="structdetail_1_1type__constant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1type__constant" kindref="compound">type_constant</ref><sp/>:<sp/>std::integral_constant&lt;type,<sp/>type::custom_type&gt;<sp/>{};</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_TYPE_CONSTANT(Type,<sp/>constant)<sp/>\</highlight></codeline>
<codeline lineno="847"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>Char&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="848"><highlight class="preprocessor"><sp/><sp/>struct<sp/>type_constant&lt;Type,<sp/>Char&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="849"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::integral_constant&lt;type,<sp/>type::constant&gt;<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>int_type);</highlight></codeline>
<codeline lineno="852"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/>uint_type);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>long_long_type);</highlight></codeline>
<codeline lineno="854"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>ulong_long_type);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">FMT_TYPE_CONSTANT(<ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref>,<sp/>int128_type);</highlight></codeline>
<codeline lineno="856"><highlight class="normal">FMT_TYPE_CONSTANT(<ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref>,<sp/>uint128_type);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>bool_type);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">FMT_TYPE_CONSTANT(Char,<sp/>char_type);</highlight></codeline>
<codeline lineno="859"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>float_type);</highlight></codeline>
<codeline lineno="860"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>double_type);</highlight></codeline>
<codeline lineno="861"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>long_double_type);</highlight></codeline>
<codeline lineno="862"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*,<sp/>cstring_type);</highlight></codeline>
<codeline lineno="863"><highlight class="normal">FMT_TYPE_CONSTANT(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref>,<sp/>string_type);</highlight></codeline>
<codeline lineno="864"><highlight class="normal">FMT_TYPE_CONSTANT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>pointer_type);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_integral_type(type<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&gt;<sp/>type::none_type<sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>type::last_integer_type;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_arithmetic_type(type<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&gt;<sp/>type::none_type<sp/>&amp;&amp;<sp/>t<sp/>&lt;=<sp/>type::last_numeric_type;</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874" refid="structdetail_1_1string__value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1string__value" kindref="compound">string_value</ref><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/><ref refid="structdetail_1_1data" kindref="compound">data</ref>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">};</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="structdetail_1_1named__arg__value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1named__arg__value" kindref="compound">named_arg_value</ref><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info&lt;Char&gt;</ref>*<sp/><ref refid="structdetail_1_1data" kindref="compound">data</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">};</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="structdetail_1_1custom__value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1custom__value" kindref="compound">custom_value</ref><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>parse_context<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::parse_context_type;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>void<sp/>(*format)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg,<sp/>parse_context&amp;<sp/>parse_ctx,<sp/>Context&amp;<sp/>ctx);</highlight></codeline>
<codeline lineno="888"><highlight class="normal">};</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>formatting<sp/>argument<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="classdetail_1_1value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_value;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>uint_value;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long_long_value;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ulong_long_value;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref><sp/>int128_value;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref><sp/>uint128_value;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bool_value;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>char_value;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>float_value;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>double_value;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>long_double_value;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pointer;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1string__value" kindref="compound">string_value&lt;char_type&gt;</ref><sp/>string;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1custom__value" kindref="compound">custom_value&lt;Context&gt;</ref><sp/>custom;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1named__arg__value" kindref="compound">named_arg_value&lt;char_type&gt;</ref><sp/>named_args;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>constexpr<sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0)<sp/>:<sp/>int_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>constexpr<sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>uint_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>long_long_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>ulong_long_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(<ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref><sp/>val)<sp/>:<sp/>int128_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(<ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref><sp/>val)<sp/>:<sp/>uint128_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>float_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>double_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>long_double_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/>:<sp/>bool_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(char_type<sp/>val)<sp/>:<sp/>char_value(val)<sp/>{}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type*<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.data<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.data<sp/>=<sp/>val.<ref refid="classbasic__string__view_1adb4ff9b1829cfa037f579b09da4af32f" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.size<sp/>=<sp/>val.<ref refid="classbasic__string__view_1af8b4574d3a39883f409c858fc1006664" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>val)<sp/>:<sp/>pointer(val)<sp/>{}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg__info" kindref="compound">named_arg_info&lt;char_type&gt;</ref>*<sp/>args,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>named_args{args,<sp/>size}<sp/>{}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>FMT_INLINE<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>custom.value<sp/>=<sp/>&amp;val;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>formatter<sp/>type<sp/>through<sp/>the<sp/>context<sp/>to<sp/>allow<sp/>different<sp/>contexts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>different<sp/>extension<sp/>points,<sp/>e.g.<sp/>`formatter&lt;T&gt;`<sp/>for<sp/>`format`<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`printf_formatter&lt;T&gt;`<sp/>for<sp/>`printf`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>custom.format<sp/>=<sp/>format_custom_arg&lt;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T,<sp/>conditional_t&lt;has_formatter&lt;T,<sp/>Context&gt;::value,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::template<sp/>formatter_type&lt;T&gt;,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1fallback__formatter" kindref="compound">fallback_formatter&lt;T, char_type&gt;</ref>&gt;&gt;;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Formats<sp/>an<sp/>argument<sp/>of<sp/>a<sp/>custom<sp/>type,<sp/>such<sp/>as<sp/>a<sp/>user-defined<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Formatter&gt;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>format_custom_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::parse_context_type&amp;<sp/>parse_ctx,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Context&amp;<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>Formatter<sp/>f;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>parse_ctx.advance_to(f.parse(parse_ctx));</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.advance_to(f.format(*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg),<sp/>ctx));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal">};</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="957"><highlight class="normal">FMT_CONSTEXPR<sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref><sp/>make_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>minimize<sp/>the<sp/>number<sp/>of<sp/>types<sp/>we<sp/>need<sp/>to<sp/>deal<sp/>with,<sp/>long<sp/>is<sp/>translated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>either<sp/>to<sp/>int<sp/>or<sp/>to<sp/>long<sp/>long<sp/>depending<sp/>on<sp/>its<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>long_short<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>};</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>long_type<sp/>=<sp/>conditional_t&lt;long_short,<sp/>int,<sp/>long<sp/>long&gt;;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ulong_type<sp/>=<sp/>conditional_t&lt;long_short,<sp/>unsigned,<sp/>unsigned<sp/>long<sp/>long&gt;;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maps<sp/>formatting<sp/>arguments<sp/>to<sp/>core<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="structdetail_1_1arg__mapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1arg__mapper" kindref="compound">arg_mapper</ref><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/>long_type<sp/>map(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/>ulong_type<sp/>map(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref><sp/>map(<ref refid="structdetail_1_1int128__t" kindref="compound">int128_t</ref><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref><sp/>map(<ref refid="structdetail_1_1uint128__t" kindref="compound">uint128_t</ref><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>FMT_ENABLE_IF(is_</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&lt;T&gt;::value)&gt;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/>char_type<sp/>map(T<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>char&gt;::value<sp/>||<sp/>std::is_same&lt;T,<sp/>char_type&gt;::value,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mixing<sp/>character<sp/>types<sp/>is<sp/>disallowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type*<sp/>map(char_type*<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type*<sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type*<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>FMT_ENABLE_IF(is_</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&lt;T&gt;::value)&gt;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref><sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;char_type,<sp/>char_t&lt;T&gt;&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref>,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mixing<sp/>character<sp/>types<sp/>is<sp/>disallowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_string_view(val);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_constructible&lt;<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref>,<sp/>T&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="structdetail_1_1is__string" kindref="compound">is_string&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/>!has_formatter&lt;T,<sp/>Context&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!has_fallback_formatter&lt;T,<sp/>Context&gt;::value)&gt;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref><sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref>(val);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_constructible&lt;<ref refid="structdetail_1_1std__string__view" kindref="compound">std_string_view&lt;char_type&gt;</ref>,<sp/>T&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_constructible&lt;<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref>,<sp/>T&gt;::<ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="structdetail_1_1is__string" kindref="compound">is_string&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/>!has_formatter&lt;T,<sp/>Context&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!has_fallback_formatter&lt;T,<sp/>Context&gt;::value)&gt;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref><sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1std__string__view" kindref="compound">std_string_view&lt;char_type&gt;</ref>(val);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;char_type,<sp/>char&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>string<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;char_type,<sp/>char&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>string<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>const_val<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map(const_val);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>const_val<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map(const_val);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>map(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>map(std::nullptr_t<sp/>val)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Formatting<sp/>of<sp/>arbitrary<sp/>pointers<sp/>is<sp/>disallowed.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pointer<sp/>cast<sp/>it<sp/>to<sp/>&quot;void<sp/>*&quot;<sp/>or<sp/>&quot;const<sp/>void<sp/>*&quot;.<sp/>In<sp/>particular,<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forbids<sp/>formatting<sp/>of<sp/>&quot;[const]<sp/>volatile<sp/>char<sp/>*&quot;<sp/>which<sp/>is<sp/>printed<sp/>as<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>iostreams.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(!</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/></highlight><highlight class="stringliteral">&quot;formatting<sp/>of<sp/>non-void<sp/>pointers<sp/>is<sp/>disallowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(std::is_enum&lt;T&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!has_formatter&lt;T,<sp/>Context&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!has_fallback_formatter&lt;T,<sp/>Context&gt;::value)&gt;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;arg_mapper&gt;().map(</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>std::underlying_type&lt;T&gt;::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val)))<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename<sp/>std::underlying_type&lt;T&gt;::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(val));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(!<ref refid="structdetail_1_1is__string" kindref="compound">is_string&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/>!<ref refid="structis__char" kindref="compound">is_char&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(has_formatter&lt;T,<sp/>Context&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_fallback_formatter&lt;T,<sp/>Context&gt;::value))&gt;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>map(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg" kindref="compound">named_arg&lt;char_type, T&gt;</ref>&amp;<sp/>val)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;arg_mapper&gt;().map(val.value))<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>map(val.value);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map(...)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>formattable<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Context)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formattable,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>format<sp/>argument.<sp/>To<sp/>make<sp/>type<sp/>T<sp/>formattable<sp/>provide<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;formatter&lt;T&gt;<sp/>specialization:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;https://fmt.dev/latest/api.html#formatting-user-defined-types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>type<sp/>constant<sp/>after<sp/>applying<sp/>arg_mapper&lt;Context&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1type__constant" kindref="compound">mapped_type_constant</ref><sp/>=</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1type__constant" kindref="compound">type_constant&lt;decltype(arg_mapper&lt;Context&gt;</ref>().map(std::declval&lt;const<sp/>T&amp;&gt;())),</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type&gt;;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>packed_arg_bits<sp/>=<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>arguments<sp/>with<sp/>packed<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>max_packed_args<sp/>=<sp/>62<sp/>/<sp/>packed_arg_bits<sp/>};</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">enum<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>{<sp/>is_unpacked_bit<sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>63<sp/>};</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">enum<sp/>:<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>{<sp/>has_named_args_bit<sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>62<sp/>};</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>formatting<sp/>argument.<sp/>It<sp/>is<sp/>a<sp/>trivially<sp/>copyable/constructible<sp/>type<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allow<sp/>storage<sp/>in<sp/>basic_memory_buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1value" kindref="compound">detail::value&lt;Context&gt;</ref><sp/>value_;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>detail::type<sp/>type_;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ContextType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>FMT_CONSTEXPR<sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;ContextType&gt;</ref><sp/>detail::make_arg(</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ctx&gt;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>FMT_CONSTEXPR<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visit_format_arg(Visitor&amp;&amp;<sp/>vis,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Ctx&gt;</ref>&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(vis(0));</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;Context&gt;;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdynamic__format__arg__store" kindref="compound">dynamic_format_arg_store</ref>&lt;Context&gt;;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_ARGS,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_NAMED_ARGS&gt;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1arg__data" kindref="compound">detail::arg_data</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg__info" kindref="compound">detail::named_arg_info&lt;char_type&gt;</ref>*<sp/>args,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value_(args,<sp/>size)<sp/>{}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1125" refid="classbasic__format__arg_1_1handle" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__arg_1_1handle" kindref="compound">handle</ref><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg_1_1handle" kindref="compound">handle</ref>(<ref refid="structdetail_1_1custom__value" kindref="compound">detail::custom_value&lt;Context&gt;</ref><sp/>custom)<sp/>:<sp/>custom_(custom)<sp/>{}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::parse_context_type&amp;<sp/>parse_ctx,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Context&amp;<sp/>ctx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>custom_.format(custom_.value,<sp/>parse_ctx,<sp/>ctx);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1custom__value" kindref="compound">detail::custom_value&lt;Context&gt;</ref><sp/>custom_;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>constexpr<sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>()<sp/>:<sp/>type_(detail::type::none_type)<sp/>{}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/>const<sp/>FMT_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_<sp/>!=<sp/>detail::type::none_type;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>detail::type<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_;<sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_integral()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::is_integral_type(type_);<sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_arithmetic()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::is_arithmetic_type(type_);<sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Visitor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">FMT_CONSTEXPR_DECL<sp/>FMT_INLINE<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visit_format_arg(</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>Visitor&amp;&amp;<sp/>vis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref>&amp;<sp/>arg)<sp/>-&gt;<sp/>decltype(vis(0))<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(arg.type_)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::none_type:</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::int_type:</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.int_value);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::uint_type:</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.uint_value);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::long_long_type:</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.long_long_value);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::ulong_long_type:</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.ulong_long_value);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_USE_INT128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::int128_type:</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.int128_value);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::uint128_type:</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.uint128_value);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::int128_type:</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::uint128_type:</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::bool_type:</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.bool_value);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::char_type:</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.char_value);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::float_type:</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.float_value);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::double_type:</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.double_value);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::long_double_type:</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.long_double_value);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::cstring_type:</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.string.data);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::string_type:</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref>(arg.value_.string.data,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg.value_.string.size));</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::pointer_type:</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(arg.value_.pointer);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>detail::type::custom_type:</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg_1_1handle" kindref="compound">basic_format_arg&lt;Context&gt;::handle</ref>(arg.value_.custom));</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vis(<ref refid="structmonostate" kindref="compound">monostate</ref>());</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>whether<sp/>T<sp/>is<sp/>a<sp/>container<sp/>with<sp/>contiguous<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206" refid="structis__contiguous" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__contiguous" kindref="compound">is_contiguous</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="1208" refid="structis__contiguous_3_01std_1_1basic__string_3_01Char_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__contiguous" kindref="compound">is_contiguous</ref>&lt;std::basic_string&lt;Char&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="1210" refid="structis__contiguous_3_01detail_1_1buffer_3_01Char_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structis__contiguous" kindref="compound">is_contiguous</ref>&lt;detail::buffer&lt;Char&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputIt&gt;</highlight></codeline>
<codeline lineno="1215" refid="structdetail_1_1is__back__insert__iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__back__insert__iterator" kindref="compound">is_back_insert_iterator</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="1217" refid="structdetail_1_1is__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__back__insert__iterator" kindref="compound">is_back_insert_iterator</ref>&lt;std::back_insert_iterator&lt;Container&gt;&gt;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputIt&gt;</highlight></codeline>
<codeline lineno="1221" refid="structdetail_1_1is__contiguous__back__insert__iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__contiguous__back__insert__iterator" kindref="compound">is_contiguous_back_insert_iterator</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="1223" refid="structdetail_1_1is__contiguous__back__insert__iterator_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__contiguous__back__insert__iterator" kindref="compound">is_contiguous_back_insert_iterator</ref>&lt;std::back_insert_iterator&lt;Container&gt;&gt;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structis__contiguous" kindref="compound">is_contiguous</ref>&lt;Container&gt;<sp/>{};</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>type-erased<sp/>reference<sp/>to<sp/>an<sp/>std::locale<sp/>to<sp/>avoid<sp/>heavy<sp/>&lt;locale&gt;<sp/>include.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227" refid="classdetail_1_1locale__ref" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref><sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>locale_;<sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>type-erased<sp/>pointer<sp/>to<sp/>std::locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref>()<sp/>:<sp/>locale_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Locale&gt;<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1locale__ref" kindref="compound">locale_ref</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Locale&amp;<sp/>loc);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FMT_NOEXCEPT<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>locale_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Locale&gt;<sp/>Locale<sp/>get()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>encode_types()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>encode_types()<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mapped_type_constant&lt;Arg,<sp/>Context&gt;::value)<sp/>|</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(encode_types&lt;Context,<sp/>Args...&gt;()<sp/>&lt;&lt;<sp/>packed_arg_bits);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">FMT_CONSTEXPR<sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref><sp/>make_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref><sp/>arg;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>arg.type_<sp/>=<sp/>mapped_type_constant&lt;T,<sp/>Context&gt;::value;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>arg.value_<sp/>=<sp/>arg_mapper&lt;Context&gt;().map(value);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>type<sp/>template<sp/>parameter<sp/>is<sp/>there<sp/>to<sp/>avoid<sp/>an<sp/>ODR<sp/>violation<sp/>when<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>fallback<sp/>formatter<sp/>in<sp/>one<sp/>translation<sp/>unit<sp/>and<sp/>an<sp/>implicit<sp/>conversion<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>another<sp/>(not<sp/>recommended).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IS_PACKED,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context,<sp/>type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(IS_PACKED)&gt;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>value&lt;Context&gt;<sp/>make_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg_mapper&lt;Context&gt;().map(val);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IS_PACKED,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context,<sp/>type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(!IS_PACKED)&gt;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref><sp/>make_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_arg&lt;Context&gt;(value);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271" refid="structdetail_1_1is__reference__wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__reference__wrapper" kindref="compound">is_reference_wrapper</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1273" refid="structdetail_1_1is__reference__wrapper_3_01std_1_1reference__wrapper_3_01T_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1is__reference__wrapper" kindref="compound">is_reference_wrapper</ref>&lt;std::reference_wrapper&lt;T&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>unwrap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>unwrap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::reference_wrapper&lt;T&gt;&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280" refid="classdetail_1_1dynamic__arg__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdetail_1_1dynamic__arg__list" kindref="compound">dynamic_arg_list</ref><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::size_t<sp/>max_pool_string_size<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>for<sp/>clang&apos;s<sp/>-Wweak-vtables.<sp/>Unlike<sp/>for<sp/>regular<sp/>classes,<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>templates<sp/>it<sp/>doesn&apos;t<sp/>complain<sp/>about<sp/>inability<sp/>to<sp/>deduce<sp/>single<sp/>translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unit<sp/>for<sp/>placing<sp/>vtable.<sp/>So<sp/>storage_node_base<sp/>is<sp/>made<sp/>a<sp/>fake<sp/>template.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288" refid="structdetail_1_1dynamic__arg__list_1_1node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1dynamic__arg__list_1_1node" kindref="compound">node</ref><sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="structdetail_1_1dynamic__arg__list_1_1node" kindref="compound">node</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;node&lt;&gt;&gt;<sp/>next;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pool<sp/>storage<sp/>allocation<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*allocate_from_pool(std::size_t<sp/>sz);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_from_pool(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297" refid="structdetail_1_1dynamic__arg__list_1_1typed__node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1dynamic__arg__list_1_1typed__node" kindref="compound">typed_node</ref><sp/>:<sp/><ref refid="structdetail_1_1dynamic__arg__list_1_1node" kindref="compound">node</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg&gt;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="structdetail_1_1dynamic__arg__list_1_1typed__node" kindref="compound">typed_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg&amp;<sp/>arg)<sp/>:<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(arg)<sp/>{}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>FMT_CONSTEXPR<sp/><ref refid="structdetail_1_1dynamic__arg__list_1_1typed__node" kindref="compound">typed_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref>&amp;<sp/>arg)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>(arg.data(),<sp/>arg.size())<sp/>{}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308" refid="structdetail_1_1dynamic__arg__list_1_1pooled__node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdetail_1_1dynamic__arg__list_1_1pooled__node" kindref="compound">pooled_node</ref><sp/>:<sp/><ref refid="structdetail_1_1dynamic__arg__list_1_1node" kindref="compound">node</ref>&lt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;char,<sp/>max_pool_string_size&gt;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(std::size_t<sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allocate_from_pool(sz);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free_from_pool(ptr);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1dynamic__arg__list_1_1pooled__node" kindref="compound">pooled_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/>std::size_t<sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ASSERT(sz<sp/>&lt;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>.size(),<sp/></highlight><highlight class="stringliteral">&quot;String<sp/>is<sp/>too<sp/>big&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(str,<sp/>str<sp/>+<sp/>sz,<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>.begin());</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;node&lt;&gt;&gt;<sp/>head_;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::size_t<sp/>max_pool_node_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdetail_1_1dynamic__arg__list_1_1pooled__node" kindref="compound">pooled_node</ref>);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*push_small_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/>std::size_t<sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_node<sp/><sp/>=<sp/>std::unique_ptr&lt;pooled_node&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1dynamic__arg__list_1_1pooled__node" kindref="compound">pooled_node</ref>(str,<sp/>sz));</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/><sp/><sp/><sp/>=<sp/>new_node-&gt;value;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;next<sp/>=<sp/>std::move(head_);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>head_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(new_node);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>.data();</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>push(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_node<sp/>=<sp/>std::unique_ptr&lt;typed_node&lt;T&gt;&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>typed_node&lt;T&gt;(arg));</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref><sp/>=<sp/>new_node-&gt;value;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>new_node-&gt;next<sp/>=<sp/>std::move(head_);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>head_<sp/>=<sp/>std::move(new_node);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1value" kindref="compound">value</ref>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Formatting<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348" refid="classbasic__format__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputIt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__context" kindref="compound">basic_format_context</ref><sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1351" refid="classbasic__format__context_1a71fea7d34edb618df612644dfd02a896" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__context_1a71fea7d34edb618df612644dfd02a896" kindref="member">char_type</ref><sp/>=<sp/>Char;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>OutputIt<sp/>out_;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args&lt;basic_format_context&gt;</ref><sp/>args_;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1locale__ref" kindref="compound">detail::locale_ref</ref><sp/>loc_;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator<sp/>=<sp/>OutputIt;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg" kindref="compound">format_arg</ref><sp/>=<sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;basic_format_context&gt;</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__parse__context" kindref="compound">parse_context_type</ref><sp/>=<sp/><ref refid="classbasic__format__parse__context" kindref="compound">basic_format_parse_context&lt;Char&gt;</ref>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structformatter" kindref="compound">formatter_type</ref><sp/>=<sp/><ref refid="structformatter" kindref="compound">formatter&lt;T, char_type&gt;</ref>;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__context" kindref="compound">basic_format_context</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__context" kindref="compound">basic_format_context</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__context" kindref="compound">basic_format_context</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1370" refid="classbasic__format__context_1aec82c9dc3a5a4d9fc07d7ebfff053cfe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__context_1aec82c9dc3a5a4d9fc07d7ebfff053cfe" kindref="member">basic_format_context</ref>(OutputIt<sp/>out,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args&lt;basic_format_context&gt;</ref><sp/>ctx_args,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdetail_1_1locale__ref" kindref="compound">detail::locale_ref</ref><sp/>loc<sp/>=<sp/><ref refid="classdetail_1_1locale__ref" kindref="compound">detail::locale_ref</ref>())</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>out_(out),<sp/>args_(ctx_args),<sp/>loc_(loc)<sp/>{}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>format_arg<sp/>arg(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_.<ref refid="classbasic__format__args_1a1b8d2230711409b52799cf4b4c3327fe" kindref="member">get</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>format_arg<sp/>arg(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref><sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_.<ref refid="classbasic__format__args_1a1b8d2230711409b52799cf4b4c3327fe" kindref="member">get</ref>(name);<sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_id(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;char_type&gt;</ref><sp/>name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_.get_id(name);<sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args&lt;basic_format_context&gt;</ref>&amp;<sp/>args()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args_;<sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1error__handler" kindref="compound">detail::error_handler</ref><sp/>error_handler()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};<sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message)<sp/>{<sp/>error_handler().on_error(message);<sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>output<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>iterator<sp/>out()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out_;<sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Advances<sp/>the<sp/>begin<sp/>iterator<sp/>to<sp/>``it``.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance_to(iterator<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structdetail_1_1is__back__insert__iterator" kindref="compound">detail::is_back_insert_iterator&lt;iterator&gt;</ref>())<sp/>out_<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1locale__ref" kindref="compound">detail::locale_ref</ref><sp/>locale()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loc_;<sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__context" kindref="compound">buffer_context</ref><sp/>=</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__format__context" kindref="compound">basic_format_context&lt;std::back_insert_iterator&lt;detail::buffer&lt;Char&gt;</ref>&gt;,<sp/>Char&gt;;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__context" kindref="compound">format_context</ref><sp/>=<sp/><ref refid="classbasic__format__context" kindref="compound">buffer_context&lt;char&gt;</ref>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__context" kindref="compound">wformat_context</ref><sp/>=<sp/><ref refid="classbasic__format__context" kindref="compound">buffer_context&lt;wchar_t&gt;</ref>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Workaround<sp/>a<sp/>bug<sp/>in<sp/>gcc:<sp/>https://stackoverflow.com/q/62767544/471164.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FMT_BUFFER_CONTEXT(Char)<sp/>\</highlight></codeline>
<codeline lineno="1402"><highlight class="preprocessor"><sp/><sp/>basic_format_context&lt;std::back_insert_iterator&lt;detail::buffer&lt;Char&gt;&gt;,<sp/>Char&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="1412" refid="classformat__arg__store" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classformat__arg__store" kindref="compound">format_arg_store</ref></highlight></codeline>
<codeline lineno="1413"><highlight class="normal">#if<sp/>FMT_GCC_VERSION<sp/>&amp;&amp;<sp/>FMT_GCC_VERSION<sp/>&lt;<sp/>409</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>a<sp/>GCC<sp/>template<sp/>argument<sp/>substitution<sp/>bug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args&lt;Context&gt;</ref></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_args<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Args);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_named_args<sp/>=<sp/>detail::count_named_args&lt;Args...&gt;();</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_packed<sp/>=<sp/>num_args<sp/>&lt;=<sp/>detail::max_packed_args;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>conditional_t&lt;is_packed,<sp/>detail::value&lt;Context&gt;,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><ref refid="structdetail_1_1arg__data" kindref="compound">detail::arg_data</ref>&lt;value_type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type,<sp/>num_args,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_named_args&gt;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;Context&gt;;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>desc<sp/>=</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(is_packed<sp/>?<sp/>detail::encode_types&lt;Context,<sp/>Args...&gt;()</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::is_unpacked_bit<sp/>|<sp/>num_args)<sp/>|</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(num_named_args<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(detail::has_named_args_bit)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><ref refid="classformat__arg__store" kindref="compound">format_arg_store</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FMT_GCC_VERSION<sp/>&amp;&amp;<sp/>FMT_GCC_VERSION<sp/>&lt;<sp/>409</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args&lt;Context&gt;</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_{detail::make_arg&lt;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_packed,<sp/>Context,</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1type__constant" kindref="compound">detail::mapped_type_constant&lt;Args, Context&gt;::value</ref>&gt;(args)...}<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::init_named_args(data_.named_args(),<sp/>0,<sp/>0,<sp/>args...);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context<sp/>=<sp/><ref refid="classbasic__format__context" kindref="compound">format_context</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classformat__arg__store" kindref="compound">format_arg_store</ref>&lt;Context,<sp/>Args...&gt;<sp/>make_format_args(</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{args...};</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg" kindref="compound">detail::named_arg&lt;Char, T&gt;</ref><sp/>arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Char*<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>static_assert(!<ref refid="structdetail_1_1is__named__arg" kindref="compound">detail::is_named_arg&lt;T&gt;</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;nested<sp/>named<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{name,<sp/>arg};</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdynamic__format__arg__store" kindref="compound">dynamic_format_arg_store</ref></highlight></codeline>
<codeline lineno="1494"><highlight class="normal">#if<sp/>FMT_GCC_VERSION<sp/>&amp;&amp;<sp/>FMT_GCC_VERSION<sp/>&lt;<sp/>409</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Workaround<sp/>a<sp/>GCC<sp/>template<sp/>argument<sp/>substitution<sp/>bug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args&lt;Context&gt;</ref></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>char_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context::char_type;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502" refid="structdynamic__format__arg__store_1_1need__copy" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdynamic__format__arg__store_1_1need__copy" kindref="compound">need_copy</ref><sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>detail::type<sp/>mapped_type<sp/>=</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1type__constant" kindref="compound">detail::mapped_type_constant&lt;T, Context&gt;::value</ref>;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>!(<ref refid="structdetail_1_1is__reference__wrapper" kindref="compound">detail::is_reference_wrapper&lt;T&gt;::value</ref><sp/>||</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>basic_string_view&lt;char_type&gt;&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>detail::std_string_view&lt;char_type&gt;&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mapped_type<sp/>!=<sp/>detail::type::cstring_type<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapped_type<sp/>!=<sp/>detail::type::string_type<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapped_type<sp/>!=<sp/>detail::type::custom_type))</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>stored_type<sp/>=<sp/>conditional_t&lt;detail::is_string&lt;T&gt;::value,</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::basic_string&lt;char_type&gt;,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>of<sp/>basic_format_arg<sp/>must<sp/>be<sp/>contiguous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>std::vector&lt;basic_format_arg&lt;Context&gt;&gt;<sp/>data_;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>std::vector&lt;detail::named_arg_info&lt;char_type&gt;&gt;<sp/>named_info_;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Storage<sp/>of<sp/>arguments<sp/>not<sp/>fitting<sp/>into<sp/>basic_format_arg<sp/>must<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>relocation<sp/>because<sp/>items<sp/>in<sp/>data_<sp/>refer<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1dynamic__arg__list" kindref="compound">detail::dynamic_arg_list</ref><sp/>dynamic_args_;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;Context&gt;;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>get_types()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::is_unpacked_bit<sp/>|<sp/>data_.size()<sp/>|</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(named_info_.empty()</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0ULL</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(detail::has_named_args_bit));</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref>*<sp/>data()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>named_info_.empty()<sp/>?<sp/>data_.data()<sp/>:<sp/>data_.data()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>emplace_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.emplace_back(detail::make_arg&lt;Context&gt;(arg));</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>emplace_arg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg" kindref="compound">detail::named_arg&lt;char_type, T&gt;</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(named_info_.empty())<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg__info" kindref="compound">detail::named_arg_info&lt;char_type&gt;</ref>*<sp/>zero_ptr{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_.insert(data_.begin(),<sp/>{zero_ptr,<sp/>0});</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.emplace_back(detail::make_arg&lt;Context&gt;(detail::unwrap(arg.value)));</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pop_one<sp/>=<sp/>[](std::vector&lt;basic_format_arg&lt;Context&gt;&gt;*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;pop_back();</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;std::vector&lt;basic_format_arg&lt;Context&gt;&gt;,<sp/>decltype(pop_one)&gt;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guard{&amp;data_,<sp/>pop_one};</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>named_info_.push_back({arg.name,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_.size()<sp/>-<sp/>2u)});</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>data_[0].value_.named_args<sp/>=<sp/>{named_info_.data(),<sp/>named_info_.size()};</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>guard.release();</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;detail::is_string&lt;typename<sp/>std::decay&lt;T&gt;::type&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="1582" refid="classdynamic__format__arg__store_1a807df0cbb5a37c66ca96bbb50b77cba9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__format__arg__store_1a807df0cbb5a37c66ca96bbb50b77cba9" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt::string_view<sp/>view(arg);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view.size()<sp/>+<sp/>1<sp/>&lt;<sp/>dynamic_args_.max_pool_string_size)<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emplace_arg(dynamic_args_.push_small_string(view.data(),<sp/>view.size()<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emplace_arg(dynamic_args_.push&lt;stored_type&lt;T&gt;<sp/>&gt;(arg));</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!detail::is_string&lt;typename<sp/>std::decay&lt;T&gt;::type&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail::const_check(need_copy&lt;T&gt;::value))<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emplace_arg(dynamic_args_.push&lt;stored_type&lt;T&gt;<sp/>&gt;(arg));</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emplace_arg(detail::unwrap(arg));</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622" refid="classdynamic__format__arg__store_1ac58637a7965cbfeab47c2f50e923dc07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__format__arg__store_1ac58637a7965cbfeab47c2f50e923dc07" kindref="member">push_back</ref>(std::reference_wrapper&lt;T&gt;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdetail_1_1is__named__arg" kindref="compound">detail::is_named_arg</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_cv&lt;T&gt;::type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdynamic__format__arg__store_1_1need__copy" kindref="compound">need_copy&lt;T&gt;::value</ref>,</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;objects<sp/>of<sp/>built-in<sp/>types<sp/>and<sp/>string<sp/>views<sp/>are<sp/>always<sp/>copied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>emplace_arg(arg.get());</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1636" refid="classdynamic__format__arg__store_1a14baaad39c59b82fdf86dc4276f7d7cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__format__arg__store_1a14baaad39c59b82fdf86dc4276f7d7cc" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdetail_1_1named__arg" kindref="compound">detail::named_arg&lt;char_type, T&gt;</ref>&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type*<sp/>arg_name<sp/>=</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamic_args_.push&lt;std::basic_string&lt;char_type&gt;&gt;(arg.name).c_str();</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(detail::const_check(<ref refid="structdynamic__format__arg__store_1_1need__copy" kindref="compound">need_copy&lt;T&gt;::value</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emplace_arg(</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt::arg(arg_name,<sp/>dynamic_args_.push&lt;stored_type&lt;T&gt;&gt;(arg.value)));</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emplace_arg(fmt::arg(arg_name,<sp/>arg.value));</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648" refid="classdynamic__format__arg__store_1a94763fc905f02222d575f7c03161c212" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__format__arg__store_1a94763fc905f02222d575f7c03161c212" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.clear();</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>named_info_.clear();</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>dynamic_args_<sp/>=<sp/><ref refid="classdetail_1_1dynamic__arg__list" kindref="compound">detail::dynamic_arg_list</ref>();</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660" refid="classdynamic__format__arg__store_1a9c6983c46b69775b5066f6ad748be584" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__format__arg__store_1a9c6983c46b69775b5066f6ad748be584" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_cap,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_cap_named)<sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>FMT_ASSERT(new_cap<sp/>&gt;=<sp/>new_cap_named,</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>of<sp/>arguments<sp/>includes<sp/>set<sp/>of<sp/>named<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.reserve(new_cap);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>named_info_.reserve(new_cap_named);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Context&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref><sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>size_type<sp/>=<sp/>int;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>format_arg<sp/>=<sp/><ref refid="classbasic__format__arg" kindref="compound">basic_format_arg&lt;Context&gt;</ref>;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>descriptor<sp/>that<sp/>contains<sp/>information<sp/>about<sp/>formatting<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>number<sp/>of<sp/>arguments<sp/>is<sp/>less<sp/>or<sp/>equal<sp/>to<sp/>max_packed_args<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>argument<sp/>types<sp/>are<sp/>passed<sp/>in<sp/>the<sp/>descriptor.<sp/>This<sp/>reduces<sp/>binary<sp/>code<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>per<sp/>formatting<sp/>function<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>desc_;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>is_packed()<sp/>returns<sp/>true<sp/>then<sp/>argument<sp/>values<sp/>are<sp/>stored<sp/>in<sp/>values_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>they<sp/>are<sp/>stored<sp/>in<sp/>args_.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>improve<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>locality<sp/>and<sp/>reduce<sp/>compiled<sp/>code<sp/>size<sp/>since<sp/>storing<sp/>larger<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>require<sp/>more<sp/>code<sp/>(at<sp/>least<sp/>on<sp/>x86-64)<sp/>even<sp/>if<sp/>the<sp/>same<sp/>amount<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>is<sp/>actually<sp/>copied<sp/>to<sp/>stack.<sp/>It<sp/>saves<sp/>~10%<sp/>on<sp/>the<sp/>bloat<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1value" kindref="compound">detail::value&lt;Context&gt;</ref>*<sp/>values_;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>format_arg*<sp/>args_;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_packed()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(desc_<sp/>&amp;<sp/>detail::is_unpacked_bit)<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_named_args()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(desc_<sp/>&amp;<sp/>detail::has_named_args_bit)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>detail::type<sp/>type(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>index<sp/>*<sp/>detail::packed_arg_bits;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>detail::packed_arg_bits)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">detail::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((desc_<sp/>&gt;&gt;<sp/>shift)<sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>desc,</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdetail_1_1value" kindref="compound">detail::value&lt;Context&gt;</ref>*<sp/>values)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>desc_(desc),<sp/>values_(values)<sp/>{}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>desc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>format_arg*<sp/>args)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>desc_(desc),<sp/>args_(args)<sp/>{}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>()<sp/>:<sp/>desc_(0)<sp/>{}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="1725" refid="classbasic__format__args_1a4c7ee837082f0201049cd43e0a3620f7" refkind="member"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classbasic__format__args_1a4c7ee837082f0201049cd43e0a3620f7" kindref="member">basic_format_args</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classformat__arg__store" kindref="compound">format_arg_store&lt;Context, Args...&gt;</ref>&amp;<sp/>store)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>(store.desc,<sp/>store.data_.args())<sp/>{}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734" refid="classbasic__format__args_1a21c22221ad244cd188c21029b79cb9b1" refkind="member"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="classbasic__format__args_1a21c22221ad244cd188c21029b79cb9b1" kindref="member">basic_format_args</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdynamic__format__arg__store" kindref="compound">dynamic_format_arg_store&lt;Context&gt;</ref>&amp;<sp/>store)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>(store.get_types(),<sp/>store.data())<sp/>{}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742" refid="classbasic__format__args_1a6d735ccb56f6c4f64ba1199f223c8a6b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__args_1a6d735ccb56f6c4f64ba1199f223c8a6b" kindref="member">basic_format_args</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbasic__format__arg" kindref="compound">format_arg</ref>*<sp/>args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>(detail::is_unpacked_bit<sp/>|<sp/>detail::to_unsigned(count),</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args)<sp/>{}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747" refid="classbasic__format__args_1a1b8d2230711409b52799cf4b4c3327fe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbasic__format__arg" kindref="compound">format_arg</ref><sp/><ref refid="classbasic__format__args_1a1b8d2230711409b52799cf4b4c3327fe" kindref="member">get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__format__arg" kindref="compound">format_arg</ref><sp/>arg;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_packed())<sp/>{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>max_size())<sp/>arg<sp/>=<sp/>args_[id];</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>detail::max_packed_args)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>arg.type_<sp/>=<sp/>type(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg.type_<sp/>==<sp/>detail::type::none_type)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>arg.value_<sp/>=<sp/>values_[id];</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/>format_arg<sp/><ref refid="classbasic__format__args_1a1b8d2230711409b52799cf4b4c3327fe" kindref="member">get</ref>(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>get_id(name);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>0<sp/>?<sp/><ref refid="classbasic__format__args_1a1b8d2230711409b52799cf4b4c3327fe" kindref="member">get</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>:<sp/>format_arg();</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_id(<ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_named_args())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>named_args<sp/>=</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(is_packed()<sp/>?<sp/>values_[-1]<sp/>:<sp/>args_[-1].value_).named_args;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>named_args.size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(named_args.data[i].name<sp/>==<sp/>name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>named_args.data[i].id;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_packed<sp/>=<sp/>detail::max_packed_args;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(is_packed()<sp/>?<sp/>max_packed</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>desc_<sp/>&amp;<sp/>~detail::is_unpacked_bit);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="comment">//<sp/>It<sp/>is<sp/>a<sp/>separate<sp/>type<sp/>rather<sp/>than<sp/>an<sp/>alias<sp/>to<sp/>make<sp/>symbols<sp/>readable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784" refid="structformat__args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformat__args" kindref="compound">format_args</ref><sp/>:<sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;format_context&gt;<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/>FMT_INLINE<sp/><ref refid="structformat__args" kindref="compound">format_args</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;...<sp/>args)<sp/>:<sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>(args...)<sp/>{}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1788" refid="structwformat__args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwformat__args" kindref="compound">wformat_args</ref><sp/>:<sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;wformat_context&gt;<sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>basic_format_args::basic_format_args;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reports<sp/>a<sp/>compile-time<sp/>error<sp/>if<sp/>S<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>format<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/>FMT_ENABLE_IF(!<ref refid="structis__compile__string" kindref="compound">is_compile_string&lt;S&gt;::value</ref>)&gt;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">FMT_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_format_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;)<sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FMT_ENFORCE_COMPILE_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>static_assert(<ref refid="structis__compile__string" kindref="compound">is_compile_string&lt;S&gt;::value</ref>,</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FMT_ENFORCE_COMPILE_STRING<sp/>requires<sp/>all<sp/>format<sp/>strings<sp/>to<sp/>use<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FMT_STRING.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/>FMT_ENABLE_IF(<ref refid="structis__compile__string" kindref="compound">is_compile_string&lt;S&gt;::value</ref>)&gt;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_format_string(S);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/>char_t&lt;S&gt;&gt;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classformat__arg__store" kindref="compound">format_arg_store&lt;buffer_context&lt;Char&gt;</ref>,<sp/>remove_reference_t&lt;Args&gt;...&gt;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">make_args_checked(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>remove_reference_t&lt;Args&gt;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>static_assert(count&lt;(std::is_base_of&lt;view,<sp/>remove_reference_t&lt;Args&gt;&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_reference&lt;Args&gt;::value)...&gt;()<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;passing<sp/>views<sp/>as<sp/>lvalues<sp/>is<sp/>disallowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>check_format_string&lt;Args...&gt;(format_str);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{args...};</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/>FMT_ENABLE_IF(!std::is_same&lt;Char,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;::value)&gt;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal">std::basic_string&lt;Char&gt;<sp/>vformat(</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref><sp/>format_str,</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;<ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt;type_identity_t&lt;Char&gt;&gt;&gt;<sp/>args);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal">FMT_API<sp/>std::string<sp/>vformat(<ref refid="classbasic__string__view" kindref="compound">string_view</ref><sp/>format_str,<sp/><ref refid="structformat__args" kindref="compound">format_args</ref><sp/>args);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char&gt;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FMT_BUFFER_CONTEXT(Char)::iterator<sp/>vformat_to(</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer&lt;Char&gt;&amp;<sp/>buf,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt;Char&gt;<sp/>format_str,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;FMT_BUFFER_CONTEXT(type_identity_t&lt;Char&gt;)&gt;<sp/>args);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Args,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(!std::is_same&lt;Char,<sp/>char&gt;::value)&gt;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vprint_mojibake(std::FILE*,<sp/><ref refid="classbasic__string__view" kindref="compound">basic_string_view&lt;Char&gt;</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Args&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal">FMT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vprint_mojibake(std::FILE*,<sp/><ref refid="classbasic__string__view" kindref="compound">string_view</ref>,<sp/><ref refid="structformat__args" kindref="compound">format_args</ref>);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vprint_mojibake(std::FILE*,<sp/><ref refid="classbasic__string__view" kindref="compound">string_view</ref>,<sp/><ref refid="structformat__args" kindref="compound">format_args</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="comment">//<sp/>GCC<sp/>8<sp/>and<sp/>earlier<sp/>cannot<sp/>handle<sp/>std::back_insert_iterator&lt;Container&gt;<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vformat_to&lt;ArgFormatter&gt;(...)<sp/>overload,<sp/>so<sp/>SFINAE<sp/>on<sp/>iterator<sp/>type<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputIt,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/>char_t&lt;S&gt;,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(<ref refid="structdetail_1_1is__contiguous__back__insert__iterator" kindref="compound">detail::is_contiguous_back_insert_iterator&lt;OutputIt&gt;::value</ref>)&gt;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal">OutputIt<sp/>vformat_to(</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputIt<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;<ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt;type_identity_t&lt;Char&gt;&gt;&gt;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>c<sp/>=<sp/>detail::get_container(out);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><ref refid="classdetail_1_1container__buffer" kindref="compound">detail::container_buffer</ref>&lt;remove_reference_t&lt;decltype(c)&gt;&gt;<sp/>buf(c);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/>detail::vformat_to(buf,<sp/>to_string_view(format_str),<sp/>args);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FMT_ENABLE_IF(</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structis__contiguous" kindref="compound">is_contiguous&lt;Container&gt;::value</ref>&amp;&amp;<sp/><ref refid="structdetail_1_1is__string" kindref="compound">detail::is_string&lt;S&gt;::value</ref>)&gt;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::back_insert_iterator&lt;Container&gt;<sp/>format_to(</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/>std::back_insert_iterator&lt;Container&gt;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vformat_to(out,<sp/>to_string_view(format_str),</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::make_args_checked&lt;Args...&gt;(format_str,<sp/>args...));</highlight></codeline>
<codeline lineno="1862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">_t&lt;S&gt;&gt;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">FMT_INLINE<sp/>std::basic_string&lt;Char&gt;<sp/>vformat(</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbasic__format__args" kindref="compound">basic_format_args</ref>&lt;<ref refid="classbasic__format__context" kindref="compound">buffer_context</ref>&lt;type_identity_t&lt;Char&gt;&gt;&gt;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::vformat(to_string_view(format_str),<sp/>args);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="comment">//<sp/>Pass<sp/>char_t<sp/>as<sp/>a<sp/>default<sp/>template<sp/>parameter<sp/>instead<sp/>of<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>std::basic_string&lt;char_t&lt;S&gt;&gt;<sp/>to<sp/>reduce<sp/>the<sp/>symbol<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/>char_t&lt;S&gt;&gt;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">FMT_INLINE<sp/>std::basic_string&lt;Char&gt;<sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vargs<sp/>=<sp/>detail::make_args_checked&lt;Args...&gt;(format_str,<sp/>args...);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::vformat(to_string_view(format_str),<sp/>vargs);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal">FMT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vprint(<ref refid="classbasic__string__view" kindref="compound">string_view</ref>,<sp/><ref refid="structformat__args" kindref="compound">format_args</ref>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal">FMT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vprint(std::FILE*,<sp/><ref refid="classbasic__string__view" kindref="compound">string_view</ref>,<sp/><ref refid="structformat__args" kindref="compound">format_args</ref>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/>char_t&lt;S&gt;&gt;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(std::FILE*<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vargs<sp/>=<sp/>detail::make_args_checked&lt;Args...&gt;(format_str,<sp/>args...);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::is_unicode&lt;Char&gt;()</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>vprint(f,<sp/>to_string_view(format_str),<sp/>vargs)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::vprint_mojibake(f,<sp/>to_string_view(format_str),<sp/>vargs);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Char<sp/>=<sp/>char_t&lt;S&gt;&gt;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>format_str,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vargs<sp/>=<sp/>detail::make_args_checked&lt;Args...&gt;(format_str,<sp/>args...);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::is_unicode&lt;Char&gt;()</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>vprint(to_string_view(format_str),<sp/>vargs)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::vprint_mojibake(stdout,<sp/>to_string_view(format_str),</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vargs);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">FMT_END_NAMESPACE</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FMT_CORE_H_</highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/srslog/bundled/fmt/core.h"/>
  </compounddef>
</doxygen>
