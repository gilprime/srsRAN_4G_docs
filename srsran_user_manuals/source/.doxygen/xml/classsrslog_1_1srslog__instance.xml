<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1srslog__instance" kind="class" language="C++" prot="public">
    <compoundname>srslog::srslog_instance</compoundname>
    <includes refid="srslog__instance_8h" local="no">srslog_instance.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrslog_1_1srslog__instance_1afe6194d54ada9885267db3197f72fdd8" prot="public" static="no">
        <type><ref refid="classsrslog_1_1object__repository" kindref="compound">object_repository</ref>&lt; std::string, <ref refid="classsrslog_1_1detail_1_1any" kindref="compound">detail::any</ref> &gt;</type>
        <definition>using srslog::srslog_instance::logger_repo_type =  object_repository&lt;std::string, detail::any&gt;</definition>
        <argsstring></argsstring>
        <name>logger_repo_type</name>
        <briefdescription>
<para>Logger repository accessor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="58" column="3" bodyfile="lib/srslog/srslog_instance.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrslog_1_1srslog__instance_1a846e2bd5a06930572ea866ac6d793845" prot="public" static="no">
        <type><ref refid="classsrslog_1_1object__repository" kindref="compound">object_repository</ref>&lt; std::string, <ref refid="classsrslog_1_1log__channel" kindref="compound">log_channel</ref> &gt;</type>
        <definition>using srslog::srslog_instance::channel_repo_type =  object_repository&lt;std::string, log_channel&gt;</definition>
        <argsstring></argsstring>
        <name>channel_repo_type</name>
        <briefdescription>
<para>Log channel repository accessor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="63" column="3" bodyfile="lib/srslog/srslog_instance.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrslog_1_1srslog__instance_1a013dfa3c975a8ad6e36a0d0bd806cce6" prot="public" static="no">
        <type><ref refid="classsrslog_1_1object__repository" kindref="compound">object_repository</ref>&lt; std::string, std::unique_ptr&lt; <ref refid="classsrslog_1_1sink" kindref="compound">sink</ref> &gt; &gt;</type>
        <definition>using srslog::srslog_instance::sink_repo_type =  object_repository&lt;std::string, std::unique_ptr&lt;sink&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>sink_repo_type</name>
        <briefdescription>
<para>Sink repository accessor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="68" column="3" bodyfile="lib/srslog/srslog_instance.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1add925faf5c103ef1b7ebc42c6d4a2c6a" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1srslog__instance_1a013dfa3c975a8ad6e36a0d0bd806cce6" kindref="member">sink_repo_type</ref></type>
        <definition>sink_repo_type srslog::srslog_instance::sink_repo</definition>
        <argsstring></argsstring>
        <name>sink_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NOTE: The order of declaration of each member is important here for proper destruction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="102" column="34" bodyfile="lib/srslog/srslog_instance.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1a9f76b72d1990647070f9a6878b82f4af" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1log__backend__impl" kindref="compound">log_backend_impl</ref></type>
        <definition>log_backend_impl srslog::srslog_instance::backend</definition>
        <argsstring></argsstring>
        <name>backend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="103" column="34" bodyfile="lib/srslog/srslog_instance.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1a54c6f20dd83401fee5ccdf81ef07426d" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1srslog__instance_1a846e2bd5a06930572ea866ac6d793845" kindref="member">channel_repo_type</ref></type>
        <definition>channel_repo_type srslog::srslog_instance::channel_repo</definition>
        <argsstring></argsstring>
        <name>channel_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="104" column="34" bodyfile="lib/srslog/srslog_instance.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1af1d1e45cdd5dc01ad892296e3f454ba0" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1srslog__instance_1afe6194d54ada9885267db3197f72fdd8" kindref="member">logger_repo_type</ref></type>
        <definition>logger_repo_type srslog::srslog_instance::logger_repo</definition>
        <argsstring></argsstring>
        <name>logger_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="105" column="34" bodyfile="lib/srslog/srslog_instance.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1a21a332e721c24611391d512bc4405642" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1detail_1_1shared__variable" kindref="compound">detail::shared_variable</ref>&lt; <ref refid="classsrslog_1_1sink" kindref="compound">sink</ref> * &gt;</type>
        <definition>detail::shared_variable&lt;sink*&gt; srslog::srslog_instance::default_sink</definition>
        <argsstring></argsstring>
        <name>default_sink</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="106" column="27" bodyfile="lib/srslog/srslog_instance.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1ad74f53b9cdfd8e30a5ca353f2985749b" prot="private" static="no" mutable="yes">
        <type><ref refid="classsrslog_1_1detail_1_1mutex" kindref="compound">detail::mutex</ref></type>
        <definition>detail::mutex srslog::srslog_instance::formatter_mutex</definition>
        <argsstring></argsstring>
        <name>formatter_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="107" column="34" bodyfile="lib/srslog/srslog_instance.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1srslog__instance_1a67c6aaeb76846a37f573862451eb12c2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">log_formatter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;log_formatter&gt; srslog::srslog_instance::default_formatter</definition>
        <argsstring></argsstring>
        <name>default_formatter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="108" column="19" bodyfile="lib/srslog/srslog_instance.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a93e9a0b3410eb2bb81ac4373948c708b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::srslog_instance::srslog_instance</definition>
        <argsstring>()</argsstring>
        <name>srslog_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="24" column="3" bodyfile="lib/srslog/srslog_instance.h" bodystart="24" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1ae6d3dd315d6873f23c12758027bd9c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::srslog_instance::srslog_instance</definition>
        <argsstring>(const srslog_instance &amp;other)=delete</argsstring>
        <name>srslog_instance</name>
        <param>
          <type>const <ref refid="classsrslog_1_1srslog__instance" kindref="compound">srslog_instance</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="47" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a043eb7afa9f2a4b7035344984d35f172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrslog_1_1srslog__instance" kindref="compound">srslog_instance</ref> &amp;</type>
        <definition>srslog_instance&amp; srslog::srslog_instance::operator=</definition>
        <argsstring>(const srslog_instance &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrslog_1_1srslog__instance" kindref="compound">srslog_instance</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="48" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1abf9dc4d914e2f2d8f1d8707c90fa553f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1srslog__instance_1afe6194d54ada9885267db3197f72fdd8" kindref="member">logger_repo_type</ref> &amp;</type>
        <definition>logger_repo_type&amp; srslog::srslog_instance::get_logger_repo</definition>
        <argsstring>()</argsstring>
        <name>get_logger_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="59" column="26" bodyfile="lib/srslog/srslog_instance.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a2c78b3e69e0090f52fe05190e86097f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classsrslog_1_1srslog__instance_1afe6194d54ada9885267db3197f72fdd8" kindref="member">logger_repo_type</ref> &amp;</type>
        <definition>const logger_repo_type&amp; srslog::srslog_instance::get_logger_repo</definition>
        <argsstring>() const</argsstring>
        <name>get_logger_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="60" column="26" bodyfile="lib/srslog/srslog_instance.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1aa491f6eafdc2b7b0df6ad50c9ce183c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1srslog__instance_1a846e2bd5a06930572ea866ac6d793845" kindref="member">channel_repo_type</ref> &amp;</type>
        <definition>channel_repo_type&amp; srslog::srslog_instance::get_channel_repo</definition>
        <argsstring>()</argsstring>
        <name>get_channel_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="64" column="27" bodyfile="lib/srslog/srslog_instance.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1aff364d5e355fd1914d103b0610c96ca5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classsrslog_1_1srslog__instance_1a846e2bd5a06930572ea866ac6d793845" kindref="member">channel_repo_type</ref> &amp;</type>
        <definition>const channel_repo_type&amp; srslog::srslog_instance::get_channel_repo</definition>
        <argsstring>() const</argsstring>
        <name>get_channel_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="65" column="27" bodyfile="lib/srslog/srslog_instance.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a03aca44c40f4fb8d362a0265d15b39d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1srslog__instance_1a013dfa3c975a8ad6e36a0d0bd806cce6" kindref="member">sink_repo_type</ref> &amp;</type>
        <definition>sink_repo_type&amp; srslog::srslog_instance::get_sink_repo</definition>
        <argsstring>()</argsstring>
        <name>get_sink_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="69" column="24" bodyfile="lib/srslog/srslog_instance.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a32f18b22019d0709dd4a65d95cf0e161" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classsrslog_1_1srslog__instance_1a013dfa3c975a8ad6e36a0d0bd806cce6" kindref="member">sink_repo_type</ref> &amp;</type>
        <definition>const sink_repo_type&amp; srslog::srslog_instance::get_sink_repo</definition>
        <argsstring>() const</argsstring>
        <name>get_sink_repo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="70" column="24" bodyfile="lib/srslog/srslog_instance.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a9089a6931338ed4d402518b888ab1e39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1log__backend" kindref="compound">detail::log_backend</ref> &amp;</type>
        <definition>detail::log_backend&amp; srslog::srslog_instance::get_backend</definition>
        <argsstring>()</argsstring>
        <name>get_backend</name>
        <briefdescription>
<para>Backend accessor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="73" column="29" bodyfile="lib/srslog/srslog_instance.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a7e919c292984e7a4a2f4ed6bdb6ba9f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classsrslog_1_1detail_1_1log__backend" kindref="compound">detail::log_backend</ref> &amp;</type>
        <definition>const detail::log_backend&amp; srslog::srslog_instance::get_backend</definition>
        <argsstring>() const</argsstring>
        <name>get_backend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="74" column="29" bodyfile="lib/srslog/srslog_instance.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1aa82dd9ebd8a40c7ba868a6f6d138efd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::srslog_instance::set_error_handler</definition>
        <argsstring>(error_handler callback)</argsstring>
        <name>set_error_handler</name>
        <param>
          <type>error_handler</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Installs the specified error handler into the backend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="77" column="8" bodyfile="lib/srslog/srslog_instance.h" bodystart="77" bodyend="77"/>
        <references refid="classsrslog_1_1log__backend__impl_1a058aa2eed8e099cecaf944d4e5ea8f61" compoundref="log__backend__impl_8h" startline="46" endline="46">srslog::log_backend_impl::set_error_handler</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a3a38c15d68e7121787425ec998ee3ee7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::srslog_instance::set_default_sink</definition>
        <argsstring>(sink &amp;s)</argsstring>
        <name>set_default_sink</name>
        <param>
          <type><ref refid="classsrslog_1_1sink" kindref="compound">sink</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Set the specified sink as the default one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="80" column="8" bodyfile="lib/srslog/srslog_instance.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1afdfd819dfe8f784cf6e3b6a4a953f5fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1sink" kindref="compound">sink</ref> &amp;</type>
        <definition>sink&amp; srslog::srslog_instance::get_default_sink</definition>
        <argsstring>() const</argsstring>
        <name>get_default_sink</name>
        <briefdescription>
<para>Returns the default sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="83" column="8" bodyfile="lib/srslog/srslog_instance.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1ab6742b8508816486a54e11a8714af99c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srslog::srslog_instance::set_default_formatter</definition>
        <argsstring>(std::unique_ptr&lt; log_formatter &gt; f)</argsstring>
        <name>set_default_formatter</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">log_formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Set the specified formatter as the default one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="86" column="8" bodyfile="lib/srslog/srslog_instance.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1a4aa111453d514ff9752513ac2a2b52cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">log_formatter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;log_formatter&gt; srslog::srslog_instance::get_default_formatter</definition>
        <argsstring>() const</argsstring>
        <name>get_default_formatter</name>
        <briefdescription>
<para>Returns the default formatter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="93" column="19" bodyfile="lib/srslog/srslog_instance.h" bodystart="93" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrslog_1_1srslog__instance_1adedc20b552bfedd56cfa321904a456ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1srslog__instance" kindref="compound">srslog_instance</ref> &amp;</type>
        <definition>static srslog_instance&amp; srslog::srslog_instance::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Access function to the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/srslog_instance.h" line="51" column="26" bodyfile="lib/srslog/srslog_instance.h" bodystart="51" bodyend="55"/>
        <referencedby refid="namespacesrslog_1_1detail_1aeec69f2c96c9de1d95b7b7e372c2f887" compoundref="srslog_8cpp" startline="254" endline="257">srslog::detail::find_logger</referencedby>
        <referencedby refid="namespacesrslog_1_1detail_1a43a9fb2fb67b1769690f11c4f82c7b4e" compoundref="srslog_8cpp" startline="259" endline="263">srslog::detail::fetch_logger</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Singleton of the framework containing all the required classes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>srslog::object_repository&lt; std::string, log_channel &gt;</label>
        <link refid="classsrslog_1_1object__repository"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>srslog::detail::log_backend</label>
        <link refid="classsrslog_1_1detail_1_1log__backend"/>
      </node>
      <node id="6">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="13">
        <label>srslog::detail::shared_variable&lt; bool &gt;</label>
        <link refid="classsrslog_1_1detail_1_1shared__variable"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>srslog::log_backend_impl</label>
        <link refid="classsrslog_1_1log__backend__impl"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-worker</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-arg_pool</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>srsgnb::dyn_circular_buffer&lt; srslog::detail::log_entry &gt;</label>
        <link refid="classsrsgnb_1_1dyn__circular__buffer"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>srslog::object_repository&lt; std::string, detail::any &gt;</label>
        <link refid="classsrslog_1_1object__repository"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>srslog::object_repository&lt; std::string, std::unique_ptr&lt; sink &gt; &gt;</label>
        <link refid="classsrslog_1_1object__repository"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>detail::buffer&lt; char &gt;</label>
        <link refid="classdetail_1_1buffer"/>
      </node>
      <node id="12">
        <label>srslog::backend_worker</label>
        <link refid="classsrslog_1_1backend__worker"/>
        <childnode refid="13" relation="usage">
          <edgelabel>-running_flag</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-fmt_buffer</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-arg_pool</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>basic_memory_buffer&lt; char &gt;</label>
        <link refid="classbasic__memory__buffer"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>srslog::detail::work_queue&lt; srslog::detail::log_entry &gt;</label>
        <link refid="classsrslog_1_1detail_1_1work__queue"/>
        <childnode refid="10" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srslog::detail::mutex</label>
        <link refid="classsrslog_1_1detail_1_1mutex"/>
      </node>
      <node id="1">
        <label>srslog::srslog_instance</label>
        <link refid="classsrslog_1_1srslog__instance"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-channel_repo</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-logger_repo</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-default_sink</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>-backend</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>-sink_repo</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-formatter_mutex</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>srslog::detail::shared_variable&lt; srslog::sink * &gt;</label>
        <link refid="classsrslog_1_1detail_1_1shared__variable"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>-value</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>srslog::detail::dyn_arg_store_pool</label>
        <link refid="classsrslog_1_1detail_1_1dyn__arg__store__pool"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>srsgnb::detail::base_circular_buffer&lt; std::vector&lt; detail::type_storage&lt; srslog::detail::log_entry &gt; &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__circular__buffer"/>
      </node>
    </collaborationgraph>
    <location file="lib/srslog/srslog_instance.h" line="23" column="1" bodyfile="lib/srslog/srslog_instance.h" bodystart="22" bodyend="109"/>
    <listofallmembers>
      <member refid="classsrslog_1_1srslog__instance_1a9f76b72d1990647070f9a6878b82f4af" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>backend</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a54c6f20dd83401fee5ccdf81ef07426d" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>channel_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a846e2bd5a06930572ea866ac6d793845" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>channel_repo_type</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a67c6aaeb76846a37f573862451eb12c2" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>default_formatter</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a21a332e721c24611391d512bc4405642" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>default_sink</name></member>
      <member refid="classsrslog_1_1srslog__instance_1ad74f53b9cdfd8e30a5ca353f2985749b" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>formatter_mutex</name></member>
      <member refid="classsrslog_1_1srslog__instance_1adedc20b552bfedd56cfa321904a456ee" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a9089a6931338ed4d402518b888ab1e39" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_backend</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a7e919c292984e7a4a2f4ed6bdb6ba9f5" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_backend</name></member>
      <member refid="classsrslog_1_1srslog__instance_1aa491f6eafdc2b7b0df6ad50c9ce183c1" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_channel_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1aff364d5e355fd1914d103b0610c96ca5" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_channel_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a4aa111453d514ff9752513ac2a2b52cf" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_default_formatter</name></member>
      <member refid="classsrslog_1_1srslog__instance_1afdfd819dfe8f784cf6e3b6a4a953f5fe" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_default_sink</name></member>
      <member refid="classsrslog_1_1srslog__instance_1abf9dc4d914e2f2d8f1d8707c90fa553f" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_logger_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a2c78b3e69e0090f52fe05190e86097f1" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_logger_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a03aca44c40f4fb8d362a0265d15b39d8" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_sink_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a32f18b22019d0709dd4a65d95cf0e161" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>get_sink_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1af1d1e45cdd5dc01ad892296e3f454ba0" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>logger_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1afe6194d54ada9885267db3197f72fdd8" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>logger_repo_type</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a043eb7afa9f2a4b7035344984d35f172" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>operator=</name></member>
      <member refid="classsrslog_1_1srslog__instance_1ab6742b8508816486a54e11a8714af99c" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>set_default_formatter</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a3a38c15d68e7121787425ec998ee3ee7" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>set_default_sink</name></member>
      <member refid="classsrslog_1_1srslog__instance_1aa82dd9ebd8a40c7ba868a6f6d138efd1" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>set_error_handler</name></member>
      <member refid="classsrslog_1_1srslog__instance_1add925faf5c103ef1b7ebc42c6d4a2c6a" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>sink_repo</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a013dfa3c975a8ad6e36a0d0bd806cce6" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>sink_repo_type</name></member>
      <member refid="classsrslog_1_1srslog__instance_1a93e9a0b3410eb2bb81ac4373948c708b" prot="private" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>srslog_instance</name></member>
      <member refid="classsrslog_1_1srslog__instance_1ae6d3dd315d6873f23c12758027bd9c77" prot="public" virt="non-virtual"><scope>srslog::srslog_instance</scope><name>srslog_instance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
