<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="event__trace_8cpp" kind="file" language="C++">
    <compoundname>event_trace.cpp</compoundname>
    <includes refid="event__trace_8h" local="yes">srsgnb/srslog/event_trace.h</includes>
    <includes refid="buffered__file__sink_8h" local="yes">sinks/buffered_file_sink.h</includes>
    <includes refid="srslog_8h" local="yes">srsgnb/srslog/srslog.h</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="42">
        <label>atomic</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="20">
        <label>iterator</label>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sinks/buffered_file_sink.h</label>
        <link refid="buffered__file__sink_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="31">
        <label>cassert</label>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="23">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>pthread.h</label>
      </node>
      <node id="2">
        <label>srsgnb/srslog/event_trace.h</label>
        <link refid="event__trace_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstdio</label>
      </node>
      <node id="30">
        <label>tuple</label>
      </node>
      <node id="43">
        <label>ctime</label>
      </node>
      <node id="35">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="40">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="28">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cerrno</label>
      </node>
      <node id="29">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>file_utils.h</label>
        <link refid="file__utils_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>chrono</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/srslog/event_trace.cpp</label>
        <link refid="event__trace_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesrslog">srslog</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="event__trace_8cpp_1a4f73de1e4c4823dda33c14c06a2bb495" prot="public" static="yes" mutable="no">
        <type><ref refid="classsrslog_1_1log__channel" kindref="compound">log_channel</ref> *</type>
        <definition>log_channel* tracer</definition>
        <argsstring></argsstring>
        <name>tracer</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Log channel where event traces will get sent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/event_trace.cpp" line="23" column="20" bodyfile="lib/srslog/event_trace.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="event__trace_8cpp_1a20b00d37a1fb2ed4dccdec650ab4405f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr char</type>
        <definition>constexpr char sink_name[]</definition>
        <argsstring>[]</argsstring>
        <name>sink_name</name>
        <initializer>= &quot;srslog_trace_sink&quot;</initializer>
        <briefdescription>
<para>Tracer sink name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/event_trace.cpp" line="26" column="23" bodyfile="lib/srslog/event_trace.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="event__trace_8cpp_1aa78cd03fe3e34d4457e537e1e510a03f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void format_time</definition>
        <argsstring>(char *buffer, size_t len)</argsstring>
        <name>format_time</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Fills in the input buffer with the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/event_trace.cpp" line="78" column="13" bodyfile="lib/srslog/event_trace.cpp" bodystart="78" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/event_trace.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sinks/buffered_file_sink.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/srslog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>trace_duration_begin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>trace_duration_end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>trace_complete_event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">srslog;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1log__channel" kindref="compound">log_channel</ref>*<sp/>tracer<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sink_name[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;srslog_trace_sink&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>srslog::event_trace_init()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do<sp/>if<sp/>the<sp/>user<sp/>previously<sp/>set<sp/>a<sp/>custom<sp/>channel<sp/>or<sp/>this<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>time<sp/>this<sp/>function<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tracer)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>file<sp/>name<sp/>where<sp/>event<sp/>traces<sp/>will<sp/>get<sp/>stored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>default_file_name[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;event_trace.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>default<sp/>event<sp/>trace<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//:<sp/>TODO:<sp/>handle<sp/>name<sp/>reservation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1sink" kindref="compound">sink</ref>*<sp/>s<sp/>=<sp/>create_file_sink(default_file_name);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>assert(s<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>event<sp/>file<sp/>sink<sp/>is<sp/>reserved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>tracer<sp/>=<sp/>create_log_channel(</highlight><highlight class="stringliteral">&quot;event_trace_channel&quot;</highlight><highlight class="normal">,<sp/>*s);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>assert(tracer<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>event<sp/>trace<sp/>channel<sp/>is<sp/>reserved&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>srslog::event_trace_init(<ref refid="classsrslog_1_1log__channel" kindref="compound">log_channel</ref>&amp;<sp/>c)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>set<sp/>when<sp/>a<sp/>channel<sp/>has<sp/>already<sp/>been<sp/>installed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracer)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>tracer<sp/>=<sp/>&amp;c;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>srslog::event_trace_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,<sp/>std::size_t<sp/>capacity)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do<sp/>if<sp/>the<sp/>user<sp/>previously<sp/>set<sp/>a<sp/>custom<sp/>channel<sp/>or<sp/>this<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>time<sp/>this<sp/>function<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tracer)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracer_sink<sp/>=<sp/>std::unique_ptr&lt;sink&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>(filename,<sp/>capacity,<sp/>get_default_log_formatter()));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!install_custom_sink(sink_name,<sp/>std::move(tracer_sink)))<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrslog_1_1sink" kindref="compound">sink</ref>*<sp/>s<sp/>=<sp/>find_sink(sink_name))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrslog_1_1log__channel" kindref="compound">log_channel</ref>&amp;<sp/>c<sp/>=<sp/>fetch_log_channel(</highlight><highlight class="stringliteral">&quot;event_trace_channel&quot;</highlight><highlight class="normal">,<sp/>*s,<sp/>{</highlight><highlight class="stringliteral">&quot;TRACE&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tracer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;c;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>format_time(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::time_t<sp/>t<sp/>=<sp/>std::time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::tm<sp/><sp/><sp/><sp/><sp/>lt{};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>::localtime_r(&amp;t,<sp/>&amp;lt);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>std::strftime(buffer,<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%FT%T&quot;</highlight><highlight class="normal">,<sp/>&amp;lt);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">srslog<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trace_duration_begin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>category,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracer)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fmt_time[24];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>format_time(fmt_time,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fmt_time));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>(*tracer)(</highlight><highlight class="stringliteral">&quot;[{}]<sp/>[TID:{}]<sp/>Entering<sp/>\&quot;{}\&quot;:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>fmt_time,<sp/>(unsigned)::pthread_self(),<sp/>category,<sp/>name);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trace_duration_end(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>category,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracer)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fmt_time[24];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>format_time(fmt_time,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fmt_time));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>(*tracer)(</highlight><highlight class="stringliteral">&quot;[{}]<sp/>[TID:{}]<sp/>Leaving<sp/>\&quot;{}\&quot;:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>fmt_time,<sp/>(unsigned)::pthread_self(),<sp/>category,<sp/>name);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srslog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classsrslog_1_1detail_1_1scoped__complete__event_1a8f54e931efeafc794bb69c460ce785d7" refkind="member"><highlight class="normal"><ref refid="classsrslog_1_1detail_1_1scoped__complete__event_1a8f54e931efeafc794bb69c460ce785d7" kindref="member">srslog::detail::scoped_complete_event::~scoped_complete_event</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tracer)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/><sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>(*tracer)(</highlight><highlight class="stringliteral">&quot;{}<sp/>{},<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>category,<sp/>name,<sp/>(unsigned)diff.count());</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/srslog/event_trace.cpp"/>
  </compounddef>
</doxygen>
