<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="unique__thread_8h" kind="file" language="C++">
    <compoundname>unique_thread.h</compoundname>
    <includes refid="bounded__bitset_8h" local="yes">srsgnb/adt/bounded_bitset.h</includes>
    <includes refid="unique__function_8h" local="yes">srsgnb/adt/unique_function.h</includes>
    <includes local="no">string</includes>
    <includes local="no">thread</includes>
    <includedby refid="task__worker_8h" local="yes">include/srsgnb/support/executors/task_worker.h</includedby>
    <includedby refid="unique__thread_8cpp" local="yes">lib/support/unique_thread.cpp</includedby>
    <incdepgraph>
      <node id="46">
        <label>srsgnb/adt/unique_function.h</label>
        <link refid="unique__function_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>atomic</label>
      </node>
      <node id="2">
        <label>srsgnb/adt/bounded_bitset.h</label>
        <link refid="bounded__bitset_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>include/srsgnb/support/unique_thread.h</label>
        <link refid="unique__thread_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>srsgnb/support/error_handling.h</label>
        <link refid="error__handling_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="43">
        <label>cassert</label>
      </node>
      <node id="47">
        <label>srsgnb/adt/detail/type_storage.h</label>
        <link refid="type__storage_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="23">
        <label>srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>srsgnb/support/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>pthread.h</label>
      </node>
      <node id="21">
        <label>srsgnb/adt/complex.h</label>
        <link refid="complex_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstdio</label>
      </node>
      <node id="42">
        <label>tuple</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="48">
        <label>utility</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>array</label>
      </node>
      <node id="40">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cerrno</label>
      </node>
      <node id="50">
        <label>cstdlib</label>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="32">
        <label>chrono</label>
      </node>
      <node id="28">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>thread</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="22">
        <label>complex</label>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="45">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>lib/du_high/du_high.h</label>
        <link refid="du__high_8h_source"/>
      </node>
      <node id="1">
        <label>include/srsgnb/support/unique_thread.h</label>
        <link refid="unique__thread_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/srsgnb/support/executors/task_worker.h</label>
        <link refid="task__worker_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/cu_cp/cu_cp.h</label>
        <link refid="lib_2cu__cp_2cu__cp_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsrsgnb_1_1os__sched__affinity__bitmask" prot="public">srsgnb::os_sched_affinity_bitmask</innerclass>
    <innerclass refid="classsrsgnb_1_1unique__thread" prot="public">srsgnb::unique_thread</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/bounded_bitset.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/unique_function.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a2ef51b95cf97382d36e5393fcb30edc3" kindref="member">compute_host_nof_hardware_threads</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacesrsgnb_1a6e493313fc102cb1b0efb1ed96f073cb" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a6e493313fc102cb1b0efb1ed96f073cb" kindref="member">os_thread_realtime_priority</ref><sp/>:<sp/>int<sp/>{<sp/>NO_REALTIME<sp/>=<sp/>0,<sp/>MIN_PRIO<sp/>=<sp/>1,<sp/>MAX_PRIO<sp/>=<sp/>32<sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structsrsgnb_1_1os__sched__affinity__bitmask" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1os__sched__affinity__bitmask" kindref="compound">os_sched_affinity_bitmask</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1os__sched__affinity__bitmask" kindref="compound">os_sched_affinity_bitmask</ref>()<sp/>:<sp/>cpu_bitset(<ref refid="namespacesrsgnb_1a2ef51b95cf97382d36e5393fcb30edc3" kindref="member">compute_host_nof_hardware_threads</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpu_bitset.<ref refid="classsrsgnb_1_1bounded__bitset_1a5fc3c696fe29cd4275460b7ebdfb7ce4" kindref="member">size</ref>();<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cpu_idx)<sp/>{<sp/>cpu_bitset.<ref refid="classsrsgnb_1_1bounded__bitset_1af2620345786af61e5ed75adadf1e6156" kindref="member">set</ref>(cpu_idx);<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cpu_idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpu_bitset.<ref refid="classsrsgnb_1_1bounded__bitset_1aec33b2aa0ad1fe21801ba05f9fcc61d9" kindref="member">test</ref>(cpu_idx);<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpu_bitset.<ref refid="classsrsgnb_1_1bounded__bitset_1a9213f1b2bdbdd6f211245e06ebe94099" kindref="member">any</ref>();<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>uint64_t<sp/>to_uint64()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpu_bitset.<ref refid="classsrsgnb_1_1bounded__bitset_1a6fee80b0e9a17208ca9de4a0869c535b" kindref="member">to_uint64</ref>();<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1bounded__bitset" kindref="compound">bounded_bitset&lt;1024&gt;</ref><sp/>cpu_bitset;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classsrsgnb_1_1unique__thread" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1unique__thread" kindref="compound">unique_thread</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;</highlight></codeline>
<codeline lineno="56" refid="classsrsgnb_1_1unique__thread_1a2e7b9eb25106db99a56966e1fad19ed7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a2e7b9eb25106db99a56966e1fad19ed7" kindref="member">unique_thread</ref>(std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a6e493313fc102cb1b0efb1ed96f073cb" kindref="member">os_thread_realtime_priority</ref><sp/><sp/><sp/><sp/><sp/><sp/>prio,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1os__sched__affinity__bitmask" kindref="compound">os_sched_affinity_bitmask</ref>&amp;<sp/>cpu_mask,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Callable&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c)<sp/>:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>(std::move(name_)),<sp/>thread_handle(<ref refid="classsrsgnb_1_1unique__thread_1a131c59f8644cfa4841e1a41e33933414" kindref="member">make_thread</ref>(<ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>,<sp/>std::forward&lt;Callable&gt;(c),<sp/>prio,<sp/>cpu_mask))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;</highlight></codeline>
<codeline lineno="65" refid="classsrsgnb_1_1unique__thread_1a1cbfd3ccadaf5849a6560865d4e89a5a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a1cbfd3ccadaf5849a6560865d4e89a5a" kindref="member">unique_thread</ref>(std::string<sp/>name_,<sp/><ref refid="namespacesrsgnb_1a6e493313fc102cb1b0efb1ed96f073cb" kindref="member">os_thread_realtime_priority</ref><sp/>prio,<sp/>Callable&amp;&amp;<sp/>c)<sp/>:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>(std::move(name_)),<sp/>thread_handle(<ref refid="classsrsgnb_1_1unique__thread_1a131c59f8644cfa4841e1a41e33933414" kindref="member">make_thread</ref>(<ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>,<sp/>std::forward&lt;Callable&gt;(c),<sp/>prio))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;</highlight></codeline>
<codeline lineno="71" refid="classsrsgnb_1_1unique__thread_1a95d69ef18a5471c2e3d6b89f645e7dd8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a95d69ef18a5471c2e3d6b89f645e7dd8" kindref="member">unique_thread</ref>(std::string<sp/>name_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1os__sched__affinity__bitmask" kindref="compound">os_sched_affinity_bitmask</ref>&amp;<sp/>cpu_mask,<sp/>Callable&amp;&amp;<sp/>c)<sp/>:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>(std::move(name_)),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>thread_handle(<ref refid="classsrsgnb_1_1unique__thread_1a131c59f8644cfa4841e1a41e33933414" kindref="member">make_thread</ref>(<ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>,<sp/>std::forward&lt;Callable&gt;(c),<sp/><ref refid="namespacesrsgnb_1a6e493313fc102cb1b0efb1ed96f073cb" kindref="member">os_thread_realtime_priority</ref>::NO_REALTIME,<sp/>cpu_mask))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Callable&gt;</highlight></codeline>
<codeline lineno="78" refid="classsrsgnb_1_1unique__thread_1ae085a585bacdf712d71e625ef8817029" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1ae085a585bacdf712d71e625ef8817029" kindref="member">unique_thread</ref>(std::string<sp/>name_,<sp/>Callable&amp;&amp;<sp/>c)<sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>(std::move(name_)),<sp/>thread_handle(<ref refid="classsrsgnb_1_1unique__thread_1a131c59f8644cfa4841e1a41e33933414" kindref="member">make_thread</ref>(<ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>,<sp/>std::forward&lt;Callable&gt;(c)))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1unique__thread" kindref="compound">unique_thread</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>(<ref refid="classsrsgnb_1_1unique__thread" kindref="compound">unique_thread</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>~<ref refid="classsrsgnb_1_1unique__thread" kindref="compound">unique_thread</ref>()<sp/>{<sp/><ref refid="classsrsgnb_1_1unique__thread_1a346e79fe23d942683fbb6af0bfcb86f8" kindref="member">join</ref>();<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>&amp;<sp/>operator=(<ref refid="classsrsgnb_1_1unique__thread_1ab8d0c2f4bf5ce901ffba3d8562f38743" kindref="member">unique_thread</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classsrsgnb_1_1unique__thread_1a346e79fe23d942683fbb6af0bfcb86f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1unique__thread_1a346e79fe23d942683fbb6af0bfcb86f8" kindref="member">join</ref>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(thread_handle.joinable())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thread_handle.join();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classsrsgnb_1_1unique__thread_1a8b868c3a0a4d3867d41f54a66558e42e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classsrsgnb_1_1unique__thread_1a8b868c3a0a4d3867d41f54a66558e42e" kindref="member">get_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>.c_str();<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classsrsgnb_1_1unique__thread_1a94619cc5d677b8ba5410b8dc672fb39f" refkind="member"><highlight class="normal"><sp/><sp/>std::thread::id<sp/><ref refid="classsrsgnb_1_1unique__thread_1a94619cc5d677b8ba5410b8dc672fb39f" kindref="member">get_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thread_handle.get_id();<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classsrsgnb_1_1unique__thread_1a1da2455f286cfbd84b6cd1b46ded46e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1unique__thread_1a1da2455f286cfbd84b6cd1b46ded46e4" kindref="member">running</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thread_handle.joinable();<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1unique__thread_1aace816d08454c88bf02f69cee113186a" kindref="member">print_priority</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::thread<sp/><ref refid="classsrsgnb_1_1unique__thread_1a131c59f8644cfa4841e1a41e33933414" kindref="member">make_thread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1unique__function" kindref="compound">unique_function</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">()&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callable,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a6e493313fc102cb1b0efb1ed96f073cb" kindref="member">os_thread_realtime_priority</ref><sp/><sp/><sp/><sp/><sp/><sp/>prio<sp/><sp/><sp/><sp/><sp/>=<sp/>os_thread_realtime_priority::NO_REALTIME,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1os__sched__affinity__bitmask" kindref="compound">os_sched_affinity_bitmask</ref>&amp;<sp/>cpu_mask<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classsrsgnb_1_1unique__thread_1a3bdd5fe1dba3b6d5200eb0e7a3a4f1ee" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>std::thread<sp/>thread_handle;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacesrsgnb_1ad719858c021f7e21a1a7aef0b9fa955b" kindref="member">this_thread_name</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1ac5b61eb28147cc6eb4466ec1cdfcae5e" kindref="member">print_this_thread_priority</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/support/unique_thread.h"/>
  </compounddef>
</doxygen>
