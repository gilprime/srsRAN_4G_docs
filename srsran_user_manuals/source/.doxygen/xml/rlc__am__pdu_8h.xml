<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rlc__am__pdu_8h" kind="file" language="C++">
    <compoundname>rlc_am_pdu.h</compoundname>
    <includes refid="byte__buffer_8h" local="yes">srsgnb/adt/byte_buffer.h</includes>
    <includes refid="rlc__config_8h" local="yes">srsgnb/rlc/rlc_config.h</includes>
    <includedby refid="rlc__am__interconnect_8h" local="yes">lib/rlc/rlc_am_interconnect.h</includedby>
    <includedby refid="rlc__rx__am__entity_8h" local="yes">lib/rlc/rlc_rx_am_entity.h</includedby>
    <includedby refid="rlc__tx__am__entity_8h" local="yes">lib/rlc/rlc_tx_am_entity.h</includedby>
    <includedby refid="rlc__retx__queue_8h" local="yes">lib/rlc/rlc_retx_queue.h</includedby>
    <includedby refid="rlc__am__pdu_8cpp" local="yes">lib/rlc/rlc_am_pdu.cpp</includedby>
    <incdepgraph>
      <node id="42">
        <label>atomic</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="17">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cassert</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="22">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>srsgnb/rlc/rlc_config.h</label>
        <link refid="rlc__config_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>pthread.h</label>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="41">
        <label>tuple</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="32">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cerrno</label>
      </node>
      <node id="3">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>cstddef</label>
      </node>
      <node id="31">
        <label>chrono</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>lib/rlc/rlc_am_pdu.h</label>
        <link refid="rlc__am__pdu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>lib/rlc/rlc_rx_am_entity.h</label>
        <link refid="rlc__rx__am__entity_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>lib/rlc/rlc_tx_am_entity.h</label>
        <link refid="rlc__tx__am__entity_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/rlc/rlc_retx_queue.h</label>
        <link refid="rlc__retx__queue_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/rlc/rlc_am_entity.h</label>
        <link refid="rlc__am__entity_8h_source"/>
      </node>
      <node id="2">
        <label>lib/rlc/rlc_am_interconnect.h</label>
        <link refid="rlc__am__interconnect_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/rlc/rlc_am_pdu.h</label>
        <link refid="rlc__am__pdu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsrsgnb_1_1rlc__am__pdu__header" prot="public">srsgnb::rlc_am_pdu_header</innerclass>
    <innerclass refid="structsrsgnb_1_1rlc__am__status__nack" prot="public">srsgnb::rlc_am_status_nack</innerclass>
    <innerclass refid="classsrsgnb_1_1rlc__am__status__pdu" prot="public">srsgnb::rlc_am_status_pdu</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1rlc__am__pdu__header_01_4" prot="public">fmt::formatter&lt; srsgnb::rlc_am_pdu_header &gt;</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/byte_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/rlc/rlc_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" kindref="member">INVALID_RLC_SN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0xffffffff;<sp/></highlight></codeline>
<codeline lineno="18" refid="namespacesrsgnb_1afa67b01d45775f9eba6786ff4a42c5c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1afa67b01d45775f9eba6786ff4a42c5c6" kindref="member">RETX_COUNT_NOT_STARTED</ref><sp/>=<sp/>0xffffffff;<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" refkind="member"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3;<sp/></highlight></codeline>
<codeline lineno="21" refid="namespacesrsgnb_1ac2972c338a36558689ea356a5e925d59" refkind="member"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1ac2972c338a36558689ea356a5e925d59" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_12bit_sn</ref><sp/>=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="22" refid="namespacesrsgnb_1a280691689aa3fda26b9f4b2a3f991993" refkind="member"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1a280691689aa3fda26b9f4b2a3f991993" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_sn_ext_18bit_sn</ref><sp/>=<sp/>3;<sp/></highlight></codeline>
<codeline lineno="23" refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" refkind="member"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1af503351d5715239d3f6760ae440ba211" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_so</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4;<sp/></highlight></codeline>
<codeline lineno="24" refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" refkind="member"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1a38e80b3773ce532db6f3b0aa23ae1e3b" kindref="member">rlc_am_nr_status_pdu_sizeof_nack_range</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespacesrsgnb_1a96099061f86fcdd3ed47efb290eafd99" refkind="member"><highlight class="normal">constexpr<sp/>uint32_t<sp/><ref refid="namespacesrsgnb_1a96099061f86fcdd3ed47efb290eafd99" kindref="member">RLC_AM_NR_TYP_NACKS</ref><sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_so_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size_12bit<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size_18bit<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size(<ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/>sn_size)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sn_size)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size12bits:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size_12bit;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size18bits:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size_18bit;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>srsgnb_assertion_failure(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>determine<sp/>RLC<sp/>AM<sp/>PDU<sp/>header<sp/>minimum<sp/>size:<sp/>unsupported<sp/>sn_size<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_number(sn_size));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size_12bit;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_max_size(<ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/>sn_size)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sn_size)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size12bits:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_am_sn_size::size18bits:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size(sn_size)<sp/>+<sp/>rlc_am_pdu_header_so_size;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>srsgnb_assertion_failure(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>determine<sp/>RLC<sp/>AM<sp/>PDU<sp/>header<sp/>maximum<sp/>size:<sp/>unsupported<sp/>sn_size<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_number(sn_size));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_am_pdu_header_min_size_12bit<sp/>+<sp/>rlc_am_pdu_header_so_size;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structsrsgnb_1_1rlc__am__pdu__header" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1rlc__am__pdu__header" kindref="compound">rlc_am_pdu_header</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structsrsgnb_1_1rlc__am__pdu__header_1a1e660013e830afa28cc362eb05251478" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1af5169a4341a98afd81102cd0ba38e2e1" kindref="member">rlc_dc_field</ref><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a1e660013e830afa28cc362eb05251478" kindref="member">dc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structsrsgnb_1_1rlc__am__pdu__header_1a601db6dfe465de0f2f088d669bd2c5bc" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a601db6dfe465de0f2f088d669bd2c5bc" kindref="member">p</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="structsrsgnb_1_1rlc__am__pdu__header_1af26c05583708bb42e7647b5a76f895fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a0a246fa8059639a178e17af4df90c173" kindref="member">rlc_si_field</ref><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header_1af26c05583708bb42e7647b5a76f895fc" kindref="member">si</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="structsrsgnb_1_1rlc__am__pdu__header_1a1efc527a5fc9c5267ef8bd72c331e5d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a1efc527a5fc9c5267ef8bd72c331e5d6" kindref="member">sn_size</ref>;<sp/></highlight></codeline>
<codeline lineno="62" refid="structsrsgnb_1_1rlc__am__pdu__header_1a72bc6667f91be6889923fd3253edde3b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a72bc6667f91be6889923fd3253edde3b" kindref="member">sn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="structsrsgnb_1_1rlc__am__pdu__header_1aa57a130dedebfec1c0666142afd6eb85" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header_1aa57a130dedebfec1c0666142afd6eb85" kindref="member">so</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structsrsgnb_1_1rlc__am__status__nack" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>so_end_of_sdu<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref>;<sp/></highlight></codeline>
<codeline lineno="75" refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>so_end_of_sdu;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="88"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a0a6023900df69bbd18a51153f93c1d55" kindref="member">nack_sn</ref><sp/>==<sp/>other.nack_sn<sp/>&amp;&amp;<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a661ae877cd21141636d8d2d6ae7daf9d" kindref="member">has_so</ref><sp/>==<sp/>other.has_so<sp/>&amp;&amp;<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a1e6e615fd84c80beef2121eaf4fd2a8f" kindref="member">so_start</ref><sp/>==<sp/>other.so_start<sp/>&amp;&amp;<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1ac9383eef686f25ac06082d1dab5d27c7" kindref="member">so_end</ref><sp/>==<sp/>other.so_end<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1a21d14616c0b0b75fe48f9ba58aac6515" kindref="member">has_nack_range</ref><sp/>==<sp/>other.has_nack_range<sp/>&amp;&amp;<sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack_1ab1a2441fd87c8f292c9eb21182a0acac" kindref="member">nack_range</ref><sp/>==<sp/>other.nack_range;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rlc_am_status_nack&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>equals(other);<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rlc_am_status_nack&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not<sp/>equals(other);<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classsrsgnb_1_1rlc__am__status__pdu" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1rlc__am__status__pdu" kindref="compound">rlc_am_status_pdu</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" kindref="member">sn_size</ref><sp/>=<sp/>rlc_am_sn_size::size12bits;</highlight></codeline>
<codeline lineno="104" refid="classsrsgnb_1_1rlc__am__status__pdu_1a271cb7be9a8060595bd3b11de7cf6461" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a271cb7be9a8060595bd3b11de7cf6461" kindref="member">mod_nr</ref><sp/>=<sp/><ref refid="namespacesrsgnb_1a1eaed18b62e5e415ab28856a8b091e25" kindref="member">cardinality</ref>(to_number(rlc_am_sn_size::size12bits));</highlight></codeline>
<codeline lineno="106" refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;rlc_am_status_nack&gt;<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref><sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="108" refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref><sp/>=<sp/><ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>refresh_packed_size();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>uint32_t<sp/>nack_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>nack)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pack_12bit(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pack_18bit(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>unpack_12bit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>unpack_18bit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>pdu);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119" refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" refkind="member"><highlight class="normal"><sp/><sp/>rlc_control_pdu_type<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" kindref="member">cpt</ref><sp/>=<sp/>rlc_control_pdu_type::status_pdu;</highlight></codeline>
<codeline lineno="121" refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" kindref="member">ack_sn</ref><sp/>=<sp/><ref refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" kindref="member">INVALID_RLC_SN</ref>;</highlight></codeline>
<codeline lineno="123" refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;rlc_am_status_nack&gt;&amp;<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" kindref="member">nacks</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>;</highlight></codeline>
<codeline lineno="125" refid="classsrsgnb_1_1rlc__am__status__pdu_1a303cc3649aa9b2dc40079827b38c9524" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t&amp;<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a303cc3649aa9b2dc40079827b38c9524" kindref="member">packed_size</ref><sp/>=<sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu" kindref="compound">rlc_am_status_pdu</ref>(<ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" kindref="member">sn_size</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_continuous_sequence(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>right)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_nack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref>&amp;<sp/>nack);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;rlc_am_status_nack&gt;&amp;<sp/>get_nacks()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_packed_size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a303cc3649aa9b2dc40079827b38c9524" kindref="member">packed_size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trim(uint32_t<sp/>max_packed_size);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1afcb27467fb6a1148ef2573c24efe4034" kindref="member">pack</ref>(byte_buffer&amp;<sp/>pdu)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ab27f5df216f1146fffff119904b034bc" kindref="member">unpack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>pdu);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" kindref="member">is_control_pdu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>pdu);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Header<sp/>pack/unpack<sp/>helper<sp/>functions</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>Ref:<sp/>3GPP<sp/>TS<sp/>38.322<sp/>v15.3.0<sp/>Section<sp/>6.2.2.4</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_read_data_pdu_header(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>pdu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref><sp/>sn_size,<sp/>rlc_am_pdu_header*<sp/>header)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>byte_buffer_reader<sp/>pdu_reader<sp/>=<sp/>pdu;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.empty())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Unpacking<sp/>header<sp/>of<sp/>empty<sp/>RLC<sp/>PDU&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>header-&gt;sn_size<sp/>=<sp/>sn_size;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixed<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>header-&gt;dc<sp/>=<sp/>(<ref refid="namespacesrsgnb_1af5169a4341a98afd81102cd0ba38e2e1" kindref="member">rlc_dc_field</ref>)((*pdu_reader<sp/>&gt;&gt;<sp/>7U)<sp/>&amp;<sp/>0x01U);<sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit<sp/>D/C<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>header-&gt;p<sp/><sp/>=<sp/>(*pdu_reader<sp/>&gt;&gt;<sp/>6U)<sp/>&amp;<sp/>0x01U;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit<sp/>P<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>header-&gt;si<sp/>=<sp/>(<ref refid="namespacesrsgnb_1a0a246fa8059639a178e17af4df90c173" kindref="member">rlc_si_field</ref>)((*pdu_reader<sp/>&gt;&gt;<sp/>4U)<sp/>&amp;<sp/>0x03U);<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bits<sp/>SI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sn_size<sp/>==<sp/>rlc_am_sn_size::size12bits)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;sn<sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0x0fU)<sp/>&lt;&lt;<sp/>8U;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>4<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;sn<sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>last<sp/>8<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sn_size<sp/>==<sp/>rlc_am_sn_size::size18bits)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*pdu_reader<sp/>&amp;<sp/>0x0cU)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).error(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>PDU,<sp/>reserved<sp/>bits<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;sn<sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0x03U)<sp/>&lt;&lt;<sp/>16U;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>4<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;sn<sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU)<sp/>&lt;&lt;<sp/>8U;<sp/></highlight><highlight class="comment">//<sp/>bit<sp/>2-10<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;sn<sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>last<sp/>8<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).error(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>SN<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>optional<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;si<sp/>==<sp/>rlc_si_field::last_segment<sp/>||<sp/>header-&gt;si<sp/>==<sp/>rlc_si_field::middle_segment)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;so<sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU)<sp/>&lt;&lt;<sp/>8U;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;so<sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_am_write_data_pdu_header(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rlc_am_pdu_header&amp;<sp/>header,<sp/>byte_buffer&amp;<sp/>pdu)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>byte_buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_buf;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>byte_buffer_writer<sp/>hdr_writer<sp/>=<sp/>hdr_buf;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>header<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>hdr_writer.append((to_number(header.dc)<sp/>&amp;<sp/>0x01U)<sp/>&lt;&lt;<sp/>7U);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit<sp/>D/C<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>hdr_writer.back()<sp/>|=<sp/>(header.p<sp/>&amp;<sp/>0x01U)<sp/>&lt;&lt;<sp/>6U;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>bit<sp/>P<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>hdr_writer.back()<sp/>|=<sp/>(to_number(header.si)<sp/>&amp;<sp/>0x03U)<sp/>&lt;&lt;<sp/>4U;<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bits<sp/>SI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.sn_size<sp/>==<sp/>rlc_am_sn_size::size12bits)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>first<sp/>4<sp/>bit<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.back()<sp/>|=<sp/>(header.sn<sp/>&gt;&gt;<sp/>8U)<sp/>&amp;<sp/>0x0fU;<sp/></highlight><highlight class="comment">//<sp/>4<sp/>bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.append(header.sn<sp/>&amp;<sp/>0xffU);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>8<sp/>bit<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>18bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.back()<sp/>|=<sp/>(header.sn<sp/>&gt;&gt;<sp/>16U)<sp/>&amp;<sp/>0x3U;<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.append(header.sn<sp/>&gt;&gt;<sp/>8U);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>3<sp/>-<sp/>10<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.append(header.sn<sp/>&amp;<sp/>0xffU);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>8<sp/>bit<sp/>of<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.so<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.append(header.so<sp/>&gt;&gt;<sp/>8U);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>part<sp/>of<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr_writer.append(header.so<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>second<sp/>part<sp/>of<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>pdu.chain_before(std::move(hdr_buf));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="238" refid="structfmt_1_1formatter_3_01srsgnb_1_1rlc__am__pdu__header_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::rlc_am_pdu_header&gt;<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.begin();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__am__pdu__header" kindref="compound">srsgnb::rlc_am_pdu_header</ref>&amp;<sp/>hdr,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;[{},<sp/>P={},<sp/>SI={},<sp/>SN_SIZE={},<sp/>SN={},<sp/>SO={}]&quot;</highlight><highlight class="normal">,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a1e660013e830afa28cc362eb05251478" kindref="member">dc</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a601db6dfe465de0f2f088d669bd2c5bc" kindref="member">p</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__am__pdu__header_1af26c05583708bb42e7647b5a76f895fc" kindref="member">si</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a1efc527a5fc9c5267ef8bd72c331e5d6" kindref="member">sn_size</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__am__pdu__header_1a72bc6667f91be6889923fd3253edde3b" kindref="member">sn</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__am__pdu__header_1aa57a130dedebfec1c0666142afd6eb85" kindref="member">so</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/rlc/rlc_am_pdu.h"/>
  </compounddef>
</doxygen>
