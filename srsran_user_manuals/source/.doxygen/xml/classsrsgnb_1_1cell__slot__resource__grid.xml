<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1cell__slot__resource__grid" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::cell_slot_resource_grid</compoundname>
    <includes refid="lib_2scheduler_2cell_2resource__grid_8h" local="no">resource_grid.h</includes>
    <innerclass refid="structsrsgnb_1_1cell__slot__resource__grid_1_1carrier__resource__grid" prot="private">srsgnb::cell_slot_resource_grid::carrier_resource_grid</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsrsgnb_1_1cell__slot__resource__grid_1a0e85ef7ee803419906808a33803018e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct cell_resource_allocator</definition>
        <argsstring></argsstring>
        <name>cell_resource_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="156" column="3" bodyfile="lib/scheduler/cell/resource_grid.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1cell__slot__resource__grid_1a65ec8a5b89fa23749f3ff071dbd90bd9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structsrsgnb_1_1cell__slot__resource__grid_1_1carrier__resource__grid" kindref="compound">carrier_resource_grid</ref> &gt;</type>
        <definition>std::vector&lt;carrier_resource_grid&gt; srsgnb::cell_slot_resource_grid::carrier_grids</definition>
        <argsstring></argsstring>
        <name>carrier_grids</name>
        <briefdescription>
<para>Carrier Resource Grids. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="169" column="19" bodyfile="lib/scheduler/cell/resource_grid.h" bodystart="169" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1cell__slot__resource__grid_1ada627c98ec8d97eb9f01df8993b56810" compoundref="resource__grid_8cpp" startline="103" endline="108">clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1cell__slot__resource__grid_1a740e04b3a08bdf93d991e99367df0943" prot="private" static="no" mutable="no">
        <type>std::array&lt; unsigned, <ref refid="namespacesrsgnb_1aa4e1861ad81105adc74ceabe7e465a46" kindref="member">NOF_NUMEROLOGIES</ref> &gt;</type>
        <definition>std::array&lt;unsigned, NOF_NUMEROLOGIES&gt; srsgnb::cell_slot_resource_grid::numerology_to_grid_idx</definition>
        <argsstring></argsstring>
        <name>numerology_to_grid_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="170" column="14" bodyfile="lib/scheduler/cell/resource_grid.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1a30bbebfe5ab9294131c39cc918cd6a44" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>cell_slot_resource_grid::cell_slot_resource_grid</definition>
        <argsstring>(span&lt; const scs_specific_carrier &gt; scs_carriers)</argsstring>
        <name>cell_slot_resource_grid</name>
        <param>
          <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; const <ref refid="structsrsgnb_1_1scs__specific__carrier" kindref="compound">scs_specific_carrier</ref> &gt;</type>
          <declname>scs_carriers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="125" column="12" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="92" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1ada627c98ec8d97eb9f01df8993b56810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cell_slot_resource_grid::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Reset the resource grid to empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="128" column="8" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="103" bodyend="108"/>
        <references refid="classsrsgnb_1_1cell__slot__resource__grid_1a65ec8a5b89fa23749f3ff071dbd90bd9" compoundref="lib_2scheduler_2cell_2resource__grid_8h" startline="169">carrier_grids</references>
        <referencedby refid="structsrsgnb_1_1cell__slot__resource__allocator_1a98473801f0f083edeebac12a6861a147" compoundref="resource__grid_8cpp" startline="184" endline="189">srsgnb::cell_slot_resource_allocator::clear</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1abf35ef94e4fda289536095561faded14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cell_slot_resource_grid::fill</definition>
        <argsstring>(grant_info grant)</argsstring>
        <name>fill</name>
        <param>
          <type><ref refid="structsrsgnb_1_1grant__info" kindref="compound">grant_info</ref></type>
          <declname>grant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates the symbol x RB range in the cell resource grid. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prbs</parametername>
</parameternamelist>
<parameterdescription>
<para>PRB interval of the allocation. PRB=0 corresponds to the first PRB of the BWP. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>OFDM symbol interval of the allocation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="133" column="8" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="110" bodyend="116"/>
        <references refid="structsrsgnb_1_1grant__info_1a52c99ef1c6a8c605ec360bcd60609089" compoundref="lib_2scheduler_2cell_2resource__grid_8h" startline="47">srsgnb::grant_info::crbs</references>
        <referencedby refid="classsrsgnb_1_1prach__scheduler_1aada1f7c55c1c0f20a40cd9c64b08d2d0" compoundref="prach__scheduler_8cpp" startline="111" endline="135">srsgnb::prach_scheduler::run_slot</referencedby>
        <referencedby refid="classsrsgnb_1_1ra__scheduler_1aa7f5ee78860e7768890012a950bb289c" compoundref="ra__scheduler_8cpp" startline="320" endline="410">srsgnb::ra_scheduler::fill_rar_grant</referencedby>
        <referencedby refid="classsrsgnb_1_1sib1__scheduler_1a32b9bcfcc6ae452c2d0516a8518d8d16" compoundref="sib__scheduler_8cpp" startline="155" endline="218">srsgnb::sib1_scheduler::allocate_sib1</referencedby>
        <referencedby refid="namespacesrsgnb_1a7b61af2239baf4702a09b33f3c499532" compoundref="ssb__scheduler_8cpp" startline="165" endline="209">srsgnb::schedule_ssb</referencedby>
        <referencedby refid="classpdcch__scheduler__impl_1_1pdcch__slot__allocator_1a2945a1dbbcb2eb53b0d03707b80e1b39" compoundref="pdcch__scheduler__impl_8cpp" startline="169" endline="201">srsgnb::pdcch_scheduler_impl::pdcch_slot_allocator::allocate_cce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1aec6c47c9786e03e716338e9ab0d0cef8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cell_slot_resource_grid::collides</definition>
        <argsstring>(grant_info grant) const</argsstring>
        <name>collides</name>
        <param>
          <type><ref refid="structsrsgnb_1_1grant__info" kindref="compound">grant_info</ref></type>
          <declname>grant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether the provided symbol x RB range collides with any other allocation in the cell resource grid. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grant</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the symbol x RB range whose available we want to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if at least one symbol x RB of grant is currently occupied in the resource grid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="138" column="8" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="118" bodyend="122"/>
        <references refid="structsrsgnb_1_1cell__slot__resource__grid_1_1carrier__resource__grid_1a9e0312eb0c072d875f1054c8354c5efe" compoundref="lib_2scheduler_2cell_2resource__grid_8h" startline="160">srsgnb::cell_slot_resource_grid::carrier_resource_grid::subslot_rbs</references>
        <references refid="classsrsgnb_1_1carrier__subslot__resource__grid_1a9240696310f6958a03f53bd94b1fa412" compoundref="resource__grid_8cpp" startline="45" endline="58">srsgnb::carrier_subslot_resource_grid::collides</references>
        <references refid="structsrsgnb_1_1grant__info_1a52c99ef1c6a8c605ec360bcd60609089" compoundref="lib_2scheduler_2cell_2resource__grid_8h" startline="47">srsgnb::grant_info::crbs</references>
        <referencedby refid="classsrsgnb_1_1prach__scheduler_1aada1f7c55c1c0f20a40cd9c64b08d2d0" compoundref="prach__scheduler_8cpp" startline="111" endline="135">srsgnb::prach_scheduler::run_slot</referencedby>
        <referencedby refid="classpdcch__scheduler__impl_1_1pdcch__slot__allocator_1a2945a1dbbcb2eb53b0d03707b80e1b39" compoundref="pdcch__scheduler__impl_8cpp" startline="169" endline="201">srsgnb::pdcch_scheduler_impl::pdcch_slot_allocator::allocate_cce</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1a266d8dbac70a0ddd083530606b4a9ff3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cell_slot_resource_grid::collides</definition>
        <argsstring>(subcarrier_spacing scs, ofdm_symbol_range ofdm_symbols, crb_interval crbs) const</argsstring>
        <name>collides</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref></type>
          <declname>scs</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1ofdm__symbol__range" kindref="compound">ofdm_symbol_range</ref></type>
          <declname>ofdm_symbols</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1crb__interval" kindref="compound">crb_interval</ref></type>
          <declname>crbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="139" column="8" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1a987bac26435410ebf28670b492e71123" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesrsgnb_1abf86a5538874e8272b0c274211e2598b" kindref="member">crb_bitmap</ref></type>
        <definition>prb_bitmap cell_slot_resource_grid::used_crbs</definition>
        <argsstring>(const bwp_configuration &amp;bwp_cfg, ofdm_symbol_range symbols) const</argsstring>
        <name>used_crbs</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1bwp__configuration" kindref="compound">bwp_configuration</ref> &amp;</type>
          <declname>bwp_cfg</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1ofdm__symbol__range" kindref="compound">ofdm_symbol_range</ref></type>
          <declname>symbols</declname>
        </param>
        <briefdescription>
<para>Calculates a bitmap where each bit set to one represents a CRB that is occupied or unavailable. A CRB is considered occupied if it is outside of the provided BWP CRB boundaries or if it is already allocated in at least one OFDM symbol of the provided OFDM symbol range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bwp_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Bandwidth configuration for which the allocation is to be made. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>Range of OFDM symbols, where the search for available CRBs is carrier out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a CRB bitmap with bits set to one for unavailable CRBs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="147" column="14" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="130" bodyend="134"/>
        <references refid="structsrsgnb_1_1cell__slot__resource__grid_1_1carrier__resource__grid_1a9e0312eb0c072d875f1054c8354c5efe" compoundref="lib_2scheduler_2cell_2resource__grid_8h" startline="160">srsgnb::cell_slot_resource_grid::carrier_resource_grid::subslot_rbs</references>
        <references refid="classsrsgnb_1_1carrier__subslot__resource__grid_1a7c600702eaac7a1f49c0082dfe0f96df" compoundref="resource__grid_8cpp" startline="60" endline="68">srsgnb::carrier_subslot_resource_grid::used_crbs</references>
        <references refid="structsrsgnb_1_1bwp__configuration_1af8ceaeaae0eccfbacd463cfc855e28d1" compoundref="bwp__configuration_8h" startline="112">srsgnb::bwp_configuration::crbs</references>
        <referencedby refid="classsrsgnb_1_1ra__scheduler_1aa3f2f6f48a91de48e48819b317045439" compoundref="ra__scheduler_8cpp" startline="227" endline="318">srsgnb::ra_scheduler::schedule_rar</referencedby>
        <referencedby refid="classsrsgnb_1_1sib1__scheduler_1a32b9bcfcc6ae452c2d0516a8518d8d16" compoundref="sib__scheduler_8cpp" startline="155" endline="218">srsgnb::sib1_scheduler::allocate_sib1</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1a2dafbcb106a387c3def81723641fe1ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cell_slot_resource_grid::all_set</definition>
        <argsstring>(grant_info grant) const</argsstring>
        <name>all_set</name>
        <param>
          <type><ref refid="structsrsgnb_1_1grant__info" kindref="compound">grant_info</ref></type>
          <declname>grant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks whether all the provided symbol x RB range in the cell resource grid are set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grant</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the symbol x RB range to be tested. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all symbols x RBs of grant are currently set in the resource grid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="152" column="8" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="136" bodyend="140"/>
        <references refid="structsrsgnb_1_1grant__info_1a52c99ef1c6a8c605ec360bcd60609089" compoundref="lib_2scheduler_2cell_2resource__grid_8h" startline="47">srsgnb::grant_info::crbs</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1a757f9203d7b2b97bcffe653901c49b82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cell_slot_resource_grid::all_set</definition>
        <argsstring>(subcarrier_spacing scs, ofdm_symbol_range ofdm_symbols, crb_interval crbs) const</argsstring>
        <name>all_set</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref></type>
          <declname>scs</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1ofdm__symbol__range" kindref="compound">ofdm_symbol_range</ref></type>
          <declname>ofdm_symbols</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1crb__interval" kindref="compound">crb_interval</ref></type>
          <declname>crbs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="153" column="8" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="142" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1a3de7b61506c986313c5aaa198c7d85a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1cell__slot__resource__grid_1_1carrier__resource__grid" kindref="compound">carrier_resource_grid</ref> &amp;</type>
        <definition>cell_slot_resource_grid::carrier_resource_grid &amp; cell_slot_resource_grid::get_carrier</definition>
        <argsstring>(subcarrier_spacing scs)</argsstring>
        <name>get_carrier</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref></type>
          <declname>scs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="165" column="31" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1cell__slot__resource__grid_1ae72a4dc1c9969fac998befb75381eb0a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structsrsgnb_1_1cell__slot__resource__grid_1_1carrier__resource__grid" kindref="compound">carrier_resource_grid</ref> &amp;</type>
        <definition>const cell_slot_resource_grid::carrier_resource_grid &amp; cell_slot_resource_grid::get_carrier</definition>
        <argsstring>(subcarrier_spacing scs) const</argsstring>
        <name>get_carrier</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a249e926de5b299d3da9f403c93168d98" kindref="member">subcarrier_spacing</ref></type>
          <declname>scs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/cell/resource_grid.h" line="166" column="31" bodyfile="lib/scheduler/cell/resource_grid.cpp" bodystart="155" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages the allocation of RBs in the resource grid of a given service cell for a given slot. This class manages multiple carriers of different numerologies associated to the same cell. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::cell_slot_resource_grid</label>
        <link refid="classsrsgnb_1_1cell__slot__resource__grid"/>
      </node>
    </collaborationgraph>
    <location file="lib/scheduler/cell/resource_grid.h" line="123" column="1" bodyfile="lib/scheduler/cell/resource_grid.h" bodystart="122" bodyend="171"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a2dafbcb106a387c3def81723641fe1ec" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>all_set</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a757f9203d7b2b97bcffe653901c49b82" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>all_set</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a65ec8a5b89fa23749f3ff071dbd90bd9" prot="private" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>carrier_grids</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a0e85ef7ee803419906808a33803018e2" prot="private" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>cell_resource_allocator</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a30bbebfe5ab9294131c39cc918cd6a44" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>cell_slot_resource_grid</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1ada627c98ec8d97eb9f01df8993b56810" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1aec6c47c9786e03e716338e9ab0d0cef8" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>collides</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a266d8dbac70a0ddd083530606b4a9ff3" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>collides</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1abf35ef94e4fda289536095561faded14" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>fill</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a3de7b61506c986313c5aaa198c7d85a5" prot="private" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>get_carrier</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1ae72a4dc1c9969fac998befb75381eb0a" prot="private" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>get_carrier</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a740e04b3a08bdf93d991e99367df0943" prot="private" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>numerology_to_grid_idx</name></member>
      <member refid="classsrsgnb_1_1cell__slot__resource__grid_1a987bac26435410ebf28670b492e71123" prot="public" virt="non-virtual"><scope>srsgnb::cell_slot_resource_grid</scope><name>used_crbs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
