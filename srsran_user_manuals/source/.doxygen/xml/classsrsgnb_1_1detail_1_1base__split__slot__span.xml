<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1detail_1_1base__split__slot__span" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::detail::base_split_slot_span</compoundname>
    <derivedcompoundref refid="classsrsgnb_1_1split__slot__span" prot="public" virt="non-virtual">srsgnb::split_slot_span&lt; T &gt;</derivedcompoundref>
    <innerclass refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" prot="protected">srsgnb::detail::base_split_slot_span::iterator_impl</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a6c079a1fdefc5db92bb677a2be09ec23" prot="protected" static="no">
        <type>typename std::conditional&lt; std::is_const&lt; T &gt;::value, const bool, bool &gt;::type</type>
        <definition>using srsgnb::detail::base_split_slot_span&lt; T &gt;::presence_type =  typename std::conditional&lt;std::is_const&lt;T&gt;::value, const bool, bool&gt;::type</definition>
        <argsstring></argsstring>
        <name>presence_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="297" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a10bfcc9b2ca1b64eb88a57fd89605955" prot="public" static="no">
        <type>T</type>
        <definition>using srsgnb::detail::base_split_slot_span&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="352" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a2476563a498e9e79f996fec59ea0a702" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; T &gt;</type>
        <definition>using srsgnb::detail::base_split_slot_span&lt; T &gt;::iterator =  iterator_impl&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="353" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1ae3154d683aabbb9d1a17a972f391e521" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; const T &gt;</type>
        <definition>using srsgnb::detail::base_split_slot_span&lt; T &gt;::const_iterator =  iterator_impl&lt;const T&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="354" column="3" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="354" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1aab1e1aec2ec93404051a0af65d65d71b" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* srsgnb::detail::base_split_slot_span&lt; T &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="299" column="17" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1ac591bf06bd3ae28ec2b5b854df366d38" prot="protected" static="no" mutable="no">
        <type>presence_type *</type>
        <definition>presence_type* srsgnb::detail::base_split_slot_span&lt; T &gt;::present_ptr</definition>
        <argsstring></argsstring>
        <name>present_ptr</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="300" column="17" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a1cc42a8c9e1e5111fc96228f70eb1036" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t srsgnb::detail::base_split_slot_span&lt; T &gt;::len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="301" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a2a19c7dd10eb491c4a107220cce129de" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::detail::base_split_slot_span&lt; T &gt;::base_split_slot_span</definition>
        <argsstring>()=default</argsstring>
        <name>base_split_slot_span</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="356" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a94d5217a7c4b0d3ec8d591de4677e906" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr srsgnb::detail::base_split_slot_span&lt; T &gt;::base_split_slot_span</definition>
        <argsstring>(value_type(&amp;arr)[N], presence_type(&amp;present)[N]) noexcept</argsstring>
        <name>base_split_slot_span</name>
        <param>
          <type>value_type(&amp;)</type>
          <declname>arr</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>presence_type(&amp;)</type>
          <declname>present</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="358" column="13" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="358" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1ab5ff4f7f32379aee3681c73f14596af4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::detail::base_split_slot_span&lt; T &gt;::base_split_slot_span</definition>
        <argsstring>(value_type *arr, presence_type *present, size_t N)</argsstring>
        <name>base_split_slot_span</name>
        <param>
          <type>value_type *</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>presence_type *</type>
          <declname>present</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="362" column="13" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1af578887b118679f2ecef033d86456b6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::base_split_slot_span&lt; T &gt;::contains</definition>
        <argsstring>(size_t idx) const</argsstring>
        <name>contains</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="367" column="8" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a7e3a5753fc18fe98252836fd1ca51761" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::detail::base_split_slot_span&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="368" column="8" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="368" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a2d719323012b859c62bdc52b76d52a49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::detail::base_split_slot_span&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="377" column="10" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="377" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a90638a80b3e1d8138fde10770c9267b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::detail::base_split_slot_span&lt; T &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="385" column="10" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="385" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1abe186384baf549ecb9ba2b743d94360e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::detail::base_split_slot_span&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="387" column="11" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1afeed3ad2ab5652e61c8221a45586ed9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::detail::base_split_slot_span&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="388" column="11" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a35094ddbfea16ebd169989ead0e5ca65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; srsgnb::detail::base_split_slot_span&lt; T &gt;::at</definition>
        <argsstring>(size_t idx) const</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="389" column="11" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="389" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a234f8618b21cda1e65158e03ff74bf2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::detail::base_split_slot_span&lt; T &gt;::at</definition>
        <argsstring>(size_t idx)</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="394" column="5" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="394" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a5c1262959a92cc2a86ff065be7548981" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::detail::base_split_slot_span&lt; T &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="400" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a8d5ffc7c300b7713e9de181cfd218917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::detail::base_split_slot_span&lt; T &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="401" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="401" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1ac901597f51c170e7278b544625ad0b41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::detail::base_split_slot_span&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="402" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="402" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a4066d71f6aba5fb36d2965352571a9b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::detail::base_split_slot_span&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="403" column="18" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="403" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1detail_1_1base__split__slot__span_1a51c149a071ab80a4528604bce5482a59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::detail::base_split_slot_span&lt; T &gt;::find_first_empty</definition>
        <argsstring>(size_t start_guess=0)</argsstring>
        <name>find_first_empty</name>
        <param>
          <type>size_t</type>
          <declname>start_guess</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/slot_array.h" line="406" column="10" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="406" bodyend="406"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::detail::base_split_slot_span&lt; T &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__split__slot__span"/>
      </node>
      <node id="2">
        <label>srsgnb::split_slot_span&lt; T &gt;</label>
        <link refid="classsrsgnb_1_1split__slot__span"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::detail::base_split_slot_span&lt; T &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__split__slot__span"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/slot_array.h" line="295" column="1" bodyfile="include/srsgnb/adt/slot_array.h" bodystart="294" bodyend="407"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a35094ddbfea16ebd169989ead0e5ca65" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>at</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a234f8618b21cda1e65158e03ff74bf2f" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>at</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a2a19c7dd10eb491c4a107220cce129de" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>base_split_slot_span</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a94d5217a7c4b0d3ec8d591de4677e906" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>base_split_slot_span</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1ab5ff4f7f32379aee3681c73f14596af4" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>base_split_slot_span</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a5c1262959a92cc2a86ff065be7548981" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1ac901597f51c170e7278b544625ad0b41" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a90638a80b3e1d8138fde10770c9267b9" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>capacity</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1ae3154d683aabbb9d1a17a972f391e521" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1af578887b118679f2ecef033d86456b6d" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>contains</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a7e3a5753fc18fe98252836fd1ca51761" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a8d5ffc7c300b7713e9de181cfd218917" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a4066d71f6aba5fb36d2965352571a9b4" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a51c149a071ab80a4528604bce5482a59" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>find_first_empty</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a2476563a498e9e79f996fec59ea0a702" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a1cc42a8c9e1e5111fc96228f70eb1036" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>len</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1abe186384baf549ecb9ba2b743d94360e" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1afeed3ad2ab5652e61c8221a45586ed9f" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a6c079a1fdefc5db92bb677a2be09ec23" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>presence_type</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1ac591bf06bd3ae28ec2b5b854df366d38" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>present_ptr</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1aab1e1aec2ec93404051a0af65d65d71b" prot="protected" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>ptr</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a2d719323012b859c62bdc52b76d52a49" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>size</name></member>
      <member refid="classsrsgnb_1_1detail_1_1base__split__slot__span_1a10bfcc9b2ca1b64eb88a57fd89605955" prot="public" virt="non-virtual"><scope>srsgnb::detail::base_split_slot_span</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
