<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1rlc__am__status__pdu" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::rlc_am_status_pdu</compoundname>
    <includes refid="rlc__am__pdu_8h" local="no">rlc_am_pdu.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref></type>
        <definition>rlc_am_sn_size srsgnb::rlc_am_status_pdu::sn_size</definition>
        <argsstring></argsstring>
        <name>sn_size</name>
        <initializer>= rlc_am_sn_size::size12bits</initializer>
        <briefdescription>
<para>Stored SN size required to compute the packed size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="102" column="18" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1rlc__am__status__pdu_1ab27f5df216f1146fffff119904b034bc" compoundref="rlc__am__pdu_8cpp" startline="393" endline="405">unpack</referencedby>
        <referencedby refid="classsrsgnb_1_1rlc__am__status__pdu_1afcb27467fb6a1148ef2573c24efe4034" compoundref="rlc__am__pdu_8cpp" startline="505" endline="517">pack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1a271cb7be9a8060595bd3b11de7cf6461" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::rlc_am_status_pdu::mod_nr</definition>
        <argsstring></argsstring>
        <name>mod_nr</name>
        <initializer>= <ref refid="namespacesrsgnb_1a1eaed18b62e5e415ab28856a8b091e25" kindref="member">cardinality</ref>(to_number(rlc_am_sn_size::size12bits))</initializer>
        <briefdescription>
<para>Stored modulus to determine continuous sequences across SN overflows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="104" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &gt;</type>
        <definition>std::vector&lt;rlc_am_status_nack&gt; srsgnb::rlc_am_status_pdu::nacks_</definition>
        <argsstring></argsstring>
        <name>nacks_</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Internal NACK container; keep in sync with packed_size_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="106" column="15" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::rlc_am_status_pdu::packed_size_</definition>
        <argsstring></argsstring>
        <name>packed_size_</name>
        <initializer>= <ref refid="namespacesrsgnb_1ae71faf133986dba3d2bd34502931f9a4" kindref="member">rlc_am_nr_status_pdu_sizeof_header_ack_sn</ref></initializer>
        <briefdescription>
<para>Stores the current packed size; sync on each change of nacks_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="108" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" prot="public" static="no" mutable="no">
        <type>rlc_control_pdu_type</type>
        <definition>rlc_control_pdu_type srsgnb::rlc_am_status_pdu::cpt</definition>
        <argsstring></argsstring>
        <name>cpt</name>
        <initializer>= rlc_control_pdu_type::status_pdu</initializer>
        <briefdescription>
<para>Control PDU type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="119" column="24" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::rlc_am_status_pdu::ack_sn</definition>
        <argsstring></argsstring>
        <name>ack_sn</name>
        <initializer>= <ref refid="namespacesrsgnb_1ad2fd226ebaaef1cd30f868ab37637e47" kindref="member">INVALID_RLC_SN</ref></initializer>
        <briefdescription>
<para>SN of the next not received RLC Data PDU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="121" column="12" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;rlc_am_status_nack&gt;&amp; srsgnb::rlc_am_status_pdu::nacks</definition>
        <argsstring></argsstring>
        <name>nacks</name>
        <initializer>= <ref refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" kindref="member">nacks_</ref></initializer>
        <briefdescription>
<para>Read-only reference to NACKs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="123" column="21" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1rlc__am__status__pdu_1a303cc3649aa9b2dc40079827b38c9524" prot="public" static="no" mutable="no">
        <type>const uint32_t &amp;</type>
        <definition>const uint32_t&amp; srsgnb::rlc_am_status_pdu::packed_size</definition>
        <argsstring></argsstring>
        <name>packed_size</name>
        <initializer>= <ref refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" kindref="member">packed_size_</ref></initializer>
        <briefdescription>
<para>Read-only reference to packed size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="125" column="18" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1ac4138a569521b99b61b700f9dedc26f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlc_am_status_pdu::refresh_packed_size</definition>
        <argsstring>()</argsstring>
        <name>refresh_packed_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="110" column="12" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a6fb8462cbb4230989af2d81856b4940e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rlc_am_status_pdu::nack_size</definition>
        <argsstring>(const rlc_am_status_nack &amp;nack) const</argsstring>
        <name>nack_size</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>nack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="111" column="12" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="145" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a54110bafb0e45f297ebcf3d66e365321" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::pack_12bit</definition>
        <argsstring>(byte_buffer &amp;pdu) const</argsstring>
        <name>pack_12bit</name>
        <param>
          <type><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="112" column="12" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="407" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a185d76f6c3d459d4d08805518c0d432d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::pack_18bit</definition>
        <argsstring>(byte_buffer &amp;pdu) const</argsstring>
        <name>pack_18bit</name>
        <param>
          <type><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="113" column="12" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="456" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a14d8a609e6c3d4a7b4a8a178ad3bca79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::unpack_12bit</definition>
        <argsstring>(const byte_buffer &amp;pdu)</argsstring>
        <name>unpack_12bit</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="114" column="12" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="176" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1ae5ff930ba54efaffda65e447a25497d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::unpack_18bit</definition>
        <argsstring>(const byte_buffer &amp;pdu)</argsstring>
        <name>unpack_18bit</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="115" column="12" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="282" bodyend="391"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a5aa5da9f9af278890b1469a5923bdc99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlc_am_status_pdu::rlc_am_status_pdu</definition>
        <argsstring>(rlc_am_sn_size sn_size)</argsstring>
        <name>rlc_am_status_pdu</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a7ac4af27ff03947500988b24328e3241" kindref="member">rlc_am_sn_size</ref></type>
          <declname>sn_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="127" column="3" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a471c5e19378de502e508df2c395c268f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlc_am_status_pdu::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="128" column="8" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="24" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a0da869e0dc094704cc569c744639e8d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::is_continuous_sequence</definition>
        <argsstring>(const rlc_am_status_nack &amp;left, const rlc_am_status_nack &amp;right) const</argsstring>
        <name>is_continuous_sequence</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="129" column="8" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="32" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a93423f1e5cff76adbb8d7d0800fd15b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rlc_am_status_pdu::push_nack</definition>
        <argsstring>(const rlc_am_status_nack &amp;nack)</argsstring>
        <name>push_nack</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &amp;</type>
          <declname>nack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="130" column="8" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="52" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a5edd012366e4adb80d6b38f9bf936b64" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structsrsgnb_1_1rlc__am__status__nack" kindref="compound">rlc_am_status_nack</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;rlc_am_status_nack&gt;&amp; srsgnb::rlc_am_status_pdu::get_nacks</definition>
        <argsstring>() const</argsstring>
        <name>get_nacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="131" column="21" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a8a814e36fc27618f1ea79d9d96f6132c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t srsgnb::rlc_am_status_pdu::get_packed_size</definition>
        <argsstring>() const</argsstring>
        <name>get_packed_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="132" column="42" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1ae58a10fe745890072bbfd7a681a54f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::trim</definition>
        <argsstring>(uint32_t max_packed_size)</argsstring>
        <name>trim</name>
        <param>
          <type>uint32_t</type>
          <declname>max_packed_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="133" column="42" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="113" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1afcb27467fb6a1148ef2573c24efe4034" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::pack</definition>
        <argsstring>(byte_buffer &amp;pdu) const</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
<para>Write the RLC AM status PDU to a PDU buffer and eets the length of the generate PDU accordingly. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">pdu</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if PDU was written successfully, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="138" column="8" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="505" bodyend="517"/>
        <references refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" compoundref="rlc__am__pdu_8h" startline="102">sn_size</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1ab27f5df216f1146fffff119904b034bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::unpack</definition>
        <argsstring>(const byte_buffer &amp;pdu)</argsstring>
        <name>unpack</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
<para>Read a RLC AM status PDU from a PDU buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pdu</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if PDU was read successfully, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="143" column="8" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="393" bodyend="405"/>
        <references refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" compoundref="rlc__am__pdu_8h" startline="102">sn_size</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlc_am_status_pdu::is_control_pdu</definition>
        <argsstring>(const byte_buffer &amp;pdu)</argsstring>
        <name>is_control_pdu</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>pdu</declname>
        </param>
        <briefdescription>
<para>Checks if a PDU buffer contains a control PDU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pdu</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to a <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the byte buffer contains a control PDU, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/rlc/rlc_am_pdu.h" line="148" column="15" bodyfile="lib/rlc/rlc_am_pdu.cpp" bodystart="170" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AM Status PDU. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::rlc_am_status_pdu</label>
        <link refid="classsrsgnb_1_1rlc__am__status__pdu"/>
      </node>
    </collaborationgraph>
    <location file="lib/rlc/rlc_am_pdu.h" line="99" column="1" bodyfile="lib/rlc/rlc_am_pdu.h" bodystart="98" bodyend="149"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a069c297b5841ad6f64f249adce6f35ef" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>ack_sn</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1aad6ae1bf705450dfccdb85033b2453fa" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>cpt</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a5edd012366e4adb80d6b38f9bf936b64" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>get_nacks</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a8a814e36fc27618f1ea79d9d96f6132c" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>get_packed_size</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a0da869e0dc094704cc569c744639e8d6" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>is_continuous_sequence</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a73db705a1fcc2126237c53501fe97566" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>is_control_pdu</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a271cb7be9a8060595bd3b11de7cf6461" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>mod_nr</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a6fb8462cbb4230989af2d81856b4940e" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>nack_size</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a57e72727aad33644fc6304693168288e" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>nacks</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1ad7bf94976ee68ed375b57814f78b1d29" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>nacks_</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1afcb27467fb6a1148ef2573c24efe4034" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>pack</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a54110bafb0e45f297ebcf3d66e365321" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>pack_12bit</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a185d76f6c3d459d4d08805518c0d432d" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>pack_18bit</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a303cc3649aa9b2dc40079827b38c9524" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>packed_size</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a46a977e2c1929cd2e3d9b43f66ee1391" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>packed_size_</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a93423f1e5cff76adbb8d7d0800fd15b2" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>push_nack</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1ac4138a569521b99b61b700f9dedc26f6" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>refresh_packed_size</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a471c5e19378de502e508df2c395c268f" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>reset</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a5aa5da9f9af278890b1469a5923bdc99" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>rlc_am_status_pdu</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1ae661e13f067c19edd897519a7a87d28f" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>sn_size</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1ae58a10fe745890072bbfd7a681a54f1b" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>trim</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1ab27f5df216f1146fffff119904b034bc" prot="public" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>unpack</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1a14d8a609e6c3d4a7b4a8a178ad3bca79" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>unpack_12bit</name></member>
      <member refid="classsrsgnb_1_1rlc__am__status__pdu_1ae5ff930ba54efaffda65e447a25497d8" prot="private" virt="non-virtual"><scope>srsgnb::rlc_am_status_pdu</scope><name>unpack_18bit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
