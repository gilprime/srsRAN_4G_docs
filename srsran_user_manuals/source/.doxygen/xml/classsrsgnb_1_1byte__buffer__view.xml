<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1byte__buffer__view" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::byte_buffer_view</compoundname>
    <derivedcompoundref refid="classsrsgnb_1_1byte__buffer__reader" prot="private" virt="non-virtual">srsgnb::byte_buffer_reader</derivedcompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1byte__buffer__view_1a5494a64db5c06215c2beb0f46173b7d5" prot="public" static="no">
        <type>uint8_t</type>
        <definition>using srsgnb::byte_buffer_view::value_type =  uint8_t</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="652" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1byte__buffer__view_1a7e7b0b54a3e69eb0767be2e8975b85ec" prot="public" static="no">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer::iterator</ref></type>
        <definition>using srsgnb::byte_buffer_view::iterator =  byte_buffer::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="653" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1byte__buffer__view_1a0f88ed4f38041f56da0d55af387a0c2b" prot="public" static="no">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer::const_iterator</ref></type>
        <definition>using srsgnb::byte_buffer_view::const_iterator =  byte_buffer::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="654" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1byte__buffer__view_1a3ce130082d9e0b5f9d89e48e5c579ec2" prot="protected" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::byte_buffer_view::it</definition>
        <argsstring></argsstring>
        <name>it</name>
        <initializer>{nullptr, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="701" column="12" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1byte__buffer__view_1ab4cf57e37df065e65056fb42d31f072f" prot="protected" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::byte_buffer_view::it_end</definition>
        <argsstring></argsstring>
        <name>it_end</name>
        <initializer>{nullptr, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="702" column="12" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="702" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a5b86a0917da8378e9bb3a50a0ec93501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_view::byte_buffer_view</definition>
        <argsstring>()=default</argsstring>
        <name>byte_buffer_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="656" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1af9fead8cdc19f7b2a5a1c9f2ce273b7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_view::byte_buffer_view</definition>
        <argsstring>(iterator it_begin_, iterator it_end_)</argsstring>
        <name>byte_buffer_view</name>
        <param>
          <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
          <declname>it_begin_</declname>
        </param>
        <param>
          <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
          <declname>it_end_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="657" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="657" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a49219c689fe3d9ce250ab15680a88f14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_view::byte_buffer_view</definition>
        <argsstring>(const byte_buffer &amp;buffer)</argsstring>
        <name>byte_buffer_view</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="658" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="658" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1ab086c4d366b3b3f6d8bbf6c90f0110c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::byte_buffer_view::byte_buffer_view</definition>
        <argsstring>(const byte_buffer &amp;buffer, size_t start, size_t sz)</argsstring>
        <name>byte_buffer_view</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="659" column="3" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="659" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a4a642dff5853db409728ec568c6c0d78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::byte_buffer_view::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="661" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="661" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a6ca86a064eeedb9a91c0c51afcef6744" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::byte_buffer_view::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="662" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="662" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a00e88f0ac07244ef74a7f040d9be41bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::byte_buffer_view::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="663" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="663" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1ab4cc021d0a9cc8c25e0018304a56cc44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::byte_buffer_view::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="664" column="18" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="664" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a4fc9b5e2f5a231bb037d24b12820d55c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::byte_buffer_view::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="666" column="8" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="666" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1ae293ebfbf603224b292c19a89db59628" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::byte_buffer_view::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="668" column="10" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="668" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a14da7c39f10131bab1ab60961c00f735" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const uint8_t &amp;</type>
        <definition>const uint8_t&amp; srsgnb::byte_buffer_view::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="670" column="17" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="670" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref></type>
        <definition>byte_buffer_view srsgnb::byte_buffer_view::view</definition>
        <argsstring>(size_t offset, size_t size) const</argsstring>
        <name>view</name>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Returns another sub-view with dimensions specified in arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="673" column="20" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="673" bodyend="677"/>
        <referencedby refid="classsrsgnb_1_1byte__buffer__slice_1aaf4046087e8623465b0f957fd193b1e8" compoundref="byte__buffer_8h" startline="753" endline="757">srsgnb::byte_buffer_slice::make_slice</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1a1ed6f765b9b6afc032859f72da8105a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>, <ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref> &gt;</type>
        <definition>std::pair&lt;byte_buffer_view, byte_buffer_view&gt; srsgnb::byte_buffer_view::split</definition>
        <argsstring>(size_t offset)</argsstring>
        <name>split</name>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split byte buffer view into two contiguous views, with break point defined by &quot;offset&quot;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>index at which view is split into two contiguous views. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pair of contiguous views. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="682" column="13" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="682" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1ac6b99b5d4dfa7fb4cce4e671de6689da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::byte_buffer_view::operator==</definition>
        <argsstring>(const Range &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const Range &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compare <ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref> with Range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="690" column="8" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1byte__buffer__view_1af42a7144e7c4e74913497ba6b0ab494a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::byte_buffer_view::operator!=</definition>
        <argsstring>(const Range &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const Range &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/byte_buffer.h" line="695" column="8" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="695" bodyend="698"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srsgnb::byte_buffer_reader</label>
        <link refid="classsrsgnb_1_1byte__buffer__reader"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::byte_buffer_view</label>
        <link refid="classsrsgnb_1_1byte__buffer__view"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>srsgnb::byte_buffer_segment</label>
        <link refid="classsrsgnb_1_1byte__buffer__segment"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-metadata_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::byte_buffer_segment::metadata_storage</label>
        <link refid="structsrsgnb_1_1byte__buffer__segment_1_1metadata__storage"/>
      </node>
      <node id="2">
        <label>srsgnb::byte_buffer::iterator_impl&lt; T &gt;</label>
        <link refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-current_segment</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::byte_buffer_view</label>
        <link refid="classsrsgnb_1_1byte__buffer__view"/>
        <childnode refid="2" relation="usage">
          <edgelabel>#it_end</edgelabel>
          <edgelabel>#it</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/byte_buffer.h" line="650" column="1" bodyfile="include/srsgnb/adt/byte_buffer.h" bodystart="649" bodyend="703"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a4a642dff5853db409728ec568c6c0d78" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a00e88f0ac07244ef74a7f040d9be41bb" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a5b86a0917da8378e9bb3a50a0ec93501" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>byte_buffer_view</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1af9fead8cdc19f7b2a5a1c9f2ce273b7c" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>byte_buffer_view</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a49219c689fe3d9ce250ab15680a88f14" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>byte_buffer_view</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1ab086c4d366b3b3f6d8bbf6c90f0110c9" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>byte_buffer_view</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a0f88ed4f38041f56da0d55af387a0c2b" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a4fc9b5e2f5a231bb037d24b12820d55c" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a6ca86a064eeedb9a91c0c51afcef6744" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1ab4cc021d0a9cc8c25e0018304a56cc44" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a3ce130082d9e0b5f9d89e48e5c579ec2" prot="protected" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>it</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1ab4cf57e37df065e65056fb42d31f072f" prot="protected" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>it_end</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a7e7b0b54a3e69eb0767be2e8975b85ec" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1ae293ebfbf603224b292c19a89db59628" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>length</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1af42a7144e7c4e74913497ba6b0ab494a" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1ac6b99b5d4dfa7fb4cce4e671de6689da" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a14da7c39f10131bab1ab60961c00f735" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>operator[]</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a1ed6f765b9b6afc032859f72da8105a7" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>split</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1a5494a64db5c06215c2beb0f46173b7d5" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>value_type</name></member>
      <member refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" prot="public" virt="non-virtual"><scope>srsgnb::byte_buffer_view</scope><name>view</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
