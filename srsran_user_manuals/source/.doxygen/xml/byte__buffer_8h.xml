<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="byte__buffer_8h" kind="file" language="C++">
    <compoundname>byte_buffer.h</compoundname>
    <includes refid="span_8h" local="yes">srsgnb/adt/span.h</includes>
    <includes refid="format_8h" local="yes">srsgnb/srslog/bundled/fmt/format.h</includes>
    <includes refid="srsgnb__assert_8h" local="yes">srsgnb/support/srsgnb_assert.h</includes>
    <includes local="no">array</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">vector</includes>
    <includedby refid="byte__buffer__slice__chain_8h" local="yes">include/srsgnb/adt/byte_buffer_slice_chain.h</includedby>
    <includedby refid="du__manager_8h" local="yes">include/srsgnb/du_manager/du_manager.h</includedby>
    <includedby refid="f1ap__packet__procedures_8h" local="yes">include/srsgnb/f1_interface/common/f1ap_packet_procedures.h</includedby>
    <includedby refid="f1ap__cu_8h" local="yes">include/srsgnb/f1_interface/cu/f1ap_cu.h</includedby>
    <includedby refid="f1ap__du_8h" local="yes">include/srsgnb/f1_interface/du/f1ap_du.h</includedby>
    <includedby refid="network__gateway_8h" local="yes">include/srsgnb/gateways/network_gateway.h</includedby>
    <includedby refid="include_2srsgnb_2mac_2cell__configuration_8h" local="yes">include/srsgnb/mac/cell_configuration.h</includedby>
    <includedby refid="mac__cell__result_8h" local="yes">include/srsgnb/mac/mac_cell_result.h</includedby>
    <includedby refid="mac__pdu__handler_8h" local="yes">include/srsgnb/mac/mac_pdu_handler.h</includedby>
    <includedby refid="mac__sdu__handler_8h" local="yes">include/srsgnb/mac/mac_sdu_handler.h</includedby>
    <includedby refid="pdcp__entity_8h" local="yes">include/srsgnb/pdcp/pdcp_entity.h</includedby>
    <includedby refid="pdcp__rx_8h" local="yes">include/srsgnb/pdcp/pdcp_rx.h</includedby>
    <includedby refid="pdcp__tx_8h" local="yes">include/srsgnb/pdcp/pdcp_tx.h</includedby>
    <includedby refid="pseudo__random__generator_8h" local="yes">include/srsgnb/phy/upper/sequence_generators/pseudo_random_generator.h</includedby>
    <includedby refid="nr__up__protocol_8h" local="yes">include/srsgnb/ran/nr_up_protocol.h</includedby>
    <includedby refid="rlc_8h" local="yes">include/srsgnb/rlc/rlc.h</includedby>
    <includedby refid="rlc__config__messages_8h" local="yes">include/srsgnb/rlc/rlc_config_messages.h</includedby>
    <includedby refid="rrc_8h" local="yes">include/srsgnb/rrc/rrc.h</includedby>
    <includedby refid="rrc__ue__entity__interface_8h" local="yes">include/srsgnb/rrc/rrc_ue_entity_interface.h</includedby>
    <includedby refid="sdap_8h" local="yes">include/srsgnb/sdap/sdap.h</includedby>
    <includedby refid="sdap__entity_8h" local="yes">include/srsgnb/sdap/sdap_entity.h</includedby>
    <includedby refid="sdap__packet__procedures_8h" local="yes">include/srsgnb/sdap/sdap_packet_procedures.h</includedby>
    <includedby refid="bit__encoding_8h" local="yes">include/srsgnb/support/bit_encoding.h</includedby>
    <includedby refid="rrc__ue__adapters_8h" local="yes">lib/cu_cp/adapters/rrc_ue_adapters.h</includedby>
    <includedby refid="f1ap__asn1__packer_8h" local="yes">lib/f1_interface/common/f1ap_asn1_packer.h</includedby>
    <includedby refid="mac__ul__sch__pdu_8h" local="yes">lib/mac/mac_ul/mac_ul_sch_pdu.h</includedby>
    <includedby refid="ul__bsr_8h" local="yes">lib/mac/mac_ul/ul_bsr.h</includedby>
    <includedby refid="e1ap__pcap_8cpp" local="yes">lib/pcap/e1ap_pcap.cpp</includedby>
    <includedby refid="f1ap__pcap_8cpp" local="yes">lib/pcap/f1ap_pcap.cpp</includedby>
    <includedby refid="ngap__pcap_8cpp" local="yes">lib/pcap/ngap_pcap.cpp</includedby>
    <includedby refid="pdcp__entity__rx_8h" local="yes">lib/pdcp/pdcp_entity_rx.h</includedby>
    <includedby refid="pdcp__entity__tx_8h" local="yes">lib/pdcp/pdcp_entity_tx.h</includedby>
    <includedby refid="rlc__am__pdu_8h" local="yes">lib/rlc/rlc_am_pdu.h</includedby>
    <includedby refid="rlc__sdu__queue_8h" local="yes">lib/rlc/rlc_sdu_queue.h</includedby>
    <includedby refid="rlc__um__pdu_8h" local="yes">lib/rlc/rlc_um_pdu.h</includedby>
    <includedby refid="rrc__asn1__helpers_8h" local="yes">lib/rrc/ue/rrc_asn1_helpers.h</includedby>
    <incdepgraph>
      <node id="41">
        <label>atomic</label>
      </node>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>include/srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="21">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>pthread.h</label>
      </node>
      <node id="13">
        <label>cstdio</label>
      </node>
      <node id="40">
        <label>tuple</label>
      </node>
      <node id="25">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="31">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>array</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cerrno</label>
      </node>
      <node id="2">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cstddef</label>
      </node>
      <node id="30">
        <label>chrono</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="134">
        <label>include/srsgnb/rlc/rlc_config_messages.h</label>
        <link refid="rlc__config__messages_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>lib/du_manager/adapters/mac_adapters.h</label>
        <link refid="mac__adapters_8h_source"/>
      </node>
      <node id="37">
        <label>lib/mac/mac_ctrl/srs_sched_config_adapter.h</label>
        <link refid="srs__sched__config__adapter_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>lib/phy/upper/signal_processors/dmrs_pdsch_processor_impl.h</label>
        <link refid="dmrs__pdsch__processor__impl_8h_source"/>
      </node>
      <node id="47">
        <label>include/srsgnb/rlc/rlc_entity.h</label>
        <link refid="rlc__entity_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>lib/du_manager/procedures/ue_creation_procedure.h</label>
        <link refid="du__manager_2procedures_2ue__creation__procedure_8h_source"/>
      </node>
      <node id="85">
        <label>lib/rrc/ue/procedures/rrc_setup_procedure.h</label>
        <link refid="rrc__setup__procedure_8h_source"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>lib/du_manager/adapters/rlc_adapters.h</label>
        <link refid="rlc__adapters_8h_source"/>
      </node>
      <node id="5">
        <label>lib/du_high/du_high.h</label>
        <link refid="du__high_8h_source"/>
      </node>
      <node id="71">
        <label>lib/f1_interface/du/handlers/f1c_du_packet_handler.h</label>
        <link refid="f1c__du__packet__handler_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>include/srsgnb/pdcp/pdcp_factory.h</label>
        <link refid="pdcp__factory_8h_source"/>
      </node>
      <node id="117">
        <label>lib/phy/upper/channel_processors/pbch_encoder_impl.h</label>
        <link refid="pbch__encoder__impl_8h_source"/>
      </node>
      <node id="2">
        <label>include/srsgnb/adt/byte_buffer_slice_chain.h</label>
        <link refid="byte__buffer__slice__chain_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>lib/mac/mac_dl/mac_dl_processor.h</label>
        <link refid="mac__dl__processor_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>include/srsgnb/phy/upper/channel_processors/channel_processor_factories.h</label>
        <link refid="channel__processor__factories_8h_source"/>
      </node>
      <node id="91">
        <label>include/srsgnb/f1_interface/cu/f1ap_cu_factory.h</label>
        <link refid="f1ap__cu__factory_8h_source"/>
      </node>
      <node id="48">
        <label>include/srsgnb/rlc/rlc_factory.h</label>
        <link refid="rlc__factory_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>lib/du_high/adapters.h</label>
        <link refid="adapters_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>lib/cu_cp/du_processor.h</label>
        <link refid="lib_2cu__cp_2du__processor_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>include/srsgnb/pdcp/pdcp_rx.h</label>
        <link refid="pdcp__rx_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>include/srsgnb/phy/upper/signal_processors/signal_processor_factories.h</label>
        <link refid="signal__processor__factories_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>lib/du_manager/du_manager_interfaces.h</label>
        <link refid="du__manager__interfaces_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>lib/phy/upper/channel_processors/pdcch_modulator_impl.h</label>
        <link refid="pdcch__modulator__impl_8h_source"/>
      </node>
      <node id="73">
        <label>include/srsgnb/cu_cp/cu_cp.h</label>
        <link refid="include_2srsgnb_2cu__cp_2cu__cp_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/srsgnb/du_high/du_high_configuration.h</label>
        <link refid="du__high__configuration_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>lib/rrc/ue/rrc_asn1_helpers.h</label>
        <link refid="rrc__asn1__helpers_8h_source"/>
      </node>
      <node id="46">
        <label>include/srsgnb/rlc/rlc.h</label>
        <link refid="rlc_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>include/srsgnb/pdcp/pdcp_entity.h</label>
        <link refid="pdcp__entity_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>lib/rlc/rlc_rx_am_entity.h</label>
        <link refid="rlc__rx__am__entity_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>lib/rrc/ue/rrc_ue_context.h</label>
        <link refid="rrc__ue__context_8h_source"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>lib/mac/mac_config_interfaces.h</label>
        <link refid="mac__config__interfaces_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>include/srsgnb/ran/nr_up_protocol.h</label>
        <link refid="nr__up__protocol_8h_source"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>lib/rlc/rlc_tx_am_entity.h</label>
        <link refid="rlc__tx__am__entity_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>include/srsgnb/mac/mac_configuration_helpers.h</label>
        <link refid="mac__configuration__helpers_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>include/srsgnb/pdcp/pdcp_tx.h</label>
        <link refid="pdcp__tx_8h_source"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>lib/phy/upper/signal_processors/dmrs_pdcch_processor_impl.h</label>
        <link refid="dmrs__pdcch__processor__impl_8h_source"/>
      </node>
      <node id="67">
        <label>lib/f1_interface/du/f1ap_du_context.h</label>
        <link refid="f1ap__du__context_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>lib/gateways/sctp_network_gateway.h</label>
        <link refid="sctp__network__gateway_8h_source"/>
      </node>
      <node id="3">
        <label>include/srsgnb/mac/mac_cell_result.h</label>
        <link refid="mac__cell__result_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>include/srsgnb/f1_interface/du/f1ap_du_factory.h</label>
        <link refid="f1ap__du__factory_8h_source"/>
      </node>
      <node id="147">
        <label>lib/mac/mac_ul/ul_bsr.h</label>
        <link refid="ul__bsr_8h_source"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>lib/cu_cp/adapters/rrc_ue_adapters.h</label>
        <link refid="rrc__ue__adapters_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>include/srsgnb/rrc/rrc_ue_entity_interface.h</label>
        <link refid="rrc__ue__entity__interface_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>include/srsgnb/mac/mac_pdu_handler.h</label>
        <link refid="mac__pdu__handler_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>include/srsgnb/cu_cp/cu_cp_configuration.h</label>
        <link refid="cu__cp__configuration_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>lib/mac/mac_ul/mac_ul_ue_manager.h</label>
        <link refid="mac__ul__ue__manager_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>lib/phy/upper/channel_processors/pusch_demodulator_impl.h</label>
        <link refid="pusch__demodulator__impl_8h"/>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>lib/f1_interface/cu/f1ap_cu_impl.h</label>
        <link refid="f1ap__cu__impl_8h_source"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>lib/f1_interface/common/remote_message_handler.h</label>
        <link refid="remote__message__handler_8h_source"/>
      </node>
      <node id="110">
        <label>lib/pdcp/pdcp_packet_procedures_impl.h</label>
        <link refid="pdcp__packet__procedures__impl_8h_source"/>
      </node>
      <node id="97">
        <label>lib/du_manager/procedures/initial_du_setup_procedure.h</label>
        <link refid="initial__du__setup__procedure_8h_source"/>
      </node>
      <node id="8">
        <label>include/srsgnb/mac/mac_factory.h</label>
        <link refid="mac__factory_8h_source"/>
      </node>
      <node id="144">
        <label>include/srsgnb/sdap/sdap_packet_procedures.h</label>
        <link refid="sdap__packet__procedures_8h_source"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>lib/phy/upper/channel_processors/pdsch_modulator_impl.h</label>
        <link refid="pdsch__modulator__impl_8h_source"/>
      </node>
      <node id="106">
        <label>lib/mac/mac_dl/ssb_assembler.h</label>
        <link refid="ssb__assembler_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>lib/mac/mac_ul/mac_ul_sch_pdu.h</label>
        <link refid="mac__ul__sch__pdu_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>lib/pdcp/pdcp_entity_impl.h</label>
        <link refid="pdcp__entity__impl_8h_source"/>
      </node>
      <node id="9">
        <label>lib/fapi_adaptor/mac/mac_to_fapi_translator.h</label>
        <link refid="mac__to__fapi__translator_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/srsgnb/fapi_adaptor/mac/messages/pdcch.h</label>
        <link refid="mac_2messages_2pdcch_8h_source"/>
      </node>
      <node id="39">
        <label>lib/mac/rach_handler.h</label>
        <link refid="rach__handler_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>lib/phy/upper/channel_processors/pusch_demodulator_impl.cpp</label>
        <link refid="pusch__demodulator__impl_8cpp"/>
      </node>
      <node id="11">
        <label>lib/mac/mac_config.h</label>
        <link refid="mac__config_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>lib/f1_interface/common/f1ap_asn1_packer.h</label>
        <link refid="f1ap__asn1__packer_8h_source"/>
      </node>
      <node id="63">
        <label>lib/pdcp/pdcp_entity_rx.h</label>
        <link refid="pdcp__entity__rx_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>include/srsgnb/phy/upper/sequence_generators/pseudo_random_generator.h</label>
        <link refid="pseudo__random__generator_8h"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>lib/cu_cp/adapters/f1ap_adapters.h</label>
        <link refid="f1ap__adapters_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>lib/rlc/rlc_sdu_queue.h</label>
        <link refid="rlc__sdu__queue_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>lib/f1_interface/du/f1ap_du_impl.h</label>
        <link refid="f1ap__du__impl_8h_source"/>
      </node>
      <node id="150">
        <label>lib/rlc/rlc_retx_queue.h</label>
        <link refid="rlc__retx__queue_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>lib/mac/mac_ctrl/mac_scheduler_configurator.h</label>
        <link refid="mac__scheduler__configurator_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>lib/rrc/ue/rrc_ue_entity.h</label>
        <link refid="rrc__ue__entity_8h_source"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>lib/phy/upper/signal_processors/pucch/pucch_helper.h</label>
        <link refid="pucch__helper_8h_source"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>lib/du_manager/du_manager_impl.h</label>
        <link refid="du__manager__impl_8h_source"/>
      </node>
      <node id="41">
        <label>lib/mac/mac_dl/sib_pdu_assembler.h</label>
        <link refid="sib__pdu__assembler_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>include/srsgnb/cu_cp/du_processor.h</label>
        <link refid="include_2srsgnb_2cu__cp_2du__processor_8h_source"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>include/srsgnb/rrc/rrc.h</label>
        <link refid="rrc_8h_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>include/srsgnb/du_manager/du_manager_factory.h</label>
        <link refid="du__manager__factory_8h_source"/>
      </node>
      <node id="30">
        <label>lib/du_manager/du_cell_manager.h</label>
        <link refid="du__cell__manager_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>lib/du_manager/procedures/ue_deletion_procedure.h</label>
        <link refid="ue__deletion__procedure_8h_source"/>
      </node>
      <node id="50">
        <label>lib/rlc/rlc_base_entity.h</label>
        <link refid="rlc__base__entity_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>lib/mac/mac_dl/mac_cell_processor.h</label>
        <link refid="mac__cell__processor_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>lib/rlc/rlc_rx_entity.h</label>
        <link refid="rlc__rx__entity_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>lib/phy/upper/signal_processors/dmrs_pbch_processor_impl.h</label>
        <link refid="dmrs__pbch__processor__impl_8h_source"/>
      </node>
      <node id="45">
        <label>lib/du_manager/du_ue_context.h</label>
        <link refid="du__ue__context_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>lib/mac/mac_dl/mac_dl_ue_manager.h</label>
        <link refid="mac__dl__ue__manager_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>lib/rlc/rlc_um_pdu.h</label>
        <link refid="rlc__um__pdu_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>lib/du_manager/du_ue_manager.h</label>
        <link refid="du__ue__manager_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>lib/pdcp/pdcp_entity_tx.h</label>
        <link refid="pdcp__entity__tx_8h_source"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>lib/phy/upper/channel_processors/pbch_modulator_impl.h</label>
        <link refid="pbch__modulator__impl_8h_source"/>
      </node>
      <node id="56">
        <label>lib/rlc/rlc_rx_tm_entity.h</label>
        <link refid="rlc__rx__tm__entity_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>lib/mac/mac_ul/mac_ul_processor.h</label>
        <link refid="mac__ul__processor_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>lib/mac/mac_ctrl/sched_config_helpers.h</label>
        <link refid="sched__config__helpers_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lib/f1_interface/common/f1ap_packet_procedures_impl.h</label>
        <link refid="f1ap__packet__procedures__impl_8h_source"/>
      </node>
      <node id="60">
        <label>lib/rlc/rlc_tx_tm_entity.h</label>
        <link refid="rlc__tx__tm__entity_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>lib/phy/upper/signal_processors/csi_rs_processor_impl.h</label>
        <link refid="csi__rs__processor__impl_8h_source"/>
      </node>
      <node id="13">
        <label>lib/mac/mac_impl.h</label>
        <link refid="mac__impl_8h_source"/>
      </node>
      <node id="57">
        <label>lib/rlc/rlc_rx_um_entity.h</label>
        <link refid="rlc__rx__um__entity_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>lib/rlc/rlc_tx_entity.h</label>
        <link refid="rlc__tx__entity_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>lib/rlc/rlc_um_entity.h</label>
        <link refid="rlc__um__entity_8h_source"/>
      </node>
      <node id="12">
        <label>lib/mac/mac_ctrl/mac_controller.h</label>
        <link refid="mac__controller_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>lib/rlc/rlc_tx_um_entity.h</label>
        <link refid="rlc__tx__um__entity_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>lib/sdap/sdap_packet_procedures_impl.h</label>
        <link refid="sdap__packet__procedures__impl_8h_source"/>
      </node>
      <node id="72">
        <label>include/srsgnb/f1_interface/cu/f1ap_cu.h</label>
        <link refid="f1ap__cu_8h_source"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/srsgnb/fapi_adaptor/mac/messages/ssb.h</label>
        <link refid="mac_2messages_2ssb_8h_source"/>
      </node>
      <node id="87">
        <label>lib/cu_cp/ue_manager.h</label>
        <link refid="ue__manager_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>lib/mac/mac_ctrl/ue_delete_procedure.h</label>
        <link refid="ue__delete__procedure_8h_source"/>
      </node>
      <node id="138">
        <label>include/srsgnb/sdap/sdap_factory.h</label>
        <link refid="sdap__factory_8h_source"/>
      </node>
      <node id="52">
        <label>lib/rlc/rlc_tm_entity.h</label>
        <link refid="rlc__tm__entity_8h_source"/>
      </node>
      <node id="137">
        <label>include/srsgnb/sdap/sdap.h</label>
        <link refid="sdap_8h_source"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>include/srsgnb/support/bit_encoding.h</label>
        <link refid="bit__encoding_8h_source"/>
      </node>
      <node id="27">
        <label>lib/du_manager/du_manager_config.h</label>
        <link refid="du__manager__config_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>include/srsgnb/mac/mac_sdu_handler.h</label>
        <link refid="mac__sdu__handler_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>lib/cu_cp/du_processor_config.h</label>
        <link refid="du__processor__config_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>lib/rlc/rlc_am_entity.h</label>
        <link refid="rlc__am__entity_8h_source"/>
      </node>
      <node id="123">
        <label>lib/phy/upper/sequence_generators/pseudo_random_generator_impl.h</label>
        <link refid="pseudo__random__generator__impl_8h"/>
      </node>
      <node id="23">
        <label>include/srsgnb/mac/mac_ue_configurator.h</label>
        <link refid="mac__ue__configurator_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>lib/rrc/rrc_entity.h</label>
        <link refid="rrc__entity_8h_source"/>
      </node>
      <node id="80">
        <label>include/srsgnb/cu_cp/ue_context.h</label>
        <link refid="ue__context_8h_source"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>include/srsgnb/mac/mac.h</label>
        <link refid="mac_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>include/srsgnb/rrc/rrc_factory.h</label>
        <link refid="rrc__factory_8h_source"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>include/srsgnb/gateways/network_gateway.h</label>
        <link refid="network__gateway_8h_source"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>include/srsgnb/du_manager/du_manager.h</label>
        <link refid="du__manager_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>include/srsgnb/f1_interface/cu/f1u_cu.h</label>
        <link refid="f1u__cu_8h_source"/>
      </node>
      <node id="96">
        <label>lib/du_manager/converters/f1c_configuration_helpers.h</label>
        <link refid="f1c__configuration__helpers_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>include/srsgnb/f1_interface/du/f1u_du.h</label>
        <link refid="f1u__du_8h_source"/>
      </node>
      <node id="40">
        <label>include/srsgnb/mac/mac_cell_manager.h</label>
        <link refid="mac__cell__manager_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>lib/du_manager/converters/mac_cell_configuration_helpers.h</label>
        <link refid="mac__cell__configuration__helpers_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>lib/cu_cp/ue_manager_interfaces.h</label>
        <link refid="ue__manager__interfaces_8h_source"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>lib/mac/mac_dl/rar_pdu_assembler.h</label>
        <link refid="rar__pdu__assembler_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>lib/sdap/sdap_impl.h</label>
        <link refid="sdap__impl_8h_source"/>
      </node>
      <node id="149">
        <label>lib/rlc/rlc_am_interconnect.h</label>
        <link refid="rlc__am__interconnect_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>lib/mac/mac_ul/pdu_rx_handler.h</label>
        <link refid="pdu__rx__handler_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/mac/mac_ctrl/ue_creation_procedure.h</label>
        <link refid="mac_2mac__ctrl_2ue__creation__procedure_8h_source"/>
      </node>
      <node id="148">
        <label>lib/rlc/rlc_am_pdu.h</label>
        <link refid="rlc__am__pdu_8h_source"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>lib/cu_cp/cu_cp.h</label>
        <link refid="lib_2cu__cp_2cu__cp_8h_source"/>
      </node>
      <node id="98">
        <label>lib/f1_interface/common/colocated_message_handler.h</label>
        <link refid="colocated__message__handler_8h_source"/>
      </node>
      <node id="10">
        <label>lib/fapi_adaptor/mac/mac_fapi_adaptor_impl.h</label>
        <link refid="mac__fapi__adaptor__impl_8h_source"/>
      </node>
      <node id="143">
        <label>lib/sdap/sdap_entity_impl.h</label>
        <link refid="sdap__entity__impl_8h_source"/>
      </node>
      <node id="81">
        <label>include/srsgnb/rrc/rrc_entity_interface.h</label>
        <link refid="rrc__entity__interface_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>lib/f1_interface/du/procedures/f1ap_du_setup_procedure.h</label>
        <link refid="f1ap__du__setup__procedure_8h_source"/>
      </node>
      <node id="69">
        <label>include/srsgnb/f1_interface/common/f1ap_packet_procedures.h</label>
        <link refid="f1ap__packet__procedures_8h_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>lib/cu_cp/adapters/pdcp_adapters.h</label>
        <link refid="pdcp__adapters_8h_source"/>
      </node>
      <node id="141">
        <label>include/srsgnb/sdap/sdap_entity.h</label>
        <link refid="sdap__entity_8h_source"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>lib/phy/upper/signal_processors/pucch/dmrs_pucch_processor_format1_impl.h</label>
        <link refid="dmrs__pucch__processor__format1__impl_8h_source"/>
      </node>
      <node id="16">
        <label>lib/mac/mac_ctrl/ue_reconfiguration_procedure.h</label>
        <link refid="ue__reconfiguration__procedure_8h_source"/>
      </node>
      <node id="92">
        <label>lib/f1_interface/cu/procedures/f1ap_ue_context_release_procedure.h</label>
        <link refid="f1ap__ue__context__release__procedure_8h_source"/>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>include/srsgnb/mac/cell_configuration.h</label>
        <link refid="include_2srsgnb_2mac_2cell__configuration_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>include/srsgnb/f1_interface/du/f1ap_du.h</label>
        <link refid="f1ap__du_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>include/srsgnb/sdap/sdap_entity_factory.h</label>
        <link refid="sdap__entity__factory_8h_source"/>
      </node>
      <node id="130">
        <label>lib/phy/upper/signal_processors/pucch/dmrs_pucch_processor_format2_impl.h</label>
        <link refid="dmrs__pucch__processor__format2__impl_8h_source"/>
      </node>
      <node id="114">
        <label>include/srsgnb/phy/upper/sequence_generators/sequence_generator_factories.h</label>
        <link refid="sequence__generator__factories_8h_source"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classsrsgnb_1_1byte__buffer__segment" prot="public">srsgnb::byte_buffer_segment</innerclass>
    <innerclass refid="structsrsgnb_1_1byte__buffer__segment_1_1metadata__storage" prot="public">srsgnb::byte_buffer_segment::metadata_storage</innerclass>
    <innerclass refid="classsrsgnb_1_1byte__buffer" prot="public">srsgnb::byte_buffer</innerclass>
    <innerclass refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" prot="private">srsgnb::byte_buffer::iterator_impl</innerclass>
    <innerclass refid="classsrsgnb_1_1byte__buffer__view" prot="public">srsgnb::byte_buffer_view</innerclass>
    <innerclass refid="classsrsgnb_1_1byte__buffer__slice" prot="public">srsgnb::byte_buffer_slice</innerclass>
    <innerclass refid="classsrsgnb_1_1byte__buffer__reader" prot="public">srsgnb::byte_buffer_reader</innerclass>
    <innerclass refid="classsrsgnb_1_1byte__buffer__writer" prot="public">srsgnb::byte_buffer_writer</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1byte__buffer__view_01_4" prot="public">fmt::formatter&lt; srsgnb::byte_buffer_view &gt;</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1byte__buffer_01_4" prot="public">fmt::formatter&lt; srsgnb::byte_buffer &gt;</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1byte__buffer__slice_01_4" prot="public">fmt::formatter&lt; srsgnb::byte_buffer_slice &gt;</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/span.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/bundled/fmt/format.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/support/srsgnb_assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classsrsgnb_1_1byte__buffer__segment" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>SEGMENT_SIZE<sp/><sp/><sp/><sp/><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DEFAULT_HEADROOM<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/><sp/><sp/><sp/><sp/>=<sp/>uint8_t;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>uint8_t*;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_iterator<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structsrsgnb_1_1byte__buffer__segment_1_1metadata__storage" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1byte__buffer__segment_1_1metadata__storage" kindref="compound">metadata_storage</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;byte_buffer_segment&gt;<sp/>next<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref><sp/>=<sp/>DEFAULT_HEADROOM)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Members<sp/>initialized<sp/>here<sp/>instead<sp/>of<sp/>the<sp/>initialization<sp/>list<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>12.1.0<sp/>to<sp/>warn<sp/>about<sp/>uninitialized<sp/>use<sp/>of<sp/>buffer<sp/>[-Werror=uninitialized]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer.data()<sp/>+<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>buffer.data()<sp/>+<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Members<sp/>initialized<sp/>here<sp/>instead<sp/>of<sp/>the<sp/>initialization<sp/>list<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>12.1.0<sp/>to<sp/>warn<sp/>about<sp/>uninitialized<sp/>use<sp/>of<sp/>buffer<sp/>[-Werror=uninitialized]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer.data()<sp/>+<sp/>other.headroom();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>buffer.data()<sp/>+<sp/>other.tailroom_start();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(other.begin(),<sp/>other.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>byte_buffer_segment(byte_buffer_segment&amp;&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Members<sp/>initialized<sp/>here<sp/>instead<sp/>of<sp/>the<sp/>initialization<sp/>list<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>12.1.0<sp/>to<sp/>warn<sp/>about<sp/>uninitialized<sp/>use<sp/>of<sp/>buffer<sp/>[-Werror=uninitialized]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer.data()<sp/>+<sp/>other.headroom();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>buffer.data()<sp/>+<sp/>other.tailroom_start();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(other.begin(),<sp/>other.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>byte_buffer_segment&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer_segment&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>payload_data_<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer.data()<sp/>+<sp/>other.headroom();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>buffer.data()<sp/>+<sp/>other.tailroom_start();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(other.begin(),<sp/>other.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>byte_buffer_segment&amp;<sp/>operator=(byte_buffer_segment&amp;&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/><sp/><sp/><sp/><sp/>=<sp/>buffer.data()<sp/>+<sp/>other.headroom();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>buffer.data()<sp/>+<sp/>other.tailroom_start();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(other.begin(),<sp/>other.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEGMENT_SIZE;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classsrsgnb_1_1byte__buffer__segment_1accc270fbbb423a04c5468d4acf15b8e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1accc270fbbb423a04c5468d4acf15b8e2" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin()<sp/>==<sp/>end();<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data()<sp/>-<sp/>buffer.data();<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end()<sp/>-<sp/>begin();<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer.end()<sp/>-<sp/>end();<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classsrsgnb_1_1byte__buffer__segment_1ad1d0aa7629be1d015c1c3419cf2bb195" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ad1d0aa7629be1d015c1c3419cf2bb195" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>{<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ad1d0aa7629be1d015c1c3419cf2bb195" kindref="member">append</ref>(<ref refid="classbytes" kindref="compound">bytes</ref>.begin(),<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.end());<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>It&gt;</highlight></codeline>
<codeline lineno="100" refid="classsrsgnb_1_1byte__buffer__segment_1aaaea66e00022e9c938bd8cec6fec78a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aaaea66e00022e9c938bd8cec6fec78a4" kindref="member">append</ref>(It<sp/>it_begin,<sp/>It<sp/>it_end)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;std::decay_t&lt;decltype(*it_begin)&gt;,<sp/>uint8_t&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>value_type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;It&gt;::iterator_category,<sp/>std::random_access_iterator_tag&gt;::value,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>random<sp/>access<sp/>iterators<sp/>allowed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(it_end<sp/>-<sp/>it_begin)<sp/>&lt;=<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>tailroom<sp/>for<sp/>append.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>std::copy(it_begin,<sp/>it_end,<sp/>end());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classsrsgnb_1_1byte__buffer__segment_1ac0fa3f5de9e35204c21cda5177e95cb0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac0fa3f5de9e35204c21cda5177e95cb0" kindref="member">append</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>()<sp/>&gt;=<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>tailroom<sp/>space.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[tailroom_start()]<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classsrsgnb_1_1byte__buffer__segment_1a4bfebeb1a6c81da7b9b6d31f168a6c99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a4bfebeb1a6c81da7b9b6d31f168a6c99" kindref="member">prepend</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(<ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>()<sp/>&gt;=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size(),<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>headroom<sp/>space.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/>-=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(<ref refid="classbytes" kindref="compound">bytes</ref>.begin(),<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classsrsgnb_1_1byte__buffer__segment_1a39138edd998ca789b1fe1a6d61b24351" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a39138edd998ca789b1fe1a6d61b24351" kindref="member">reserve_prepend</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(<ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>()<sp/>&gt;=<sp/>nof_bytes,<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>headroom<sp/>space.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/>-=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classsrsgnb_1_1byte__buffer__segment_1a65d7ad1ad946eb687b1c8e753d440b09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a65d7ad1ad946eb687b1c8e753d440b09" kindref="member">trim_head</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(nof_bytes<sp/>&lt;=<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>headroom<sp/>space.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_<sp/>+=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classsrsgnb_1_1byte__buffer__segment_1a07141ea1a5024ee86f14f7d992dd764e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a07141ea1a5024ee86f14f7d992dd764e" kindref="member">trim_tail</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(nof_bytes<sp/>&lt;=<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>headroom<sp/>space.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>-=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classsrsgnb_1_1byte__buffer__segment_1a42b6c83bc239fb44b991bd8124ceeee0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1a42b6c83bc239fb44b991bd8124ceeee0" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_assert(nof_bytes<sp/>&lt;=<sp/>capacity()<sp/>-<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>space<sp/>for<sp/>provided<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>payload_data_end_<sp/>=<sp/>payload_data_<sp/>+<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>uint8_t&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(idx<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Out-of-bound<sp/>access&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(begin()<sp/>+<sp/>idx);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(idx<sp/>&lt;<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Out-of-bound<sp/>access&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(begin()<sp/>+<sp/>idx);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin();<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>data()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin();<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>uint8_t&amp;<sp/>back()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(not<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1accc270fbbb423a04c5468d4acf15b8e2" kindref="member">empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;back()<sp/>called<sp/>for<sp/>empty<sp/>segment.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(payload_data_end_<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>back()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(not<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1accc270fbbb423a04c5468d4acf15b8e2" kindref="member">empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;back()<sp/>called<sp/>for<sp/>empty<sp/>segment.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(payload_data_end_<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>payload_data_;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>end()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>payload_data_end_;<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>payload_data_;<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>payload_data_end_;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>metadata_storage&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata_;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>metadata_storage&amp;<sp/>metadata()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata_;<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>byte_buffer_segment*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>next()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata().next.get();<sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer_segment*<sp/>next()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metadata().next.get();<sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_same&lt;std::decay_t&lt;decltype(*other.begin())&gt;,<sp/>uint8_t&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>value_type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::equal(begin(),<sp/>end(),<sp/>other.begin(),<sp/>other.end());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="199"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tailroom_start()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1ac8d4e465bcc450fb22a5519270cfdd5f" kindref="member">headroom</ref>()<sp/>+<sp/><ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>();<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>metadata_storage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata_;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>std::array&lt;uint8_t,<sp/>SEGMENT_SIZE&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payload_data_;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payload_data_end_;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">byte_buffer_view;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">byte_buffer_slice;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classsrsgnb_1_1byte__buffer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref></highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="222" refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_type</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::remove_const_t&lt;T&gt;;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T&amp;;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>pointer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>T*;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>difference_type<sp/><sp/><sp/>=<sp/>std::ptrdiff_t;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator_category<sp/>=<sp/>std::forward_iterator_tag;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref>(<ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>start_segment<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset_<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_segment(start_segment),<sp/>offset(offset_)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>U,<sp/>std::enable_if_t&lt;not<sp/>std::is_same&lt;U,<sp/>T&gt;::value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;U&gt;</ref>&amp;<sp/>other)<sp/>:<sp/>current_segment(other.current_segment),<sp/>offset(other.offset)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>operator*()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(current_segment-&gt;data()<sp/>+<sp/>offset);<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(current_segment-&gt;data()<sp/>+<sp/>offset);<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/><sp/><sp/>operator-&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_segment-&gt;data()<sp/>+<sp/>offset);<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/><sp/><sp/>operator-&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_segment-&gt;data()<sp/>+<sp/>offset);<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref>&amp;<sp/>operator++()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;=<sp/>current_segment-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>())<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_segment<sp/>=<sp/>current_segment-&gt;next();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref><sp/>tmp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref><sp/>operator+(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="260"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref><sp/>tmp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref>&amp;<sp/>operator+=(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current_segment<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>and<sp/>offset<sp/>&gt;=<sp/>current_segment-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>-=<sp/>current_segment-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_segment<sp/>=<sp/>current_segment-&gt;next();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srsgnb_sanity_check(current_segment<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>or<sp/>offset<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Out-of-bounds<sp/>Access&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;T&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>difference_type<sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>seg<sp/><sp/>=<sp/>other.current_segment;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>seg<sp/>!=<sp/>current_segment;<sp/>seg<sp/>=<sp/>seg-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>+=<sp/>seg-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff<sp/>+=<sp/>offset<sp/>-<sp/>other.offset;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diff;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;T&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="288"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_segment<sp/>==<sp/>other.current_segment<sp/>and<sp/>offset<sp/>==<sp/>other.offset;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;T&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OtherT&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>current_segment;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/><sp/><sp/><sp/><sp/>=<sp/>uint8_t;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;uint8_t&gt;</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator_impl&lt;const uint8_t&gt;</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>{<sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(<ref refid="classbytes" kindref="compound">bytes</ref>);<sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>(std::initializer_list&lt;uint8_t&gt;<sp/>lst)<sp/>:<sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt;const<sp/>uint8_t&gt;{lst.<ref refid="classsrsgnb_1_1span_1add5e683519422d8051fb3e3ff5baae58" kindref="member">begin</ref>(),<sp/>lst.size()})<sp/>{}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>It&gt;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>byte_buffer(It<sp/>other_begin,<sp/>It<sp/>other_end)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>optimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>other_begin<sp/>!=<sp/>other_end;<sp/>++other_begin)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(*other_begin);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>byte_buffer(byte_buffer&amp;&amp;<sp/>other)<sp/>noexcept<sp/>:<sp/>head(std::move(other.head)),<sp/>tail(other.tail),<sp/>len(other.len)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>other.tail<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>other.len<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>byte_buffer&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer_1ae820aad046bff855377a2b5da0f47940" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classsrsgnb_1_1byte__buffer_1a216cd8834a0172dbb1aaff0cb117b680" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer_1a216cd8834a0172dbb1aaff0cb117b680" kindref="member">operator=</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(other.head);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.tail;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>other.len;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>other.tail<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>other.len<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classsrsgnb_1_1byte__buffer_1ac118be01353caec60096a448d2a5acc7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer_1ac118be01353caec60096a448d2a5acc7" kindref="member">operator=</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a6a67622f8c23eb07eb676dbf834e2592" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(<ref refid="classbytes" kindref="compound">bytes</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classsrsgnb_1_1byte__buffer_1a39647fb0bd0ecacd3a8db26eaa1706e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a39647fb0bd0ecacd3a8db26eaa1706e3" kindref="member">deep_copy</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="350"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/>buf;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>seg<sp/>=<sp/>head.get();<sp/>seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>seg<sp/>=<sp/>seg-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf.<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;uint8_t&gt;</ref>{seg-&gt;<ref refid="classsrsgnb_1_1span_1aba4308bbfa76f662c5e7cf1b4afd78c5" kindref="member">data</ref>(),<sp/>seg-&gt;length()});</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="classsrsgnb_1_1byte__buffer_1aad30a49b1aa6fc07bb68247f0e66f654" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer_1aad30a49b1aa6fc07bb68247f0e66f654" kindref="member">copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>{*</highlight><highlight class="keyword">this</highlight><highlight class="normal">};<sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()<sp/>and<sp/>not<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size();)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_write<sp/>=<sp/>std::min(tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>(),<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size()<sp/>-<sp/>count);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/>subspan<sp/><sp/>=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.subspan(count,<sp/>to_write);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1ad1d0aa7629be1d015c1c3419cf2bb195" kindref="member">append</ref>(subspan);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>to_write;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>to_write;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classsrsgnb_1_1byte__buffer_1ac42df14cb5fcfa7373463a6d46bf9297" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1ac42df14cb5fcfa7373463a6d46bf9297" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;uint8_t&gt;&amp;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>{<sp/><ref refid="classsrsgnb_1_1byte__buffer_1ac42df14cb5fcfa7373463a6d46bf9297" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref>{<ref refid="classbytes" kindref="compound">bytes</ref>.begin(),<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size()});<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="classsrsgnb_1_1byte__buffer_1ad28eadc4b5003c77c4eff533c2ac101f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1ad28eadc4b5003c77c4eff533c2ac101f" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()<sp/>and<sp/>not<sp/>other.empty())<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>seg<sp/>=<sp/>other.head.get();<sp/>seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>seg<sp/>=<sp/>seg-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>other_it<sp/>=<sp/>seg-&gt;begin();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(other_it<sp/>!=<sp/>seg-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to_append<sp/>=<sp/>std::min(seg-&gt;end()<sp/>-<sp/>other_it,<sp/>(iterator::difference_type)tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1ad1d0aa7629be1d015c1c3419cf2bb195" kindref="member">append</ref>(other_it,<sp/>other_it<sp/>+<sp/>to_append);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_it<sp/>+=<sp/>to_append;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>seg-&gt;length();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classsrsgnb_1_1byte__buffer_1abcab045535ba28feb594a1d9e569bb7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1abcab045535ba28feb594a1d9e569bb7b" kindref="member">append</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()<sp/>or<sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1ad1d0aa7629be1d015c1c3419cf2bb195" kindref="member">append</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>&amp;<sp/>view);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>&amp;<sp/>view);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classsrsgnb_1_1byte__buffer_1a43122cec140be3aab95547f857c724cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43122cec140be3aab95547f857c724cc" kindref="member">prepend</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prepend_segment();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size();)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;headroom()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepend_segment();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_write<sp/>=<sp/>std::min(head-&gt;headroom(),<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size()<sp/>-<sp/>count);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/>subspan<sp/><sp/>=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.subspan(<ref refid="classbytes" kindref="compound">bytes</ref>.size()<sp/>-<sp/>to_write<sp/>-<sp/>count,<sp/>to_write);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;prepend(subspan);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>to_write;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a1444b2d9decb4b134920d477366a57a6" kindref="member">reserve_prepend</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="classsrsgnb_1_1byte__buffer_1a6efb6459f2ab4cd1997bfc5ed3296a86" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer_1a6efb6459f2ab4cd1997bfc5ed3296a86" kindref="member">chain_after</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/>after)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>std::move(after);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;metadata().next<sp/>=<sp/>std::move(after.head);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>after.tail;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>after.len;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>after.len<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>after.tail<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="classsrsgnb_1_1byte__buffer_1a5b3dd691d060a75288592940af781ce3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer_1a5b3dd691d060a75288592940af781ce3" kindref="member">chain_before</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/>before)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>std::move(before);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>before.tail-&gt;metadata().next<sp/>=<sp/>std::move(head);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(before.head);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>before.len;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>before.len<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>before.tail<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="classsrsgnb_1_1byte__buffer_1a6a67622f8c23eb07eb676dbf834e2592" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a6a67622f8c23eb07eb676dbf834e2592" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="classsrsgnb_1_1byte__buffer_1a51ba7d6352b30ea46057c62556251788" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a51ba7d6352b30ea46057c62556251788" kindref="member">trim_head</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(<ref refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" kindref="member">length</ref>()<sp/>&gt;=<sp/>nof_bytes,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>trim<sp/>more<sp/>bytes<sp/>than<sp/>those<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trimmed<sp/>=<sp/>0;<sp/>trimmed<sp/>!=<sp/>nof_bytes;)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>to_trim<sp/>=<sp/>std::min(nof_bytes<sp/>-<sp/>trimmed,<sp/>head-&gt;length());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;trim_head(to_trim);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trimmed<sp/>+=<sp/>to_trim;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;length()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>std::move(head-&gt;metadata().next);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="classsrsgnb_1_1byte__buffer_1a3356d4c78747efbdeea3a610e6152585" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a3356d4c78747efbdeea3a610e6152585" kindref="member">trim_tail</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1aac9a16d6995efe3c2dffdcfe79c8c63d" kindref="member">length</ref>()<sp/>&gt;=<sp/>nof_bytes)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a07141ea1a5024ee86f14f7d992dd764e" kindref="member">trim_tail</ref>(nof_bytes);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" kindref="member">length</ref>()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;<sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>uint8_t&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>back()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tail-&gt;back();<sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>back()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tail-&gt;back();<sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(begin()<sp/>+<sp/>i);<sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>container)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="521"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Possible<sp/>optimization<sp/>to<sp/>account<sp/>batches<sp/>of<sp/>segments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::equal(begin(),<sp/>end(),<sp/>container.begin(),<sp/>container.end());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);<sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator{head.get(),<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>const_iterator<sp/>cbegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_iterator{head.get(),<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_iterator{head.get(),<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>end()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_iterator{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>const_iterator<sp/>cend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_iterator{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0};<sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="classsrsgnb_1_1byte__buffer_1a6c19eca3015b722fa66d017aa015b7ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a6c19eca3015b722fa66d017aa015b7ad" kindref="member">is_contiguous</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head.get()<sp/>==<sp/>tail;<sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="classsrsgnb_1_1byte__buffer_1a5acb001e77647f3aa59c283abfefed0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a5acb001e77647f3aa59c283abfefed0e" kindref="member">linearize</ref>()</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a6c19eca3015b722fa66d017aa015b7ad" kindref="member">is_contiguous</ref>())<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&gt;<sp/>byte_buffer_segment::capacity()<sp/>-<sp/>head-&gt;headroom())<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>seg<sp/>=<sp/>head-&gt;next();<sp/>seg<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>seg<sp/>=<sp/>seg-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;append(seg-&gt;begin(),<sp/>seg-&gt;end());</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>head-&gt;metadata().next.reset();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>head.get();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="classsrsgnb_1_1byte__buffer_1a89eb43226b396cbeb1d9007761a6fc7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a89eb43226b396cbeb1d9007761a6fc7d" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_sz)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>prev_len<sp/>=<sp/><ref refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_sz<sp/>==<sp/>prev_len)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_sz<sp/>&gt;<sp/>prev_len)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>to_add<sp/>=<sp/>new_sz<sp/>-<sp/>prev_len;<sp/>to_add<sp/>&gt;<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()<sp/>or<sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>added<sp/>=<sp/>std::min(tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a2b3e9910568a2a13414a29966bce35f2" kindref="member">tailroom</ref>(),<sp/>to_add);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="classsrsgnb_1_1byte__buffer__segment_1a42b6c83bc239fb44b991bd8124ceeee0" kindref="member">resize</ref>(added);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_add<sp/>-=<sp/>added;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer__segment" kindref="compound">byte_buffer_segment</ref>*<sp/>seg<sp/>=<sp/>head.get();<sp/>count<sp/>&lt;<sp/>new_sz;<sp/>seg<sp/>=<sp/>seg-&gt;next())<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_seg_len<sp/>=<sp/>std::min(seg-&gt;length(),<sp/>new_sz<sp/>-<sp/>count);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_seg_len<sp/>!=<sp/>seg-&gt;length())<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;resize(new_seg_len);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>new_seg_len;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>new_sz)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg-&gt;metadata().next<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>seg;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>new_sz;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_segment()</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Use<sp/>memory<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Verify<sp/>if<sp/>allocation<sp/>was<sp/>successful.<sp/>What<sp/>to<sp/>do<sp/>if<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>headroom<sp/>given.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>std::make_shared&lt;byte_buffer_segment&gt;((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)byte_buffer_segment::DEFAULT_HEADROOM);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>head.get();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>headroom<sp/>needed<sp/>for<sp/>later<sp/>segments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;metadata().next<sp/>=<sp/>std::make_shared&lt;byte_buffer_segment&gt;(0);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tail-&gt;next();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prepend_segment()</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Use<sp/>memory<sp/>pool.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Verify<sp/>if<sp/>allocation<sp/>was<sp/>successful.<sp/>What<sp/>to<sp/>do<sp/>if<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf<sp/>=<sp/>std::make_shared&lt;byte_buffer_segment&gt;();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>buf.get();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;metadata().next<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Optimize.<sp/>shared_ptr&lt;&gt;<sp/>has<sp/>a<sp/>lot<sp/>of<sp/>boilerplate<sp/>we<sp/>don&apos;t<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;byte_buffer_segment&gt;<sp/>head<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>byte_buffer_segment*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>buf,<sp/>span&lt;const<sp/>uint8_t&gt;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>val<sp/>:<sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size()<sp/>or<sp/>val<sp/>!=<sp/><ref refid="classbytes" kindref="compound">bytes</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(span&lt;const<sp/>uint8_t&gt;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>buf)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf<sp/>==<sp/><ref refid="classbytes" kindref="compound">bytes</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>buf,<sp/>span&lt;const<sp/>uint8_t&gt;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(buf<sp/>==<sp/><ref refid="classbytes" kindref="compound">bytes</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(span&lt;const<sp/>uint8_t&gt;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte_buffer&amp;<sp/>buf)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(buf<sp/>==<sp/><ref refid="classbytes" kindref="compound">bytes</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="classsrsgnb_1_1byte__buffer__view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref></highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/><sp/><sp/><sp/><sp/>=<sp/>uint8_t;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer::iterator</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer::const_iterator</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>(<ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/>it_begin_,<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/>it_end_)<sp/>:<sp/>it(it_begin_),<sp/>it_end(it_end_)<sp/>{}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>buffer)<sp/>:<sp/>it(buffer.begin()),<sp/>it_end(buffer.end())<sp/>{}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/>:<sp/>it(buffer.begin()<sp/>+<sp/>start),<sp/>it_end(it<sp/>+<sp/>sz)<sp/>{}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;<sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_end;<sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;<sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_end;<sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it<sp/>==<sp/>it_end;<sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_end<sp/>-<sp/>it;<sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(it<sp/>+<sp/>i);<sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" kindref="member">view</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="674"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(offset<sp/>+<sp/>size<sp/>&lt;=<sp/>length(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>view<sp/>dimensions.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{it<sp/>+<sp/>offset,<sp/>it<sp/>+<sp/>offset<sp/>+<sp/>size};</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="classsrsgnb_1_1byte__buffer__view_1a1ed6f765b9b6afc032859f72da8105a7" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;byte_buffer_view,<sp/>byte_buffer_view&gt;<sp/><ref refid="classsrsgnb_1_1byte__buffer__view_1a1ed6f765b9b6afc032859f72da8105a7" kindref="member">split</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_split<sp/>=<sp/>begin()<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{{begin(),<sp/>it_split},<sp/>{it_split,<sp/>end()}};</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Range&gt;</highlight></codeline>
<codeline lineno="690" refid="classsrsgnb_1_1byte__buffer__view_1ac6b99b5d4dfa7fb4cce4e671de6689da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view_1ac6b99b5d4dfa7fb4cce4e671de6689da" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Range&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="691"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::equal(begin(),<sp/>end(),<sp/>other.begin(),<sp/>other.end());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Range&gt;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Range&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="696"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>iterator<sp/>it{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>iterator<sp/>it_end{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0};</highlight></codeline>
<codeline lineno="703"><highlight class="normal">};</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="classsrsgnb_1_1byte__buffer_1a3355e3f7f079babfee80cc1a4d2caae2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">byte_buffer::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>&amp;<sp/>view)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()<sp/>and<sp/>not<sp/>view.empty())<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Optimize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/>:<sp/>view)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(b);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="classsrsgnb_1_1byte__buffer__slice" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref></highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/><sp/><sp/><sp/><sp/>=<sp/>byte_buffer_view::value_type;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer_view::iterator</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref><sp/>=<sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">byte_buffer_view::const_iterator</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;&amp;<sp/>buf_)<sp/>:<sp/>sliced_view(buf_.begin(),<sp/>buf_.end()),<sp/>buf(std::move(buf_))<sp/>{}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>buf_)<sp/>:<sp/>sliced_view(buf_.begin(),<sp/>buf_.end()),<sp/>buf(buf_.<ref refid="classsrsgnb_1_1byte__buffer_1aad30a49b1aa6fc07bb68247f0e66f654" kindref="member">copy</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>buf_,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>sliced_view(buf_,<sp/>offset,<sp/>length),<sp/>buf(buf_.<ref refid="classsrsgnb_1_1byte__buffer_1aad30a49b1aa6fc07bb68247f0e66f654" kindref="member">copy</ref>())</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>buf_,<sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" kindref="member">view</ref>)<sp/>:<sp/>sliced_view(<ref refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" kindref="member">view</ref>),<sp/>buf(buf_.<ref refid="classsrsgnb_1_1byte__buffer_1aad30a49b1aa6fc07bb68247f0e66f654" kindref="member">copy</ref>())</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(<ref refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" kindref="member">view</ref>.begin()<sp/>-<sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>{buf}.begin()<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)buf.length(),</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;byte_buffer_view<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>owned<sp/>byte_buffer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>buf.clear();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>sliced_view<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="749" refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" kindref="member">view</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view;<sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view;<sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="classsrsgnb_1_1byte__buffer__slice_1aaf4046087e8623465b0f957fd193b1e8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice_1aaf4046087e8623465b0f957fd193b1e8" kindref="member">make_slice</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>srsgnb_sanity_check(offset<sp/>+<sp/>size<sp/>&lt;=<sp/>length(),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>view<sp/>dimensions.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{buf,<sp/>sliced_view.<ref refid="classsrsgnb_1_1byte__buffer__view_1aa4a2fc2a2cdfdb0fed06b087001734fa" kindref="member">view</ref>(offset,<sp/>size)};</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="classsrsgnb_1_1byte__buffer__slice_1a2fa3ad90bd86d533a2bd6f8413781588" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer__slice_1a2fa3ad90bd86d533a2bd6f8413781588" kindref="member">advance</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>sliced_view<sp/>=<sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>{sliced_view.begin()<sp/>+<sp/>offset,<sp/>sliced_view.end()};</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/>empty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view.empty();<sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view.length();<sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view[idx];<sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view.begin();<sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view.begin();<sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/>end()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view.end();<sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sliced_view.end();<sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Range&gt;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Range&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="778"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::equal(begin(),<sp/>end(),<sp/>r.begin(),<sp/>r.end());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Range&gt;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Range&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="784"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>r);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>byte_buffer_view<sp/>sliced_view;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>byte_buffer<sp/><sp/><sp/><sp/><sp/><sp/>buf;</highlight></codeline>
<codeline lineno="791"><highlight class="normal">};</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="classsrsgnb_1_1byte__buffer_1a1b11d99e2885641a7f814ce8ebc92560" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">byte_buffer::append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref>&amp;<sp/>view)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>()<sp/>and<sp/>not<sp/>view.empty())<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>append_segment();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Optimize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/>:<sp/>view)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(b);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="classsrsgnb_1_1byte__buffer__reader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer__reader" kindref="compound">byte_buffer_reader</ref><sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref></highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>byte_buffer_view::begin;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>byte_buffer_view::byte_buffer_view;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>byte_buffer_view::empty;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>byte_buffer_view::end;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>byte_buffer_view::length;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader" kindref="compound">byte_buffer_reader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>&amp;<sp/>other)<sp/>:<sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>(other)<sp/>{}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="classsrsgnb_1_1byte__buffer__reader_1a233371437129a914b8fb65b8e34816e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader_1a233371437129a914b8fb65b8e34816e9" kindref="member">view</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{it,<sp/>it_end};<sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t&amp;<sp/>operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*it;<sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>const_iterator<sp/>operator++()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++it;<sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="classsrsgnb_1_1byte__buffer__reader_1a53d5413bce3bd589815b08f91b20eced" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1byte__buffer_1_1iterator__impl" kindref="compound">const_iterator</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader_1a53d5413bce3bd589815b08f91b20eced" kindref="member">operator+=</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it<sp/>+=<sp/>offset;<sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="827" refid="classsrsgnb_1_1byte__buffer__reader_1af861e9e8d85deb0ac5609686e3199485" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader_1af861e9e8d85deb0ac5609686e3199485" kindref="member">split_and_advance</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prev_it<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{prev_it,<sp/>it};</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal">};</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="classsrsgnb_1_1byte__buffer__writer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrsgnb_1_1byte__buffer__writer" kindref="compound">byte_buffer_writer</ref></highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer" kindref="compound">byte_buffer_writer</ref>(<ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>&amp;<sp/>other)<sp/>:<sp/>buffer(&amp;other)<sp/>{}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="842" refid="classsrsgnb_1_1byte__buffer__writer_1abfef82559acaf45bf3e3c5a82e808762" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1abfef82559acaf45bf3e3c5a82e808762" kindref="member">view</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*buffer;<sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1a89bc8eeb91b9817ed9978ce8f418fc7c" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>do<sp/>batch<sp/>append.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>:<sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="classsrsgnb_1_1byte__buffer__writer_1abfa4339beb75136b28416d6414492dbe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1abfa4339beb75136b28416d6414492dbe" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;uint8_t&gt;&amp;<sp/><ref refid="classbytes" kindref="compound">bytes</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref>{<ref refid="classbytes" kindref="compound">bytes</ref>.begin(),<sp/><ref refid="classbytes" kindref="compound">bytes</ref>.size()});</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="classsrsgnb_1_1byte__buffer__writer_1afccda1c1c607747b4cf135b3017104dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1afccda1c1c607747b4cf135b3017104dd" kindref="member">append</ref>(<ref refid="classsrsgnb_1_1span" kindref="compound">span&lt;const uint8_t&gt;</ref><sp/><ref refid="classbytes" kindref="compound">bytes</ref>)<sp/>{<sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(<ref refid="classbytes" kindref="compound">bytes</ref>);<sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="classsrsgnb_1_1byte__buffer__writer_1abdb2fd56b3908a868ccd7209541857bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1abdb2fd56b3908a868ccd7209541857bc" kindref="member">append</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/>{<sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_zeros(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_zeros)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>optimize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nof_zeros;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="874" refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t&amp;<sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1a71d980400858391eeeb47e5ee6dba8fa" kindref="member">back</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;back();<sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="classsrsgnb_1_1byte__buffer__writer_1a404c62982f2275bd178144e0b4727ab1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1a404c62982f2275bd178144e0b4727ab1" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a69d1b655e9e1cd9997eac6dce6afc23b" kindref="member">length</ref>();<sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="classsrsgnb_1_1byte__buffer__writer_1aeadf870396a3e6f1261a47e7cbb7fa30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__writer_1aeadf870396a3e6f1261a47e7cbb7fa30" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>();<sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>*<sp/>buffer;</highlight></codeline>
<codeline lineno="884"><highlight class="normal">};</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886" refid="classsrsgnb_1_1byte__buffer_1a1444b2d9decb4b134920d477366a57a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref><sp/><ref refid="classsrsgnb_1_1byte__buffer_1a1444b2d9decb4b134920d477366a57a6" kindref="member">byte_buffer::reserve_prepend</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nof_bytes)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1byte__buffer_1a8a747f0c6c8f215deb0f9cdf0e4eca43" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>prepend_segment();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;headroom()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prepend_segment();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>to_reserve<sp/>=<sp/>std::min(head-&gt;headroom(),<sp/>count);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>head-&gt;reserve_prepend(to_reserve);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>to_reserve;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>len<sp/>+=<sp/>nof_bytes;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>{begin(),<sp/>begin()<sp/>+<sp/>nof_bytes};</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="namespacesrsgnb_1a4d60c45a17cb198fb8ada6ac58ffc7ea" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/><ref refid="namespacesrsgnb_1a4d60c45a17cb198fb8ada6ac58ffc7ea" kindref="member">make_byte_buffer</ref>(std::string<sp/>hex_str)</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>srsgnb_assert(hex_str.size()<sp/>%<sp/>2<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>hex<sp/>digits<sp/>must<sp/>be<sp/>even&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref><sp/>ret;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hex_str.size();<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>val;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(hex_str.data()<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;%02hhX&quot;</highlight><highlight class="normal">,<sp/>&amp;val);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.<ref refid="classsrsgnb_1_1byte__buffer_1a43805fbaf448988220ddc9385b3db2dd" kindref="member">append</ref>(val);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="923" refid="structfmt_1_1formatter_3_01srsgnb_1_1byte__buffer__view_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::byte_buffer_view&gt;<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>hexadecimal,<sp/>binary<sp/>}<sp/>mode<sp/>=<sp/>hexadecimal;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>ctx.begin();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>ctx.end()<sp/>and<sp/>*it<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>binary;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">srsgnb::byte_buffer_view</ref>&amp;<sp/>buf,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>hexadecimal)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:0&gt;2x}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(buf.begin(),<sp/>buf.end(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:0&gt;8b}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(buf.begin(),<sp/>buf.end(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal">};</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="951" refid="structfmt_1_1formatter_3_01srsgnb_1_1byte__buffer_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::byte_buffer&gt;<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>hexadecimal,<sp/>binary<sp/>}<sp/>mode<sp/>=<sp/>hexadecimal;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>ctx.begin();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>ctx.end()<sp/>and<sp/>*it<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>binary;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">srsgnb::byte_buffer</ref>&amp;<sp/>buf,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>hexadecimal)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:0&gt;2x}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(buf.begin(),<sp/>buf.end(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;{:0&gt;8b}&quot;</highlight><highlight class="normal">,<sp/>fmt::join(buf.begin(),<sp/>buf.end(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal">};</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="979" refid="structfmt_1_1formatter_3_01srsgnb_1_1byte__buffer__slice_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::byte_buffer_slice&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structformatter" kindref="compound">formatter</ref>&lt;srsgnb::byte_buffer_view&gt;<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">srsgnb::byte_buffer_slice</ref>&amp;<sp/>buf,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structformatter" kindref="compound">formatter&lt;srsgnb::byte_buffer_view&gt;::format</ref>(buf.<ref refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" kindref="member">view</ref>(),<sp/>ctx);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal">};</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/srsgnb/adt/byte_buffer.h"/>
  </compounddef>
</doxygen>
