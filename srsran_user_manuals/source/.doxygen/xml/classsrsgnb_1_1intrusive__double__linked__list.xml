<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1intrusive__double__linked__list" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::intrusive_double_linked_list</compoundname>
    <includes refid="intrusive__list_8h" local="no">intrusive_list.h</includes>
    <innerclass refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" prot="private">srsgnb::intrusive_double_linked_list::iterator_impl</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Tag</type>
        <defval>default_intrusive_tag</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__double__linked__list_1abfbe2f5b6c5f149cb85524e0fe85bf17" prot="private" static="no">
        <type><ref refid="structsrsgnb_1_1intrusive__double__linked__list__element" kindref="compound">intrusive_double_linked_list_element</ref>&lt; Tag &gt;</type>
        <definition>using srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::node_t =  intrusive_double_linked_list_element&lt;Tag&gt;</definition>
        <argsstring></argsstring>
        <name>node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="134" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__double__linked__list_1ab2cc374fe68ed2f13bb69eb13987e417" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; T &gt;</type>
        <definition>using srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::iterator =  iterator_impl&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="171" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__double__linked__list_1ae74ec3bc6c9e63806ecd9b7a0e5db4cf" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; const T &gt;</type>
        <definition>using srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::const_iterator =  iterator_impl&lt;const T&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="172" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1intrusive__double__linked__list_1adcb5d42c922ab4704815809c18a5f444" prot="private" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1intrusive__double__linked__list__element" kindref="compound">node_t</ref> *</type>
        <definition>node_t* srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="240" column="10" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a82ea399301e1a226de4a24f59813a77e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::intrusive_double_linked_list</definition>
        <argsstring>()</argsstring>
        <name>intrusive_double_linked_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="174" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1aa5ae120ad3e6d69eceec9aebb6c9ff4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::intrusive_double_linked_list</definition>
        <argsstring>(const intrusive_double_linked_list &amp;)=default</argsstring>
        <name>intrusive_double_linked_list</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1intrusive__double__linked__list" kindref="compound">intrusive_double_linked_list</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="179" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1ada282fb9551005961b97f523c462bead" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::intrusive_double_linked_list</definition>
        <argsstring>(intrusive_double_linked_list &amp;&amp;other) noexcept</argsstring>
        <name>intrusive_double_linked_list</name>
        <param>
          <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list" kindref="compound">intrusive_double_linked_list</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="180" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1ab6247fa2261deb49540dd991e9503701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list" kindref="compound">intrusive_double_linked_list</ref> &amp;</type>
        <definition>intrusive_double_linked_list&amp; srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::operator=</definition>
        <argsstring>(const intrusive_double_linked_list &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1intrusive__double__linked__list" kindref="compound">intrusive_double_linked_list</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="184" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a467597b4eabc90c53d1ae5117218d67a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list" kindref="compound">intrusive_double_linked_list</ref> &amp;</type>
        <definition>intrusive_double_linked_list&amp; srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::operator=</definition>
        <argsstring>(intrusive_double_linked_list &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list" kindref="compound">intrusive_double_linked_list</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="185" column="32" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="185" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a9556329f53d6a500faddf538069cac7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::~intrusive_double_linked_list</definition>
        <argsstring>()</argsstring>
        <name>~intrusive_double_linked_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="191" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a02a04c2f099ae8b25ce21e9c014f1c90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="193" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1ac673f4af374a10e63a288b4464f12b95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::push_front</definition>
        <argsstring>(T *t)</argsstring>
        <name>push_front</name>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="195" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a9dbf1d909758fea23a88eb2f3cb733db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::pop</definition>
        <argsstring>(T *t)</argsstring>
        <name>pop</name>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="206" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="206" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1ad8d2a52d35e34a938f4d53956fa491da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::pop_front</definition>
        <argsstring>()</argsstring>
        <name>pop_front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="221" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1aad51820c1a753ebaa12570e2472b734b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="222" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="222" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a274451ca2458b2a5cd5c185985ed1b1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="232" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1ab53ede807ac12d7fd74cc13f8e4e5de9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="234" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a344217955b5f6efd753a1cdb167932ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="235" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1aace85241af671a1b362664ad381494a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="236" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__double__linked__list_1a14495e8fc9659212eb65ea5d7977a024" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__double__linked__list_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="237" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="237" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Double Linked List of pointers of type &quot;T&quot; that doesn&apos;t rely on allocations. Instead, it leverages T&apos;s internal pointers to store the next and previous nodes <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>node type. Must be a subclass of intrusive_double_linked_list_element&lt;Tag&gt; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Tag</parametername>
</parameternamelist>
<parameterdescription>
<para>tag of nodes. Useful to differentiate separate intrusive lists inside the same T node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::intrusive_double_linked_list&lt; T, Tag &gt;</label>
        <link refid="classsrsgnb_1_1intrusive__double__linked__list"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-node</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::intrusive_double_linked_list_element&lt; Tag &gt;</label>
        <link refid="structsrsgnb_1_1intrusive__double__linked__list__element"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/intrusive_list.h" line="133" column="1" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="132" bodyend="241"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ab53ede807ac12d7fd74cc13f8e4e5de9" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1aace85241af671a1b362664ad381494a7" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1aad51820c1a753ebaa12570e2472b734b" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ae74ec3bc6c9e63806ecd9b7a0e5db4cf" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a274451ca2458b2a5cd5c185985ed1b1e" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a344217955b5f6efd753a1cdb167932ca" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a14495e8fc9659212eb65ea5d7977a024" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a02a04c2f099ae8b25ce21e9c014f1c90" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>front</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a82ea399301e1a226de4a24f59813a77e" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>intrusive_double_linked_list</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1aa5ae120ad3e6d69eceec9aebb6c9ff4c" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>intrusive_double_linked_list</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ada282fb9551005961b97f523c462bead" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>intrusive_double_linked_list</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ab2cc374fe68ed2f13bb69eb13987e417" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1adcb5d42c922ab4704815809c18a5f444" prot="private" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>node</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1abfbe2f5b6c5f149cb85524e0fe85bf17" prot="private" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>node_t</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ab6247fa2261deb49540dd991e9503701" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a467597b4eabc90c53d1ae5117218d67a" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a9dbf1d909758fea23a88eb2f3cb733db" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>pop</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ad8d2a52d35e34a938f4d53956fa491da" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>pop_front</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1ac673f4af374a10e63a288b4464f12b95" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>push_front</name></member>
      <member refid="classsrsgnb_1_1intrusive__double__linked__list_1a9556329f53d6a500faddf538069cac7c" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_double_linked_list</scope><name>~intrusive_double_linked_list</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
