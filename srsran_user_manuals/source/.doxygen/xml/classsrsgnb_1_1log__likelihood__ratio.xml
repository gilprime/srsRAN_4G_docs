<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1log__likelihood__ratio" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::log_likelihood_ratio</compoundname>
    <includes refid="log__likelihood__ratio_8h" local="no">log_likelihood_ratio.h</includes>
      <sectiondef kind="user-defined">
      <header>Conversion operators.</header>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1aaf048c7293c254f4304b2da4477aa995" prot="public" static="no" constexpr="yes" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::log_likelihood_ratio::operator value_type</definition>
        <argsstring>() const</argsstring>
        <name>operator value_type</name>
        <briefdescription>
<para>Converts the LLR to a plain <computeroutput>value_type</computeroutput> value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="62" column="22" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="62" bodyend="62"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a44f2dc826a11f71fff4fa7810a9b6c10" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" kindref="member">value_type</ref></type>
        <definition>constexpr value_type srsgnb::log_likelihood_ratio::to_value_type</definition>
        <argsstring>() const</argsstring>
        <name>to_value_type</name>
        <briefdescription>
<para>Converts the LLR to a plain <computeroutput>value_type</computeroutput> value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="64" column="24" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="64" bodyend="64"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1aa5393dc38cb5edad4270a1854f4955ba" prot="public" static="no" constexpr="yes" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::log_likelihood_ratio::operator int</definition>
        <argsstring>() const</argsstring>
        <name>operator int</name>
        <briefdescription>
<para>Converts the LLR to a plain <computeroutput>int</computeroutput> value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="67" column="22" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="67" bodyend="67"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a2d9fb8568d423ac65c10a90ec0c81301" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>constexpr int srsgnb::log_likelihood_ratio::to_int</definition>
        <argsstring>() const</argsstring>
        <name>to_int</name>
        <briefdescription>
<para>Converts the LLR to a plain <computeroutput>int</computeroutput> value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="69" column="17" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="69" bodyend="69"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1afc45466c58db042607ea5182a14f3b29" compoundref="log__likelihood__ratio_8h" startline="178" endline="178">abs</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a19e3b96295b852a4e1e2930884dff224" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t srsgnb::log_likelihood_ratio::to_hard_bit</definition>
        <argsstring>() const</argsstring>
        <name>to_hard_bit</name>
        <briefdescription>
<para>Converts the LLR to a hard bit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>By convention, the null LLR indeterminate case returns a 0 bit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="73" column="21" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="73" bodyend="73"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Comparison operators.</header>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a1c956e472025854366eaf7a01e8cfc70" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::log_likelihood_ratio::operator==</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Plain comparison operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="111" column="18" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="111" bodyend="111"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a180d33577a1ac3fb780119bbbee69f8c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::log_likelihood_ratio::operator!=</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Plain comparison operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="112" column="18" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="112" bodyend="112"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ace28d26b1c872bf8272bfce51ba1cd9e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::log_likelihood_ratio::operator&gt;</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Plain comparison operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="113" column="18" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="113" bodyend="113"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a09aaefe384af41f91fc209ccc6e22f2d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::log_likelihood_ratio::operator&lt;</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Plain comparison operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="114" column="13" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="114" bodyend="114"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1acecd455d336ab754bda51b57a9a7ccfa" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::log_likelihood_ratio::operator&gt;=</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Plain comparison operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="115" column="18" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="115" bodyend="115"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ac00aa10b7047a17bf43ec546a4eadd1b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool srsgnb::log_likelihood_ratio::operator&lt;=</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Plain comparison operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="116" column="13" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="116" bodyend="116"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" prot="public" static="no">
        <type>int8_t</type>
        <definition>using srsgnb::log_likelihood_ratio::value_type =  int8_t</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Alias for the underlying data type used for representing the LLR value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="37" column="3" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" kindref="member">value_type</ref></type>
        <definition>value_type srsgnb::log_likelihood_ratio::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Actual LLR value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="215" column="14" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="215" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a59c1292ff1c54937326ff5d180902f08" compoundref="log__likelihood__ratio_8h" startline="50" endline="56">log_likelihood_ratio</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1aaf048c7293c254f4304b2da4477aa995" compoundref="log__likelihood__ratio_8h" startline="62" endline="62">operator value_type</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a44f2dc826a11f71fff4fa7810a9b6c10" compoundref="log__likelihood__ratio_8h" startline="64" endline="64">to_value_type</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1aa5393dc38cb5edad4270a1854f4955ba" compoundref="log__likelihood__ratio_8h" startline="67" endline="67">operator int</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a2d9fb8568d423ac65c10a90ec0c81301" compoundref="log__likelihood__ratio_8h" startline="69" endline="69">to_int</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a19e3b96295b852a4e1e2930884dff224" compoundref="log__likelihood__ratio_8h" startline="73" endline="73">to_hard_bit</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a156e16ba5a5a644ecfd334a412942a9e" compoundref="log__likelihood__ratio_8h" startline="80" endline="80">operator-</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a1c956e472025854366eaf7a01e8cfc70" compoundref="log__likelihood__ratio_8h" startline="111" endline="111">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a180d33577a1ac3fb780119bbbee69f8c" compoundref="log__likelihood__ratio_8h" startline="112" endline="112">operator!=</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ace28d26b1c872bf8272bfce51ba1cd9e" compoundref="log__likelihood__ratio_8h" startline="113" endline="113">operator&gt;</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a09aaefe384af41f91fc209ccc6e22f2d" compoundref="log__likelihood__ratio_8h" startline="114" endline="114">operator&lt;</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1acecd455d336ab754bda51b57a9a7ccfa" compoundref="log__likelihood__ratio_8h" startline="115" endline="115">operator&gt;=</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ac00aa10b7047a17bf43ec546a4eadd1b" compoundref="log__likelihood__ratio_8h" startline="116" endline="116">operator&lt;=</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ac256d8b7b11ac7c712406c7673ed1c46" compoundref="log__likelihood__ratio_8h" startline="142" endline="145">isfinite</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a3841eba3ffd2536d995566472aede3fa" compoundref="log__likelihood__ratio_8h" startline="168" endline="175">copysign</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a7c41114f18fb209fbbd1bd362b397e30" compoundref="log__likelihood__ratio_8h" startline="195" endline="203">soft_xor</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ad48b2249e764d269d27b2da88a20c463" compoundref="log__likelihood__ratio_8cpp" startline="36" endline="51">operator+=</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1af760df94f84b7a959fba914870db30a8" compoundref="log__likelihood__ratio_8cpp" startline="53" endline="66">promotion_sum</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ae677c15bc3c5bca9c47c4ff8d754219a" compoundref="log__likelihood__ratio_8cpp" startline="68" endline="77">quantize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1log__likelihood__ratio_1a205c1b9ae9afa41ccd761c970ff1f639" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" kindref="member">value_type</ref></type>
        <definition>constexpr value_type srsgnb::log_likelihood_ratio::LLR_INFTY</definition>
        <argsstring></argsstring>
        <name>LLR_INFTY</name>
        <initializer>= 127</initializer>
        <briefdescription>
<para>Represents a log-likelihood ratio set to infinity. </para>
        </briefdescription>
        <detaileddescription>
<para>An LLR takes the value <computeroutput>LLR_INFTY</computeroutput> when the corresponding bit is certainly zero. Similarly, an LLR takes the value <computeroutput>-LLR_INFTY</computeroutput> when the corresponding bit is certainly one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="221" column="31" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="221" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a59c1292ff1c54937326ff5d180902f08" compoundref="log__likelihood__ratio_8h" startline="50" endline="56">log_likelihood_ratio</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a426852f1526b1836e449c28033d2d5c2" compoundref="log__likelihood__ratio_8h" startline="133" endline="133">infinity</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1af760df94f84b7a959fba914870db30a8" compoundref="log__likelihood__ratio_8cpp" startline="53" endline="66">promotion_sum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" kindref="member">value_type</ref></type>
        <definition>constexpr value_type srsgnb::log_likelihood_ratio::LLR_MAX</definition>
        <argsstring></argsstring>
        <name>LLR_MAX</name>
        <initializer>= 120</initializer>
        <briefdescription>
<para>Maximum (finite) value of a log-likelihood ratio. </para>
        </briefdescription>
        <detaileddescription>
<para>Finite LLRs take values between <computeroutput>-LLR_MAX</computeroutput> and <computeroutput>LLR_MAX</computeroutput> (both included). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="226" column="31" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="226" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a59c1292ff1c54937326ff5d180902f08" compoundref="log__likelihood__ratio_8h" startline="50" endline="56">log_likelihood_ratio</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ad5095727c141c257608461d7890789ce" compoundref="log__likelihood__ratio_8h" startline="136" endline="136">max</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a02c71f8d2a9b64be359c4f0aa818e6a9" compoundref="log__likelihood__ratio_8h" startline="139" endline="139">min</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ac256d8b7b11ac7c712406c7673ed1c46" compoundref="log__likelihood__ratio_8h" startline="142" endline="145">isfinite</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ad48b2249e764d269d27b2da88a20c463" compoundref="log__likelihood__ratio_8cpp" startline="36" endline="51">operator+=</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1af760df94f84b7a959fba914870db30a8" compoundref="log__likelihood__ratio_8cpp" startline="53" endline="66">promotion_sum</referencedby>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1ae677c15bc3c5bca9c47c4ff8d754219a" compoundref="log__likelihood__ratio_8cpp" startline="68" endline="77">quantize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1aa9753ff7cafa3da89a33eedfde92d5c0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr srsgnb::log_likelihood_ratio::log_likelihood_ratio</definition>
        <argsstring>()=default</argsstring>
        <name>log_likelihood_ratio</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="40" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a59c1292ff1c54937326ff5d180902f08" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr srsgnb::log_likelihood_ratio::log_likelihood_ratio</definition>
        <argsstring>(T val)</argsstring>
        <name>log_likelihood_ratio</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Constructor from integral type. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a new LLR set to the provided value if the latter is in the range <computeroutput>-LLR_MAX</computeroutput> to <computeroutput>LLR_MAX</computeroutput>, or if it is <computeroutput><plusmn/>LLR_INFTY</computeroutput>. Otherwise, terminates the program execution. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The input type. Must be an integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value the LLR is set to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Implicit conversions are allowed on purpose. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="50" column="13" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="50" bodyend="56"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a205c1b9ae9afa41ccd761c970ff1f639" compoundref="log__likelihood__ratio_8h" startline="221">LLR_INFTY</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1add068f49cb3085f8daaed564f729f488" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref> &amp;</type>
        <definition>constexpr log_likelihood_ratio&amp; srsgnb::log_likelihood_ratio::operator=</definition>
        <argsstring>(const log_likelihood_ratio &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Default assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="77" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a156e16ba5a5a644ecfd334a412942a9e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>constexpr log_likelihood_ratio srsgnb::log_likelihood_ratio::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Negation (additive inverse). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="80" column="34" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="80" bodyend="80"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1acbf8f624175379e03bcce2bed4219ea7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>log_likelihood_ratio srsgnb::log_likelihood_ratio::operator+</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Saturated sum. </para>
        </briefdescription>
        <detaileddescription>
<para>The result is clipped if larger (in absolute value) than <ref refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" kindref="member">log_likelihood_ratio::LLR_MAX</ref>. Then, for instance, <computeroutput>LLR_MAX + 2 = LLR_MAX</computeroutput> and <computeroutput>-LLR_MAX - 2 = -LLR_MAX</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="86" column="24" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ad48b2249e764d269d27b2da88a20c463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>log_likelihood_ratio log_likelihood_ratio::operator+=</definition>
        <argsstring>(log_likelihood_ratio rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Addition assignment with saturated sum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="93" column="24" bodyfile="lib/phy/upper/log_likelihood_ratio.cpp" bodystart="36" bodyend="51"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ac334b020accc056601a475314c55937b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>log_likelihood_ratio srsgnb::log_likelihood_ratio::operator-</definition>
        <argsstring>(log_likelihood_ratio rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Saturated difference. </para>
        </briefdescription>
        <detaileddescription>
<para>Follows naturally from the saturated sum: <computeroutput>a - b = a + (-b)</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="98" column="24" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a234addd573e5b8f734a853566e08217d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>log_likelihood_ratio srsgnb::log_likelihood_ratio::operator-=</definition>
        <argsstring>(log_likelihood_ratio rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Subtraction assignment with saturated sum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="101" column="24" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="101" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ae677c15bc3c5bca9c47c4ff8d754219a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>log_likelihood_ratio log_likelihood_ratio::quantize</definition>
        <argsstring>(float value, float range_limit)</argsstring>
        <name>quantize</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>range_limit</declname>
        </param>
        <briefdescription>
<para>Clips and quantizes a real-valued (<computeroutput>float</computeroutput>), continuous log-likelihood ratio to the discrete representation of type <computeroutput><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The real-valued log-likelihood ratio to quantize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">range_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The input value mapped to <computeroutput>LLR_MAX</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A quantized representation of <computeroutput>value</computeroutput> as a <computeroutput><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></computeroutput> quantity. </para>
</simplesect>
<simplesect kind="note"><para>The quantization in the range <computeroutput>(-range_limit, range_limit)</computeroutput> is <ulink url="https://en.wikipedia.org/wiki/Quantization_(signal_processing)#Mid-riser_and_mid-tread_uniform_quantizers">mid-tread uniform</ulink>, with quantization step <computeroutput> range_limit / LLR_MAX </computeroutput>. </para>
</simplesect>
<simplesect kind="note"><para>All values larger (in magnitude) than <computeroutput>range_limit</computeroutput>, will be clipped and mapped to <computeroutput><plusmn/>LLR_MAX</computeroutput>, depending on their sign. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="130" column="31" bodyfile="lib/phy/upper/log_likelihood_ratio.cpp" bodystart="68" bodyend="77"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a426852f1526b1836e449c28033d2d5c2" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>static constexpr log_likelihood_ratio srsgnb::log_likelihood_ratio::infinity</definition>
        <argsstring>()</argsstring>
        <name>infinity</name>
        <briefdescription>
<para>Returns the special value &quot;positive infinity&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="133" column="41" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="133" bodyend="133"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a205c1b9ae9afa41ccd761c970ff1f639" compoundref="log__likelihood__ratio_8h" startline="221">LLR_INFTY</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ad5095727c141c257608461d7890789ce" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>static constexpr log_likelihood_ratio srsgnb::log_likelihood_ratio::max</definition>
        <argsstring>()</argsstring>
        <name>max</name>
        <briefdescription>
<para>Returns the maximum finite LLR value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="136" column="41" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="136" bodyend="136"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a02c71f8d2a9b64be359c4f0aa818e6a9" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>static constexpr log_likelihood_ratio srsgnb::log_likelihood_ratio::min</definition>
        <argsstring>()</argsstring>
        <name>min</name>
        <briefdescription>
<para>Returns the minimum finite LLR value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="139" column="41" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="139" bodyend="139"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1ac256d8b7b11ac7c712406c7673ed1c46" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>static constexpr bool srsgnb::log_likelihood_ratio::isfinite</definition>
        <argsstring>(log_likelihood_ratio llr)</argsstring>
        <name>isfinite</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>llr</declname>
        </param>
        <briefdescription>
<para>Checks whether a log-likelihood ratio has a finite value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="142" column="25" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="142" bodyend="145"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
        <referencedby refid="classsrsgnb_1_1log__likelihood__ratio_1a744d1c32fcc957eecbc9381e7337131b" compoundref="log__likelihood__ratio_8h" startline="148" endline="148">isinf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a744d1c32fcc957eecbc9381e7337131b" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>static constexpr bool srsgnb::log_likelihood_ratio::isinf</definition>
        <argsstring>(log_likelihood_ratio llr)</argsstring>
        <name>isinf</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>llr</declname>
        </param>
        <briefdescription>
<para>Checks whether a log-likelihood ratio has an infinite value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="148" column="25" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="148" bodyend="148"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1ac256d8b7b11ac7c712406c7673ed1c46" compoundref="log__likelihood__ratio_8h" startline="142" endline="145">isfinite</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1af760df94f84b7a959fba914870db30a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>log_likelihood_ratio log_likelihood_ratio::promotion_sum</definition>
        <argsstring>(log_likelihood_ratio a, log_likelihood_ratio b)</argsstring>
        <name>promotion_sum</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Promotion sum. </para>
        </briefdescription>
        <detaileddescription>
<para>As opposed to the saturated sum (i.e., <ref refid="classsrsgnb_1_1log__likelihood__ratio_1acbf8f624175379e03bcce2bed4219ea7" kindref="member">log_likelihood_ratio::operator+</ref>), results larger (in absolute value) than <computeroutput>LLR_MAX</computeroutput> are set to <computeroutput><plusmn/>LLR_INFTY</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>First summand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second summand. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The promotion sum of <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="157" column="31" bodyfile="lib/phy/upper/log_likelihood_ratio.cpp" bodystart="53" bodyend="66"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" compoundref="log__likelihood__ratio_8h" startline="226">LLR_MAX</references>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a205c1b9ae9afa41ccd761c970ff1f639" compoundref="log__likelihood__ratio_8h" startline="221">LLR_INFTY</references>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__generic_1a93107a25f420a286904a62e746280cac" compoundref="ldpc__decoder__impl_8cpp" startline="229" endline="249">srsgnb::ldpc_decoder_generic::update_soft_bits</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a3841eba3ffd2536d995566472aede3fa" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>static constexpr log_likelihood_ratio srsgnb::log_likelihood_ratio::copysign</definition>
        <argsstring>(log_likelihood_ratio a, T b)</argsstring>
        <name>copysign</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Copy sign from a number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>An arithmetic type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>A log-likelihood ratio. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>A real number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A log-likelihood ratio with the magnitude of <computeroutput>a</computeroutput> and the sign of <computeroutput>b</computeroutput>. </para>
</simplesect>
<simplesect kind="remark"><para>A zero in the second argument is considered as a positive number, following the convention of <computeroutput>std::copysign</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="168" column="41" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="168" bodyend="175"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__generic_1a500cb077147fb9be4d751bfc4b2235b6" compoundref="ldpc__decoder__impl_8cpp" startline="172" endline="227">srsgnb::ldpc_decoder_generic::update_check_to_variable_messages</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1afc45466c58db042607ea5182a14f3b29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" kindref="member">value_type</ref></type>
        <definition>static value_type srsgnb::log_likelihood_ratio::abs</definition>
        <argsstring>(log_likelihood_ratio a)</argsstring>
        <name>abs</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Absolute value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="178" column="21" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="178" bodyend="178"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a2d9fb8568d423ac65c10a90ec0c81301" compoundref="log__likelihood__ratio_8h" startline="69" endline="69">to_int</references>
        <referencedby refid="classsrsgnb_1_1ldpc__decoder__generic_1a500cb077147fb9be4d751bfc4b2235b6" compoundref="ldpc__decoder__impl_8cpp" startline="172" endline="227">srsgnb::ldpc_decoder_generic::update_check_to_variable_messages</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a7c41114f18fb209fbbd1bd362b397e30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
        <definition>static log_likelihood_ratio srsgnb::log_likelihood_ratio::soft_xor</definition>
        <argsstring>(log_likelihood_ratio x, log_likelihood_ratio y)</argsstring>
        <name>soft_xor</name>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1log__likelihood__ratio" kindref="compound">log_likelihood_ratio</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Soft XOR operation. </para>
        </briefdescription>
        <detaileddescription>
<para>The soft XOR between two LLRs <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> is the log-likelihood ratio corresponding to the logical XOR operation <formula id="63">$a \oplus b$</formula>, where <formula id="64">$a$</formula> and <formula id="65">$b$</formula> are the bits whose soft representation is <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput>, respectively.</para>
<para><simplesect kind="remark"><para>For complexity reasons, the true soft xor function <formula id="66">\[ \text{soft_xor}(x, y) = \sign(x y) \cdot \Phi\Bigl(\Phi(\abs{x}) + \Phi(\abs{y})\Bigr) \qquad\text{with } \Phi: \mathbb{R}_+ \to \mathbb{R}_+; u \mapsto \Phi(u) = -\ln\Bigl(\tanh\Bigl(\frac{u}{2}\Bigr)\Bigr) \]</formula> is replaced by the common approximation <formula id="67">\[ \text{soft_xor}(x, y) \approx \sign(x y) \cdot \min\bigl\{\abs{x}, \abs{y}\bigr\}. \]</formula> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="195" column="31" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="195" bodyend="203"/>
        <references refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" compoundref="log__likelihood__ratio_8h" startline="215">value</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a051ed46be9ce83eb6840ce03773964b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int srsgnb::log_likelihood_ratio::norm_squared</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>norm_squared</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Squared Euclidean norm of a sequence of LLRs. </para>
        </briefdescription>
        <detaileddescription>
<para>Computes the squared Euclidean norm (sum of the squares of the elements) of the input sequence of LLRs.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>A span (or any container convertible to a span) of a log-likelihood ratios (either constant or volatile). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A sequence of (possibly constant) log-likelihood ratios. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The squared Euclidean norm of <computeroutput>x</computeroutput> as an integer. </para>
</simplesect>
<simplesect kind="remark"><para>This function treats the LLRs as real values, thus neither saturation nor promotion apply. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="207" column="14" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="297" bodyend="302"/>
        <referencedby refid="classsrsgnb_1_1short__block__detector__impl_1a3f073481f79894aa41a92b52807a9deb" compoundref="short__block__detector__impl_8cpp" startline="107" endline="135">srsgnb::short_block_detector_impl::detect_3_11</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__likelihood__ratio_1a562c0e7511c6caabab9b6c42fad9bcb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>V</type>
        <definition>V srsgnb::log_likelihood_ratio::dot_prod</definition>
        <argsstring>(const T &amp;x, const U &amp;y, V init)</argsstring>
        <name>dot_prod</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const U &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>V</type>
          <declname>init</declname>
        </param>
        <briefdescription>
<para>Dot product of a sequence of LLRs and a sequence of values of an arithmetic type. </para>
        </briefdescription>
        <detaileddescription>
<para>Computes the dot product (a.k.a. inner product or scalar product) of the two input sequences, adding an initial offset. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>A span (or any container convertible to a span) of log-likelihood ratios (either constant or volatile). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>A span (or any container convertible to a span) of an arithmetic type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Output type (must be compatible with the product of objects of type <computeroutput>T</computeroutput> and <computeroutput>U</computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>A sequence of (possibly constant) log-likelihood ratios. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>A second sequence of values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The dot product between the two spans plus <computeroutput>init</computeroutput>, i.e. <formula id="62">$ x \cdot y + \mathrm{init} = \sum_i x_i y_i + \mathrm{init}$</formula>. </para>
</simplesect>
<simplesect kind="remark"><para>The two input spans must have the same length. </para>
</simplesect>
<simplesect kind="remark"><para>This function treats the LLRs as real values, thus neither saturation nor promotion apply. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="211" column="12" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="275" bodyend="285"/>
        <referencedby refid="classsrsgnb_1_1short__block__detector__impl_1a3f073481f79894aa41a92b52807a9deb" compoundref="short__block__detector__impl_8cpp" startline="107" endline="135">srsgnb::short_block_detector_impl::detect_3_11</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents log-likelihood ratio (LLR) values. </para>
    </briefdescription>
    <detaileddescription>
<para>Log-likelihood ratios are represented as <computeroutput>int8_t</computeroutput> values between <computeroutput>-LLR_MAX</computeroutput> and <computeroutput>LLR_MAX</computeroutput>. The values <computeroutput><plusmn/>LLR_INFTY = <plusmn/>127</computeroutput> are reserved for denoting fixed bits, that is bits that are surely set to zero (log-likelihood ratio equal to <computeroutput>+LLR_INFTY</computeroutput>) or one (log-likelihood ratio equal to <computeroutput>-LLR_INFTY</computeroutput>). </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::log_likelihood_ratio</label>
        <link refid="classsrsgnb_1_1log__likelihood__ratio"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/phy/upper/log_likelihood_ratio.h" line="34" column="1" bodyfile="include/srsgnb/phy/upper/log_likelihood_ratio.h" bodystart="33" bodyend="227"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1afc45466c58db042607ea5182a14f3b29" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>abs</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a3841eba3ffd2536d995566472aede3fa" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>copysign</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a562c0e7511c6caabab9b6c42fad9bcb1" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>dot_prod</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a426852f1526b1836e449c28033d2d5c2" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>infinity</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ac256d8b7b11ac7c712406c7673ed1c46" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>isfinite</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a744d1c32fcc957eecbc9381e7337131b" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>isinf</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a205c1b9ae9afa41ccd761c970ff1f639" prot="private" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>LLR_INFTY</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a0781a759ba3218c6acb8e1da620949c7" prot="private" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>LLR_MAX</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1aa9753ff7cafa3da89a33eedfde92d5c0" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>log_likelihood_ratio</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a59c1292ff1c54937326ff5d180902f08" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>log_likelihood_ratio</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ad5095727c141c257608461d7890789ce" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>max</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a02c71f8d2a9b64be359c4f0aa818e6a9" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>min</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a051ed46be9ce83eb6840ce03773964b6" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>norm_squared</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1aa5393dc38cb5edad4270a1854f4955ba" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator int</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1aaf048c7293c254f4304b2da4477aa995" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator value_type</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a180d33577a1ac3fb780119bbbee69f8c" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1acbf8f624175379e03bcce2bed4219ea7" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator+</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ad48b2249e764d269d27b2da88a20c463" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator+=</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a156e16ba5a5a644ecfd334a412942a9e" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator-</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ac334b020accc056601a475314c55937b" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator-</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a234addd573e5b8f734a853566e08217d" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator-=</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a09aaefe384af41f91fc209ccc6e22f2d" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator&lt;</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ac00aa10b7047a17bf43ec546a4eadd1b" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator&lt;=</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1add068f49cb3085f8daaed564f729f488" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a1c956e472025854366eaf7a01e8cfc70" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ace28d26b1c872bf8272bfce51ba1cd9e" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator&gt;</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1acecd455d336ab754bda51b57a9a7ccfa" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>operator&gt;=</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1af760df94f84b7a959fba914870db30a8" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>promotion_sum</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1ae677c15bc3c5bca9c47c4ff8d754219a" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>quantize</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a7c41114f18fb209fbbd1bd362b397e30" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>soft_xor</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a19e3b96295b852a4e1e2930884dff224" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>to_hard_bit</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a2d9fb8568d423ac65c10a90ec0c81301" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>to_int</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a44f2dc826a11f71fff4fa7810a9b6c10" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>to_value_type</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a3f7f6d92a94e5b5c5d3f66feb1a1f0c0" prot="private" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>value</name></member>
      <member refid="classsrsgnb_1_1log__likelihood__ratio_1a550d9e9f9e0a01a70406bfe2edb0310b" prot="public" virt="non-virtual"><scope>srsgnb::log_likelihood_ratio</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
