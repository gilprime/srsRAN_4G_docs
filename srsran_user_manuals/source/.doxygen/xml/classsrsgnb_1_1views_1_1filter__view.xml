<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1views_1_1filter__view" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::views::filter_view</compoundname>
    <includes refid="filter__view_8h" local="no">filter_view.h</includes>
    <innerclass refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" prot="private">srsgnb::views::filter_view::iter_impl</innerclass>
    <templateparamlist>
      <param>
        <type>typename Range</type>
      </param>
      <param>
        <type>typename FilterFunc</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1views_1_1filter__view_1a4dc4ee3f1a87705cd0db7b81578a3fc0" prot="public" static="no">
        <type>typename std::decay_t&lt; Range &gt;::value_type</type>
        <definition>using srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::value_type =  typename std::decay_t&lt;Range&gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="71" column="3" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1views_1_1filter__view_1a06740d0966deb5ddf5fb241b67f5d336" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" kindref="compound">iter_impl</ref>&lt; value_type &gt;</type>
        <definition>using srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::iterator =  iter_impl&lt;value_type&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="72" column="3" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1views_1_1filter__view_1ac85b39afa3cca6de57c38b690e680460" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" kindref="compound">iter_impl</ref>&lt; const value_type &gt;</type>
        <definition>using srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::const_iterator =  iter_impl&lt;const value_type&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="73" column="3" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1views_1_1filter__view_1ac2e21ad29ce935f6475ce65df8cac4ea" prot="private" static="no" mutable="no">
        <type>Range</type>
        <definition>Range srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="83" column="14" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1views_1_1filter__view_1add1fe8a7fafad319e662513aba4388b6" prot="private" static="no" mutable="no">
        <type>FilterFunc</type>
        <definition>FilterFunc srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::pred</definition>
        <argsstring></argsstring>
        <name>pred</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="84" column="14" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1views_1_1filter__view_1a154a5af2b7a3cd9acd89b092d7000d1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::filter_view</definition>
        <argsstring>(Range &amp;&amp;r_, FilterFunc &amp;&amp;pred_)</argsstring>
        <name>filter_view</name>
        <param>
          <type>Range &amp;&amp;</type>
          <declname>r_</declname>
        </param>
        <param>
          <type>FilterFunc &amp;&amp;</type>
          <declname>pred_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="75" column="3" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1views_1_1filter__view_1a238c58cb1900566c0cbbf25c3bb1d8ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="77" column="18" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1views_1_1filter__view_1a68efffa6a65a12505c4ae67609ee559d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="78" column="18" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1views_1_1filter__view_1a89eb7b469f5a6396bdf3a38910f6dc04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="79" column="18" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1views_1_1filter__view_1aa274b83f8d9b44cd97c2be0ec3e5cb8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1views_1_1filter__view_1_1iter__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::views::filter_view&lt; Range, FilterFunc &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/filter_view.h" line="80" column="18" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="80" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides a range (with begin and end) that filters out elements from another range for which FilterFunc returns false. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Range</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FilterFunc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::views::filter_view&lt; Range, FilterFunc &gt;</label>
        <link refid="classsrsgnb_1_1views_1_1filter__view"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/filter_view.h" line="27" column="1" bodyfile="include/srsgnb/adt/filter_view.h" bodystart="26" bodyend="85"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1a238c58cb1900566c0cbbf25c3bb1d8ea" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1a89eb7b469f5a6396bdf3a38910f6dc04" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1ac85b39afa3cca6de57c38b690e680460" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1a68efffa6a65a12505c4ae67609ee559d" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1aa274b83f8d9b44cd97c2be0ec3e5cb8f" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1a154a5af2b7a3cd9acd89b092d7000d1c" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>filter_view</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1a06740d0966deb5ddf5fb241b67f5d336" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1add1fe8a7fafad319e662513aba4388b6" prot="private" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>pred</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1ac2e21ad29ce935f6475ce65df8cac4ea" prot="private" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>r</name></member>
      <member refid="classsrsgnb_1_1views_1_1filter__view_1a4dc4ee3f1a87705cd0db7b81578a3fc0" prot="public" virt="non-virtual"><scope>srsgnb::views::filter_view</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
