<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1intrusive__forward__list" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::intrusive_forward_list</compoundname>
    <includes refid="intrusive__list_8h" local="no">intrusive_list.h</includes>
    <innerclass refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" prot="private">srsgnb::intrusive_forward_list::iterator_impl</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Tag</type>
        <defval>default_intrusive_tag</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1ae6ddf558f537843e64861259edabef7d" prot="private" static="no">
        <type><ref refid="structsrsgnb_1_1intrusive__forward__list__element" kindref="compound">intrusive_forward_list_element</ref>&lt; Tag &gt;</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::node_t =  intrusive_forward_list_element&lt;Tag&gt;</definition>
        <argsstring></argsstring>
        <name>node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="35" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1a9fe16df130bf4fe0947795f543c62c8d" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; T &gt;</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator =  iterator_impl&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="67" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1a809784c9c8859e0794b8a83648cf9a0a" prot="public" static="no">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; const T &gt;</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::const_iterator =  iterator_impl&lt;const T&gt;</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="68" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1intrusive__forward__list_1ac86aaf74d97549fff59ff746b3220299" prot="private" static="no" mutable="no">
        <type><ref refid="structsrsgnb_1_1intrusive__forward__list__element" kindref="compound">node_t</ref> *</type>
        <definition>node_t* srsgnb::intrusive_forward_list&lt; T, Tag &gt;::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="116" column="10" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1acfe89e24cb6d76fc412dd5f339e4c023" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_forward_list&lt; T, Tag &gt;::intrusive_forward_list</definition>
        <argsstring>()</argsstring>
        <name>intrusive_forward_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="70" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a576134629f02468e543f2d67a10c36ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_forward_list&lt; T, Tag &gt;::intrusive_forward_list</definition>
        <argsstring>(const intrusive_forward_list &amp;)=default</argsstring>
        <name>intrusive_forward_list</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1intrusive__forward__list" kindref="compound">intrusive_forward_list</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="75" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a8020c1863e296e1afcbc023d9c723708" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_forward_list&lt; T, Tag &gt;::intrusive_forward_list</definition>
        <argsstring>(intrusive_forward_list &amp;&amp;other) noexcept</argsstring>
        <name>intrusive_forward_list</name>
        <param>
          <type><ref refid="classsrsgnb_1_1intrusive__forward__list" kindref="compound">intrusive_forward_list</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="76" column="3" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a0fe18e2d12dde19a69db456fb8d7ff59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list" kindref="compound">intrusive_forward_list</ref> &amp;</type>
        <definition>intrusive_forward_list&amp; srsgnb::intrusive_forward_list&lt; T, Tag &gt;::operator=</definition>
        <argsstring>(const intrusive_forward_list &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1intrusive__forward__list" kindref="compound">intrusive_forward_list</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="77" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1ab88856309e6b3bed8fa6a8fa0bad775c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list" kindref="compound">intrusive_forward_list</ref> &amp;</type>
        <definition>intrusive_forward_list&amp; srsgnb::intrusive_forward_list&lt; T, Tag &gt;::operator=</definition>
        <argsstring>(intrusive_forward_list &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1intrusive__forward__list" kindref="compound">intrusive_forward_list</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="78" column="26" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1abcfc458f55773a73d7987542c1cd6135" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; srsgnb::intrusive_forward_list&lt; T, Tag &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="85" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1afa50e1af14a52c4b9f6408b56ad19945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::intrusive_forward_list&lt; T, Tag &gt;::push_front</definition>
        <argsstring>(T *t)</argsstring>
        <name>push_front</name>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="87" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a2fc823e9c0bb9f3e453db3161938f813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* srsgnb::intrusive_forward_list&lt; T, Tag &gt;::pop_front</definition>
        <argsstring>()</argsstring>
        <name>pop_front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="93" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a7b016e2075c12b40ea05598004bdcc26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::intrusive_forward_list&lt; T, Tag &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="99" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1abb8fdc1a1146d02ab4823cbd8d3ff1c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::intrusive_forward_list&lt; T, Tag &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="108" column="8" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a989e75af5bfbfc6c3f46a9d1c10448de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::intrusive_forward_list&lt; T, Tag &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="110" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a7efb53618a6ea605c8c6b5bbdd985544" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator</ref></type>
        <definition>iterator srsgnb::intrusive_forward_list&lt; T, Tag &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="111" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a0d872b94a061629f489287569ec1a57a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::intrusive_forward_list&lt; T, Tag &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="112" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1a0b75aac3a70ad2fb5e421f34c72dfc85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator srsgnb::intrusive_forward_list&lt; T, Tag &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="113" column="18" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="113" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Forward linked list of pointers of type &quot;T&quot; that doesn&apos;t rely on allocations. It leverages each node&apos;s internal pointer (thus intrusive) to store the next node of the list. It supports push_front/pop_front, iteration, clear, etc. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>node type. It must be a subclass of intrusive_forward_list_element&lt;Tag&gt; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Tag</parametername>
</parameternamelist>
<parameterdescription>
<para>useful to differentiate multiple intrusive lists in the same node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::intrusive_forward_list&lt; T, Tag &gt;</label>
        <link refid="classsrsgnb_1_1intrusive__forward__list"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-node</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::intrusive_forward_list_element&lt; Tag &gt;</label>
        <link refid="structsrsgnb_1_1intrusive__forward__list__element"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/intrusive_list.h" line="34" column="1" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="33" bodyend="117"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a989e75af5bfbfc6c3f46a9d1c10448de" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a0d872b94a061629f489287569ec1a57a" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>begin</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a7b016e2075c12b40ea05598004bdcc26" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>clear</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a809784c9c8859e0794b8a83648cf9a0a" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>const_iterator</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1abb8fdc1a1146d02ab4823cbd8d3ff1c1" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a7efb53618a6ea605c8c6b5bbdd985544" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a0b75aac3a70ad2fb5e421f34c72dfc85" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>end</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1abcfc458f55773a73d7987542c1cd6135" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>front</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1acfe89e24cb6d76fc412dd5f339e4c023" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>intrusive_forward_list</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a576134629f02468e543f2d67a10c36ed" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>intrusive_forward_list</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a8020c1863e296e1afcbc023d9c723708" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>intrusive_forward_list</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a9fe16df130bf4fe0947795f543c62c8d" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>iterator</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1ac86aaf74d97549fff59ff746b3220299" prot="private" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>node</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1ae6ddf558f537843e64861259edabef7d" prot="private" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>node_t</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a0fe18e2d12dde19a69db456fb8d7ff59" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1ab88856309e6b3bed8fa6a8fa0bad775c" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1a2fc823e9c0bb9f3e453db3161938f813" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>pop_front</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1afa50e1af14a52c4b9f6408b56ad19945" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list</scope><name>push_front</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
