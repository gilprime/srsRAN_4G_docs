<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4" kind="class" language="C++" prot="public">
    <compoundname>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</compoundname>
    <basecompoundref refid="classdetail_1_1truncating__iterator__base" prot="public" virt="non-virtual">detail::truncating_iterator_base&lt; OutputIt &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename OutputIt</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1aa8be28087a64ecee73a3564d860367b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;::truncating_iterator</definition>
        <argsstring>(OutputIt out, size_t limit)</argsstring>
        <name>truncating_iterator</name>
        <param>
          <type>OutputIt</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="488" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="488" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1ac0c2f4b6a1933b4a972bc0624729a220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classdetail_1_1truncating__iterator" kindref="compound">truncating_iterator</ref> &amp;</type>
        <definition>truncating_iterator&amp; detail::truncating_iterator&lt; OutputIt, std::true_type &gt;::operator=</definition>
        <argsstring>(T val)</argsstring>
        <name>operator=</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="491" column="35" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="491" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1a8f7f1455b10fc87631be4d7c1229d672" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1truncating__iterator" kindref="compound">truncating_iterator</ref> &amp;</type>
        <definition>truncating_iterator&amp; detail::truncating_iterator&lt; OutputIt, std::true_type &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="496" column="23" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="496" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1a16bddb39812d5ad5918c86c4b5c46533" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1truncating__iterator" kindref="compound">truncating_iterator</ref> &amp;</type>
        <definition>truncating_iterator&amp; detail::truncating_iterator&lt; OutputIt, std::true_type &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="497" column="23" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="497" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1a59f2c25e978e5c9c83a792437cd7315c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdetail_1_1truncating__iterator" kindref="compound">truncating_iterator</ref> &amp;</type>
        <definition>truncating_iterator&amp; detail::truncating_iterator&lt; OutputIt, std::true_type &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="498" column="23" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="498" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>detail::truncating_iterator_base&lt; OutputIt &gt;</label>
        <link refid="classdetail_1_1truncating__iterator__base"/>
      </node>
      <node id="1">
        <label>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</label>
        <link refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>detail::truncating_iterator_base&lt; OutputIt &gt;</label>
        <link refid="classdetail_1_1truncating__iterator__base"/>
      </node>
      <node id="1">
        <label>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</label>
        <link refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="486" column="34" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="485" bodyend="499"/>
    <listofallmembers>
      <member refid="classdetail_1_1truncating__iterator__base_1a8dbc2aad6cf724387f3c707924734a80" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>_Unchecked_type</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a573bec528d15e9b10bd25a0640623e44" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>base</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a1f30cfb932ed15aaf15242a2ebe60b33" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>count</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a1d416994cfe027e1eabf459648542695" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>count_</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a4e7e13bc8d439d705912eb17e386b52e" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>difference_type</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1acbcad1d11812d89bba9e8ca0a3ea548c" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>iterator_category</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a68f63204e045cd61d118a594108601c5" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>limit_</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1a59f2c25e978e5c9c83a792437cd7315c" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>operator*</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1a8f7f1455b10fc87631be4d7c1229d672" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>operator++</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1a16bddb39812d5ad5918c86c4b5c46533" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>operator++</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1ac0c2f4b6a1933b4a972bc0624729a220" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>operator=</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1aabf7031a36137260823898c436bdab3f" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>out_</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1aadb7f1019f339d99b325985354292a81" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>pointer</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1ac3c38c7ac2672fad4e8ccb12e7eb71ad" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>reference</name></member>
      <member refid="classdetail_1_1truncating__iterator_3_01OutputIt_00_01std_1_1true__type_01_4_1aa8be28087a64ecee73a3564d860367b5" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>truncating_iterator</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1a3de886223ba3391ca8a4618720a1c0e6" prot="protected" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>truncating_iterator_base</name></member>
      <member refid="classdetail_1_1truncating__iterator__base_1af557091783791c41c1d475f04a770793" prot="public" virt="non-virtual"><scope>detail::truncating_iterator&lt; OutputIt, std::true_type &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
