<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1vrb__to__prb__mapper" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::vrb_to_prb_mapper</compoundname>
    <includes refid="vrb__to__prb__mapper_8h" local="no">vrb_to_prb_mapper.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::vrb_to_prb_mapper::coreset_start</definition>
        <argsstring></argsstring>
        <name>coreset_start</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Indicates VRB index of the lowest VRB in the CORESET used for the DCI transmission. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="28" column="12" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a09336fee704340cfa72cf39852bf390e" compoundref="vrb__to__prb__mapper_8h" startline="129" endline="129">get_coreset_start</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" compoundref="vrb__to__prb__mapper_8h" startline="140" endline="145">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a6b5eb4ca05dfc0a2341e620d5017d09d" compoundref="vrb__to__prb__mapper_8cpp" startline="66" endline="77">create_non_interleaved_common_ss</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" compoundref="vrb__to__prb__mapper_8cpp" startline="85" endline="106">create_interleaved_coreset0</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" compoundref="vrb__to__prb__mapper_8cpp" startline="109" endline="134">create_interleaved_common</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" compoundref="vrb__to__prb__mapper_8cpp" startline="156" endline="167">get_allocation_indices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::vrb_to_prb_mapper::nof_bundles</definition>
        <argsstring></argsstring>
        <name>nof_bundles</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Indicates the number of RB bundles <formula id="87">$N_{bundle}$</formula>. It is set to zero for non-interleaved mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="30" column="12" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="30" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1ac84cebc61846343b70e84059a04ecd52" compoundref="vrb__to__prb__mapper_8h" startline="122" endline="122">is_interleaved</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" compoundref="vrb__to__prb__mapper_8h" startline="140" endline="145">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a6b5eb4ca05dfc0a2341e620d5017d09d" compoundref="vrb__to__prb__mapper_8cpp" startline="66" endline="77">create_non_interleaved_common_ss</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" compoundref="vrb__to__prb__mapper_8cpp" startline="85" endline="106">create_interleaved_coreset0</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" compoundref="vrb__to__prb__mapper_8cpp" startline="109" endline="134">create_interleaved_common</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aef120cb6aac7ab159ec3c269a7389d6b" compoundref="vrb__to__prb__mapper_8cpp" startline="137" endline="154">create_interleaved_other</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" compoundref="vrb__to__prb__mapper_8cpp" startline="156" endline="167">get_allocation_indices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::vrb_to_prb_mapper::first_bundle_size</definition>
        <argsstring></argsstring>
        <name>first_bundle_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Indicates the first RB bundle size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="32" column="12" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" compoundref="vrb__to__prb__mapper_8h" startline="140" endline="145">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" compoundref="vrb__to__prb__mapper_8cpp" startline="85" endline="106">create_interleaved_coreset0</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" compoundref="vrb__to__prb__mapper_8cpp" startline="109" endline="134">create_interleaved_common</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aef120cb6aac7ab159ec3c269a7389d6b" compoundref="vrb__to__prb__mapper_8cpp" startline="137" endline="154">create_interleaved_other</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" compoundref="vrb__to__prb__mapper_8cpp" startline="156" endline="167">get_allocation_indices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::vrb_to_prb_mapper::last_bundle_size</definition>
        <argsstring></argsstring>
        <name>last_bundle_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Indicates the last RB bundle size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="34" column="12" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" compoundref="vrb__to__prb__mapper_8h" startline="140" endline="145">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" compoundref="vrb__to__prb__mapper_8cpp" startline="85" endline="106">create_interleaved_coreset0</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" compoundref="vrb__to__prb__mapper_8cpp" startline="109" endline="134">create_interleaved_common</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aef120cb6aac7ab159ec3c269a7389d6b" compoundref="vrb__to__prb__mapper_8cpp" startline="137" endline="154">create_interleaved_other</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" compoundref="vrb__to__prb__mapper_8cpp" startline="156" endline="167">get_allocation_indices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned srsgnb::vrb_to_prb_mapper::other_bundle_size</definition>
        <argsstring></argsstring>
        <name>other_bundle_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Indicates the other RB bundle sizes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="36" column="12" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" compoundref="vrb__to__prb__mapper_8h" startline="140" endline="145">operator==</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" compoundref="vrb__to__prb__mapper_8cpp" startline="85" endline="106">create_interleaved_coreset0</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" compoundref="vrb__to__prb__mapper_8cpp" startline="109" endline="134">create_interleaved_common</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aef120cb6aac7ab159ec3c269a7389d6b" compoundref="vrb__to__prb__mapper_8cpp" startline="137" endline="154">create_interleaved_other</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" compoundref="vrb__to__prb__mapper_8cpp" startline="156" endline="167">get_allocation_indices</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1a6b5eb4ca05dfc0a2341e620d5017d09d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1vrb__to__prb__mapper" kindref="compound">vrb_to_prb_mapper</ref></type>
        <definition>vrb_to_prb_mapper vrb_to_prb_mapper::create_non_interleaved_common_ss</definition>
        <argsstring>(unsigned N_start_coreset)</argsstring>
        <name>create_non_interleaved_common_ss</name>
        <param>
          <type>unsigned</type>
          <declname>N_start_coreset</declname>
        </param>
        <briefdescription>
<para>Creates a non-interleaved VRB-to-PRB mapper for PDSCH transmissions scheduled by DCI Format 1_0 in common SS. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented as per TS38.211 Section 7.3.1.6 Case 1:<itemizedlist>
<listitem><para>A virtual resource <formula id="2">$n$</formula> is mapped to the physical block <formula id="88">$n + N_{start}^{CORESET}$</formula>.</para>
</listitem></itemizedlist>
</para>
<para>If the PDSCH is scheduled with DCI format 1_0 with the CRC scrambled by SI-RNTI in Type0-PDCCH common search space in CORESET 0, the BWP start and size must match with the CORESET0 start and size. Consequently, <formula id="89">$N_{start}^{CORESET}$</formula> must be zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N_start_coreset</parametername>
</parameternamelist>
<parameterdescription>
<para>VRB index of the lowest-numbered RB in the CORESET used for the DCI transmission as <formula id="89">$N_{start}^{CORESET}$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A VRB-to-PRB mapper instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="52" column="28" bodyfile="lib/phy/upper/vrb_to_prb_mapper.cpp" bodystart="66" bodyend="77"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" compoundref="vrb__to__prb__mapper_8h" startline="28">coreset_start</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1a1fbbbd83e1da31a757c1069c5676aab3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1vrb__to__prb__mapper" kindref="compound">vrb_to_prb_mapper</ref></type>
        <definition>vrb_to_prb_mapper vrb_to_prb_mapper::create_non_interleaved_other</definition>
        <argsstring>()</argsstring>
        <name>create_non_interleaved_other</name>
        <briefdescription>
<para>Creates a non-interleaved VRB-to-PRB mapper for PDSCH transmissions scheduled by DCI other than Format 1_0 in common SS. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented as per TS38.211 Section 7.3.1.6 Case 2:<itemizedlist>
<listitem><para>A virtual resouce <formula id="2">$n$</formula> is mapped to the physical block <formula id="2">$n$</formula>.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="return"><para>A VRB-to-PRB mapper instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="61" column="28" bodyfile="lib/phy/upper/vrb_to_prb_mapper.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1vrb__to__prb__mapper" kindref="compound">vrb_to_prb_mapper</ref></type>
        <definition>vrb_to_prb_mapper vrb_to_prb_mapper::create_interleaved_coreset0</definition>
        <argsstring>(unsigned N_start_coreset, unsigned N_bwp_init_size)</argsstring>
        <name>create_interleaved_coreset0</name>
        <param>
          <type>unsigned</type>
          <declname>N_start_coreset</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>N_bwp_init_size</declname>
        </param>
        <briefdescription>
<para>Creates a VRB-to-PRB mapper for PDSCH transmissions scheduled with DCI Format 1_0 with the CRC scrambled by SI-RNTI in Type0-PDCCH common SS in CORESET0. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented as per TS38.211 Section 7.3.1.6 Case 3:<itemizedlist>
<listitem><para>the number of bundles is calculated as <formula id="90">$N_{bundle}=\lceil N_{BWP,init}^{size}/L \rceil$</formula>,</para>
</listitem><listitem><para>the last RB bundle consists of <formula id="91">$N_{BWP,init}^{size} \bmod L$</formula> if <formula id="92">$N_{BWP,init}^{size} \bmod L &gt; 0$</formula>,</para>
</listitem><listitem><para>all other resource block bundles consist of <formula id="45">$L$</formula> RBs, and</para>
</listitem><listitem><para>the bundle size is <formula id="93">$L=2$</formula>.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N_start_coreset</parametername>
</parameternamelist>
<parameterdescription>
<para>VRB index of the lowest-numbered RB in the CORESET used for the DCI transmission as <formula id="89">$N_{start}^{CORESET}$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N_bwp_init_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in RBs of CORESET0 as <formula id="94">$N_{BWP,init}^{size}$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A VRB-to-PRB mapper instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="77" column="28" bodyfile="lib/phy/upper/vrb_to_prb_mapper.cpp" bodystart="85" bodyend="106"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" compoundref="vrb__to__prb__mapper_8h" startline="28">coreset_start</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
        <references refid="namespacesrsgnb_1a6026a6056e7f39c043a2bba26daab476" compoundref="math__utils_8h" startline="34" endline="38">srsgnb::divide_ceil</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" compoundref="vrb__to__prb__mapper_8h" startline="34">last_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" compoundref="vrb__to__prb__mapper_8h" startline="32">first_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" compoundref="vrb__to__prb__mapper_8h" startline="36">other_bundle_size</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1vrb__to__prb__mapper" kindref="compound">vrb_to_prb_mapper</ref></type>
        <definition>vrb_to_prb_mapper vrb_to_prb_mapper::create_interleaved_common</definition>
        <argsstring>(unsigned N_start_coreset, unsigned N_bwp_i_start, unsigned N_bwp_init_size)</argsstring>
        <name>create_interleaved_common</name>
        <param>
          <type>unsigned</type>
          <declname>N_start_coreset</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>N_bwp_i_start</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>N_bwp_init_size</declname>
        </param>
        <briefdescription>
<para>Creates a VRB-to-PRB mapper for PDSCH transmissions scheduled by DCI format 1_0 in any common SS except Type0-PDCCH common SS in CORESET0. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented as per TS38.211 Section 7.3.1.6 Case 4:<itemizedlist>
<listitem><para>the set of <formula id="94">$N_{BWP,init}^{size}$</formula> virtual RBs starting at <formula id="71">$N_{BWP,i}^{start}$</formula> is divided into <formula id="95">$N_{bundle}=\lceil (N_{BWP,init}^{size} + ((N_{BWP,i}^{start} + N_{start}^{CORESET}) \bmod L))/L \rceil$</formula>,</para>
</listitem><listitem><para>the bundle size is <formula id="93">$L=2$</formula>,</para>
</listitem><listitem><para>the first RB bundle consists of <formula id="96">$L - ((N_{BWP,init}^{size} + N_{start}^{CORESET}) \bmod L)$</formula>,</para>
</listitem><listitem><para>the last RB bundle consists of <formula id="97">$(N_{BWP,init}^{size} + N_{BWP,i}^{start} + N_{start}^{CORESET}) \bmod L$</formula> if <formula id="98">$(N_{BWP,init}^{size} + N_{BWP,i}^{start} + N_{start}^{CORESET}) \bmod L &gt; 0$</formula> and <formula id="45">$L$</formula> RB otherwise, and</para>
</listitem><listitem><para>all other resource block bundles consist of <formula id="45">$L$</formula> RBs.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N_start_coreset</parametername>
</parameternamelist>
<parameterdescription>
<para>VRB index of the lowest-numbered RB in the CORESET used for the DCI transmission as <formula id="89">$N_{start}^{CORESET}$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N_bwp_i_start</parametername>
</parameternamelist>
<parameterdescription>
<para>BWP <formula id="53">$i$</formula> starting position <formula id="71">$N_{BWP,i}^{start}$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N_bwp_init_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in RBs of CORESET0 if available, otherwise the initial bandwidth part size as <formula id="94">$N_{BWP,init}^{size}$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A VRB-to-PRB mapper instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="99" column="3" bodyfile="lib/phy/upper/vrb_to_prb_mapper.cpp" bodystart="109" bodyend="134"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" compoundref="vrb__to__prb__mapper_8h" startline="28">coreset_start</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
        <references refid="namespacesrsgnb_1a6026a6056e7f39c043a2bba26daab476" compoundref="math__utils_8h" startline="34" endline="38">srsgnb::divide_ceil</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" compoundref="vrb__to__prb__mapper_8h" startline="32">first_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" compoundref="vrb__to__prb__mapper_8h" startline="34">last_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" compoundref="vrb__to__prb__mapper_8h" startline="36">other_bundle_size</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1aef120cb6aac7ab159ec3c269a7389d6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1vrb__to__prb__mapper" kindref="compound">vrb_to_prb_mapper</ref></type>
        <definition>vrb_to_prb_mapper vrb_to_prb_mapper::create_interleaved_other</definition>
        <argsstring>(unsigned N_bwp_i_start, unsigned N_bwp_i_size, unsigned L_i)</argsstring>
        <name>create_interleaved_other</name>
        <param>
          <type>unsigned</type>
          <declname>N_bwp_i_start</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>N_bwp_i_size</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>L_i</declname>
        </param>
        <briefdescription>
<para>Creates a VRB-to-PRB mapper for all other PDSCH transmissions with interleaved mapping. </para>
        </briefdescription>
        <detaileddescription>
<para>Implemented as per TS38.211 Section 7.3.1.6 Case 5:<itemizedlist>
<listitem><para>the set of <formula id="72">$N_{BWP,i}^{size}$</formula> virtual RBs starting at <formula id="71">$N_{BWP,i}^{start}$</formula> is divided into <formula id="99">$N_{bundle}=\lceil (N_{BWP,i}^{size} + (N_{BWP,i}^{start} \bmod L_i))/L_i \rceil$</formula>,</para>
</listitem><listitem><para>the first RB bundle consists of <formula id="100">$L_i - N_{BWP,i}^{size} \bmod L_i$</formula>,</para>
</listitem><listitem><para>the last RB bundle consists of <formula id="101">$(N_{BWP,i}^{size}+N_{BWP,i}^{start}) \bmod L_i$</formula> if <formula id="102">$(N_{BWP,i}^{size}+N_{BWP,i}^{start}) \bmod L_i &gt; 0$</formula> and <formula id="103">$L_i$</formula> RBs otherwise,</para>
</listitem><listitem><para>all other resource block bundles consist of <formula id="103">$L_i$</formula> RBs.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N_bwp_i_start</parametername>
</parameternamelist>
<parameterdescription>
<para>BWP <formula id="53">$i$</formula> starting position <formula id="71">$N_{BWP,i}^{start}$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N_bwp_i_size</parametername>
</parameternamelist>
<parameterdescription>
<para>BWP <formula id="53">$i$</formula> size <formula id="72">$N_{BWP,i}^{size}$</formula>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">L_i</parametername>
</parameternamelist>
<parameterdescription>
<para>RB Bundle size for BWP <formula id="53">$i$</formula> in RBs <formula id="103">$L_i$</formula>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A VRB-to-PRB mapper instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="115" column="28" bodyfile="lib/phy/upper/vrb_to_prb_mapper.cpp" bodystart="137" bodyend="154"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
        <references refid="namespacesrsgnb_1a6026a6056e7f39c043a2bba26daab476" compoundref="math__utils_8h" startline="34" endline="38">srsgnb::divide_ceil</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" compoundref="vrb__to__prb__mapper_8h" startline="32">first_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" compoundref="vrb__to__prb__mapper_8h" startline="34">last_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" compoundref="vrb__to__prb__mapper_8h" startline="36">other_bundle_size</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1ac84cebc61846343b70e84059a04ecd52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::vrb_to_prb_mapper::is_interleaved</definition>
        <argsstring>() const</argsstring>
        <name>is_interleaved</name>
        <briefdescription>
<para>Checks whether the resource allocation is interleaved. </para>
        </briefdescription>
        <detaileddescription>
<para>The resource allocation is interleaved if the number of bundles is not zero.</para>
<para><simplesect kind="return"><para>True if the resource allocation is interleaved. Otherwise, False. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="122" column="8" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="122" bodyend="122"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1a536c619a116091af2f8f15ce8727f07b" compoundref="rb__allocation_8h" startline="122" endline="122">srsgnb::rb_allocation::is_contiguous</referencedby>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1a4742e3a79eea3d38e3aaba7d17301ac4" compoundref="rb__allocation_8cpp" startline="113" endline="129">srsgnb::rb_allocation::get_prb_mask</referencedby>
        <referencedby refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" compoundref="vrb__to__prb__mapper_8cpp" startline="156" endline="167">get_allocation_indices</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1a09336fee704340cfa72cf39852bf390e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::vrb_to_prb_mapper::get_coreset_start</definition>
        <argsstring>() const</argsstring>
        <name>get_coreset_start</name>
        <briefdescription>
<para>Gets the CORESET start VRB index. </para>
        </briefdescription>
        <detaileddescription>
<para>VRB index of the lowest-numbered RB in the CORESET used for the DCI transmission.</para>
<para><simplesect kind="return"><para>A VRB index if the PDSCH transmission is scheduled by a DCI in a common SS. Otherwise, 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="129" column="12" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="129" bodyend="129"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" compoundref="vrb__to__prb__mapper_8h" startline="28">coreset_start</references>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1a2c63757dc8d9d86f4f24d8b848f93d8b" compoundref="rb__allocation_8h" startline="127" endline="135">srsgnb::rb_allocation::get_prb_begin</referencedby>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1ab89c4464249b9d5bbd423db57dd89b2e" compoundref="rb__allocation_8h" startline="140" endline="148">srsgnb::rb_allocation::get_prb_end</referencedby>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1a9bc5e2a809540b3284ee3a111556a6b4" compoundref="rb__allocation_8cpp" startline="15" endline="42">srsgnb::rb_allocation::get_contiguous_prb_mask</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1static__vector" kindref="compound">static_vector</ref>&lt; uint16_t, <ref refid="namespacesrsgnb_1a093e25254bb1f64f3af8faafd11a9120" kindref="member">MAX_RB</ref> &gt;</type>
        <definition>static_vector&lt; uint16_t, MAX_RB &gt; vrb_to_prb_mapper::get_allocation_indices</definition>
        <argsstring>(unsigned bwp_size) const</argsstring>
        <name>get_allocation_indices</name>
        <param>
          <type>unsigned</type>
          <declname>bwp_size</declname>
        </param>
        <briefdescription>
<para>Calculates a PDSCH allocation PRB indices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bwp_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates the BWP size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return the PRB indices relative to the lowest PRB of the BWP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="135" column="17" bodyfile="lib/phy/upper/vrb_to_prb_mapper.cpp" bodystart="156" bodyend="167"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1ac84cebc61846343b70e84059a04ecd52" compoundref="vrb__to__prb__mapper_8h" startline="122" endline="122">is_interleaved</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" compoundref="vrb__to__prb__mapper_8h" startline="28">coreset_start</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" compoundref="vrb__to__prb__mapper_8h" startline="32">first_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" compoundref="vrb__to__prb__mapper_8h" startline="34">last_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" compoundref="vrb__to__prb__mapper_8h" startline="36">other_bundle_size</references>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1a075985c56ef0e385f9c1c69039d72672" compoundref="rb__allocation_8cpp" startline="44" endline="60">srsgnb::rb_allocation::get_other_prb_mask</referencedby>
        <referencedby refid="classsrsgnb_1_1rb__allocation_1a9e9c90b67ebb0b15838289d73ce6475c" compoundref="rb__allocation_8cpp" startline="131" endline="153">srsgnb::rb_allocation::get_prb_indices</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::vrb_to_prb_mapper::operator==</definition>
        <argsstring>(const vrb_to_prb_mapper &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1vrb__to__prb__mapper" kindref="compound">vrb_to_prb_mapper</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equal comparison between two VRB-to-PRB mappers. </para>
        </briefdescription>
        <detaileddescription>
<para>Two mappers are considered equal if their CORESET start, number of bundles and RB bundle sizes are equal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="140" column="8" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="140" bodyend="145"/>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" compoundref="vrb__to__prb__mapper_8h" startline="28">coreset_start</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" compoundref="vrb__to__prb__mapper_8h" startline="30">nof_bundles</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" compoundref="vrb__to__prb__mapper_8h" startline="32">first_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" compoundref="vrb__to__prb__mapper_8h" startline="34">last_bundle_size</references>
        <references refid="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" compoundref="vrb__to__prb__mapper_8h" startline="36">other_bundle_size</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a VRB-to-PRB mapping. </para>
    </briefdescription>
    <detaileddescription>
<para>This class abstracts the virtual to physical resource mapping for PDSCH.</para>
<para>The default constructor is equivalent to use <ref refid="classsrsgnb_1_1vrb__to__prb__mapper_1a1fbbbd83e1da31a757c1069c5676aab3" kindref="member">create_non_interleaved_other()</ref>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::vrb_to_prb_mapper</label>
        <link refid="classsrsgnb_1_1vrb__to__prb__mapper"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" line="25" column="1" bodyfile="include/srsgnb/phy/upper/vrb_to_prb_mapper.h" bodystart="24" bodyend="146"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a38bd389fe6cf9789906eebb3154acbf7" prot="private" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>coreset_start</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1ace5eabc929800582a5659026b3f3d6c8" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>create_interleaved_common</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a481bd08edede9b6b82bf9ecdc993590f" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>create_interleaved_coreset0</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1aef120cb6aac7ab159ec3c269a7389d6b" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>create_interleaved_other</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a6b5eb4ca05dfc0a2341e620d5017d09d" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>create_non_interleaved_common_ss</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a1fbbbd83e1da31a757c1069c5676aab3" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>create_non_interleaved_other</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a622a4fd6387318d5f1a31e2cb2837ef7" prot="private" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>first_bundle_size</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1aac8db67cffbf371950907e01628291fc" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>get_allocation_indices</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a09336fee704340cfa72cf39852bf390e" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>get_coreset_start</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1ac84cebc61846343b70e84059a04ecd52" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>is_interleaved</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a9e2d8813be42d45f8d0e61273d22fe97" prot="private" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>last_bundle_size</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a30c8910ac33053abe64cfa071f30a01e" prot="private" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>nof_bundles</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a5f94eff4795fec24003094e21d3bffd5" prot="public" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1vrb__to__prb__mapper_1a8b4bc96f9b2996b8f25e903168bd5f7c" prot="private" virt="non-virtual"><scope>srsgnb::vrb_to_prb_mapper</scope><name>other_bundle_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
