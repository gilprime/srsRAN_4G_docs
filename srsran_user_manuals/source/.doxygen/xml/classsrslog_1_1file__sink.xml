<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1file__sink" kind="class" language="C++" prot="public">
    <compoundname>srslog::file_sink</compoundname>
    <basecompoundref refid="classsrslog_1_1sink" prot="public" virt="non-virtual">srslog::sink</basecompoundref>
    <includes refid="lib_2srslog_2sinks_2file__sink_8h" local="no">file_sink.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrslog_1_1file__sink_1abc6ea9a945bbcd23c23a870348e0329e" prot="private" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t srslog::file_sink::max_size</definition>
        <argsstring></argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="92" column="21" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1file__sink_1a0214a6d66ddba3b0e22edeb8efe6ae06" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool srslog::file_sink::force_flush</definition>
        <argsstring></argsstring>
        <name>force_flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="93" column="21" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1file__sink_1a2562bb8478532d583426d81e80ee55a2" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string srslog::file_sink::base_filename</definition>
        <argsstring></argsstring>
        <name>base_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="94" column="21" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1file__sink_1a929d79235872af12a4ea389f0a542fa9" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1file__utils_1_1file" kindref="compound">file_utils::file</ref></type>
        <definition>file_utils::file srslog::file_sink::handler</definition>
        <argsstring></argsstring>
        <name>handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="95" column="21" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1file__sink_1aed270410c6f79dbfa573b29e74eb54e8" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t srslog::file_sink::current_size</definition>
        <argsstring></argsstring>
        <name>current_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="96" column="21" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrslog_1_1file__sink_1af0c61e4218b29dfd7ef164ecfaa08392" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t srslog::file_sink::file_index</definition>
        <argsstring></argsstring>
        <name>file_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="97" column="21" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1file__sink_1a00100537258bb43bedcb2d8a34950ccd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::file_sink::file_sink</definition>
        <argsstring>(std::string name, size_t max_size, bool force_flush, std::unique_ptr&lt; log_formatter &gt; f)</argsstring>
        <name>file_sink</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force_flush</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">log_formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="24" column="3" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__sink_1aebcfa6971a508303a428d1142fa00c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::file_sink::file_sink</definition>
        <argsstring>(const file_sink &amp;other)=delete</argsstring>
        <name>file_sink</name>
        <param>
          <type>const <ref refid="classsrslog_1_1file__sink" kindref="compound">file_sink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__sink_1ad480ac036203ca9dac4bf7225f847e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrslog_1_1file__sink" kindref="compound">file_sink</ref> &amp;</type>
        <definition>file_sink&amp; srslog::file_sink::operator=</definition>
        <argsstring>(const file_sink &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrslog_1_1file__sink" kindref="compound">file_sink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="32" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_sink::write</definition>
        <argsstring>(detail::memory_buffer buffer) override</argsstring>
        <name>write</name>
        <reimplements refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">write</reimplements>
        <param>
          <type><ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">detail::memory_buffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Writes the provided memory buffer into the sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="34" column="24" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="34" bodyend="59"/>
        <references refid="classsrslog_1_1file__sink_1a5a11a649dd4978518b73acde43772713" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="70" endline="70">is_first_write</references>
        <references refid="classsrslog_1_1file__sink_1af041fe2f972306da1f21c0f97bbd633c" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="73" endline="76">create_file</references>
        <references refid="classsrslog_1_1file__sink_1af93e347dc48e934ea6fddb38b0ba351a" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="80" endline="89">handle_rotation</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" compoundref="memory__buffer_8h" startline="41" endline="41">srslog::detail::memory_buffer::size</references>
        <references refid="classsrslog_1_1file__sink_1aa22d9ba36bca69a2d6090cd22969fdb0" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="61" endline="61">flush</references>
        <references refid="classsrslog_1_1file__utils_1_1file_1ad07253657cab84fb7e9daf133eca55ad" compoundref="file__utils_8h" startline="103" endline="112">srslog::file_utils::file::write</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__sink_1aa22d9ba36bca69a2d6090cd22969fdb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_sink::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">flush</reimplements>
        <briefdescription>
<para>Flushes any buffered contents to the backing store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="61" column="24" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="61" bodyend="61"/>
        <references refid="classsrslog_1_1file__utils_1_1file_1a7cde6bc69c56d58f1015345451ba415e" compoundref="file__utils_8h" startline="115" endline="124">srslog::file_utils::file::flush</references>
        <referencedby refid="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="34" endline="59">write</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsrslog_1_1file__sink_1a6443858b024ce99d36b7b31eb3783682" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t srslog::file_sink::get_file_index</definition>
        <argsstring>() const</argsstring>
        <name>get_file_index</name>
        <briefdescription>
<para>Returns the current file index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="65" column="12" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrslog_1_1file__sink_1a5a11a649dd4978518b73acde43772713" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srslog::file_sink::is_first_write</definition>
        <argsstring>() const</argsstring>
        <name>is_first_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true when the sink has never written data to a file, otherwise returns false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="70" column="8" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="70" bodyend="70"/>
        <referencedby refid="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="34" endline="59">write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__sink_1af041fe2f972306da1f21c0f97bbd633c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_sink::create_file</definition>
        <argsstring>()</argsstring>
        <name>create_file</name>
        <briefdescription>
<para>Creates a new file and increments the file index counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="73" column="24" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="73" bodyend="76"/>
        <references refid="classsrslog_1_1file__utils_1_1file_1ac104918e45f47b7372eab90820b17110" compoundref="file__utils_8h" startline="89" endline="99">srslog::file_utils::file::create</references>
        <referencedby refid="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="34" endline="59">write</referencedby>
        <referencedby refid="classsrslog_1_1file__sink_1af93e347dc48e934ea6fddb38b0ba351a" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="80" endline="89">handle_rotation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1file__sink_1af93e347dc48e934ea6fddb38b0ba351a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::file_sink::handle_rotation</definition>
        <argsstring>(size_t size)</argsstring>
        <name>handle_rotation</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles the file rotation feature when it is activated. NOTE: The file handler must be valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/file_sink.h" line="80" column="24" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="80" bodyend="89"/>
        <references refid="classsrslog_1_1file__sink_1af041fe2f972306da1f21c0f97bbd633c" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="73" endline="76">create_file</references>
        <referencedby refid="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" compoundref="lib_2srslog_2sinks_2file__sink_8h" startline="34" endline="59">write</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This sink implementation writes to files. Includes the optional feature of file rotation: a new file is created when file size exceeds an established threshold. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srslog::file_sink</label>
        <link refid="classsrslog_1_1file__sink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srslog::file_sink</label>
        <link refid="classsrslog_1_1file__sink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>-handler</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srslog::file_utils::file</label>
        <link refid="classsrslog_1_1file__utils_1_1file"/>
      </node>
    </collaborationgraph>
    <location file="lib/srslog/sinks/file_sink.h" line="22" column="1" bodyfile="lib/srslog/sinks/file_sink.h" bodystart="21" bodyend="98"/>
    <listofallmembers>
      <member refid="classsrslog_1_1file__sink_1a2562bb8478532d583426d81e80ee55a2" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>base_filename</name></member>
      <member refid="classsrslog_1_1file__sink_1af041fe2f972306da1f21c0f97bbd633c" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>create_file</name></member>
      <member refid="classsrslog_1_1file__sink_1aed270410c6f79dbfa573b29e74eb54e8" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>current_size</name></member>
      <member refid="classsrslog_1_1file__sink_1af0c61e4218b29dfd7ef164ecfaa08392" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>file_index</name></member>
      <member refid="classsrslog_1_1file__sink_1a00100537258bb43bedcb2d8a34950ccd" prot="public" virt="non-virtual"><scope>srslog::file_sink</scope><name>file_sink</name></member>
      <member refid="classsrslog_1_1file__sink_1aebcfa6971a508303a428d1142fa00c31" prot="public" virt="non-virtual"><scope>srslog::file_sink</scope><name>file_sink</name></member>
      <member refid="classsrslog_1_1file__sink_1aa22d9ba36bca69a2d6090cd22969fdb0" prot="public" virt="virtual"><scope>srslog::file_sink</scope><name>flush</name></member>
      <member refid="classsrslog_1_1file__sink_1a0214a6d66ddba3b0e22edeb8efe6ae06" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>force_flush</name></member>
      <member refid="classsrslog_1_1sink_1a3fe50dcff14510123286afa7885701a1" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>formatter</name></member>
      <member refid="classsrslog_1_1file__sink_1a6443858b024ce99d36b7b31eb3783682" prot="protected" virt="non-virtual"><scope>srslog::file_sink</scope><name>get_file_index</name></member>
      <member refid="classsrslog_1_1sink_1afefc81cbae7348e62570771e3d0f9ead" prot="public" virt="non-virtual"><scope>srslog::file_sink</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1sink_1a1d6a623fb8292a96234d98f71fff18f2" prot="public" virt="non-virtual"><scope>srslog::file_sink</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1file__sink_1af93e347dc48e934ea6fddb38b0ba351a" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>handle_rotation</name></member>
      <member refid="classsrslog_1_1file__sink_1a929d79235872af12a4ea389f0a542fa9" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>handler</name></member>
      <member refid="classsrslog_1_1file__sink_1a5a11a649dd4978518b73acde43772713" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>is_first_write</name></member>
      <member refid="classsrslog_1_1file__sink_1abc6ea9a945bbcd23c23a870348e0329e" prot="private" virt="non-virtual"><scope>srslog::file_sink</scope><name>max_size</name></member>
      <member refid="classsrslog_1_1file__sink_1ad480ac036203ca9dac4bf7225f847e30" prot="public" virt="non-virtual"><scope>srslog::file_sink</scope><name>operator=</name></member>
      <member refid="classsrslog_1_1sink_1a67b8e754a3c8f4e1668b7d9305fdbb58" prot="public" virt="non-virtual"><scope>srslog::file_sink</scope><name>sink</name></member>
      <member refid="classsrslog_1_1file__sink_1aeef71c2286f25955ced7a64c3afa5ba1" prot="public" virt="virtual"><scope>srslog::file_sink</scope><name>write</name></member>
      <member refid="classsrslog_1_1sink_1a148d2b74c00249a71fa3bbf581dd22e5" prot="public" virt="virtual"><scope>srslog::file_sink</scope><name>~sink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
