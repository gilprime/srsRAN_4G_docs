<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rlc__um__pdu_8h" kind="file" language="C++">
    <compoundname>rlc_um_pdu.h</compoundname>
    <includes refid="byte__buffer_8h" local="yes">srsgnb/adt/byte_buffer.h</includes>
    <includes refid="rlc__config_8h" local="yes">srsgnb/rlc/rlc_config.h</includes>
    <includes refid="srslog_8h" local="yes">srsgnb/srslog/srslog.h</includes>
    <includedby refid="rlc__rx__um__entity_8h" local="yes">lib/rlc/rlc_rx_um_entity.h</includedby>
    <includedby refid="rlc__tx__um__entity_8h" local="yes">lib/rlc/rlc_tx_um_entity.h</includedby>
    <incdepgraph>
      <node id="42">
        <label>atomic</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="17">
        <label>iterator</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cassert</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="22">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>srsgnb/rlc/rlc_config.h</label>
        <link refid="rlc__config_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>pthread.h</label>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="41">
        <label>tuple</label>
      </node>
      <node id="26">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/rlc/rlc_um_pdu.h</label>
        <link refid="rlc__um__pdu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="32">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cerrno</label>
      </node>
      <node id="3">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>cstddef</label>
      </node>
      <node id="31">
        <label>chrono</label>
      </node>
      <node id="27">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>lib/rlc/rlc_um_pdu.h</label>
        <link refid="rlc__um__pdu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/rlc/rlc_rx_um_entity.h</label>
        <link refid="rlc__rx__um__entity_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/rlc/rlc_um_entity.h</label>
        <link refid="rlc__um__entity_8h_source"/>
      </node>
      <node id="4">
        <label>lib/rlc/rlc_tx_um_entity.h</label>
        <link refid="rlc__tx__um__entity_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsrsgnb_1_1rlc__um__pdu__header" prot="public">srsgnb::rlc_um_pdu_header</innerclass>
    <innerclass refid="structsrsgnb_1_1rlc__um__pdu" prot="public">srsgnb::rlc_um_pdu</innerclass>
    <innerclass refid="structfmt_1_1formatter_3_01srsgnb_1_1rlc__um__pdu__header_01_4" prot="public">fmt::formatter&lt; srsgnb::rlc_um_pdu_header &gt;</innerclass>
    <innernamespace refid="namespacesrsgnb">srsgnb</innernamespace>
    <innernamespace refid="namespacefmt">fmt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/adt/byte_buffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/rlc/rlc_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/srslog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_complete_sdu<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_6bit_sn_no_so<sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_12bit_sn_no_so<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_no_so(<ref refid="namespacesrsgnb_1a025e5cc1228682e3e9accdef0914a93c" kindref="member">rlc_um_sn_size</ref><sp/>sn_size)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sn_size)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_um_sn_size::size6bits:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_6bit_sn_no_so;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_um_sn_size::size12bits:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_12bit_sn_no_so;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>srsgnb_assertion_failure(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>determine<sp/>RLC<sp/>UM<sp/>PDU<sp/>header<sp/>size<sp/>without<sp/>SO:<sp/>unsupported<sp/>sn_size<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_number(sn_size));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_6bit_sn_no_so;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_6bit_sn_with_so<sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_12bit_sn_with_so<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_with_so(<ref refid="namespacesrsgnb_1a025e5cc1228682e3e9accdef0914a93c" kindref="member">rlc_um_sn_size</ref><sp/>sn_size)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sn_size)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_um_sn_size::size6bits:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_6bit_sn_with_so;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>rlc_um_sn_size::size12bits:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_12bit_sn_with_so;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>srsgnb_assertion_failure(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>determine<sp/>RLC<sp/>UM<sp/>PDU<sp/>header<sp/>size<sp/>with<sp/>SO:<sp/>unsupported<sp/>sn_size<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_number(sn_size));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rlc_um_pdu_header_size_6bit_sn_no_so;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structsrsgnb_1_1rlc__um__pdu__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1rlc__um__pdu__header" kindref="compound">rlc_um_pdu_header</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a0a246fa8059639a178e17af4df90c173" kindref="member">rlc_si_field</ref><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="structsrsgnb_1_1rlc__um__pdu__header_1a8c1c835fb3b5d02fe8c5dca3f37bd30f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacesrsgnb_1a025e5cc1228682e3e9accdef0914a93c" kindref="member">rlc_um_sn_size</ref><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a8c1c835fb3b5d02fe8c5dca3f37bd30f" kindref="member">sn_size</ref>;<sp/></highlight></codeline>
<codeline lineno="53" refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structsrsgnb_1_1rlc__um__pdu" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsrsgnb_1_1rlc__um__pdu" kindref="compound">rlc_um_pdu</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header" kindref="compound">rlc_um_pdu_header</ref><sp/>header;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref><sp/>payload;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>Header<sp/>pack/unpack<sp/>helper<sp/>functions</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Ref:<sp/>3GPP<sp/>TS<sp/>38.322<sp/>version<sp/>15.3.0<sp/>Section<sp/>6.2.2.3</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">rlc_um_read_data_pdu_header(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1byte__buffer__view" kindref="compound">byte_buffer_view</ref>&amp;<sp/>pdu,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesrsgnb_1a025e5cc1228682e3e9accdef0914a93c" kindref="member">rlc_um_sn_size</ref><sp/>sn_size,<sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header" kindref="compound">rlc_um_pdu_header</ref>*<sp/>header)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__reader" kindref="compound">byte_buffer_reader</ref><sp/>pdu_reader<sp/>=<sp/>pdu;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu_reader.empty())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).warning(</highlight><highlight class="stringliteral">&quot;Unpacking<sp/>header<sp/>of<sp/>empty<sp/>RLC<sp/>PDU&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a8c1c835fb3b5d02fe8c5dca3f37bd30f" kindref="member">sn_size</ref><sp/>=<sp/>sn_size;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixed<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sn_size<sp/>==<sp/>rlc_um_sn_size::size6bits)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>=<sp/>(<ref refid="namespacesrsgnb_1a0a246fa8059639a178e17af4df90c173" kindref="member">rlc_si_field</ref>)((*pdu_reader<sp/>&gt;&gt;<sp/>6U)<sp/>&amp;<sp/>0x03U);<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bits<sp/>SI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref><sp/>=<sp/>*pdu_reader<sp/>&amp;<sp/>0x3fU;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::full_sdu<sp/>and<sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).error(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>PDU,<sp/>reserved<sp/>bits<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sn_size<sp/>==<sp/>rlc_um_sn_size::size12bits)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>=<sp/>(<ref refid="namespacesrsgnb_1a0a246fa8059639a178e17af4df90c173" kindref="member">rlc_si_field</ref>)((*pdu_reader<sp/>&gt;&gt;<sp/>6U)<sp/>&amp;<sp/>0x03U);<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bits<sp/>SI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref><sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0x0fU)<sp/>&lt;&lt;<sp/>8U;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::full_sdu<sp/>and<sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).error(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>PDU,<sp/>reserved<sp/>bits<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::first_segment)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>two<sp/>reserved<sp/>bits<sp/>are<sp/>not<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*pdu_reader<sp/>&gt;&gt;<sp/>4U)<sp/>&amp;<sp/>0x03U)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).error(</highlight><highlight class="stringliteral">&quot;Malformed<sp/>PDU,<sp/>reserved<sp/>bits<sp/>are<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>!=<sp/>rlc_si_field::full_sdu)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue<sp/>unpacking<sp/>remaining<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>8<sp/>bits<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>srslog::fetch_basic_logger(</highlight><highlight class="stringliteral">&quot;RLC&quot;</highlight><highlight class="normal">).error(</highlight><highlight class="stringliteral">&quot;Unsupported<sp/>SN<sp/>length\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>optional<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::last_segment<sp/>||<sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::middle_segment)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref><sp/>=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU)<sp/>&lt;&lt;<sp/>8U;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref><sp/>|=<sp/>(*pdu_reader<sp/>&amp;<sp/>0xffU);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>++pdu_reader;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rlc_um_nr_packed_length(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rlc_um_pdu_header&amp;<sp/>header)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.si<sp/>==<sp/>rlc_si_field::full_sdu)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>all<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.sn_size<sp/>==<sp/>rlc_um_sn_size::size6bits)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>1B<sp/>for<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>B<sp/>for<sp/>12bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.so)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Two<sp/>bytes<sp/>always<sp/>for<sp/>segment<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_um_write_data_pdu_header(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rlc_um_pdu_header&amp;<sp/>header,<sp/>byte_buffer&amp;<sp/>pdu)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>byte_buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdr_buf;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>byte_buffer_writer<sp/>hdr_writer<sp/>=<sp/>hdr_buf;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>SI<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>hdr_writer.append((to_number(header.si)<sp/>&amp;<sp/>0x03U)<sp/>&lt;&lt;<sp/>6U);<sp/></highlight><highlight class="comment">//<sp/>2<sp/>bits<sp/>SI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.si<sp/>==<sp/>rlc_si_field::full_sdu)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.sn_size<sp/>==<sp/>rlc_um_sn_size::size6bits)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.back()<sp/>|=<sp/>(header.sn<sp/>&amp;<sp/>0x3fU);<sp/></highlight><highlight class="comment">//<sp/>6<sp/>bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.back()<sp/>|=<sp/>(header.sn<sp/>&gt;&gt;<sp/>8U)<sp/>&amp;<sp/>0xfU;<sp/></highlight><highlight class="comment">//<sp/>high<sp/>part<sp/>of<sp/>SN<sp/>(4<sp/>bit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.append(header.sn<sp/>&amp;<sp/>0xffU);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>8<sp/>bit<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.so<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.append((header.so)<sp/>&gt;&gt;<sp/>8U);<sp/></highlight><highlight class="comment">//<sp/>first<sp/>part<sp/>of<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdr_writer.append(header.so<sp/>&amp;<sp/>0xffU);<sp/></highlight><highlight class="comment">//<sp/>second<sp/>part<sp/>of<sp/>SO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>pdu.chain_before(std::move(hdr_buf));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srsgnb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fmt<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="182" refid="structfmt_1_1formatter_3_01srsgnb_1_1rlc__um__pdu__header_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structformatter" kindref="compound">formatter</ref>&lt;<ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>::rlc_um_pdu_header&gt;<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParseContext&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>parse(ParseContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(ctx.begin())</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx.begin();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FormatContext&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header" kindref="compound">srsgnb::rlc_um_pdu_header</ref>&amp;<sp/>hdr,<sp/>FormatContext&amp;<sp/>ctx)<sp/>-&gt;<sp/>decltype(std::declval&lt;FormatContext&gt;().out())</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_to(ctx.out(),<sp/></highlight><highlight class="stringliteral">&quot;[SI={},<sp/>SN_SIZE={},<sp/>SN={},<sp/>SO={}]&quot;</highlight><highlight class="normal">,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a8c1c835fb3b5d02fe8c5dca3f37bd30f" kindref="member">sn_size</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>,<sp/>hdr.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/rlc/rlc_um_pdu.h"/>
  </compounddef>
</doxygen>
