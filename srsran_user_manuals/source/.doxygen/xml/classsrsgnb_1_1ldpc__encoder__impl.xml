<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1ldpc__encoder__impl" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>srsgnb::ldpc_encoder_impl</compoundname>
    <basecompoundref refid="classsrsgnb_1_1ldpc__encoder" prot="public" virt="non-virtual">srsgnb::ldpc_encoder</basecompoundref>
    <derivedcompoundref refid="classsrsgnb_1_1ldpc__encoder__avx2" prot="public" virt="non-virtual">srsgnb::ldpc_encoder_avx2</derivedcompoundref>
    <derivedcompoundref refid="classsrsgnb_1_1ldpc__encoder__generic" prot="public" virt="non-virtual">srsgnb::ldpc_encoder_generic</derivedcompoundref>
    <includes refid="ldpc__encoder__impl_8h" local="no">ldpc_encoder_impl.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructors, destructor, copy and move operators</header>
      <description><para>Either default or deleted. </para>
</description>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1accc6b3e0c093f08589f2c314b439f5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_encoder_impl::ldpc_encoder_impl</definition>
        <argsstring>()=default</argsstring>
        <name>ldpc_encoder_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a0cf816ff5db187415d86d93b86cffcfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_encoder_impl::ldpc_encoder_impl</definition>
        <argsstring>(ldpc_encoder_impl &amp;)=delete</argsstring>
        <name>ldpc_encoder_impl</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__encoder__impl" kindref="compound">ldpc_encoder_impl</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="33" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1acc46ac6107f1502e16906ed102f665a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_encoder_impl::ldpc_encoder_impl</definition>
        <argsstring>(ldpc_encoder_impl &amp;&amp;)=delete</argsstring>
        <name>ldpc_encoder_impl</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__encoder__impl" kindref="compound">ldpc_encoder_impl</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="34" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a0200bd67c015b8c91e9bb580e89bece2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1ldpc__encoder__impl" kindref="compound">ldpc_encoder_impl</ref> &amp;</type>
        <definition>ldpc_encoder_impl&amp; srsgnb::ldpc_encoder_impl::operator=</definition>
        <argsstring>(ldpc_encoder_impl &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__encoder__impl" kindref="compound">ldpc_encoder_impl</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="37" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a83bbcd7c1e0f4afe37ff2a42b3716284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1ldpc__encoder__impl" kindref="compound">ldpc_encoder_impl</ref> &amp;</type>
        <definition>ldpc_encoder_impl&amp; srsgnb::ldpc_encoder_impl::operator=</definition>
        <argsstring>(ldpc_encoder_impl &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsrsgnb_1_1ldpc__encoder__impl" kindref="compound">ldpc_encoder_impl</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="38" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1aaf9c0d8f92dcd10b18bdeb999e77402a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::ldpc_encoder_impl::~ldpc_encoder_impl</definition>
        <argsstring>() override=default</argsstring>
        <name>~ldpc_encoder_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="40" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1ac780f38b1fcc6ef1eff2e14854d15a85" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classsrsgnb_1_1ldpc__graph__impl" kindref="compound">ldpc_graph_impl</ref> *</type>
        <definition>const ldpc_graph_impl* srsgnb::ldpc_encoder_impl::current_graph</definition>
        <argsstring></argsstring>
        <name>current_graph</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Pointer to the Tanner graph (~ parity check matrix) used by the encoding algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="67" column="25" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1ad435bb44c37d716af620efce4bb315da" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_encoder_impl::lifting_size</definition>
        <argsstring></argsstring>
        <name>lifting_size</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Lifting size as a natural number (as opposed to an element from <ref refid="namespacesrsgnb_1_1ldpc_1a9cbabc9c9ab5373aede3e7fded3ea060" kindref="member">srsgnb::ldpc::lifting_size_t</ref>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="69" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1ae35e9cff490f2294e85260e69596ef44" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_encoder_impl::bg_N_full</definition>
        <argsstring></argsstring>
        <name>bg_N_full</name>
        <initializer>= 68</initializer>
        <briefdescription>
<para>Total number of base graph variable nodes in the current graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="71" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1a4f497e5b1e433451e709e431585f3a7b" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_encoder_impl::bg_N_short</definition>
        <argsstring></argsstring>
        <name>bg_N_short</name>
        <initializer>= 66</initializer>
        <briefdescription>
<para>Number of base graph variable nodes after shortening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="73" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1a46096e7e2f130751ae67547ba22d7547" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_encoder_impl::bg_M</definition>
        <argsstring></argsstring>
        <name>bg_M</name>
        <initializer>= 46</initializer>
        <briefdescription>
<para>Number of base graph check nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="75" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1a87946f1ed6c1a05fcbb52549b5914b5b" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_encoder_impl::bg_K</definition>
        <argsstring></argsstring>
        <name>bg_K</name>
        <initializer>= 22</initializer>
        <briefdescription>
<para>Number of base graph variable nodes corresponding to information bits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="77" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1ldpc__encoder__impl_1a386b1cd857b3f2edc028b1a16c3b1465" prot="protected" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t srsgnb::ldpc_encoder_impl::codeblock_length</definition>
        <argsstring></argsstring>
        <name>codeblock_length</name>
        <initializer>= 52</initializer>
        <briefdescription>
<para>Number of encoded bits needed to fill the output vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Instead of computing all the variable nodes, the encoder can work with just enough bits to fill the vector returned by the <ref refid="classsrsgnb_1_1ldpc__encoder__impl_1a7b07f2de9d496971220825ce198c0789" kindref="member">ldpc_encoder_impl::encode</ref> function. It is a multiple of the lifting size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="82" column="12" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a7b07f2de9d496971220825ce198c0789" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ldpc_encoder_impl::encode</definition>
        <argsstring>(span&lt; uint8_t &gt; output, span&lt; const uint8_t &gt; input, const codeblock_metadata::tb_common_metadata &amp;cfg) override</argsstring>
        <name>encode</name>
        <reimplements refid="classsrsgnb_1_1ldpc__encoder_1a8c9293e816350c558ef9ea279187ec00">encode</reimplements>
        <param>
          <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; uint8_t &gt;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; const uint8_t &gt;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1codeblock__metadata_1_1tb__common__metadata" kindref="compound">codeblock_metadata::tb_common_metadata</ref> &amp;</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Encodes a message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting codeblock. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Message: original information bits (can contain filler_bit). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoder configuration for the current codeblock. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The length of the output codeblock is deduced from the size of parameter <computeroutput>output</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="45" column="3" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.cpp" bodystart="35" bodyend="72"/>
        <references refid="classsrsgnb_1_1span_1a6408cc7b1d5db1eac20b53b8eaa5188e" compoundref="span_8h" startline="143" endline="143">srsgnb::span&lt; T &gt;::size</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a39f37cd89f5ccc5ec564154adb12745c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ldpc_encoder_impl::init</definition>
        <argsstring>(const codeblock_metadata::tb_common_metadata &amp;cfg)</argsstring>
        <name>init</name>
        <param>
          <type>const <ref refid="structsrsgnb_1_1codeblock__metadata_1_1tb__common__metadata" kindref="compound">codeblock_metadata::tb_common_metadata</ref> &amp;</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Initializes the encoder inner variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="49" column="8" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.cpp" bodystart="20" bodyend="33"/>
        <references refid="namespacesrsgnb_1_1ldpc_1a82c307d48e5817771bd4dc4a5f6c990a" compoundref="ldpc__luts__impl_8cpp" startline="4539" endline="4542">srsgnb::ldpc::get_lifting_size_position</references>
        <references refid="structsrsgnb_1_1codeblock__metadata_1_1tb__common__metadata_1a20ffa0ce3e6b27b6aa3ac51ee6bbc4ed" compoundref="codeblock__metadata_8h" startline="36">srsgnb::codeblock_metadata::tb_common_metadata::lifting_size</references>
        <references refid="structsrsgnb_1_1codeblock__metadata_1_1tb__common__metadata_1a2ca5177a80e975fb733a6fee5af5550a" compoundref="codeblock__metadata_8h" startline="34">srsgnb::codeblock_metadata::tb_common_metadata::base_graph</references>
        <references refid="namespacesrsgnb_1_1ldpc_1ab5cd7213af3d1e82a40997d6d3acca03" compoundref="ldpc_8h" startline="82">srsgnb::ldpc::NOF_LIFTING_SIZES</references>
        <references refid="namespacesrsgnb_1_1ldpc_1a3edd55d7b04c252fa99398df0d9ee6ff" compoundref="ldpc__graph__impl_8h" startline="159">srsgnb::ldpc::graph_array</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a221abf52de47d01ed63aeb7f8a636e45" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void srsgnb::ldpc_encoder_impl::select_strategy</definition>
        <argsstring>()</argsstring>
        <name>select_strategy</name>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__generic_1af135f0b2888080dfcb1803c4526028c1">select_strategy</reimplementedby>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__avx2_1ab2665e5927a3ed1ba6c9852fc9bc53a6">select_strategy</reimplementedby>
        <briefdescription>
<para>Selects the appropriate encoding strategy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="51" column="16" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1ae9873388b9ba573c76889711d376cd17" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::ldpc_encoder_impl::load_input</definition>
        <argsstring>(span&lt; const uint8_t &gt; in)=0</argsstring>
        <name>load_input</name>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a223d0fb49d7ac948fba045632d989904">load_input</reimplementedby>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__avx2_1a68d5c3ffd9e20e200ec6f00061811fed">load_input</reimplementedby>
        <param>
          <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; const uint8_t &gt;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Loads the input bits into the inner register. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="53" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a721667d507fbddc9949d38c02158bf5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::ldpc_encoder_impl::preprocess_systematic_bits</definition>
        <argsstring>()=0</argsstring>
        <name>preprocess_systematic_bits</name>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a69821bbfcf84e437d33135ad38e28865">preprocess_systematic_bits</reimplementedby>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__avx2_1aff2ce9744aaf639d9bffa700f695dcfa">preprocess_systematic_bits</reimplementedby>
        <briefdescription>
<para>Computes some intermediate variables required by the actual encoding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="55" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a5e27fbb5a2532296a2c493ae02c48d5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::ldpc_encoder_impl::encode_high_rate</definition>
        <argsstring>()=0</argsstring>
        <name>encode_high_rate</name>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a0c992335855af9b542c5747a964f508f">encode_high_rate</reimplementedby>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__avx2_1ab80f444f8f29c054cafcebb9ec29cd6e">encode_high_rate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the shortest possible codeword (systematic part plus high-rate region, that is the first 4 x lifting size redundancy bits). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="58" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1a573bbc4dfc2031ef30eaa7b8e88bc991" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::ldpc_encoder_impl::encode_ext_region</definition>
        <argsstring>()=0</argsstring>
        <name>encode_ext_region</name>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a5aca7d99d73494a0d18dd7ab84f651f0">encode_ext_region</reimplementedby>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__avx2_1ac26c0f2cb2042f9565392b00e350a59e">encode_ext_region</reimplementedby>
        <briefdescription>
<para>Computes the rest of the redundancy bits (extension region). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1ldpc__encoder__impl_1ac10549b2a43001922c8b2585770708ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void srsgnb::ldpc_encoder_impl::write_codeblock</definition>
        <argsstring>(span&lt; uint8_t &gt; out)=0</argsstring>
        <name>write_codeblock</name>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__generic_1a9dce03bda20070de9818fa8fc6538664">write_codeblock</reimplementedby>
        <reimplementedby refid="classsrsgnb_1_1ldpc__encoder__avx2_1ab3e7a6b8bcac4fd71342c8bdf94aa7f2">write_codeblock</reimplementedby>
        <param>
          <type><ref refid="classsrsgnb_1_1span" kindref="compound">span</ref>&lt; uint8_t &gt;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Moves relevant encoded bits from the internal register to the output vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="62" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template LDPC encoder. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>srsgnb::ldpc_encoder_generic</label>
        <link refid="classsrsgnb_1_1ldpc__encoder__generic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::ldpc_encoder_avx2</label>
        <link refid="classsrsgnb_1_1ldpc__encoder__avx2"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>srsgnb::ldpc_encoder_impl</label>
        <link refid="classsrsgnb_1_1ldpc__encoder__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::ldpc_encoder</label>
        <link refid="classsrsgnb_1_1ldpc__encoder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>srsgnb::ldpc_graph_impl</label>
        <link refid="classsrsgnb_1_1ldpc__graph__impl"/>
      </node>
      <node id="1">
        <label>srsgnb::ldpc_encoder_impl</label>
        <link refid="classsrsgnb_1_1ldpc__encoder__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#current_graph</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::ldpc_encoder</label>
        <link refid="classsrsgnb_1_1ldpc__encoder"/>
      </node>
    </collaborationgraph>
    <location file="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" line="25" column="1" bodyfile="lib/phy/upper/channel_coding/ldpc/ldpc_encoder_impl.h" bodystart="24" bodyend="83"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a87946f1ed6c1a05fcbb52549b5914b5b" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>bg_K</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a46096e7e2f130751ae67547ba22d7547" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>bg_M</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1ae35e9cff490f2294e85260e69596ef44" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>bg_N_full</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a4f497e5b1e433451e709e431585f3a7b" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>bg_N_short</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a386b1cd857b3f2edc028b1a16c3b1465" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>codeblock_length</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1ac780f38b1fcc6ef1eff2e14854d15a85" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>current_graph</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a7b07f2de9d496971220825ce198c0789" prot="public" virt="virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>encode</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a573bbc4dfc2031ef30eaa7b8e88bc991" prot="private" virt="pure-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>encode_ext_region</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a5e27fbb5a2532296a2c493ae02c48d5a" prot="private" virt="pure-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>encode_high_rate</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a39f37cd89f5ccc5ec564154adb12745c" prot="private" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>init</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1accc6b3e0c093f08589f2c314b439f5c8" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>ldpc_encoder_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a0cf816ff5db187415d86d93b86cffcfb" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>ldpc_encoder_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1acc46ac6107f1502e16906ed102f665a7" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>ldpc_encoder_impl</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1ad435bb44c37d716af620efce4bb315da" prot="protected" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>lifting_size</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1ae9873388b9ba573c76889711d376cd17" prot="private" virt="pure-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>load_input</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a0200bd67c015b8c91e9bb580e89bece2" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a83bbcd7c1e0f4afe37ff2a42b3716284" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a721667d507fbddc9949d38c02158bf5d" prot="private" virt="pure-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>preprocess_systematic_bits</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1a221abf52de47d01ed63aeb7f8a636e45" prot="private" virt="virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>select_strategy</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1ac10549b2a43001922c8b2585770708ad" prot="private" virt="pure-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>write_codeblock</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder_1aa8ba035bdec794b74614dbeb381a5674" prot="public" virt="virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>~ldpc_encoder</name></member>
      <member refid="classsrsgnb_1_1ldpc__encoder__impl_1aaf9c0d8f92dcd10b18bdeb999e77402a" prot="public" virt="non-virtual"><scope>srsgnb::ldpc_encoder_impl</scope><name>~ldpc_encoder_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
