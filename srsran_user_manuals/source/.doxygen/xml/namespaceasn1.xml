<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceasn1" kind="namespace" language="C++">
    <compoundname>asn1</compoundname>
    <innernamespace refid="namespaceasn1_1_1asn__string__utils">asn1::asn_string_utils</innernamespace>
    <innernamespace refid="namespaceasn1_1_1bitstring__utils">asn1::bitstring_utils</innernamespace>
    <innernamespace refid="namespaceasn1_1_1f1ap">asn1::f1ap</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="asn1__utils_8cpp_1af6fe0cd960832a59f300499284c02650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::warn_assert</definition>
        <argsstring>(bool cond, const char *filename, int lineno)</argsstring>
        <name>warn_assert</name>
        <param>
          <type>bool</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="19" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a409466954a914effb5b7e5cd38e366b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::invalid_enum_number</definition>
        <argsstring>(int value, const char *name)</argsstring>
        <name>invalid_enum_number</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="26" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a914dffe7a07db36180ea71b99aa200d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::assert_choice_type</definition>
        <argsstring>(uint32_t val, uint32_t choice_id)</argsstring>
        <name>assert_choice_type</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>choice_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="31" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a4bc0945dcd77886ba8f6a8ef43ce09fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::log_error_code</definition>
        <argsstring>(SRSASN_CODE code, const char *filename, int line)</argsstring>
        <name>log_error_code</name>
        <param>
          <type>SRSASN_CODE</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="42" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="42" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ae6eb59e3a4db780f9e348b3b4cf68d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* asn1::convert_enum_idx</definition>
        <argsstring>(const char *array[], uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>convert_enum_idx</name>
        <param>
          <type>const char *</type>
          <declname>array</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="56" column="12" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="56" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a8244569c9408153550e1a478c62d886e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ItemType</type>
          </param>
        </templateparamlist>
        <type>ItemType</type>
        <definition>ItemType asn1::map_enum_number</definition>
        <argsstring>(ItemType *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number</name>
        <param>
          <type>ItemType *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="70" column="10" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9a64ad00e389156223e06547f2e8614d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template uint8_t</type>
        <definition>const template uint8_t asn1::map_enum_number&lt; const uint8_t &gt;</definition>
        <argsstring>(const uint8_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const uint8_t &gt;</name>
        <param>
          <type>const uint8_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="82" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="82" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a452930f06a1368da408355bff7febfd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template uint16_t</type>
        <definition>const template uint16_t asn1::map_enum_number&lt; const uint16_t &gt;</definition>
        <argsstring>(const uint16_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const uint16_t &gt;</name>
        <param>
          <type>const uint16_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="84" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="84" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a75f943801ac81f123ffc4401b6679d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template uint32_t</type>
        <definition>const template uint32_t asn1::map_enum_number&lt; const uint32_t &gt;</definition>
        <argsstring>(const uint32_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const uint32_t &gt;</name>
        <param>
          <type>const uint32_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="86" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="86" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1adb0ddffdb578c063e5abec3e9f657a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template uint64_t</type>
        <definition>const template uint64_t asn1::map_enum_number&lt; const uint64_t &gt;</definition>
        <argsstring>(const uint64_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const uint64_t &gt;</name>
        <param>
          <type>const uint64_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="88" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="88" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a7b17ba54ed783b4f149a743de994d004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template int8_t</type>
        <definition>const template int8_t asn1::map_enum_number&lt; const int8_t &gt;</definition>
        <argsstring>(const int8_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const int8_t &gt;</name>
        <param>
          <type>const int8_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="90" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="90" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a14beb48b1297984aa9bb5500901639fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template int16_t</type>
        <definition>const template int16_t asn1::map_enum_number&lt; const int16_t &gt;</definition>
        <argsstring>(const int16_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const int16_t &gt;</name>
        <param>
          <type>const int16_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="92" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="92" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ad84c38c533fe58aad4d6b0b68ef01e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template int32_t</type>
        <definition>const template int32_t asn1::map_enum_number&lt; const int32_t &gt;</definition>
        <argsstring>(const int32_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const int32_t &gt;</name>
        <param>
          <type>const int32_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="94" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="94" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aa29903b7cfefc0bff89708bb8cd5f28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template int64_t</type>
        <definition>const template int64_t asn1::map_enum_number&lt; const int64_t &gt;</definition>
        <argsstring>(const int64_t *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const int64_t &gt;</name>
        <param>
          <type>const int64_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="96" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="96" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1adb6238ca55312c838200fdd35a0a8039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const template float</type>
        <definition>const template float asn1::map_enum_number&lt; const float &gt;</definition>
        <argsstring>(const float *array, uint32_t nof_types, uint32_t enum_val, const char *enum_type)</argsstring>
        <name>map_enum_number&lt; const float &gt;</name>
        <param>
          <type>const float *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>enum_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="98" column="16" declfile="lib/asn1/asn1_utils.cpp" declline="98" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9b9fea01a12a3bfb6792b3c59d8f1678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_unsupported_ext_flag</definition>
        <argsstring>(bit_ref &amp;bref, bool ext)</argsstring>
        <name>pack_unsupported_ext_flag</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="279" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="279" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1adb0bf831ddf03787cfd9a11afff6184e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_unsupported_ext_flag</definition>
        <argsstring>(bool &amp;ext, cbit_ref &amp;bref)</argsstring>
        <name>unpack_unsupported_ext_flag</name>
        <param>
          <type>bool &amp;</type>
          <declname>ext</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="289" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="289" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aa454499176536d08a5af722347eba139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_enum</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t enum_val, uint32_t nbits)</argsstring>
        <name>pack_enum</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nbits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="304" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a90b3a56368a94f2b19769720ce3b29ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_enum</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t enum_val, uint32_t nbits, uint32_t nof_noext)</argsstring>
        <name>pack_enum</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>enum_val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nbits</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_noext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="310" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="310" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ac7bd0f0078fa87e8b0a6d48ca15708c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_enum</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t e, uint32_t nof_types, uint32_t nof_exts, bool has_ext)</argsstring>
        <name>pack_enum</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_exts</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="323" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="323" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afbc6679035dcfd33bc538d16444b5b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ValOrError</type>
        <definition>ValOrError asn1::unpack_enum</definition>
        <argsstring>(uint32_t nof_types, uint32_t nof_exts, bool has_ext, cbit_ref &amp;bref)</argsstring>
        <name>unpack_enum</name>
        <param>
          <type>uint32_t</type>
          <declname>nof_types</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nof_exts</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="341" column="12" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="341" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1adb90c31c4c49aa988c2f9e7d555a7121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_constrained_whole_number</definition>
        <argsstring>(bit_ref &amp;bref, IntType n, IntType lb, IntType ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>X.691 - Section 10.5 Encoder function for a constrained whole number <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IntType</parametername>
</parameternamelist>
<parameterdescription>
<para>type of integer (e.g. uint8_t, uint32_t, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bref</parametername>
</parameternamelist>
<parameterdescription>
<para>bit_ref where to encode integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>integer current value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ub</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="385" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="385" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afe875370d8b9b9ebd9f3cb937c4b515f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; int8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int8_t n, int8_t lb, int8_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; int8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="424" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="424" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a3d409f9431fc9ff971aafe75d1e2fd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; int16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int16_t n, int16_t lb, int16_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; int16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="425" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="425" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a77058aeb89aa179c7331ee43bb7487f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; int32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int32_t n, int32_t lb, int32_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; int32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="427" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="427" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a4c3423ccefb350269a740d57a50d211c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; int64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int64_t n, int64_t lb, int64_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; int64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="429" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="429" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a65638dd98f9606e6c45fd0bece11f47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; uint8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint8_t n, uint8_t lb, uint8_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; uint8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="431" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="431" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ad10c9103e54f9ebd3a81a389d3db853d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; uint16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint16_t n, uint16_t lb, uint16_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; uint16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="433" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="433" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ad76499df9585308e40f731a7d73dee7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; uint32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t n, uint32_t lb, uint32_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; uint32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="435" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="435" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1acac389f78ebe5495f3fc8b26789d5ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_constrained_whole_number&lt; uint64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint64_t n, uint64_t lb, uint64_t ub, bool aligned)</argsstring>
        <name>pack_constrained_whole_number&lt; uint64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="437" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="437" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9711de5a4adc7ef8125b2f0b2684dda8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_constrained_whole_number</definition>
        <argsstring>(IntType &amp;n, cbit_ref &amp;bref, IntType lb, IntType ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number</name>
        <param>
          <type>IntType &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>X.691 - Section 10.5 Decoder function for a constrained whole number <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IntType</parametername>
</parameternamelist>
<parameterdescription>
<para>type of integer (e.g. uint8_t, uint32_t, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>integer with decoded value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bref</parametername>
</parameternamelist>
<parameterdescription>
<para>bit_ref where to encode integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ub</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="451" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="451" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a78749a5891d92547b8209e1e20e0a163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; int8_t &gt;</definition>
        <argsstring>(int8_t &amp;n, cbit_ref &amp;bref, int8_t lb, int8_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; int8_t &gt;</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="492" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="492" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a47ba3efe7dc5a84bb7f93c00736aed02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; int16_t &gt;</definition>
        <argsstring>(int16_t &amp;n, cbit_ref &amp;bref, int16_t lb, int16_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; int16_t &gt;</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="494" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="494" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9abb1964e020e02a33636f3d495f0510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; int32_t &gt;</definition>
        <argsstring>(int32_t &amp;n, cbit_ref &amp;bref, int32_t lb, int32_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; int32_t &gt;</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="496" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="496" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a2e68c5ccb3dc240c9efc7d53247982d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; int64_t &gt;</definition>
        <argsstring>(int64_t &amp;n, cbit_ref &amp;bref, int64_t lb, int64_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; int64_t &gt;</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="498" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="498" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a87edbda88d8f9f35d6a2a2789081b1b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t &amp;n, cbit_ref &amp;bref, uint8_t lb, uint8_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="500" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="500" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afcdf7b41a4400c4af934694e435be124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; uint16_t &gt;</definition>
        <argsstring>(uint16_t &amp;n, cbit_ref &amp;bref, uint16_t lb, uint16_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; uint16_t &gt;</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="502" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="502" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ab407f5e082e1312dc83d91be523859c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t &amp;n, cbit_ref &amp;bref, uint32_t lb, uint32_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="504" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="504" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a6e5b83cf2e23c0a31731ee8408a2ed0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_constrained_whole_number&lt; uint64_t &gt;</definition>
        <argsstring>(uint64_t &amp;n, cbit_ref &amp;bref, uint64_t lb, uint64_t ub, bool aligned)</argsstring>
        <name>unpack_constrained_whole_number&lt; uint64_t &gt;</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="506" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="506" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a0861617c509da26ec3694d4535cb57cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UintType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_norm_small_non_neg_whole_number</definition>
        <argsstring>(bit_ref &amp;bref, UintType n)</argsstring>
        <name>pack_norm_small_non_neg_whole_number</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>UintType</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>X.691 - Section 10.6 Encoder function for a normally small non-negative whole number <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IntType</parametername>
</parameternamelist>
<parameterdescription>
<para>type of integer (e.g. uint8_t, uint32_t, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bref</parametername>
</parameternamelist>
<parameterdescription>
<para>bit_ref where to encode integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>integer current value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="518" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="518" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a54acd1d2759fcae391abe8f97e6a66d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UintType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_norm_small_non_neg_whole_number</definition>
        <argsstring>(UintType &amp;n, cbit_ref &amp;bref)</argsstring>
        <name>unpack_norm_small_non_neg_whole_number</name>
        <param>
          <type>UintType &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="530" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="530" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a54203a4c593e5b6b0a3e6781459d7fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_norm_small_non_neg_whole_number&lt; uint8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint8_t n)</argsstring>
        <name>pack_norm_small_non_neg_whole_number&lt; uint8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="543" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="543" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a94b8ccf3be693ba78bba97c90a847c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_norm_small_non_neg_whole_number&lt; uint16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint16_t n)</argsstring>
        <name>pack_norm_small_non_neg_whole_number&lt; uint16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="544" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="544" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a6df0f49111727cede1c95bda7ce81636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_norm_small_non_neg_whole_number&lt; uint32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t n)</argsstring>
        <name>pack_norm_small_non_neg_whole_number&lt; uint32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="545" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="545" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a34a03521a5a00c021b40bbaf85f58afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_norm_small_non_neg_whole_number&lt; uint64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint64_t n)</argsstring>
        <name>pack_norm_small_non_neg_whole_number&lt; uint64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="546" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="546" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a28fa2d5bfe124ef4cb0b6d9268cc21ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_norm_small_non_neg_whole_number&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t &amp;n, cbit_ref &amp;bref)</argsstring>
        <name>unpack_norm_small_non_neg_whole_number&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="547" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="547" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a33d01a73d8887f9597a86fbfe3070f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_norm_small_non_neg_whole_number&lt; uint16_t &gt;</definition>
        <argsstring>(uint16_t &amp;n, cbit_ref &amp;bref)</argsstring>
        <name>unpack_norm_small_non_neg_whole_number&lt; uint16_t &gt;</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="548" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="548" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a13a71e80aab25f2a03d6a2a603170843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_norm_small_non_neg_whole_number&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t &amp;n, cbit_ref &amp;bref)</argsstring>
        <name>unpack_norm_small_non_neg_whole_number&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="549" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="549" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a25f24d64d6e33b9f85762946862041c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_norm_small_non_neg_whole_number&lt; uint64_t &gt;</definition>
        <argsstring>(uint64_t &amp;n, cbit_ref &amp;bref)</argsstring>
        <name>unpack_norm_small_non_neg_whole_number&lt; uint64_t &gt;</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="550" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="550" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a39d9ae497f3dceb60dfe41959fb7e577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>IntType</type>
        <definition>IntType asn1::unconstrained_whole_number_length</definition>
        <argsstring>(IntType n)</argsstring>
        <name>unconstrained_whole_number_length</name>
        <param>
          <type>IntType</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="553" column="9" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="553" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ac5a82030ef66c7c7ace43a22da3cd2fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_unconstrained_whole_number</definition>
        <argsstring>(bit_ref &amp;bref, IntType n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>X.691 - Section 10.8 Encoder function for an unconstrained whole number <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IntType</parametername>
</parameternamelist>
<parameterdescription>
<para>type of integer (e.g. int8_t, uint32_t, etc.) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bref</parametername>
</parameternamelist>
<parameterdescription>
<para>bit_ref where to encode integer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>integer current value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success or failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="567" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="567" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1af117f7ed7dc4d9867db3f369139f5242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_unconstrained_whole_number</definition>
        <argsstring>(IntType &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number</name>
        <param>
          <type>IntType &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="578" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="578" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ad0925a3316e1a6a4ddf494ef5c610e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; int8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int8_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; int8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="587" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="587" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a2d87d07bde25911e8f0581100129aae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; int16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int16_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; int16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="588" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="588" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a496a1c9cc32e211b8574d839352cccf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; int32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int32_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; int32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="589" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="589" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a19e293e7371e40b6bdb37364f61e3045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; int64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int64_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; int64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="590" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="590" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aa3acc7c49941b5d4f262219ee9ed5ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; int8_t &gt;</definition>
        <argsstring>(int8_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; int8_t &gt;</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="591" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="591" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1af47cad5ed8abcb275bf4cee6e85eeb29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; int16_t &gt;</definition>
        <argsstring>(int16_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; int16_t &gt;</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="592" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="592" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a08ca9366c59dc4c859aba70081254eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; int32_t &gt;</definition>
        <argsstring>(int32_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; int32_t &gt;</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="593" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="593" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a6a7714cd2a28fc822fd940f31fe3186b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; int64_t &gt;</definition>
        <argsstring>(int64_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; int64_t &gt;</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="594" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="594" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a1f9c83fb062a8f7d7115f4379f4c92b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; uint8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint8_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; uint8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="595" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="595" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afb888811d5a6ca8fa01c7210cffe0b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; uint16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint16_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; uint16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="596" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="596" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a252c3759379c0bdeb0fbd70bb29904a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; uint32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; uint32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="597" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="597" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a7c7afdf3ce0adfe51700bc0b6e59ed35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_whole_number&lt; uint64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint64_t n, bool aligned)</argsstring>
        <name>pack_unconstrained_whole_number&lt; uint64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="598" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="598" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a771da3388bc0b3ca8badef774544981b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="599" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="599" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a922634a61c3435a10107ccfd3ee947b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; uint16_t &gt;</definition>
        <argsstring>(uint16_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; uint16_t &gt;</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="600" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="600" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9ce43862314df3b06ff9592e46b4c9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="602" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="602" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a72c063bf2dfbcbc31acf54846fc78846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_whole_number&lt; uint64_t &gt;</definition>
        <argsstring>(uint64_t &amp;n, cbit_ref &amp;bref, uint32_t len, bool aligned)</argsstring>
        <name>unpack_unconstrained_whole_number&lt; uint64_t &gt;</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="604" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="604" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a6e1079a17be8695c43c95d6f64a82d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_length</definition>
        <argsstring>(bit_ref &amp;bref, IntType n, IntType lb, IntType ub, bool aligned)</argsstring>
        <name>pack_length</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="612" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="612" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a67791eee8b03334b7b92a45808769e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; uint8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint8_t n, uint8_t lb, uint8_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; uint8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="619" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="619" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ae4290a0c384732b30e648023d18aa92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; uint16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint16_t n, uint16_t lb, uint16_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; uint16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="620" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="620" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ac18d82090b3a973c59f4e7cad05bb812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; uint32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t n, uint32_t lb, uint32_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; uint32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="621" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="621" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a85dbbe25cf4521cd0a5c2cc478bb89fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; uint64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint64_t n, uint64_t lb, uint64_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; uint64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="622" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="622" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a3badf82ee4268a2d62e064b67ea04055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; int8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int8_t n, int8_t lb, int8_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; int8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="623" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="623" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afaa7e8fa24ae7601a537f32200486c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; int16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int16_t n, int16_t lb, int16_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; int16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="624" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="624" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a67fdc65603f04bd03cd47edb736b8704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; int32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int32_t n, int32_t lb, int32_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; int32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="625" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="625" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1af1ccf6b38c5f668c4d925d2e81d11ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_length&lt; int64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int64_t n, int64_t lb, int64_t ub, bool aligned)</argsstring>
        <name>pack_length&lt; int64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="626" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="626" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a6670dc7a3274119db10d2cf7e9e35e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_length</definition>
        <argsstring>(IntType &amp;n, cbit_ref &amp;bref, IntType lb, IntType ub, bool aligned)</argsstring>
        <name>unpack_length</name>
        <param>
          <type>IntType &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="629" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="629" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a899e2bb9787f6c38e8a03e2bd806bb6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t &amp;n, cbit_ref &amp;bref, uint8_t lb, uint8_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="639" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="639" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a74f9c3dff4a7943db7aa3d0ee48e11ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; uint16_t &gt;</definition>
        <argsstring>(uint16_t &amp;n, cbit_ref &amp;bref, uint16_t lb, uint16_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; uint16_t &gt;</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="640" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="640" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a1144dc58de02da857b0ead3d2d8e56ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t &amp;n, cbit_ref &amp;bref, uint32_t lb, uint32_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="641" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="641" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a04bcd3631f889bdc1bc3c9ced40b5747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; uint64_t &gt;</definition>
        <argsstring>(uint64_t &amp;n, cbit_ref &amp;bref, uint64_t lb, uint64_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; uint64_t &gt;</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="642" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="642" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a26cac57393c0367fa557aeaabbe63d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; int8_t &gt;</definition>
        <argsstring>(int8_t &amp;n, cbit_ref &amp;bref, int8_t lb, int8_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; int8_t &gt;</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="643" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="643" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ad9a4e4aba4e3bd2a5fed5a321e461111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; int16_t &gt;</definition>
        <argsstring>(int16_t &amp;n, cbit_ref &amp;bref, int16_t lb, int16_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; int16_t &gt;</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="644" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="644" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a633cf5239d750f25022b8e77549759c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; int32_t &gt;</definition>
        <argsstring>(int32_t &amp;n, cbit_ref &amp;bref, int32_t lb, int32_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; int32_t &gt;</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="645" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="645" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9f55bea605f0150b0dff3bee0ed8a107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_length&lt; int64_t &gt;</definition>
        <argsstring>(int64_t &amp;n, cbit_ref &amp;bref, int64_t lb, int64_t ub, bool aligned)</argsstring>
        <name>unpack_length&lt; int64_t &gt;</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="646" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="646" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a5549e064cde65f4a2de65af5ea08387e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_length</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t val, bool aligned)</argsstring>
        <name>pack_length</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>X.691 - Section 10.9 Pack unconstrained length determinant <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bref</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>&quot;n&quot; length value to pack </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aligned</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="656" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="656" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a740124e1632a57bad416df12d4ac02e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_length</definition>
        <argsstring>(uint32_t &amp;val, cbit_ref &amp;bref, bool aligned)</argsstring>
        <name>unpack_length</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="690" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="690" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afcc5a1d9b2ec6f6a72c797045e018c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_integer</definition>
        <argsstring>(bit_ref &amp;bref, IntType n, IntType lb, IntType ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="737" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="737" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1af767ee522b77bbb0d9b1656a49b24943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; uint8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint8_t n, uint8_t lb, uint8_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; uint8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="772" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="772" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a4d4972027bf0aebb8aab53b7005d523a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; uint16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint16_t n, uint16_t lb, uint16_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; uint16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="774" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="774" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aa2fadcfe53f6aa8bbbc3292459c1f88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; uint32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint32_t n, uint32_t lb, uint32_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; uint32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="776" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="776" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ab62eea31b382dca0f9c957e8ba415cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; uint64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, uint64_t n, uint64_t lb, uint64_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; uint64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="778" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="778" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a6ad62e580640cfda34c9b576a206a368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; int8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int8_t n, int8_t lb, int8_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; int8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="780" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="780" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aa9d0ab1cfba3f64a1cde280ad7bd1463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; int16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int16_t n, int16_t lb, int16_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; int16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="781" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="781" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a4d91f49536fc6e9241b2c6f079d1a5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; int32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int32_t n, int32_t lb, int32_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; int32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="783" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="783" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a12e8b00442b0eb7f9eeb8a0f48c18b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_integer&lt; int64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int64_t n, int64_t lb, int64_t ub, bool has_ext, bool aligned)</argsstring>
        <name>pack_integer&lt; int64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="785" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="785" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a1fb498c81218da67a1a4dc26cc029435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::pack_unconstrained_integer</definition>
        <argsstring>(bit_ref &amp;bref, IntType n, bool has_ext, bool aligned)</argsstring>
        <name>pack_unconstrained_integer</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="790" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="790" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a19f11a14fbac83427587259d7ee7ba26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_integer&lt; int8_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int8_t n, bool has_ext, bool aligned)</argsstring>
        <name>pack_unconstrained_integer&lt; int8_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="795" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="795" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ae78878e696662e9eb228602440bf13c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_integer&lt; int16_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int16_t n, bool has_ext, bool aligned)</argsstring>
        <name>pack_unconstrained_integer&lt; int16_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="796" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="796" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a72460ed0fa588520dce98fcf9f1eff4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_integer&lt; int32_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int32_t n, bool has_ext, bool aligned)</argsstring>
        <name>pack_unconstrained_integer&lt; int32_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="797" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="797" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a45b7ea0a19a09203f6dfd13a90574265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::pack_unconstrained_integer&lt; int64_t &gt;</definition>
        <argsstring>(bit_ref &amp;bref, int64_t n, bool has_ext, bool aligned)</argsstring>
        <name>pack_unconstrained_integer&lt; int64_t &gt;</name>
        <param>
          <type>bit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="798" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="798" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afa6acff967d9fef23b460107ea8f5804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_integer</definition>
        <argsstring>(IntType &amp;n, cbit_ref &amp;bref, IntType lb, IntType ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer</name>
        <param>
          <type>IntType &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>IntType</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="801" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="801" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a741f1f172db8b3ff03179792f6201083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t &amp;n, cbit_ref &amp;bref, uint8_t lb, uint8_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="831" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="831" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a8cf2c4616a448b6a44a3e7938abfb9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; uint16_t &gt;</definition>
        <argsstring>(uint16_t &amp;n, cbit_ref &amp;bref, uint16_t lb, uint16_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; uint16_t &gt;</name>
        <param>
          <type>uint16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="833" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="833" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a8498f66faa39d81d87a08a373bbddbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t &amp;n, cbit_ref &amp;bref, uint32_t lb, uint32_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="835" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="835" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aa367dee1459412f481d06b5c42070185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; uint64_t &gt;</definition>
        <argsstring>(uint64_t &amp;n, cbit_ref &amp;bref, uint64_t lb, uint64_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; uint64_t &gt;</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="837" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="837" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a689a627a0dfa8cda34b664e11ab57501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; int8_t &gt;</definition>
        <argsstring>(int8_t &amp;n, cbit_ref &amp;bref, int8_t lb, int8_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; int8_t &gt;</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="839" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="839" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ada6b18b1c3162d3b763bc6c71f7d0b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; int16_t &gt;</definition>
        <argsstring>(int16_t &amp;n, cbit_ref &amp;bref, int16_t lb, int16_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; int16_t &gt;</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="841" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="841" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a0fc478223b675e4da43d1000076794f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; int32_t &gt;</definition>
        <argsstring>(int32_t &amp;n, cbit_ref &amp;bref, int32_t lb, int32_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; int32_t &gt;</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="843" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="843" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aebadd4953b312810f54a75ae1d8b3b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_integer&lt; int64_t &gt;</definition>
        <argsstring>(int64_t &amp;n, cbit_ref &amp;bref, int64_t lb, int64_t ub, bool has_ext, bool aligned)</argsstring>
        <name>unpack_integer&lt; int64_t &gt;</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="845" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="845" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a1d9cc739af93a62cbbf42b11af4814e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IntType</type>
          </param>
        </templateparamlist>
        <type>SRSASN_CODE</type>
        <definition>SRSASN_CODE asn1::unpack_unconstrained_integer</definition>
        <argsstring>(IntType &amp;n, cbit_ref &amp;bref, bool has_ext, bool aligned)</argsstring>
        <name>unpack_unconstrained_integer</name>
        <param>
          <type>IntType &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="850" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="850" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a5ed3a02dbc2448a4e0c8df2cd93e788c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_integer&lt; int8_t &gt;</definition>
        <argsstring>(int8_t &amp;n, cbit_ref &amp;bref, bool has_ext, bool aligned)</argsstring>
        <name>unpack_unconstrained_integer&lt; int8_t &gt;</name>
        <param>
          <type>int8_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="855" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="855" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9a905cab2ed7d938f642479aba97414c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_integer&lt; int16_t &gt;</definition>
        <argsstring>(int16_t &amp;n, cbit_ref &amp;bref, bool has_ext, bool aligned)</argsstring>
        <name>unpack_unconstrained_integer&lt; int16_t &gt;</name>
        <param>
          <type>int16_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="856" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="856" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a9fa70b986f50e9deedcf93de07cd70ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_integer&lt; int32_t &gt;</definition>
        <argsstring>(int32_t &amp;n, cbit_ref &amp;bref, bool has_ext, bool aligned)</argsstring>
        <name>unpack_unconstrained_integer&lt; int32_t &gt;</name>
        <param>
          <type>int32_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="857" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="857" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afb75c5958354bdd02a485b8d77967d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template SRSASN_CODE</type>
        <definition>template SRSASN_CODE asn1::unpack_unconstrained_integer&lt; int64_t &gt;</definition>
        <argsstring>(int64_t &amp;n, cbit_ref &amp;bref, bool has_ext, bool aligned)</argsstring>
        <name>unpack_unconstrained_integer&lt; int64_t &gt;</name>
        <param>
          <type>int64_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>cbit_ref &amp;</type>
          <declname>bref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>has_ext</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aligned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="858" column="10" declfile="lib/asn1/asn1_utils.cpp" declline="858" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a7cf28fd339e87acd036e36cd3da87e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t asn1::octstring_to_number</definition>
        <argsstring>(const uint8_t *ptr, uint32_t nbytes)</argsstring>
        <name>octstring_to_number</name>
        <param>
          <type>const uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="890" column="10" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="890" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1afa476c8fccbf1fd3f30f7c1baa45dcec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::number_to_octstring</definition>
        <argsstring>(uint8_t *ptr, uint64_t number, uint32_t nbytes)</argsstring>
        <name>number_to_octstring</name>
        <param>
          <type>uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>number</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="903" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="903" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a598ef37985a4549cba876a279df9288f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::to_hex</definition>
        <argsstring>(char *cstr, uint8_t val)</argsstring>
        <name>to_hex</name>
        <param>
          <type>char *</type>
          <declname>cstr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="914" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="914" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1aef6ee1c35b305b62af5d19ca0d3dac6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string asn1::octstring_to_string</definition>
        <argsstring>(const uint8_t *ptr, uint32_t N)</argsstring>
        <name>octstring_to_string</name>
        <param>
          <type>const uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="920" column="13" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="920" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ad29ebb0e2119965780b1fb07ca0900b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::string_to_octstring</definition>
        <argsstring>(uint8_t *ptr, const std::string &amp;str)</argsstring>
        <name>string_to_octstring</name>
        <param>
          <type>uint8_t *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="932" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="932" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1a3969d97ced7671c5a93dcd793aa8f6fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::log_invalid_access_choice_id</definition>
        <argsstring>(uint32_t val, uint32_t choice_id)</argsstring>
        <name>log_invalid_access_choice_id</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>choice_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="1167" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="1167" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="asn1__utils_8cpp_1ae0694ba01e66789515d51a1912cf2875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void asn1::log_invalid_choice_id</definition>
        <argsstring>(uint32_t val, const char *choice_type)</argsstring>
        <name>log_invalid_choice_id</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>choice_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/asn1/asn1_utils.cpp" line="1171" column="6" bodyfile="lib/asn1/asn1_utils.cpp" bodystart="1171" bodyend="1174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/srsgnb/f1_interface/common/f1ap_packet_procedures.h" line="5" column="14"/>
  </compounddef>
</doxygen>
