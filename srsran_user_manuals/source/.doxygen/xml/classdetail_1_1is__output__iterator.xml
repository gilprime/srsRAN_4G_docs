<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdetail_1_1is__output__iterator" kind="class" language="C++" prot="public">
    <compoundname>detail::is_output_iterator</compoundname>
    <templateparamlist>
      <param>
        <type>typename It</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classdetail_1_1is__output__iterator_1acb982d3d7104d3aa32f2ad9b0b4a8041" prot="public" static="no" strong="no">
        <type></type>
        <name>@32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="342" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="342" bodyend="342"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classdetail_1_1is__output__iterator_1a121c543002c929f351a861b3a2e76a03" prot="private" static="no">
        <type>decltype(test&lt; It &gt;(typename <ref refid="structdetail_1_1iterator__category" kindref="compound">iterator_category</ref>&lt; It &gt;::type{}))</type>
        <definition>using detail::is_output_iterator&lt; It &gt;::type =  decltype(test&lt;It&gt;(typename iterator_category&lt;It&gt;::type{}))</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="339" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdetail_1_1is__output__iterator_1ae1de4115af844dd37279797d3179aaec" prot="private" static="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>decltype(*(std::declval&lt; U &gt;())</type>
        <definition>decltype(*(std::declval&lt;U&gt;()) detail::is_output_iterator&lt; It &gt;::test) (std::input_iterator_tag)</definition>
        <argsstring>)(std::input_iterator_tag)</argsstring>
        <name>test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="335" column="19" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classdetail_1_1is__output__iterator_1a6d8954e57ed73638edeb927216da3936" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>char &amp;</type>
        <definition>static char&amp; detail::is_output_iterator&lt; It &gt;::test</definition>
        <argsstring>(std::output_iterator_tag)</argsstring>
        <name>test</name>
        <param>
          <type>std::output_iterator_tag</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="336" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classdetail_1_1is__output__iterator_1a247ed7e1eca78a25c0264f8da3a88bf6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>const char &amp;</type>
        <definition>static const char&amp; detail::is_output_iterator&lt; It &gt;::test</definition>
        <argsstring>(...)</argsstring>
        <name>test</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="337" column="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>detail::is_output_iterator&lt; It &gt;</label>
        <link refid="classdetail_1_1is__output__iterator"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/srslog/bundled/fmt/format.h" line="328" column="37" bodyfile="include/srsgnb/srslog/bundled/fmt/format.h" bodystart="328" bodyend="343"/>
    <listofallmembers>
      <member refid="classdetail_1_1is__output__iterator_1ae1de4115af844dd37279797d3179aaec" prot="private" virt="non-virtual"><scope>detail::is_output_iterator</scope><name>test</name></member>
      <member refid="classdetail_1_1is__output__iterator_1a6d8954e57ed73638edeb927216da3936" prot="private" virt="non-virtual"><scope>detail::is_output_iterator</scope><name>test</name></member>
      <member refid="classdetail_1_1is__output__iterator_1a247ed7e1eca78a25c0264f8da3a88bf6" prot="private" virt="non-virtual"><scope>detail::is_output_iterator</scope><name>test</name></member>
      <member refid="classdetail_1_1is__output__iterator_1a121c543002c929f351a861b3a2e76a03" prot="private" virt="non-virtual"><scope>detail::is_output_iterator</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
