<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsrsgnb_1_1coro__handle" kind="struct" language="C++" prot="public">
    <compoundname>srsgnb::coro_handle</compoundname>
    <includes refid="coroutine_8h" local="no">coroutine.h</includes>
    <templateparamlist>
      <param>
        <type>typename Promise</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1ad2878317140144c4d76f4709f4052cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::coro_handle&lt; Promise &gt;::coro_handle</definition>
        <argsstring>()=default</argsstring>
        <name>coro_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="249" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1a10b6014197d84a52f711010f3edbc4f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::coro_handle&lt; Promise &gt;::coro_handle</definition>
        <argsstring>(detail::base_coro_frame&lt; Promise &gt; *frame_ptr_)</argsstring>
        <name>coro_handle</name>
        <param>
          <type><ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">detail::base_coro_frame</ref>&lt; Promise &gt; *</type>
          <declname>frame_ptr_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="250" column="3" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1ac293d84aa294efdc061282d81b705895" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1coro__handle" kindref="compound">coro_handle</ref>&lt; Promise &gt; &amp;</type>
        <definition>coro_handle&lt;Promise&gt;&amp; srsgnb::coro_handle&lt; Promise &gt;::operator=</definition>
        <argsstring>(detail::base_coro_frame&lt; Promise &gt; *frame_ptr_)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structsrsgnb_1_1detail_1_1base__coro__frame" kindref="compound">detail::base_coro_frame</ref>&lt; Promise &gt; *</type>
          <declname>frame_ptr_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="251" column="15" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="251" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1a7654d7c70a48a8a347fbeece5bb8d5d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Promise &amp;</type>
        <definition>Promise&amp; srsgnb::coro_handle&lt; Promise &gt;::promise</definition>
        <argsstring>()</argsstring>
        <name>promise</name>
        <briefdescription>
<para>Get stored promise object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="258" column="17" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="258" bodyend="258"/>
        <referencedby refid="structsrsgnb_1_1async__task_1_1promise__type_1_1final__awaiter_1a8e68421f9fff5890491146cd1973f370" compoundref="async__task_8h" startline="32" endline="32">srsgnb::async_task&lt; R &gt;::promise_type::final_awaiter::await_suspend</referencedby>
        <referencedby refid="structsrsgnb_1_1coro__handle_1a7654d7c70a48a8a347fbeece5bb8d5d1" compoundref="coroutine_8h" startline="258" endline="258">srsgnb::coro_handle&lt; promise_type &gt;::promise</referencedby>
        <referencedby refid="structsrsgnb_1_1coro__handle_1a5c533f9722cc319a7f19146d492fee13" compoundref="coroutine_8h" startline="278" endline="278">srsgnb::coro_handle&lt; promise_type &gt;::done</referencedby>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1ad6876c7c85d204a81ff0a101b4f3f8c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Promise &amp;</type>
        <definition>const Promise&amp; srsgnb::coro_handle&lt; Promise &gt;::promise</definition>
        <argsstring>() const</argsstring>
        <name>promise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="259" column="17" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="259" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1a286b1fe5ceecb248b4188c2d3b44f8d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::coro_handle&lt; Promise &gt;::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>Destroy coroutine frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="268" column="8" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="268" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1a5c533f9722cc319a7f19146d492fee13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::coro_handle&lt; Promise &gt;::done</definition>
        <argsstring>() const</argsstring>
        <name>done</name>
        <briefdescription>
<para>Check if coroutine run until final suspension point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="278" column="8" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="278" bodyend="278"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structsrsgnb_1_1coro__handle_1a5f4058f7208679bd2e3a72492c2e29af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsrsgnb_1_1coro__handle" kindref="compound">coro_handle</ref>&lt; Promise &gt;</type>
        <definition>static coro_handle&lt;Promise&gt; srsgnb::coro_handle&lt; Promise &gt;::from_promise</definition>
        <argsstring>(Promise *p)</argsstring>
        <name>from_promise</name>
        <param>
          <type>Promise *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>From promise, extract coroutine handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/coroutine.h" line="262" column="22" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="262" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Coroutine handle that will be passed between awaitables. </para>
    </briefdescription>
    <detaileddescription>
<para>Specialization that extends <ref refid="structsrsgnb_1_1coro__handle_3_01void_01_4" kindref="compound">coro_handle&lt;void&gt;</ref> with functionality that depends on the promise_type. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::coro_handle&lt; Promise &gt;</label>
        <link refid="structsrsgnb_1_1coro__handle"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/coroutine.h" line="223" column="1" bodyfile="include/srsgnb/support/async/coroutine.h" bodystart="223" bodyend="-1"/>
    <listofallmembers>
      <member refid="structsrsgnb_1_1coro__handle_1ad2878317140144c4d76f4709f4052cd5" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>coro_handle</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1a10b6014197d84a52f711010f3edbc4f0" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>coro_handle</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1a286b1fe5ceecb248b4188c2d3b44f8d7" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>destroy</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1a5c533f9722cc319a7f19146d492fee13" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>done</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1a5f4058f7208679bd2e3a72492c2e29af" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>from_promise</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1ac293d84aa294efdc061282d81b705895" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>operator=</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1a7654d7c70a48a8a347fbeece5bb8d5d1" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>promise</name></member>
      <member refid="structsrsgnb_1_1coro__handle_1ad6876c7c85d204a81ff0a101b4f3f8c7" prot="public" virt="non-virtual"><scope>srsgnb::coro_handle</scope><name>promise</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
