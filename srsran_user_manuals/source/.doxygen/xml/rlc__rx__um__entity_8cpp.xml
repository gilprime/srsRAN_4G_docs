<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="rlc__rx__um__entity_8cpp" kind="file" language="C++">
    <compoundname>rlc_rx_um_entity.cpp</compoundname>
    <includes refid="rlc__rx__um__entity_8h" local="yes">rlc_rx_um_entity.h</includes>
    <incdepgraph>
      <node id="64">
        <label>list</label>
      </node>
      <node id="52">
        <label>srsgnb/rlc/rlc_config_messages.h</label>
        <link refid="rlc__config__messages_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>srsgnb/adt/unique_function.h</label>
        <link refid="unique__function_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>atomic</label>
      </node>
      <node id="8">
        <label>srsgnb/ran/lcid.h</label>
        <link refid="lcid_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>system_error</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="30">
        <label>limits</label>
      </node>
      <node id="20">
        <label>iterator</label>
      </node>
      <node id="50">
        <label>srsgnb/adt/byte_buffer_slice_chain.h</label>
        <link refid="byte__buffer__slice__chain_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="37">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>srsgnb/adt/intrusive_list.h</label>
        <link refid="intrusive__list_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>stdint.h</label>
      </node>
      <node id="46">
        <label>srsgnb/rlc/rlc.h</label>
        <link refid="rlc_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>srsgnb/support/error_handling.h</label>
        <link refid="error__handling_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>cmath</label>
      </node>
      <node id="47">
        <label>srsgnb/adt/byte_buffer.h</label>
        <link refid="byte__buffer_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>cassert</label>
      </node>
      <node id="58">
        <label>srsgnb/adt/detail/type_storage.h</label>
        <link refid="type__storage_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>stdexcept</label>
      </node>
      <node id="39">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>srsgnb/rlc/rlc_metrics.h</label>
        <link refid="rlc__metrics_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="49">
        <label>srsgnb/support/srsgnb_assert.h</label>
        <link refid="srsgnb__assert_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>map</label>
      </node>
      <node id="73">
        <label>cinttypes</label>
      </node>
      <node id="36">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb/ran/bearer_logger.h</label>
        <link refid="bearer__logger_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>srsgnb/adt/detail/operator.h</label>
        <link refid="operator_8h_source"/>
      </node>
      <node id="67">
        <label>srsgnb/support/timers.h</label>
        <link refid="timers_8h_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>srsgnb/rlc/rlc_config.h</label>
        <link refid="rlc__config_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>srsgnb/srslog/detail/log_entry.h</label>
        <link refid="log__entry_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>rlc_sdu_queue.h</label>
        <link refid="rlc__sdu__queue_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>srsgnb/srslog/shared_types.h</label>
        <link refid="shared__types_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>condition_variable</label>
      </node>
      <node id="34">
        <label>pthread.h</label>
      </node>
      <node id="17">
        <label>cstdio</label>
      </node>
      <node id="60">
        <label>srsgnb/adt/expected.h</label>
        <link refid="expected_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>tuple</label>
      </node>
      <node id="13">
        <label>srsgnb/srslog/log_channel.h</label>
        <link refid="log__channel_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rlc_rx_entity.h</label>
        <link refid="rlc__rx__entity_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>rlc_um_pdu.h</label>
        <link refid="rlc__um__pdu_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="2">
        <label>rlc_rx_um_entity.h</label>
        <link refid="rlc__rx__um__entity_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>utility</label>
      </node>
      <node id="33">
        <label>srsgnb/srslog/detail/support/thread_utils.h</label>
        <link refid="thread__utils_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>array</label>
      </node>
      <node id="40">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>cerrno</label>
      </node>
      <node id="71">
        <label>cstdlib</label>
      </node>
      <node id="48">
        <label>srsgnb/adt/span.h</label>
        <link refid="span_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>cstddef</label>
      </node>
      <node id="51">
        <label>deque</label>
      </node>
      <node id="56">
        <label>srsgnb/adt/circular_buffer.h</label>
        <link refid="circular__buffer_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>mutex</label>
      </node>
      <node id="32">
        <label>chrono</label>
      </node>
      <node id="14">
        <label>srsgnb/srslog/detail/log_backend.h</label>
        <link refid="log__backend_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>srsgnb/srslog/detail/log_entry_metadata.h</label>
        <link refid="log__entry__metadata_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>srsgnb/srslog/logger.h</label>
        <link refid="logger_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>thread</label>
      </node>
      <node id="9">
        <label>srsgnb/srslog/srslog.h</label>
        <link refid="srslog_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>lib/rlc/rlc_rx_um_entity.cpp</label>
        <link refid="rlc__rx__um__entity_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb/ran/du_types.h</label>
        <link refid="du__types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>srsgnb/srslog/detail/support/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>srsgnb/support/format_utils.h</label>
        <link refid="format__utils_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstring</label>
      </node>
      <node id="38">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>srsgnb/srslog/bundled/fmt/core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rlc_rx_um_entity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesrsgnb" kindref="compound">srsgnb</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">rlc_rx_um_entity::rlc_rx_um_entity(<ref refid="namespacesrsgnb_1aa13f1b28a1a8fe4bb461b7eeee862c0c" kindref="member">du_ue_index_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>du_index,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrsgnb_1a27826553cbb7866e22f1ed49d585339e" kindref="member">lcid_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lcid,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__rx__um__config" kindref="compound">rlc_rx_um_config</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__rx__upper__layer__data__notifier" kindref="compound">rlc_rx_upper_layer_data_notifier</ref>&amp;<sp/>upper_dn,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1timer__manager" kindref="compound">timer_manager</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timers)<sp/>:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1rlc__rx__entity" kindref="compound">rlc_rx_entity</ref>(du_index,<sp/>lcid,<sp/>upper_dn),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>cfg(config),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>mod(<ref refid="namespacesrsgnb_1a1eaed18b62e5e415ab28856a8b091e25" kindref="member">cardinality</ref>(to_number(cfg.sn_field_length))),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>um_window_size(<ref refid="namespacesrsgnb_1ad93ba81b397ec62192f1fa75e6540a0b" kindref="member">window_size</ref>(to_number(cfg.sn_field_length))),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>reassembly_timer(timers.create_unique_timer())</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>srsgnb_assert(reassembly_timer.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>RLC<sp/>RX<sp/>UM:<sp/>timers<sp/>not<sp/>configured&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg.t_reassembly_ms<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>reassembly_timer.set(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cfg.t_reassembly_ms),<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint32_t<sp/>tid)<sp/>{<sp/>timer_expired(tid);<sp/>});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TS<sp/>38.322<sp/>v16.2.0<sp/>Sec.<sp/>5.2.3.2.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classsrsgnb_1_1rlc__rx__um__entity_1aa36a54c5e07b384f952e9c2eecc779c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1aa36a54c5e07b384f952e9c2eecc779c0" kindref="member">rlc_rx_um_entity::handle_pdu</ref>(<ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref><sp/>buf)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>metrics_add_pdus(1,<sp/>buf.length());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>logger.log_debug(buf.begin(),<sp/>buf.end(),<sp/></highlight><highlight class="stringliteral">&quot;Rx<sp/>data<sp/>PDU<sp/>({}<sp/>B)&quot;</highlight><highlight class="normal">,<sp/>buf.length());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu__header" kindref="compound">rlc_um_pdu_header</ref><sp/>header<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>rlc_um_read_data_pdu_header(buf.<ref refid="classsrsgnb_1_1byte__buffer__slice_1afbcdc5c0b967236ab27ebd9139ee86b1" kindref="member">view</ref>(),<sp/>cfg.<ref refid="structsrsgnb_1_1rlc__rx__um__config_1a754bc61265495fc53870875d438074d2" kindref="member">sn_field_length</ref>,<sp/>&amp;header))<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.log_warning(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>unpack<sp/>header<sp/>of<sp/>RLC<sp/>PDU&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>metrics_add_malformed_pdus(1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>strip<sp/>header,<sp/>extract<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_len<sp/>=<sp/>rlc_um_nr_packed_length(header);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classsrsgnb_1_1byte__buffer__slice" kindref="compound">byte_buffer_slice</ref><sp/>payload<sp/><sp/><sp/><sp/>=<sp/>buf.<ref refid="classsrsgnb_1_1byte__buffer__slice_1aaf4046087e8623465b0f957fd193b1e8" kindref="member">make_slice</ref>(header_len,<sp/>buf.length()<sp/>-<sp/>header_len);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>PDU<sp/>contains<sp/>a<sp/>SN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::full_sdu)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deliver<sp/>to<sp/>upper<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.log_info(</highlight><highlight class="stringliteral">&quot;Rx<sp/>SDU<sp/>({}<sp/>B)&quot;</highlight><highlight class="normal">,<sp/>payload.length());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>metrics_add_sdus(1,<sp/>payload.length());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_dn.<ref refid="classsrsgnb_1_1rlc__rx__upper__layer__data__notifier_1a33e9d3c04b1b0ae12ff63f9b89bbac1f" kindref="member">on_new_sdu</ref>(std::move(payload));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sn_invalid_for_rx_buffer(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.log_info(</highlight><highlight class="stringliteral">&quot;Discarding<sp/>SN={}&quot;</highlight><highlight class="normal">,<sp/>header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>to<sp/>do<sp/>here<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>PDU<sp/>in<sp/>receive<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu" kindref="compound">rlc_um_pdu</ref><sp/>rx_pdu<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_pdu.header<sp/><sp/><sp/><sp/><sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_pdu.payload<sp/><sp/><sp/><sp/>=<sp/>std::move(payload);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>this<sp/>SN<sp/>is<sp/>already<sp/>present<sp/>in<sp/>rx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_window.find(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>)<sp/>==<sp/>rx_window.end())<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>received<sp/>segment<sp/>of<sp/>this<sp/>SN,<sp/>add<sp/>to<sp/>rx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(rx_pdu.payload.begin(),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_pdu.payload.end(),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;placing<sp/>{}<sp/>segment<sp/>of<sp/>SN={}<sp/>({}<sp/>B)<sp/>in<sp/>Rx<sp/>buffer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_pdu.payload.length());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrsgnb_1_1rlc__rx__um__entity_1_1rlc__umd__pdu__segments" kindref="compound">rlc_umd_pdu_segments</ref><sp/>pdu_segments<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>update_total_sdu_length(pdu_segments,<sp/>rx_pdu);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdu_segments.segments.emplace(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref>,<sp/>std::move(rx_pdu));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rx_window[header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>]<sp/>=<sp/>std::move(pdu_segments);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>segment<sp/>for<sp/>this<sp/>SN<sp/>already<sp/>present,<sp/>update<sp/>received<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(rx_pdu.payload.begin(),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_pdu.payload.end(),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;updating<sp/>SN={}<sp/>at<sp/>SO={}<sp/>with<sp/>{}<sp/>B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_pdu.header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_pdu.header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_pdu.payload.length());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pdu_segments<sp/>=<sp/>rx_window.at(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>total<sp/>SDU<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>update_total_sdu_length(pdu_segments,<sp/>rx_pdu);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>to<sp/>list<sp/>of<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdu_segments.segments.emplace(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref>,<sp/>std::move(rx_pdu));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>received<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_rx_buffer_update(header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>log_state(srslog::basic_levels::debug);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TS<sp/>38.322<sp/>v16.2.0<sp/>Sec<sp/>5.2.2.2.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rlc_rx_um_entity::handle_rx_buffer_update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>sn)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_window.find(sn)<sp/>!=<sp/>rx_window.end())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sdu_complete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>over<sp/>received<sp/>segments<sp/>and<sp/>try<sp/>to<sp/>assemble<sp/>full<sp/>SDU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pdu<sp/>=<sp/>rx_window.at(sn);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>pdu.segments.begin();<sp/>it<sp/>!=<sp/>pdu.segments.end();)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Have<sp/>{}<sp/>segment<sp/>with<sp/>SO={}<sp/>for<sp/>SN={}&quot;</highlight><highlight class="normal">,<sp/>it-&gt;second.header.si,<sp/>it-&gt;second.header.so,<sp/>it-&gt;second.header.sn);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.header.so<sp/>==<sp/>pdu.next_expected_so)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu.next_expected_so<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu.sdu.empty())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reuse<sp/>buffer<sp/>of<sp/>first<sp/>segment<sp/>for<sp/>final<sp/>SDU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>optimize<sp/>copy<sp/>-<sp/>e.g.<sp/>change<sp/>upstream<sp/>SDU<sp/>type<sp/>to<sp/>a<sp/>list-like<sp/>aggregate<sp/>of<sp/>shared_byte_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu.sdu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classsrsgnb_1_1byte__buffer" kindref="compound">byte_buffer</ref>(it-&gt;second.payload.begin(),<sp/>it-&gt;second.payload.end());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu.next_expected_so<sp/>=<sp/>pdu.sdu.length();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;Reusing<sp/>first<sp/>segment<sp/>of<sp/>SN={}<sp/>for<sp/>final<sp/>SDU&quot;</highlight><highlight class="normal">,<sp/>it-&gt;second.header.sn);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>pdu.segments.erase(it);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;SDU<sp/>buffer<sp/>already<sp/>allocated.<sp/>Possible<sp/>retransmission<sp/>of<sp/>first<sp/>segment.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second.header.so<sp/>!=<sp/>pdu.next_expected_so)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>PDU.<sp/>SO<sp/>doesn&apos;t<sp/>match.<sp/>Discarding<sp/>all<sp/>segments<sp/>of<sp/>SN={}.&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_window.erase(sn);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>this<sp/>segment<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>SDU<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>optimize<sp/>copy<sp/>-<sp/>e.g.<sp/>change<sp/>upstream<sp/>SDU<sp/>type<sp/>to<sp/>a<sp/>list-like<sp/>aggregate<sp/>of<sp/>shared_byte_buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu.sdu.append(it-&gt;second.payload);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdu.next_expected_so<sp/>+=<sp/>it-&gt;second.payload.length();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;Appended<sp/>SO={}<sp/>of<sp/>SN={}&quot;</highlight><highlight class="normal">,<sp/>it-&gt;second.header.so,<sp/>it-&gt;second.header.sn);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>pdu.segments.erase(it);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdu.next_expected_so<sp/>==<sp/>pdu.total_sdu_length)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entire<sp/>SDU<sp/>has<sp/>been<sp/>received,<sp/>it<sp/>will<sp/>be<sp/>passed<sp/>up<sp/>the<sp/>stack<sp/>outside<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdu_complete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>next<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdu_complete)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deliver<sp/>full<sp/>SDU<sp/>to<sp/>upper<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_info(</highlight><highlight class="stringliteral">&quot;Rx<sp/>SDU<sp/>({}<sp/>B)&quot;</highlight><highlight class="normal">,<sp/>pdu.sdu.length());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metrics_add_sdus(1,<sp/>pdu.sdu.length());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper_dn.<ref refid="classsrsgnb_1_1rlc__rx__upper__layer__data__notifier_1a33e9d3c04b1b0ae12ff63f9b89bbac1f" kindref="member">on_new_sdu</ref>(std::move(pdu.sdu));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>PDU<sp/>from<sp/>rx_window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rx_window.erase(sn);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>next<sp/>SN<sp/>in<sp/>rx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sn<sp/>==<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_window.empty())<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>further<sp/>segments<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>=<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>rx_window.begin();<sp/>it<sp/>!=<sp/>rx_window.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;SN={}<sp/>has<sp/>{}<sp/>segments&quot;</highlight><highlight class="normal">,<sp/>it-&gt;first,<sp/>it-&gt;second.segments.size());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_mod_base(it-&gt;first)<sp/>&gt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;Updating<sp/>rx_next_reassembly={}&quot;</highlight><highlight class="normal">,<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sn_in_reassembly_window(sn))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SN<sp/>outside<sp/>of<sp/>rx<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref><sp/>=<sp/>(sn<sp/>+<sp/>1)<sp/>%<sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1aaac057040e09c72b53ecc4e15d8638ec" kindref="member">mod</ref>;<sp/></highlight><highlight class="comment">//<sp/>update<sp/>RX_Next_highest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;Updating<sp/>RX_Next_Highest={}&quot;</highlight><highlight class="normal">,<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drop<sp/>all<sp/>SNs<sp/>outside<sp/>of<sp/>new<sp/>rx<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>rx_window.begin();<sp/>it<sp/>!=<sp/>rx_window.end();)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sn_in_reassembly_window(it-&gt;first))<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_info(</highlight><highlight class="stringliteral">&quot;SN={}<sp/>outside<sp/>rx<sp/>window<sp/>[{}:{}]<sp/>-<sp/>discarding&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;first,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref><sp/>-<sp/>um_window_size,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>rx_window.erase(it);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metrics_add_lost_pdus(1);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>sn_in_reassembly_window(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>RX_Next_Reassembly<sp/>to<sp/>first<sp/>SN<sp/>that<sp/>has<sp/>not<sp/>been<sp/>reassembled<sp/>and<sp/>delivered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rx_pdu<sp/>:<sp/>rx_window)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_pdu.first<sp/>&gt;=<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref><sp/>-<sp/>um_window_size))<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>=<sp/>rx_pdu.first;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;Updating<sp/>rx_next_reassembly={}&quot;</highlight><highlight class="normal">,<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__rx__um__entity_1adb473bdb279fb5a891eca46fe6086002" kindref="member">reassembly_timer</ref>.<ref refid="classsrsgnb_1_1unique__timer_1acfc060efe96ca206383e824697101d92" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aa5bb382e5773f03b4de0455dce42669f" kindref="member">rx_timer_trigger</ref><sp/>&lt;=<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>||</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not<sp/>sn_in_reassembly_window(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aa5bb382e5773f03b4de0455dce42669f" kindref="member">rx_timer_trigger</ref>)<sp/>and<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aa5bb382e5773f03b4de0455dce42669f" kindref="member">rx_timer_trigger</ref><sp/>!=<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>)<sp/>||</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref><sp/>==<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>+<sp/>1)<sp/>&amp;&amp;<sp/>not<sp/>has_missing_byte_segment(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;stopping<sp/>reassembly<sp/>timer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1adb473bdb279fb5a891eca46fe6086002" kindref="member">reassembly_timer</ref>.<ref refid="classsrsgnb_1_1unique__timer_1aaf7fbaf8c33be557b958f50f7ce09cf0" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1adb473bdb279fb5a891eca46fe6086002" kindref="member">reassembly_timer</ref>.<ref refid="classsrsgnb_1_1unique__timer_1acfc060efe96ca206383e824697101d92" kindref="member">is_running</ref>())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>)<sp/>&gt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>+<sp/>1))<sp/>||</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>)<sp/>==<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>+<sp/>1))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_missing_byte_segment(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;Starting<sp/>reassembly<sp/>timer<sp/>for<sp/>SN={}&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1adb473bdb279fb5a891eca46fe6086002" kindref="member">reassembly_timer</ref>.<ref refid="classsrsgnb_1_1unique__timer_1a4b169309f8b5fd965a0dec15544ae2bc" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aa5bb382e5773f03b4de0455dce42669f" kindref="member">rx_timer_trigger</ref><sp/>=<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.log_error(</highlight><highlight class="stringliteral">&quot;SN={}<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>Rx<sp/>buffer&quot;</highlight><highlight class="normal">,<sp/>sn);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rlc_rx_um_entity::update_total_sdu_length(rlc_umd_pdu_segments&amp;<sp/>pdu_segments,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrsgnb_1_1rlc__um__pdu" kindref="compound">rlc_um_pdu</ref>&amp;<sp/>rx_pdu)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_pdu.header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1a87dbaa3f68bc52d6c284e392693121a9" kindref="member">si</ref><sp/>==<sp/>rlc_si_field::last_segment)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>pdu_segments.total_sdu_length<sp/>=<sp/>rx_pdu.header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1abc9cc205f312e98ea5466948d17838e7" kindref="member">so</ref><sp/>+<sp/>rx_pdu.payload.length();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;updating<sp/>total<sp/>SDU<sp/>length<sp/>for<sp/>SN={}<sp/>to<sp/>{}<sp/>B&quot;</highlight><highlight class="normal">,<sp/>rx_pdu.header.<ref refid="structsrsgnb_1_1rlc__um__pdu__header_1add2ab9ba161248eb6371ab142fa66810" kindref="member">sn</ref>,<sp/>pdu_segments.total_sdu_length);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TS<sp/>38.322<sp/>v16.2.0<sp/>Sec.<sp/>5.2.2.2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rlc_rx_um_entity::timer_expired(uint32_t<sp/>timeout_id)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrsgnb_1_1rlc__rx__um__entity_1adb473bdb279fb5a891eca46fe6086002" kindref="member">reassembly_timer</ref>.<ref refid="classsrsgnb_1_1unique__timer_1a648953eef6ac4397ec03a52721a4bb05" kindref="member">id</ref>()<sp/>==<sp/>timeout_id)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;reassembly<sp/>timeout<sp/>expiry<sp/>for<sp/>SN={}<sp/>-<sp/>updating<sp/>rx_next_reassembly<sp/>and<sp/>reassembling&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>metrics_add_lost_pdus(1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>RX_Next_Reassembly<sp/>to<sp/>the<sp/>next<sp/>SN<sp/>that<sp/>has<sp/>not<sp/>been<sp/>reassembled<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>=<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aa5bb382e5773f03b4de0455dce42669f" kindref="member">rx_timer_trigger</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>)<sp/>&lt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>))<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>=<sp/>(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1aaac057040e09c72b53ecc4e15d8638ec" kindref="member">mod</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_state(srslog::basic_levels::debug);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>discard<sp/>all<sp/>segments<sp/>with<sp/>SN<sp/>&lt;<sp/>updated<sp/>RX_Next_Reassembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>rx_window.begin();<sp/>it<sp/>!=<sp/>rx_window.end();)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_mod_base(it-&gt;first)<sp/>&lt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>))<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>rx_window.erase(it);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>start<sp/>of<sp/>t_reassembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>)<sp/>&gt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>+<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>)<sp/>==<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref><sp/>+<sp/>1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_missing_byte_segment(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.log_debug(</highlight><highlight class="stringliteral">&quot;starting<sp/>reassembly<sp/>timer<sp/>for<sp/>SN={}&quot;</highlight><highlight class="normal">,<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrsgnb_1_1rlc__rx__um__entity_1adb473bdb279fb5a891eca46fe6086002" kindref="member">reassembly_timer</ref>.<ref refid="classsrsgnb_1_1unique__timer_1a4b169309f8b5fd965a0dec15544ae2bc" kindref="member">run</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aa5bb382e5773f03b4de0455dce42669f" kindref="member">rx_timer_trigger</ref><sp/>=<sp/>st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>log_state(srslog::basic_levels::debug);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TS<sp/>38.322<sp/>v16.2.0<sp/>Sec<sp/>5.2.2.2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_rx_um_entity::sn_in_reassembly_window(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>sn)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref><sp/>-<sp/>um_window_size)<sp/>&lt;=<sp/>rx_mod_base(sn)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_mod_base(sn)<sp/>&lt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref>));</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TS<sp/>38.322<sp/>v16.2.0<sp/>Sec<sp/>5.2.2.2.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_rx_um_entity::sn_invalid_for_rx_buffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>sn)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aabcb6d9a257e750f4d36d942d7afbab1" kindref="member">rx_next_highest</ref><sp/>-<sp/>um_window_size)<sp/>&lt;=<sp/>rx_mod_base(sn)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_mod_base(sn)<sp/>&lt;<sp/>rx_mod_base(st.<ref refid="structsrsgnb_1_1rlc__rx__um__state_1aeb5a757ada9507e8072872c8c7426b99" kindref="member">rx_next_reassembly</ref>));</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rlc_rx_um_entity::has_missing_byte_segment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>sn)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>at<sp/>least<sp/>one<sp/>missing<sp/>byte<sp/>segment<sp/>of<sp/>the<sp/>RLC<sp/>SDU<sp/>associated<sp/>with<sp/>SN<sp/>=<sp/>RX_Next_Reassembly<sp/>before<sp/>the<sp/>last<sp/>byte<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>received<sp/>segments<sp/>of<sp/>this<sp/>RLC<sp/>SDU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rx_window.find(sn)<sp/>!=<sp/>rx_window.end());</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/rlc/rlc_rx_um_entity.cpp"/>
  </compounddef>
</doxygen>
