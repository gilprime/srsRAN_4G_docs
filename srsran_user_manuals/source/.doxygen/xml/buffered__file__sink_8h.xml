<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="buffered__file__sink_8h" kind="file" language="C++">
    <compoundname>buffered_file_sink.h</compoundname>
    <includes refid="file__utils_8h" local="yes">file_utils.h</includes>
    <includes refid="sink_8h" local="yes">srsgnb/srslog/sink.h</includes>
    <includedby refid="event__trace_8cpp" local="yes">lib/srslog/event_trace.cpp</includedby>
    <incdepgraph>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="16">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="21">
        <label>srsgnb/srslog/detail/support/memory_buffer.h</label>
        <link refid="memory__buffer_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/srslog/sinks/buffered_file_sink.h</label>
        <link refid="buffered__file__sink_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="28">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="24">
        <label>srsgnb/srslog/context.h</label>
        <link refid="context_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="20">
        <label>srsgnb/srslog/detail/support/error_string.h</label>
        <link refid="error__string_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb/srslog/bundled/fmt/format.h</label>
        <link refid="format_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>srsgnb/srslog/sink.h</label>
        <link refid="sink_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstdio</label>
      </node>
      <node id="27">
        <label>tuple</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
      <node id="12">
        <label>array</label>
      </node>
      <node id="25">
        <label>srsgnb/srslog/detail/support/tmpl_utils.h</label>
        <link refid="tmpl__utils_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cerrno</label>
      </node>
      <node id="26">
        <label>cstddef</label>
      </node>
      <node id="2">
        <label>file_utils.h</label>
        <link refid="file__utils_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="23">
        <label>srsgnb/srslog/formatter.h</label>
        <link refid="formatter_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>core.h</label>
        <link refid="core_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classsrslog_1_1buffered__file__sink" prot="public">srslog::buffered_file_sink</innerclass>
    <innernamespace refid="namespacesrslog">srslog</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2013-2022<sp/>Software<sp/>Radio<sp/>Systems<sp/>Limited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>By<sp/>using<sp/>this<sp/>file,<sp/>you<sp/>agree<sp/>to<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>set</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>forth<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>which<sp/>can<sp/>be<sp/>found<sp/>at<sp/>the<sp/>top<sp/>level<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;file_utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;srsgnb/srslog/sink.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">srslog<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classsrslog_1_1buffered__file__sink" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1sink" kindref="compound">sink</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>(std::string<sp/>filename,<sp/>std::size_t<sp/>capacity,<sp/>std::unique_ptr&lt;log_formatter&gt;<sp/>f)<sp/>:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsrslog_1_1sink" kindref="compound">sink</ref>(std::move(f)),<sp/>filename(std::move(filename))</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.reserve(capacity);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>~<ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" kindref="member">flush_buffer</ref>();<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1buffered__file__sink" kindref="compound">buffered_file_sink</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref><sp/><ref refid="classsrslog_1_1buffered__file__sink_1a7bce17adbdbfee6f1c6946dbabe23d62" kindref="member">write</ref>(<ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">detail::memory_buffer</ref><sp/>input_buffer)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="35"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>file<sp/>the<sp/>first<sp/>time<sp/>we<sp/>hit<sp/>this<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_file_created)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_file_created<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(!handler<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>handler<sp/>should<sp/>be<sp/>created<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>err_str<sp/>=<sp/>handler.<ref refid="classsrslog_1_1file__utils_1_1file_1ac104918e45f47b7372eab90820b17110" kindref="member">create</ref>(filename))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err_str;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsrslog_1_1buffered__file__sink_1ace90386a063cfb7ea60543c9bfc6f0ca" kindref="member">has_room_for</ref>(input_buffer.<ref refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" kindref="member">size</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer.insert(buffer.end(),<sp/>input_buffer.<ref refid="classsrslog_1_1detail_1_1memory__buffer_1af17a95879174621507450d90c61765e5" kindref="member">begin</ref>(),<sp/>input_buffer.<ref refid="classsrslog_1_1detail_1_1memory__buffer_1a8e893e88152fa1d6044db630f8d368ea" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" kindref="member">flush_buffer</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classsrslog_1_1buffered__file__sink_1adacf6406627e1915a4cc47a1d3958da4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref><sp/><ref refid="classsrslog_1_1buffered__file__sink_1adacf6406627e1915a4cc47a1d3958da4" kindref="member">flush</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>err<sp/>=<sp/><ref refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" kindref="member">flush_buffer</ref>())<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler.<ref refid="classsrslog_1_1file__utils_1_1file_1a7cde6bc69c56d58f1015345451ba415e" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classsrslog_1_1buffered__file__sink_1ace90386a063cfb7ea60543c9bfc6f0ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classsrslog_1_1buffered__file__sink_1ace90386a063cfb7ea60543c9bfc6f0ca" kindref="member">has_room_for</ref>(std::size_t<sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>+<sp/>buffer.size()<sp/>&lt;<sp/>buffer.capacity();<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref><sp/><ref refid="classsrslog_1_1buffered__file__sink_1a3a31f0e6aaad91e3790e4942e8b544d4" kindref="member">flush_buffer</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer.empty())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>handler.<ref refid="classsrslog_1_1file__utils_1_1file_1ad07253657cab84fb7e9daf133eca55ad" kindref="member">write</ref>(<ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">detail::memory_buffer</ref>(buffer.data(),<sp/>buffer.size()));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.clear();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classsrslog_1_1file__utils_1_1file" kindref="compound">file_utils::file</ref><sp/><sp/>handler;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>std::vector&lt;char&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_file_created<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>srslog</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/srslog/sinks/buffered_file_sink.h"/>
  </compounddef>
</doxygen>
