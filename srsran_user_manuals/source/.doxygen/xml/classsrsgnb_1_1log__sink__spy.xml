<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1log__sink__spy" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::log_sink_spy</compoundname>
    <basecompoundref refid="classsrslog_1_1sink" prot="public" virt="non-virtual">srslog::sink</basecompoundref>
    <includes refid="test__utils_8h" local="no">test_utils.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1log__sink__spy_1a2f0e9b640be0ab5cef2a38509a951b08" prot="private" static="no" mutable="no">
        <type><ref refid="classsrslog_1_1sink" kindref="compound">srslog::sink</ref> &amp;</type>
        <definition>srslog::sink&amp; srsgnb::log_sink_spy::s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="74" column="24" bodyfile="include/srsgnb/support/test_utils.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1log__sink__spy_1a427f936d02e4616a48dbf1b4bce1dbb3" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; unsigned &gt;</type>
        <definition>std::atomic&lt;unsigned&gt; srsgnb::log_sink_spy::error_counter</definition>
        <argsstring></argsstring>
        <name>error_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="75" column="15" bodyfile="include/srsgnb/support/test_utils.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1log__sink__spy_1ab48cb519602ecaad5e6de60091122ffb" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; unsigned &gt;</type>
        <definition>std::atomic&lt;unsigned&gt; srsgnb::log_sink_spy::warning_counter</definition>
        <argsstring></argsstring>
        <name>warning_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="76" column="15" bodyfile="include/srsgnb/support/test_utils.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1a6285b425f0cfc882333bb9c10e56eda3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::log_sink_spy::log_sink_spy</definition>
        <argsstring>(std::unique_ptr&lt; srslog::log_formatter &gt; f)</argsstring>
        <name>log_sink_spy</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">srslog::log_formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="24" column="12" bodyfile="include/srsgnb/support/test_utils.h" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1a8c66f463a997fc54c983adddef7edf34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::log_sink_spy::get_error_counter</definition>
        <argsstring>() const</argsstring>
        <name>get_error_counter</name>
        <briefdescription>
<para>Returns the number of log entries tagged as errors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="35" column="12" bodyfile="include/srsgnb/support/test_utils.h" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1a23c30acde1b0805f7e34f72cd0880054" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned srsgnb::log_sink_spy::get_warning_counter</definition>
        <argsstring>() const</argsstring>
        <name>get_warning_counter</name>
        <briefdescription>
<para>Returns the number of log entries tagged as warnings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="43" column="12" bodyfile="include/srsgnb/support/test_utils.h" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1a4db39b8a2d9081702742daa2ba54dbab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::log_sink_spy::reset_counters</definition>
        <argsstring>()</argsstring>
        <name>reset_counters</name>
        <briefdescription>
<para>Resets the counters back to 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="51" column="8" bodyfile="include/srsgnb/support/test_utils.h" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1a28d22de9cf8fc903a540a072cc30d4b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">srslog::detail::error_string</ref></type>
        <definition>srslog::detail::error_string srsgnb::log_sink_spy::write</definition>
        <argsstring>(srslog::detail::memory_buffer buffer) override</argsstring>
        <name>write</name>
        <reimplements refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">write</reimplements>
        <param>
          <type><ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">srslog::detail::memory_buffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Writes the provided memory buffer into the sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="59" column="32" bodyfile="include/srsgnb/support/test_utils.h" bodystart="59" bodyend="69"/>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1aa72ea90570be1ceb95d33fb32a9fa437" compoundref="memory__buffer_8h" startline="32" endline="32">srslog::detail::memory_buffer::data</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" compoundref="memory__buffer_8h" startline="41" endline="41">srslog::detail::memory_buffer::size</references>
        <references refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">srslog::sink::write</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1af7924f2ff96fa77a39f7e857bd706c3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">srslog::detail::error_string</ref></type>
        <definition>srslog::detail::error_string srsgnb::log_sink_spy::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">flush</reimplements>
        <briefdescription>
<para>Flushes any buffered contents to the backing store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="71" column="32" bodyfile="include/srsgnb/support/test_utils.h" bodystart="71" bodyend="71"/>
        <references refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">srslog::sink::flush</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsrsgnb_1_1log__sink__spy_1a1ba858f07cef3da99590078cf868660d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* srsgnb::log_sink_spy::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
<para>Identifier of this custom sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/test_utils.h" line="32" column="21" bodyfile="include/srsgnb/support/test_utils.h" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This custom sink intercepts log messages to count error and warning log entries. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srsgnb::log_sink_spy</label>
        <link refid="classsrsgnb_1_1log__sink__spy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srsgnb::log_sink_spy</label>
        <link refid="classsrsgnb_1_1log__sink__spy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>-s</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/test_utils.h" line="22" column="1" bodyfile="include/srsgnb/support/test_utils.h" bodystart="21" bodyend="77"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1log__sink__spy_1a427f936d02e4616a48dbf1b4bce1dbb3" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>error_counter</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1af7924f2ff96fa77a39f7e857bd706c3c" prot="public" virt="virtual"><scope>srsgnb::log_sink_spy</scope><name>flush</name></member>
      <member refid="classsrslog_1_1sink_1a3fe50dcff14510123286afa7885701a1" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>formatter</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a8c66f463a997fc54c983adddef7edf34" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>get_error_counter</name></member>
      <member refid="classsrslog_1_1sink_1afefc81cbae7348e62570771e3d0f9ead" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1sink_1a1d6a623fb8292a96234d98f71fff18f2" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>get_formatter</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a23c30acde1b0805f7e34f72cd0880054" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>get_warning_counter</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a6285b425f0cfc882333bb9c10e56eda3" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>log_sink_spy</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a1ba858f07cef3da99590078cf868660d" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>name</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a4db39b8a2d9081702742daa2ba54dbab" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>reset_counters</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a2f0e9b640be0ab5cef2a38509a951b08" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>s</name></member>
      <member refid="classsrslog_1_1sink_1a67b8e754a3c8f4e1668b7d9305fdbb58" prot="public" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>sink</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1ab48cb519602ecaad5e6de60091122ffb" prot="private" virt="non-virtual"><scope>srsgnb::log_sink_spy</scope><name>warning_counter</name></member>
      <member refid="classsrsgnb_1_1log__sink__spy_1a28d22de9cf8fc903a540a072cc30d4b7" prot="public" virt="virtual"><scope>srsgnb::log_sink_spy</scope><name>write</name></member>
      <member refid="classsrslog_1_1sink_1a148d2b74c00249a71fa3bbf581dd22e5" prot="public" virt="virtual"><scope>srsgnb::log_sink_spy</scope><name>~sink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
