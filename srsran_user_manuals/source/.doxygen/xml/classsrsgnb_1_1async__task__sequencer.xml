<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1async__task__sequencer" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::async_task_sequencer</compoundname>
    <includes refid="async__task__loop_8h" local="no">async_task_loop.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1async__task__sequencer_1acfd2185d1eb3532dc36a87a8adfa6b89" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool srsgnb::async_task_sequencer::running</definition>
        <argsstring></argsstring>
        <name>running</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="79" column="34" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1async__task__sequencer_1a7f0dd155088f39328a597b4400d7c5b5" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1async__queue" kindref="compound">async_queue</ref>&lt; <ref refid="classsrsgnb_1_1async__task" kindref="compound">async_task</ref>&lt; void &gt; &gt;</type>
        <definition>async_queue&lt;async_task&lt;void&gt; &gt; srsgnb::async_task_sequencer::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="80" column="15" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1async__task__sequencer_1a8bf70a3be4d20705ef42849f4e0571d8" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1eager__async__task" kindref="compound">eager_async_task</ref>&lt; void &gt;</type>
        <definition>eager_async_task&lt;void&gt; srsgnb::async_task_sequencer::loop_task</definition>
        <argsstring></argsstring>
        <name>loop_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="81" column="28" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrsgnb_1_1async__task__sequencer_1ac5fb4286147e79db3acbee249b395043" prot="private" static="no" mutable="no">
        <type><ref refid="classsrsgnb_1_1async__task" kindref="compound">async_task</ref>&lt; void &gt;</type>
        <definition>async_task&lt;void&gt; srsgnb::async_task_sequencer::next_task</definition>
        <argsstring></argsstring>
        <name>next_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="82" column="28" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1a6aa6bdfd578de2c85e6c369119970347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::async_task_sequencer::async_task_sequencer</definition>
        <argsstring>(size_t queue_size)</argsstring>
        <name>async_task_sequencer</name>
        <param>
          <type>size_t</type>
          <declname>queue_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="23" column="3" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1ab3ab0a0d3d327e47b022ff24fed435ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::async_task_sequencer::async_task_sequencer</definition>
        <argsstring>(const async_task_sequencer &amp;)=delete</argsstring>
        <name>async_task_sequencer</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1async__task__sequencer" kindref="compound">async_task_sequencer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1af359afe22e6ced6a23156a341b396f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1async__task__sequencer" kindref="compound">async_task_sequencer</ref> &amp;</type>
        <definition>async_task_sequencer&amp; srsgnb::async_task_sequencer::operator=</definition>
        <argsstring>(const async_task_sequencer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1async__task__sequencer" kindref="compound">async_task_sequencer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="25" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1ae2bb41a1b993e5c1c70a9d23ae914bbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::async_task_sequencer::schedule</definition>
        <argsstring>(async_task&lt; R &gt; &amp;&amp;t)</argsstring>
        <name>schedule</name>
        <param>
          <type><ref refid="classsrsgnb_1_1async__task" kindref="compound">async_task</ref>&lt; R &gt; &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="28" column="8" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1a4703f076c3d3a9a5185bc322284cca2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AsyncTask</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::async_task_sequencer::schedule</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>schedule</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="34" column="8" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1a476b5271fa039a0a9cfdb2572776519b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AsyncFunc</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool srsgnb::async_task_sequencer::schedule</definition>
        <argsstring>(AsyncFunc &amp;&amp;async_func)</argsstring>
        <name>schedule</name>
        <param>
          <type>AsyncFunc &amp;&amp;</type>
          <declname>async_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="40" column="8" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1a8b2e5b8f6917d02ed399b0fd73a6cb9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1eager__async__task" kindref="compound">eager_async_task</ref>&lt; void &gt;</type>
        <definition>eager_async_task&lt;void&gt; srsgnb::async_task_sequencer::request_stop</definition>
        <argsstring>()</argsstring>
        <name>request_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="45" column="20" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="45" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1a86e123a654c87800473f08a7a26a92da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t srsgnb::async_task_sequencer::nof_pending_tasks</definition>
        <argsstring>() const</argsstring>
        <name>nof_pending_tasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="56" column="10" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1af303b43744698af75b74a4954a9a737f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::async_task_sequencer::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="58" column="8" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrsgnb_1_1async__task__sequencer_1a9f3d9f816d288b7556e5987c2df8139a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::async_task_sequencer::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/async_task_loop.h" line="61" column="8" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="61" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Asynchronous task that sequentially runs other enqueued asynchronous tasks. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>srsgnb::unique_coroutine&lt; srsgnb::eager_async_task::promise_type &gt;</label>
        <link refid="classsrsgnb_1_1unique__coroutine"/>
        <childnode refid="11" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::dyn_circular_buffer&lt; srsgnb::async_task&lt; void &gt; &gt;</label>
        <link refid="classsrsgnb_1_1dyn__circular__buffer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>srsgnb::detail::common_task_crtp&lt; async_task&lt; void &gt;, void &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1common__task__crtp"/>
      </node>
      <node id="12">
        <label>srsgnb::async_task&lt; void &gt;</label>
        <link refid="classsrsgnb_1_1async__task"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>srsgnb::async_queue&lt; T &gt;::awaiter_type</label>
        <link refid="structsrsgnb_1_1async__queue_1_1awaiter__type"/>
        <childnode refid="6" relation="usage">
          <edgelabel>+parent</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>+suspended_handle</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+next</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb::async_queue&lt; T &gt;</label>
        <link refid="classsrsgnb_1_1async__queue"/>
        <childnode refid="5" relation="usage">
          <edgelabel>-last</edgelabel>
          <edgelabel>-front</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>srsgnb::coro_handle&lt; Promise &gt;</label>
        <link refid="structsrsgnb_1_1coro__handle"/>
      </node>
      <node id="8">
        <label>srsgnb::eager_async_task&lt; void &gt;</label>
        <link refid="classsrsgnb_1_1eager__async__task"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>srsgnb::coro_handle&lt; promise_type &gt;</label>
        <link refid="structsrsgnb_1_1coro__handle"/>
      </node>
      <node id="1">
        <label>srsgnb::async_task_sequencer</label>
        <link refid="classsrsgnb_1_1async__task__sequencer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-loop_task</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-next_task</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::async_queue&lt; srsgnb::async_task&lt; void &gt; &gt;</label>
        <link refid="classsrsgnb_1_1async__queue"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-last</edgelabel>
          <edgelabel>-front</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::detail::base_circular_buffer&lt; std::vector&lt; detail::type_storage&lt; srsgnb::async_task&lt; void &gt; &gt; &gt; &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1base__circular__buffer"/>
      </node>
      <node id="14">
        <label>srsgnb::unique_coroutine&lt; srsgnb::async_task::promise_type &gt;</label>
        <link refid="classsrsgnb_1_1unique__coroutine"/>
        <childnode refid="11" relation="usage">
          <edgelabel>-handle</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>srsgnb::detail::common_task_crtp&lt; eager_async_task&lt; void &gt;, void &gt;</label>
        <link refid="classsrsgnb_1_1detail_1_1common__task__crtp"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/async_task_loop.h" line="21" column="1" bodyfile="include/srsgnb/support/async/async_task_loop.h" bodystart="20" bodyend="83"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a6aa6bdfd578de2c85e6c369119970347" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>async_task_sequencer</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1ab3ab0a0d3d327e47b022ff24fed435ec" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>async_task_sequencer</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1af303b43744698af75b74a4954a9a737f" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a8bf70a3be4d20705ef42849f4e0571d8" prot="private" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>loop_task</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1ac5fb4286147e79db3acbee249b395043" prot="private" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>next_task</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a86e123a654c87800473f08a7a26a92da" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>nof_pending_tasks</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1af359afe22e6ced6a23156a341b396f37" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>operator=</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a7f0dd155088f39328a597b4400d7c5b5" prot="private" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>queue</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a8b2e5b8f6917d02ed399b0fd73a6cb9c" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>request_stop</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a9f3d9f816d288b7556e5987c2df8139a" prot="private" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>run</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1acfd2185d1eb3532dc36a87a8adfa6b89" prot="private" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>running</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1ae2bb41a1b993e5c1c70a9d23ae914bbf" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>schedule</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a4703f076c3d3a9a5185bc322284cca2f" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>schedule</name></member>
      <member refid="classsrsgnb_1_1async__task__sequencer_1a476b5271fa039a0a9cfdb2572776519b" prot="public" virt="non-virtual"><scope>srsgnb::async_task_sequencer</scope><name>schedule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
