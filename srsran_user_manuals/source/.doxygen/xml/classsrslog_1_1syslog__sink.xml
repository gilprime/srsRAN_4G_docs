<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrslog_1_1syslog__sink" kind="class" language="C++" prot="public">
    <compoundname>srslog::syslog_sink</compoundname>
    <basecompoundref refid="classsrslog_1_1sink" prot="public" virt="non-virtual">srslog::sink</basecompoundref>
    <includes refid="syslog__sink_8h" local="no">syslog_sink.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1aa30f8ab85df309e74975e68e124ee895" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srslog::syslog_sink::syslog_sink</definition>
        <argsstring>(std::unique_ptr&lt; log_formatter &gt; f, std::string preamble_=&quot;&quot;, syslog_local_type log_local_=syslog_local_type::local0)</argsstring>
        <name>syslog_sink</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classsrslog_1_1log__formatter" kindref="compound">log_formatter</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>preamble_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>syslog_local_type</type>
          <declname>log_local_</declname>
          <defval>syslog_local_type::local0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="23" column="3" bodyfile="lib/srslog/sinks/syslog_sink.h" bodystart="23" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1afb7c5f24768dd01cfc1fef3f90695d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>srslog::syslog_sink::syslog_sink</definition>
        <argsstring>(const syslog_sink &amp;other)=delete</argsstring>
        <name>syslog_sink</name>
        <param>
          <type>const <ref refid="classsrslog_1_1syslog__sink" kindref="compound">syslog_sink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1a84ec4fa79354c70292c573d8d2fd8477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsrslog_1_1syslog__sink" kindref="compound">syslog_sink</ref> &amp;</type>
        <definition>syslog_sink&amp; srslog::syslog_sink::operator=</definition>
        <argsstring>(const syslog_sink &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsrslog_1_1syslog__sink" kindref="compound">syslog_sink</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="32" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1aff4159348e07cc8f26f2a83c4e8d56ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::syslog_sink::write</definition>
        <argsstring>(detail::memory_buffer buffer) override</argsstring>
        <name>write</name>
        <reimplements refid="classsrslog_1_1sink_1ad88268d4cca4ef27ec7c4a95cda288b1">write</reimplements>
        <param>
          <type><ref refid="classsrslog_1_1detail_1_1memory__buffer" kindref="compound">detail::memory_buffer</ref></type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Writes the provided memory buffer into the sink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="34" column="24" bodyfile="lib/srslog/sinks/syslog_sink.h" bodystart="34" bodyend="50"/>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1aa72ea90570be1ceb95d33fb32a9fa437" compoundref="memory__buffer_8h" startline="32" endline="32">srslog::detail::memory_buffer::data</references>
        <references refid="classsrslog_1_1detail_1_1memory__buffer_1a911bbffed1ea236e25f5533ad1183791" compoundref="memory__buffer_8h" startline="41" endline="41">srslog::detail::memory_buffer::size</references>
      </memberdef>
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1a61bdf0bc9426801295b0a79132fb2746" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::syslog_sink::flush</definition>
        <argsstring>() override</argsstring>
        <name>flush</name>
        <reimplements refid="classsrslog_1_1sink_1a6f32149349a60fcf5c6ee68174ac5aa5">flush</reimplements>
        <briefdescription>
<para>Flushes any buffered contents to the backing store. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="52" column="24" bodyfile="lib/srslog/sinks/syslog_sink.h" bodystart="52" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1ae1fd8f998a982bfeb9142acc41be7b9c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrslog_1_1detail_1_1error__string" kindref="compound">detail::error_string</ref></type>
        <definition>detail::error_string srslog::syslog_sink::create_syslog</definition>
        <argsstring>(std::string preamble, int log_local)</argsstring>
        <name>create_syslog</name>
        <param>
          <type>std::string</type>
          <declname>preamble</declname>
        </param>
        <param>
          <type>int</type>
          <declname>log_local</declname>
        </param>
        <briefdescription>
<para>Creates a new syslog. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="56" column="24" bodyfile="lib/srslog/sinks/syslog_sink.h" bodystart="56" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classsrslog_1_1syslog__sink_1a348e77472940fc95cdc719d8261a6f47" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int srslog::syslog_sink::syslog_translate</definition>
        <argsstring>(syslog_local_type log_local)</argsstring>
        <name>syslog_translate</name>
        <param>
          <type>syslog_local_type</type>
          <declname>log_local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/srslog/sinks/syslog_sink.h" line="66" column="14" bodyfile="lib/srslog/sinks/syslog_sink.h" bodystart="66" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This sink implementation writes to syslog. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srslog::syslog_sink</label>
        <link refid="classsrslog_1_1syslog__sink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>srslog::sink</label>
        <link refid="classsrslog_1_1sink"/>
      </node>
      <node id="1">
        <label>srslog::syslog_sink</label>
        <link refid="classsrslog_1_1syslog__sink"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/srslog/sinks/syslog_sink.h" line="21" column="1" bodyfile="lib/srslog/sinks/syslog_sink.h" bodystart="20" bodyend="90"/>
    <listofallmembers>
      <member refid="classsrslog_1_1syslog__sink_1ae1fd8f998a982bfeb9142acc41be7b9c" prot="private" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>create_syslog</name></member>
      <member refid="classsrslog_1_1syslog__sink_1a61bdf0bc9426801295b0a79132fb2746" prot="public" virt="virtual"><scope>srslog::syslog_sink</scope><name>flush</name></member>
      <member refid="classsrslog_1_1sink_1a3fe50dcff14510123286afa7885701a1" prot="private" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>formatter</name></member>
      <member refid="classsrslog_1_1sink_1afefc81cbae7348e62570771e3d0f9ead" prot="public" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1sink_1a1d6a623fb8292a96234d98f71fff18f2" prot="public" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>get_formatter</name></member>
      <member refid="classsrslog_1_1syslog__sink_1a84ec4fa79354c70292c573d8d2fd8477" prot="public" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>operator=</name></member>
      <member refid="classsrslog_1_1sink_1a67b8e754a3c8f4e1668b7d9305fdbb58" prot="public" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>sink</name></member>
      <member refid="classsrslog_1_1syslog__sink_1aa30f8ab85df309e74975e68e124ee895" prot="public" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>syslog_sink</name></member>
      <member refid="classsrslog_1_1syslog__sink_1afb7c5f24768dd01cfc1fef3f90695d18" prot="public" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>syslog_sink</name></member>
      <member refid="classsrslog_1_1syslog__sink_1a348e77472940fc95cdc719d8261a6f47" prot="private" virt="non-virtual"><scope>srslog::syslog_sink</scope><name>syslog_translate</name></member>
      <member refid="classsrslog_1_1syslog__sink_1aff4159348e07cc8f26f2a83c4e8d56ce" prot="public" virt="virtual"><scope>srslog::syslog_sink</scope><name>write</name></member>
      <member refid="classsrslog_1_1sink_1a148d2b74c00249a71fa3bbf581dd22e5" prot="public" virt="virtual"><scope>srslog::syslog_sink</scope><name>~sink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
