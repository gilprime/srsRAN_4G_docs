<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kind="class" language="C++" prot="private">
    <compoundname>srsgnb::intrusive_forward_list::iterator_impl</compoundname>
    <templateparamlist>
      <param>
        <type>typename U</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a0e4cc5dd8d180d73a59b9bdc0503827b" prot="private" static="no">
        <type>typename std::conditional&lt; std::is_const&lt; U &gt;::value, const <ref refid="structsrsgnb_1_1intrusive__forward__list__element" kindref="compound">node_t</ref>, <ref refid="structsrsgnb_1_1intrusive__forward__list__element" kindref="compound">node_t</ref> &gt;::type</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::elem_t =  typename std::conditional&lt;std::is_const&lt;U&gt;::value, const node_t, node_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>elem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="41" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a3b4b56f005d9550d212d3e0b44b3f158" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="44" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1aef9810c1c41d636534acdcd60d804c76" prot="public" static="no">
        <type>U</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::value_type =  U</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="45" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a7c141515de9502638a1a4e90623b33f4" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="46" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a5c72dd20b09494e8d30ec531546be5b4" prot="public" static="no">
        <type>U *</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::pointer =  U*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="47" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a2a84ef936427d4ab349d5621f632a1c3" prot="public" static="no">
        <type>U &amp;</type>
        <definition>using srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::reference =  U&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="48" column="5" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1ac9c6aa6c90efdfacf24caefe9f8daa8d" prot="private" static="no" mutable="no">
        <type>elem_t *</type>
        <definition>elem_t* srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="63" column="12" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a9662d1f92938efbde13236e295c3e0b1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::iterator_impl</definition>
        <argsstring>(elem_t *node_=nullptr)</argsstring>
        <name>iterator_impl</name>
        <param>
          <type>elem_t *</type>
          <declname>node_</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="50" column="14" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a26925123dfafb72191e96c2289535506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; U &gt; &amp;</type>
        <definition>iterator_impl&lt;U&gt;&amp; srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="51" column="19" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a607df00efc690d554aaba312e3b8c387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="56" column="15" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a70664155715c4616e281f605900bfb5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="57" column="15" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1afb785653b60d777d9a8a0539cde47fbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::operator==</definition>
        <argsstring>(const iterator_impl&lt; U &gt; &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; U &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="59" column="10" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a3d865ae1d7155cfbf3e0233ea88bb20e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;::operator!=</definition>
        <argsstring>(const iterator_impl&lt; U &gt; &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl" kindref="compound">iterator_impl</ref>&lt; U &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/adt/intrusive_list.h" line="60" column="10" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator implementation of intrusive forward_list. It is used to define &quot;iterator&quot; and &quot;const_iterator&quot;. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::intrusive_forward_list&lt; T, Tag &gt;::iterator_impl&lt; U &gt;</label>
        <link refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/adt/intrusive_list.h" line="40" column="1" bodyfile="include/srsgnb/adt/intrusive_list.h" bodystart="39" bodyend="64"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a7c141515de9502638a1a4e90623b33f4" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>difference_type</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a0e4cc5dd8d180d73a59b9bdc0503827b" prot="private" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>elem_t</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a3b4b56f005d9550d212d3e0b44b3f158" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>iterator_category</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a9662d1f92938efbde13236e295c3e0b1" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>iterator_impl</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1ac9c6aa6c90efdfacf24caefe9f8daa8d" prot="private" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>node</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a3d865ae1d7155cfbf3e0233ea88bb20e" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>operator!=</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a70664155715c4616e281f605900bfb5f" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>operator*</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a26925123dfafb72191e96c2289535506" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>operator++</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a607df00efc690d554aaba312e3b8c387" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>operator-&gt;</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1afb785653b60d777d9a8a0539cde47fbb" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>operator==</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a5c72dd20b09494e8d30ec531546be5b4" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>pointer</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1a2a84ef936427d4ab349d5621f632a1c3" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>reference</name></member>
      <member refid="classsrsgnb_1_1intrusive__forward__list_1_1iterator__impl_1aef9810c1c41d636534acdcd60d804c76" prot="public" virt="non-virtual"><scope>srsgnb::intrusive_forward_list::iterator_impl</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
