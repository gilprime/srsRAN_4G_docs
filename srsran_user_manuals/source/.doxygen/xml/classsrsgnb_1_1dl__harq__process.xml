<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsrsgnb_1_1dl__harq__process" kind="class" language="C++" prot="public">
    <compoundname>srsgnb::dl_harq_process</compoundname>
    <basecompoundref refid="classsrsgnb_1_1harq__process" prot="public" virt="non-virtual">srsgnb::harq_process</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrsgnb_1_1dl__harq__process_1ab0cb78c2674402acb34f7cb53fb6c786" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>srsgnb::dl_harq_process::dl_harq_process</definition>
        <argsstring>(harq_id_t id_)</argsstring>
        <name>dl_harq_process</name>
        <param>
          <type><ref refid="namespacesrsgnb_1a5ca7f9bafa9885386c1b0a3f75d02c20" kindref="member">harq_id_t</ref></type>
          <declname>id_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/ue_scheduling/harq_process.h" line="106" column="12" bodyfile="lib/scheduler/ue_scheduling/harq_process.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1dl__harq__process_1aeecd0e551fa443bcba4ec8e5c10d6918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::dl_harq_process::new_tx</definition>
        <argsstring>(slot_point slot_tx, slot_point slot_ack, const prb_grant &amp;grant, uint32_t mcs, uint32_t max_retx)</argsstring>
        <name>new_tx</name>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>slot_tx</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>slot_ack</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1prb__grant" kindref="compound">prb_grant</ref> &amp;</type>
          <declname>grant</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mcs</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_retx</declname>
        </param>
        <briefdescription>
<para>Called on every new transmission. It marks this HARQ process as busy and stores respective TB information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/ue_scheduling/harq_process.h" line="110" column="8" bodyfile="lib/scheduler/ue_scheduling/harq_process.cpp" bodystart="125" bodyend="132"/>
        <references refid="classsrsgnb_1_1harq__process_1a2a313d20439d3efb9457cbaa91138745" compoundref="harq__process_8h" startline="95">srsgnb::harq_process::slot_tx</references>
        <references refid="classsrsgnb_1_1harq__process_1a419e0f936431b5c261152388e71f4e00" compoundref="harq__process_8h" startline="98">srsgnb::harq_process::slot_ack</references>
      </memberdef>
      <memberdef kind="function" id="classsrsgnb_1_1dl__harq__process_1a06863446acd3162c05e3068a7412171c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool srsgnb::dl_harq_process::new_retx</definition>
        <argsstring>(slot_point slot_tx, slot_point slot_ack, const prb_grant &amp;grant)</argsstring>
        <name>new_retx</name>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>slot_tx</declname>
        </param>
        <param>
          <type><ref refid="classsrsgnb_1_1slot__point" kindref="compound">slot_point</ref></type>
          <declname>slot_ack</declname>
        </param>
        <param>
          <type>const <ref refid="structsrsgnb_1_1prb__grant" kindref="compound">prb_grant</ref> &amp;</type>
          <declname>grant</declname>
        </param>
        <briefdescription>
<para>Called on every HARQ retransmission. It updates the HARQ internal state accordingly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/scheduler/ue_scheduling/harq_process.h" line="113" column="8" bodyfile="lib/scheduler/ue_scheduling/harq_process.cpp" bodystart="134" bodyend="137"/>
        <references refid="classsrsgnb_1_1harq__process_1a2a313d20439d3efb9457cbaa91138745" compoundref="harq__process_8h" startline="95">srsgnb::harq_process::slot_tx</references>
        <references refid="classsrsgnb_1_1harq__process_1a419e0f936431b5c261152388e71f4e00" compoundref="harq__process_8h" startline="98">srsgnb::harq_process::slot_ack</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::dl_harq_process</label>
        <link refid="classsrsgnb_1_1dl__harq__process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::harq_process</label>
        <link refid="classsrsgnb_1_1harq__process"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::dl_harq_process</label>
        <link refid="classsrsgnb_1_1dl__harq__process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>srsgnb::bounded_bitset&lt; MAX_NOF_RBGS, true &gt;</label>
        <link refid="classsrsgnb_1_1bounded__bitset"/>
      </node>
      <node id="5">
        <label>srsgnb::prb_grant</label>
        <link refid="structsrsgnb_1_1prb__grant"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-alloc</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>srsgnb::slot_point</label>
        <link refid="classsrsgnb_1_1slot__point"/>
      </node>
      <node id="9">
        <label>srsgnb::interval&lt; unsigned &gt;</label>
        <link refid="classsrsgnb_1_1interval"/>
      </node>
      <node id="8">
        <label>srsgnb::prb_interval</label>
        <link refid="structsrsgnb_1_1prb__interval"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>srsgnb::prb_grant::alloc_t</label>
        <link refid="unionsrsgnb_1_1prb__grant_1_1alloc__t"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+rbgs</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+interv</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::harq_process</label>
        <link refid="classsrsgnb_1_1harq__process"/>
        <childnode refid="3" relation="usage">
          <edgelabel>#tb</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#slot_ack</edgelabel>
          <edgelabel>#slot_tx</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#prbs_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::static_vector&lt; srsgnb::harq_process::tb_t, MAX_NOF_LAYERS &gt;</label>
        <link refid="classsrsgnb_1_1static__vector"/>
      </node>
    </collaborationgraph>
    <location file="lib/scheduler/ue_scheduling/harq_process.h" line="104" column="1" bodyfile="lib/scheduler/ue_scheduling/harq_process.h" bodystart="103" bodyend="114"/>
    <listofallmembers>
      <member refid="classsrsgnb_1_1harq__process_1abf9f29852cee5fa44992757f11cb2325" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>ack_info</name></member>
      <member refid="classsrsgnb_1_1dl__harq__process_1ab0cb78c2674402acb34f7cb53fb6c786" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>dl_harq_process</name></member>
      <member refid="classsrsgnb_1_1harq__process_1af540d4e4b2a5da1f6bf200b0bdd500db" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a601e02a64869540e95e782c10265280e" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>empty</name></member>
      <member refid="classsrsgnb_1_1harq__process_1aab886d16c72400797a0b5fce17ceac86" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>harq_process</name></member>
      <member refid="classsrsgnb_1_1harq__process_1ae2af9c8395c17deac7f6496e56b0f1b2" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>harq_slot_ack</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a47a9a11dec252207dbf04c03c6f3b51f" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>harq_slot_tx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1aadbf1cc23b2d5c394883581431c2ab58" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>has_pending_retx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a86e920cf96ff854c88f661cc4ee98e25" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>has_pending_retx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1ae50f94aa3bbce526ae7718cb6509845f" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>max_nof_retx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a42aaed579780bcd913a113dec3ab2d40" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>max_retx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a3b0e0b0abc51ae87518bda05729c9b6b" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>mcs</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a03ec194b20899e683c6f7dacf53f140e" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>ndi</name></member>
      <member refid="classsrsgnb_1_1dl__harq__process_1a06863446acd3162c05e3068a7412171c" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>new_retx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a6a9a8ad2391b4734dedd94afd24db605" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>new_retx_common</name></member>
      <member refid="classsrsgnb_1_1harq__process_1ae015bde57bc51bf4a2bcc1867a608b84" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>new_retx_common</name></member>
      <member refid="classsrsgnb_1_1dl__harq__process_1aeecd0e551fa443bcba4ec8e5c10d6918" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>new_tx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a005077aafbcd3d1457006021b674c5bc" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>new_tx_common</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a5c49790c298e708bd9cf615211b4c1eb" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>nof_retx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a0591188f8e80f3633eac44951f7f6f7a" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>pid</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a2116d5b54ee0afbd5c93088b810d81d2" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>prbs</name></member>
      <member refid="classsrsgnb_1_1harq__process_1ae864a0506959268079b1257d98bda749" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>prbs_</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a3012eb99be935c3a99ae300089695d0b" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>reset</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a2e8f936ad8e347eccf71feeb1c9cd1f4" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>set_mcs</name></member>
      <member refid="classsrsgnb_1_1harq__process_1acb30ae8619ca86a069767f42fc99bc3f" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>set_tbs</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a419e0f936431b5c261152388e71f4e00" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>slot_ack</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a17d105bd5fb2e0ec9500e1b98025e3f4" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>slot_indication</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a2a313d20439d3efb9457cbaa91138745" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>slot_tx</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a1fac59b2573f571179bfa3923cd2e52c" prot="protected" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>tb</name></member>
      <member refid="classsrsgnb_1_1harq__process_1a585776763425c586a74a7e9f0742faee" prot="public" virt="non-virtual"><scope>srsgnb::dl_harq_process</scope><name>tbs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
