<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classprintf__arg__formatter" kind="class" language="C++" prot="public">
    <compoundname>printf_arg_formatter</compoundname>
    <basecompoundref refid="classdetail_1_1arg__formatter__base" prot="public" virt="non-virtual">detail::arg_formatter_base&lt; OutputIt, Char &gt;</basecompoundref>
    <includes refid="printf_8h" local="no">printf.h</includes>
    <templateparamlist>
      <param>
        <type>typename OutputIt</type>
      </param>
      <param>
        <type>typename Char</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classprintf__arg__formatter_1a0a861545a0275f99a8e6b2a94355831a" prot="public" static="no">
        <type>OutputIt</type>
        <definition>using printf_arg_formatter&lt; OutputIt, Char &gt;::iterator =  OutputIt</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="211" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprintf__arg__formatter_1a23b94601fe2e9f10b80c1e6c16a9c893" prot="public" static="no">
        <type>typename <ref refid="structbasic__format__specs" kindref="compound">base::format_specs</ref></type>
        <definition>using printf_arg_formatter&lt; OutputIt, Char &gt;::format_specs =  typename base::format_specs</definition>
        <argsstring></argsstring>
        <name>format_specs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="231" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classprintf__arg__formatter_1a5b827e5322c9aee001b8e6ef37b3f6f9" prot="private" static="no">
        <type>Char</type>
        <definition>using printf_arg_formatter&lt; OutputIt, Char &gt;::char_type =  Char</definition>
        <argsstring></argsstring>
        <name>char_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="214" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprintf__arg__formatter_1afaf042b2b2fd67ff20626cc8122291bc" prot="private" static="no">
        <type><ref refid="classdetail_1_1arg__formatter__base" kindref="compound">detail::arg_formatter_base</ref>&lt; OutputIt, Char &gt;</type>
        <definition>using printf_arg_formatter&lt; OutputIt, Char &gt;::base =  detail::arg_formatter_base&lt;OutputIt, Char&gt;</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="215" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classprintf__arg__formatter_1a70d143adcc5f2e7e647278b9f8a3abcd" prot="private" static="no">
        <type><ref refid="classbasic__printf__context" kindref="compound">basic_printf_context</ref>&lt; OutputIt, Char &gt;</type>
        <definition>using printf_arg_formatter&lt; OutputIt, Char &gt;::context_type =  basic_printf_context&lt;OutputIt, Char&gt;</definition>
        <argsstring></argsstring>
        <name>context_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="216" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classprintf__arg__formatter_1ae7a8ddae47b8bc0ad3cd0248299e7a4a" prot="private" static="no" mutable="no">
        <type><ref refid="classbasic__printf__context" kindref="compound">context_type</ref> &amp;</type>
        <definition>context_type&amp; printf_arg_formatter&lt; OutputIt, Char &gt;::context_</definition>
        <argsstring></argsstring>
        <name>context_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="218" column="16" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classprintf__arg__formatter_1a00044cf120e73f852f942f13d37ac81f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void printf_arg_formatter&lt; OutputIt, Char &gt;::write_null_pointer</definition>
        <argsstring>(char)</argsstring>
        <name>write_null_pointer</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="220" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1a4ccf30c6c871c81d050e3a5cc50f609b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void printf_arg_formatter&lt; OutputIt, Char &gt;::write_null_pointer</definition>
        <argsstring>(wchar_t)</argsstring>
        <name>write_null_pointer</name>
        <param>
          <type>wchar_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="225" column="8" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="225" bodyend="228"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classprintf__arg__formatter_1ad1eb24ea2b7c065bc176269fb9136ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>printf_arg_formatter&lt; OutputIt, Char &gt;::printf_arg_formatter</definition>
        <argsstring>(iterator iter, format_specs &amp;specs, context_type &amp;ctx)</argsstring>
        <name>printf_arg_formatter</name>
        <param>
          <type>iterator</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>format_specs &amp;</type>
          <declname>specs</declname>
        </param>
        <param>
          <type><ref refid="classbasic__printf__context" kindref="compound">context_type</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Constructs an argument formatter object. buffer* is a reference to the output buffer and <emphasis>specs</emphasis> contains format specifier information for standard argument types. \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="240" column="3" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="240" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1aa751a29c68a1f4d7292160a176e17639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(fmt::detail::is_integral&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(T value)</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="244" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="244" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1aa751a29c68a1f4d7292160a176e17639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>FMT_ENABLE_IF(std::is_floating_point&lt; T &gt;::value)</type>
          </param>
        </templateparamlist>
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(T value)</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="271" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1a34de73d5544457684ba2ffc3ede66cd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(const char *value)</argsstring>
        <name>operator()</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats a null-terminated C string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="276" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="276" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1af0151b330f97bc42c4d97cd36fe4be18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(const wchar_t *value)</argsstring>
        <name>operator()</name>
        <param>
          <type>const wchar_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats a null-terminated wide C string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="287" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1a985529e3e633ce43f7e5261fa11ac3f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(basic_string_view&lt; char_type &gt; value)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classbasic__string__view" kindref="compound">basic_string_view</ref>&lt; char_type &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="297" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1a89c23f2c6801475cb6f7e814b2a8e67e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(monostate value)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="structmonostate" kindref="compound">monostate</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="301" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1a852e7a37fef46d579690ea30b8c68861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(const void *value)</argsstring>
        <name>operator()</name>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats a pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="304" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="304" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classprintf__arg__formatter_1a692cd2bf155cddb767dd42b0d50372a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator printf_arg_formatter&lt; OutputIt, Char &gt;::operator()</definition>
        <argsstring>(typename basic_format_arg&lt; context_type &gt;::handle handle)</argsstring>
        <name>operator()</name>
        <param>
          <type>typename <ref refid="classbasic__format__arg" kindref="compound">basic_format_arg</ref>&lt; <ref refid="classbasic__printf__context" kindref="compound">context_type</ref> &gt;::handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats an argument of a custom (user-defined) type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="312" column="12" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="312" bodyend="315"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>\rst The <computeroutput>printf</computeroutput> argument formatter. \endrst </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>detail::arg_formatter_base&lt; OutputIt, Char &gt;</label>
        <link refid="classdetail_1_1arg__formatter__base"/>
      </node>
      <node id="1">
        <label>printf_arg_formatter&lt; OutputIt, Char &gt;</label>
        <link refid="classprintf__arg__formatter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>detail::locale_ref</label>
        <link refid="classdetail_1_1locale__ref"/>
      </node>
      <node id="2">
        <label>detail::arg_formatter_base&lt; OutputIt, Char &gt;</label>
        <link refid="classdetail_1_1arg__formatter__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-locale_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-specs_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>printf_arg_formatter&lt; OutputIt, Char &gt;</label>
        <link refid="classprintf__arg__formatter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-context_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>basic_format_specs&lt; Char &gt;</label>
        <link refid="structbasic__format__specs"/>
      </node>
      <node id="7">
        <label>basic_format_arg&lt; Context &gt;</label>
        <link refid="classbasic__format__arg"/>
      </node>
      <node id="5">
        <label>basic_printf_context&lt; OutputIt, Char &gt;</label>
        <link refid="classbasic__printf__context"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-args_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>detail::uint128_t</label>
        <link refid="structdetail_1_1uint128__t"/>
      </node>
      <node id="13">
        <label>detail::named_arg_value&lt; char_type &gt;</label>
        <link refid="structdetail_1_1named__arg__value"/>
        <childnode refid="14" relation="usage">
          <edgelabel>+data</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>detail::value&lt; basic_printf_context &gt;</label>
        <link refid="classdetail_1_1value"/>
        <childnode refid="9" relation="usage">
          <edgelabel>+int128_value</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>+uint128_value</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+custom</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>+string</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+char_value</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>+named_args</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>detail::custom_value&lt; basic_printf_context &gt;</label>
        <link refid="structdetail_1_1custom__value"/>
      </node>
      <node id="6">
        <label>basic_format_args&lt; basic_printf_context &gt;</label>
        <link refid="classbasic__format__args"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+args_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+values_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>detail::int128_t</label>
        <link refid="structdetail_1_1int128__t"/>
      </node>
      <node id="12">
        <label>detail::string_value&lt; char_type &gt;</label>
        <link refid="structdetail_1_1string__value"/>
      </node>
      <node id="14">
        <label>detail::named_arg_info&lt; char_type &gt;</label>
        <link refid="structdetail_1_1named__arg__info"/>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/srslog/bundled/fmt/printf.h" line="209" column="63" bodyfile="include/srsgnb/srslog/bundled/fmt/printf.h" bodystart="209" bodyend="316"/>
    <listofallmembers>
      <member refid="classdetail_1_1arg__formatter__base_1a7d724691d50081d3e1cc5ad8e7a9fd24" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>arg_formatter_base</name></member>
      <member refid="classprintf__arg__formatter_1afaf042b2b2fd67ff20626cc8122291bc" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>base</name></member>
      <member refid="classprintf__arg__formatter_1a5b827e5322c9aee001b8e6ef37b3f6f9" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>char_type</name></member>
      <member refid="classprintf__arg__formatter_1ae7a8ddae47b8bc0ad3cd0248299e7a4a" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>context_</name></member>
      <member refid="classprintf__arg__formatter_1a70d143adcc5f2e7e647278b9f8a3abcd" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>context_type</name></member>
      <member refid="classprintf__arg__formatter_1a23b94601fe2e9f10b80c1e6c16a9c893" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>format_specs</name></member>
      <member refid="classprintf__arg__formatter_1a0a861545a0275f99a8e6b2a94355831a" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>iterator</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aa44f38e9d1e6d9a3ae0006daf95a4ab0" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>locale_</name></member>
      <member refid="classprintf__arg__formatter_1aa751a29c68a1f4d7292160a176e17639" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1aa751a29c68a1f4d7292160a176e17639" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1a34de73d5544457684ba2ffc3ede66cd3" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1af0151b330f97bc42c4d97cd36fe4be18" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1a985529e3e633ce43f7e5261fa11ac3f6" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1a89c23f2c6801475cb6f7e814b2a8e67e" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1a852e7a37fef46d579690ea30b8c68861" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classprintf__arg__formatter_1a692cd2bf155cddb767dd42b0d50372a9" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a58c03812cc95e2bb74bf4790f16d607c" prot="public" virt="non-virtual" ambiguityscope="arg_formatter_base&lt; OutputIt, Char &gt;::"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a969c470e5e3733bc3cf16043922846c5" prot="public" virt="non-virtual" ambiguityscope="arg_formatter_base&lt; OutputIt, Char &gt;::"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a0b4288c1af5692bcfcafe8e84be36d5b" prot="public" virt="non-virtual" ambiguityscope="arg_formatter_base&lt; OutputIt, Char &gt;::"><scope>printf_arg_formatter</scope><name>operator()</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aa0f2ebe0a088e6cf7dd65daba85ac1ce" prot="protected" virt="non-virtual"><scope>printf_arg_formatter</scope><name>out</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aa5453711afcb53328658dcbe0b858827" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>out_</name></member>
      <member refid="classprintf__arg__formatter_1ad1eb24ea2b7c065bc176269fb9136ada" prot="public" virt="non-virtual"><scope>printf_arg_formatter</scope><name>printf_arg_formatter</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a5704cfc9174a9a7ab5568f25bdddd1f8" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>reserve</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aab98bf30bc2434bc15a038cecc8a5ffd" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>reserve_iterator</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1acd522d85f1c897d22a8d61cf4389c4b7" prot="protected" virt="non-virtual"><scope>printf_arg_formatter</scope><name>specs</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aa085170f63f86c66453b726e7f527d4a" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>specs_</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aa71d64c94e72e1c9dcb1078795079d4b" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1ab8c41578f0b338ab827f11bbb8461902" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1ad8ede7134f9bdf09cd1ff1d5ae9f68b7" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a2761d2b77ff5018ce2c4a0b71671d87c" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a7b2914c0dbe87e6450a0f1bc5b90db43" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a18bf654a2b8f383d33f000c23d100f5d" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1aa7f824a1e13124b7c1d31021246ccc93" prot="protected" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1ace4e60e7b22da978a6cd46be8c106bd4" prot="protected" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a3cf8f540a3fd2aa649f14a84d9be7a12" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write_int</name></member>
      <member refid="classprintf__arg__formatter_1a00044cf120e73f852f942f13d37ac81f" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write_null_pointer</name></member>
      <member refid="classprintf__arg__formatter_1a4ccf30c6c871c81d050e3a5cc50f609b" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write_null_pointer</name></member>
      <member refid="classdetail_1_1arg__formatter__base_1a1a6324f801bb2fe463a99ed3acb62e76" prot="private" virt="non-virtual"><scope>printf_arg_formatter</scope><name>write_pointer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
