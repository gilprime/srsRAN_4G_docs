<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsrsgnb_1_1event__signal__flag_1_1awaiter__type" kind="struct" language="C++" prot="public">
    <compoundname>srsgnb::event_signal_flag::awaiter_type</compoundname>
    <basecompoundref refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common" prot="public" virt="non-virtual">srsgnb::detail::signal_event_common::awaiter_common</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsrsgnb_1_1event__signal__flag_1_1awaiter__type_1ac45b2a35b27073e733363ef60ee81f80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void srsgnb::event_signal_flag::awaiter_type::await_resume</definition>
        <argsstring>()</argsstring>
        <name>await_resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/event_signal.h" line="72" column="10" bodyfile="include/srsgnb/support/async/event_signal.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structsrsgnb_1_1event__signal__flag_1_1awaiter__type_1a0d8f95eee933453c396533907ad011ee" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>srsgnb::detail::signal_event_common::awaiter_common::awaiter_common</definition>
        <argsstring>(signal_event_common &amp;event_)</argsstring>
        <name>awaiter_common</name>
        <param>
          <type>signal_event_common &amp;</type>
          <declname>event_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/srsgnb/support/async/event_signal.h" line="71" column="5" bodyfile="include/srsgnb/support/async/event_signal.h" bodystart="28" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>srsgnb::event_signal_flag::awaiter_type</label>
        <link refid="structsrsgnb_1_1event__signal__flag_1_1awaiter__type"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>srsgnb::detail::signal_event_common::awaiter_common</label>
        <link refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>srsgnb::event_signal_flag::awaiter_type</label>
        <link refid="structsrsgnb_1_1event__signal__flag_1_1awaiter__type"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>srsgnb::detail::signal_event_common</label>
        <link refid="classsrsgnb_1_1detail_1_1signal__event__common"/>
      </node>
      <node id="4">
        <label>srsgnb::coro_handle&lt; Promise &gt;</label>
        <link refid="structsrsgnb_1_1coro__handle"/>
      </node>
      <node id="2">
        <label>srsgnb::detail::signal_event_common::awaiter_common</label>
        <link refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+event</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>+next</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+suspended_handle</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/srsgnb/support/async/event_signal.h" line="70" column="43" bodyfile="include/srsgnb/support/async/event_signal.h" bodystart="70" bodyend="73"/>
    <listofallmembers>
      <member refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common_1a86e356a5fd7a2c154c5c4bf0a4a92078" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>await_ready</name></member>
      <member refid="structsrsgnb_1_1event__signal__flag_1_1awaiter__type_1ac45b2a35b27073e733363ef60ee81f80" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>await_resume</name></member>
      <member refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common_1a13896edd0456f8841061b82fbf579a03" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>await_suspend</name></member>
      <member refid="structsrsgnb_1_1event__signal__flag_1_1awaiter__type_1a0d8f95eee933453c396533907ad011ee" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>awaiter_common</name></member>
      <member refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common_1a0d8f95eee933453c396533907ad011ee" prot="public" virt="non-virtual" ambiguityscope="srsgnb::detail::signal_event_common::awaiter_common::"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>awaiter_common</name></member>
      <member refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common_1ad0fa0a53892d93dc0b3551a1a5ff18f7" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>event</name></member>
      <member refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common_1a84c252566aa5353dac13f720cb2f6657" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>next</name></member>
      <member refid="structsrsgnb_1_1detail_1_1signal__event__common_1_1awaiter__common_1a6eea48c7c9370d1c7a3791ca4a1ba3b7" prot="public" virt="non-virtual"><scope>srsgnb::event_signal_flag::awaiter_type</scope><name>suspended_handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
